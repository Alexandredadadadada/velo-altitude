{"ast":null,"code":"/**\n * 3DConfigManager.js\n * Gestionnaire de configuration pour les rendus 3D\n * \n * Ce module définit les paramètres optimaux pour les rendus 3D\n * en fonction des capacités de l'appareil détectées.\n */import deviceCapabilityDetector from'./deviceCapabilityDetector';import{PERF_LEVELS}from'./PerformanceDetector';class ThreeDConfigManager{constructor(){this.configs={// Configuration pour ColVisualization3D\ncolVisualization:{// Configuration pour performances ultra faibles\n[PERF_LEVELS.ULTRA_LOW]:{terrainSegments:32,textureSize:256,drawDistance:2500,textureQuality:'very-low',shadowsEnabled:false,postProcessingEnabled:false,ambientOcclusionEnabled:false,reflectionsEnabled:false,maxPointsOfInterest:5,occlusionCullingEnabled:true,modelDetailLevel:'very-low',interactiveObjects:'minimal',useSimplifiedGeometry:true,maxParticles:0,fogEnabled:false,animationLevel:'none',backgroundDetail:'none',lightingComplexity:'basic',maxFrameRate:30},// Configuration pour performances faibles\n[PERF_LEVELS.LOW]:{terrainSegments:64,textureSize:512,drawDistance:5000,textureQuality:'low',shadowsEnabled:false,postProcessingEnabled:false,ambientOcclusionEnabled:false,reflectionsEnabled:false,maxPointsOfInterest:10,occlusionCullingEnabled:true,modelDetailLevel:'low',interactiveObjects:'reduced',useSimplifiedGeometry:true,maxParticles:100,fogEnabled:true,animationLevel:'minimal',backgroundDetail:'low',lightingComplexity:'basic',maxFrameRate:45},// Configuration pour performances moyennes\n[PERF_LEVELS.MEDIUM]:{terrainSegments:128,textureSize:1024,drawDistance:10000,textureQuality:'medium',shadowsEnabled:true,shadowMapSize:1024,postProcessingEnabled:false,ambientOcclusionEnabled:false,reflectionsEnabled:false,maxPointsOfInterest:25,occlusionCullingEnabled:true,modelDetailLevel:'medium',interactiveObjects:'standard',useSimplifiedGeometry:false,maxParticles:500,fogEnabled:true,animationLevel:'reduced',backgroundDetail:'medium',lightingComplexity:'standard',maxFrameRate:60},// Configuration pour performances élevées\n[PERF_LEVELS.HIGH]:{terrainSegments:256,textureSize:2048,drawDistance:15000,textureQuality:'high',shadowsEnabled:true,shadowMapSize:2048,postProcessingEnabled:true,postProcessingEffects:['bloom','fxaa'],ambientOcclusionEnabled:true,reflectionsEnabled:false,maxPointsOfInterest:40,occlusionCullingEnabled:true,modelDetailLevel:'high',interactiveObjects:'all',useSimplifiedGeometry:false,maxParticles:1000,fogEnabled:true,animationLevel:'full',backgroundDetail:'high',lightingComplexity:'advanced',maxFrameRate:90},// Configuration pour performances ultra élevées\n[PERF_LEVELS.ULTRA_HIGH]:{terrainSegments:512,textureSize:4096,drawDistance:25000,textureQuality:'ultra',shadowsEnabled:true,shadowMapSize:4096,postProcessingEnabled:true,postProcessingEffects:['bloom','ssao','godrays','fxaa'],ambientOcclusionEnabled:true,reflectionsEnabled:true,maxPointsOfInterest:60,occlusionCullingEnabled:false,modelDetailLevel:'ultra',interactiveObjects:'all',useSimplifiedGeometry:false,maxParticles:5000,fogEnabled:true,animationLevel:'full',backgroundDetail:'ultra',lightingComplexity:'physically-based',maxFrameRate:144}},// Configuration pour TrainingVisualizer3D\ntrainingVisualization:{// Configuration pour performances ultra faibles\n[PERF_LEVELS.ULTRA_LOW]:{avatarSegments:8,environmentDetail:'very-low',maxCyclists:2,textureQuality:'very-low',shadowsEnabled:false,effectsEnabled:false,useSimplifiedPhysics:true,maxFrameRate:30,drawDistance:100,animationFrameskip:3,backgroundEnabled:false,reflectionQuality:'none',lightingQuality:'basic',maxTrainingObjects:5},// Configuration pour performances faibles\n[PERF_LEVELS.LOW]:{avatarSegments:12,environmentDetail:'low',maxCyclists:3,textureQuality:'low',shadowsEnabled:false,effectsEnabled:false,useSimplifiedPhysics:true,maxFrameRate:45,drawDistance:200,animationFrameskip:2,backgroundEnabled:true,reflectionQuality:'none',lightingQuality:'basic',maxTrainingObjects:10},// Configuration pour performances moyennes\n[PERF_LEVELS.MEDIUM]:{avatarSegments:16,environmentDetail:'medium',maxCyclists:5,textureQuality:'medium',shadowsEnabled:true,effectsEnabled:true,useSimplifiedPhysics:false,maxFrameRate:60,drawDistance:500,animationFrameskip:0,backgroundEnabled:true,reflectionQuality:'low',lightingQuality:'standard',maxTrainingObjects:20},// Configuration pour performances élevées\n[PERF_LEVELS.HIGH]:{avatarSegments:24,environmentDetail:'high',maxCyclists:8,textureQuality:'high',shadowsEnabled:true,effectsEnabled:true,useSimplifiedPhysics:false,maxFrameRate:90,drawDistance:1000,animationFrameskip:0,backgroundEnabled:true,reflectionQuality:'medium',lightingQuality:'advanced',maxTrainingObjects:40},// Configuration pour performances ultra élevées\n[PERF_LEVELS.ULTRA_HIGH]:{avatarSegments:32,environmentDetail:'ultra',maxCyclists:12,textureQuality:'ultra',shadowsEnabled:true,effectsEnabled:true,useSimplifiedPhysics:false,maxFrameRate:120,drawDistance:2000,animationFrameskip:0,backgroundEnabled:true,reflectionQuality:'high',lightingQuality:'physically-based',maxTrainingObjects:60}}};// Configuration spécifique pour les appareils mobiles\nthis.mobileOverrides={// Écrase certains paramètres pour optimiser sur mobile\nshadowsEnabled:false,postProcessingEnabled:false,ambientOcclusionEnabled:false,reflectionsEnabled:false,drawDistance:0.6,// multiplicateur\nmaxParticles:0.3,// multiplicateur\nmaxFrameRate:Math.min,// prend le min entre la config standard et 60\nbackgroundDetail:level=>Math.max(PERF_LEVELS.LOW,level-1)// réduit de 1 niveau\n};// Configuration spécifique pour les appareils en mode économie de batterie\nthis.batterySavingOverrides={shadowsEnabled:false,postProcessingEnabled:false,maxFrameRate:30,drawDistance:0.5,// multiplicateur\nterrainSegments:0.5,// multiplicateur\ntextureQuality:level=>Math.max(PERF_LEVELS.ULTRA_LOW,level-2)// réduit de 2 niveaux\n};}/**\n   * Obtient la configuration optimale pour un composant 3D spécifique\n   * @param {string} componentType Type de composant ('colVisualization' ou 'trainingVisualization')\n   * @param {Object} [overrideFlags={}] Drapeaux pour forcer certaines options\n   * @returns {Object} Configuration optimale\n   */getOptimalConfig(componentType){let overrideFlags=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// Récupérer les capacités de l'appareil\nconst capabilities=deviceCapabilityDetector.getCapabilities();let perfLevel=capabilities.performanceLevel;// Vérifier si on a une configuration pour ce composant\nif(!this.configs[componentType]){console.warn(`3DConfigManager: configuration non trouvée pour ${componentType}`);componentType='colVisualization';// Fallback sur une config par défaut\n}// Obtenir la configuration de base\nlet config={...this.configs[componentType][perfLevel]};// Appliquer les overrides pour mobile si nécessaire\nif(capabilities.flags.isMobile||overrideFlags.forceMobileMode){config=this.applyMobileOverrides(config,perfLevel);}// Appliquer les overrides pour économie de batterie si nécessaire\nif(capabilities.flags.hasBatteryConstraints||overrideFlags.forceBatterySaving){config=this.applyBatterySavingOverrides(config,perfLevel);}// Appliquer les overrides utilisateur si fournis\nif(overrideFlags.userOverrides){config={...config,...overrideFlags.userOverrides};}// Garantir que les paramètres restent dans des limites raisonnables\nconfig=this.sanitizeConfig(config);return config;}/**\n   * Applique les overrides spécifiques aux appareils mobiles\n   * @param {Object} config Configuration de base\n   * @param {number} perfLevel Niveau de performance\n   * @returns {Object} Configuration modifiée\n   * @private\n   */applyMobileOverrides(config,perfLevel){const result={...config};// Appliquer chaque override\nObject.entries(this.mobileOverrides).forEach(_ref=>{let[key,value]=_ref;if(typeof value==='function'){// Si c'est une fonction, l'appliquer avec le niveau de performance\nresult[key]=value(perfLevel);}else if(typeof value==='number'&&config[key]!==undefined){// Si c'est un multiplicateur\nresult[key]=Math.round(config[key]*value);}else{// Sinon remplacer directement\nresult[key]=value;}});return result;}/**\n   * Applique les overrides pour le mode économie de batterie\n   * @param {Object} config Configuration de base\n   * @param {number} perfLevel Niveau de performance\n   * @returns {Object} Configuration modifiée\n   * @private\n   */applyBatterySavingOverrides(config,perfLevel){const result={...config};// Appliquer chaque override\nObject.entries(this.batterySavingOverrides).forEach(_ref2=>{let[key,value]=_ref2;if(typeof value==='function'){// Si c'est une fonction, l'appliquer avec le niveau de performance\nresult[key]=value(perfLevel);}else if(typeof value==='number'&&config[key]!==undefined){// Si c'est un multiplicateur\nresult[key]=Math.round(config[key]*value);}else{// Sinon remplacer directement\nresult[key]=value;}});return result;}/**\n   * Sanitize la configuration pour éviter des valeurs absurdes\n   * @param {Object} config Configuration à sanitizer\n   * @returns {Object} Configuration sanitizée\n   * @private\n   */sanitizeConfig(config){const result={...config};// Limites minimales\nif(result.terrainSegments){result.terrainSegments=Math.max(32,result.terrainSegments);}if(result.textureSize){result.textureSize=Math.max(256,result.textureSize);}if(result.drawDistance){result.drawDistance=Math.max(100,result.drawDistance);}if(result.maxFrameRate){result.maxFrameRate=Math.max(24,result.maxFrameRate);}return result;}/**\n   * Génère un résumé des paramètres de la configuration\n   * @param {Object} config Configuration à résumer\n   * @returns {string} Résumé textuel de la configuration\n   */generateConfigSummary(config){if(!config)return'Configuration non disponible';const qualityIndicators=[{prop:'terrainSegments',high:256,low:64},{prop:'textureSize',high:2048,low:512},{prop:'shadowsEnabled',binary:true},{prop:'postProcessingEnabled',binary:true}];let qualityScore=0;let maxScore=0;// Calculer un score de qualité basé sur les indicateurs\nqualityIndicators.forEach(indicator=>{if(config[indicator.prop]!==undefined){if(indicator.binary){qualityScore+=config[indicator.prop]?1:0;maxScore+=1;}else{const normalized=Math.min(1,Math.max(0,(config[indicator.prop]-indicator.low)/(indicator.high-indicator.low)));qualityScore+=normalized;maxScore+=1;}}});// Convertir en pourcentage\nconst qualityPercentage=Math.round(qualityScore/Math.max(1,maxScore)*100);// Générer le résumé\nlet performanceLevel='Moyen';if(qualityPercentage>=75)performanceLevel='Élevé';else if(qualityPercentage<=30)performanceLevel='Faible';return`Qualité visuelle: ${performanceLevel} (${qualityPercentage}%)\nDétail terrain: ${config.terrainSegments||'N/A'}\nRésolution textures: ${config.textureSize||'N/A'}\nOmbres: ${config.shadowsEnabled?'Activées':'Désactivées'}\nEffets visuels: ${config.postProcessingEnabled?'Activés':'Désactivés'}`;}}// Exporter une instance unique\nconst threeDConfigManager=new ThreeDConfigManager();export default threeDConfigManager;","map":{"version":3,"names":["deviceCapabilityDetector","PERF_LEVELS","ThreeDConfigManager","constructor","configs","colVisualization","ULTRA_LOW","terrainSegments","textureSize","drawDistance","textureQuality","shadowsEnabled","postProcessingEnabled","ambientOcclusionEnabled","reflectionsEnabled","maxPointsOfInterest","occlusionCullingEnabled","modelDetailLevel","interactiveObjects","useSimplifiedGeometry","maxParticles","fogEnabled","animationLevel","backgroundDetail","lightingComplexity","maxFrameRate","LOW","MEDIUM","shadowMapSize","HIGH","postProcessingEffects","ULTRA_HIGH","trainingVisualization","avatarSegments","environmentDetail","maxCyclists","effectsEnabled","useSimplifiedPhysics","animationFrameskip","backgroundEnabled","reflectionQuality","lightingQuality","maxTrainingObjects","mobileOverrides","Math","min","level","max","batterySavingOverrides","getOptimalConfig","componentType","overrideFlags","arguments","length","undefined","capabilities","getCapabilities","perfLevel","performanceLevel","console","warn","config","flags","isMobile","forceMobileMode","applyMobileOverrides","hasBatteryConstraints","forceBatterySaving","applyBatterySavingOverrides","userOverrides","sanitizeConfig","result","Object","entries","forEach","_ref","key","value","round","_ref2","generateConfigSummary","qualityIndicators","prop","high","low","binary","qualityScore","maxScore","indicator","normalized","qualityPercentage","threeDConfigManager"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/utils/3DConfigManager.js"],"sourcesContent":["/**\n * 3DConfigManager.js\n * Gestionnaire de configuration pour les rendus 3D\n * \n * Ce module définit les paramètres optimaux pour les rendus 3D\n * en fonction des capacités de l'appareil détectées.\n */\n\nimport deviceCapabilityDetector from './deviceCapabilityDetector';\nimport { PERF_LEVELS } from './PerformanceDetector';\n\nclass ThreeDConfigManager {\n  constructor() {\n    this.configs = {\n      // Configuration pour ColVisualization3D\n      colVisualization: {\n        // Configuration pour performances ultra faibles\n        [PERF_LEVELS.ULTRA_LOW]: {\n          terrainSegments: 32,\n          textureSize: 256,\n          drawDistance: 2500,\n          textureQuality: 'very-low',\n          shadowsEnabled: false,\n          postProcessingEnabled: false,\n          ambientOcclusionEnabled: false,\n          reflectionsEnabled: false,\n          maxPointsOfInterest: 5,\n          occlusionCullingEnabled: true,\n          modelDetailLevel: 'very-low',\n          interactiveObjects: 'minimal',\n          useSimplifiedGeometry: true,\n          maxParticles: 0,\n          fogEnabled: false,\n          animationLevel: 'none',\n          backgroundDetail: 'none',\n          lightingComplexity: 'basic',\n          maxFrameRate: 30\n        },\n        \n        // Configuration pour performances faibles\n        [PERF_LEVELS.LOW]: {\n          terrainSegments: 64,\n          textureSize: 512,\n          drawDistance: 5000,\n          textureQuality: 'low',\n          shadowsEnabled: false,\n          postProcessingEnabled: false,\n          ambientOcclusionEnabled: false,\n          reflectionsEnabled: false,\n          maxPointsOfInterest: 10,\n          occlusionCullingEnabled: true,\n          modelDetailLevel: 'low',\n          interactiveObjects: 'reduced',\n          useSimplifiedGeometry: true,\n          maxParticles: 100,\n          fogEnabled: true,\n          animationLevel: 'minimal',\n          backgroundDetail: 'low',\n          lightingComplexity: 'basic',\n          maxFrameRate: 45\n        },\n        \n        // Configuration pour performances moyennes\n        [PERF_LEVELS.MEDIUM]: {\n          terrainSegments: 128,\n          textureSize: 1024,\n          drawDistance: 10000,\n          textureQuality: 'medium',\n          shadowsEnabled: true,\n          shadowMapSize: 1024,\n          postProcessingEnabled: false,\n          ambientOcclusionEnabled: false,\n          reflectionsEnabled: false,\n          maxPointsOfInterest: 25,\n          occlusionCullingEnabled: true,\n          modelDetailLevel: 'medium',\n          interactiveObjects: 'standard',\n          useSimplifiedGeometry: false,\n          maxParticles: 500,\n          fogEnabled: true,\n          animationLevel: 'reduced',\n          backgroundDetail: 'medium',\n          lightingComplexity: 'standard',\n          maxFrameRate: 60\n        },\n        \n        // Configuration pour performances élevées\n        [PERF_LEVELS.HIGH]: {\n          terrainSegments: 256,\n          textureSize: 2048,\n          drawDistance: 15000,\n          textureQuality: 'high',\n          shadowsEnabled: true,\n          shadowMapSize: 2048,\n          postProcessingEnabled: true,\n          postProcessingEffects: ['bloom', 'fxaa'],\n          ambientOcclusionEnabled: true,\n          reflectionsEnabled: false,\n          maxPointsOfInterest: 40,\n          occlusionCullingEnabled: true,\n          modelDetailLevel: 'high',\n          interactiveObjects: 'all',\n          useSimplifiedGeometry: false,\n          maxParticles: 1000,\n          fogEnabled: true,\n          animationLevel: 'full',\n          backgroundDetail: 'high',\n          lightingComplexity: 'advanced',\n          maxFrameRate: 90\n        },\n        \n        // Configuration pour performances ultra élevées\n        [PERF_LEVELS.ULTRA_HIGH]: {\n          terrainSegments: 512,\n          textureSize: 4096,\n          drawDistance: 25000,\n          textureQuality: 'ultra',\n          shadowsEnabled: true,\n          shadowMapSize: 4096,\n          postProcessingEnabled: true,\n          postProcessingEffects: ['bloom', 'ssao', 'godrays', 'fxaa'],\n          ambientOcclusionEnabled: true,\n          reflectionsEnabled: true,\n          maxPointsOfInterest: 60,\n          occlusionCullingEnabled: false,\n          modelDetailLevel: 'ultra',\n          interactiveObjects: 'all',\n          useSimplifiedGeometry: false,\n          maxParticles: 5000,\n          fogEnabled: true,\n          animationLevel: 'full',\n          backgroundDetail: 'ultra',\n          lightingComplexity: 'physically-based',\n          maxFrameRate: 144\n        }\n      },\n      \n      // Configuration pour TrainingVisualizer3D\n      trainingVisualization: {\n        // Configuration pour performances ultra faibles\n        [PERF_LEVELS.ULTRA_LOW]: {\n          avatarSegments: 8,\n          environmentDetail: 'very-low',\n          maxCyclists: 2,\n          textureQuality: 'very-low',\n          shadowsEnabled: false,\n          effectsEnabled: false,\n          useSimplifiedPhysics: true,\n          maxFrameRate: 30,\n          drawDistance: 100,\n          animationFrameskip: 3,\n          backgroundEnabled: false,\n          reflectionQuality: 'none',\n          lightingQuality: 'basic',\n          maxTrainingObjects: 5\n        },\n        \n        // Configuration pour performances faibles\n        [PERF_LEVELS.LOW]: {\n          avatarSegments: 12,\n          environmentDetail: 'low',\n          maxCyclists: 3,\n          textureQuality: 'low',\n          shadowsEnabled: false,\n          effectsEnabled: false,\n          useSimplifiedPhysics: true,\n          maxFrameRate: 45,\n          drawDistance: 200,\n          animationFrameskip: 2,\n          backgroundEnabled: true,\n          reflectionQuality: 'none',\n          lightingQuality: 'basic',\n          maxTrainingObjects: 10\n        },\n        \n        // Configuration pour performances moyennes\n        [PERF_LEVELS.MEDIUM]: {\n          avatarSegments: 16,\n          environmentDetail: 'medium',\n          maxCyclists: 5,\n          textureQuality: 'medium',\n          shadowsEnabled: true,\n          effectsEnabled: true,\n          useSimplifiedPhysics: false,\n          maxFrameRate: 60,\n          drawDistance: 500,\n          animationFrameskip: 0,\n          backgroundEnabled: true,\n          reflectionQuality: 'low',\n          lightingQuality: 'standard',\n          maxTrainingObjects: 20\n        },\n        \n        // Configuration pour performances élevées\n        [PERF_LEVELS.HIGH]: {\n          avatarSegments: 24,\n          environmentDetail: 'high',\n          maxCyclists: 8,\n          textureQuality: 'high',\n          shadowsEnabled: true,\n          effectsEnabled: true,\n          useSimplifiedPhysics: false,\n          maxFrameRate: 90,\n          drawDistance: 1000,\n          animationFrameskip: 0,\n          backgroundEnabled: true,\n          reflectionQuality: 'medium',\n          lightingQuality: 'advanced',\n          maxTrainingObjects: 40\n        },\n        \n        // Configuration pour performances ultra élevées\n        [PERF_LEVELS.ULTRA_HIGH]: {\n          avatarSegments: 32,\n          environmentDetail: 'ultra',\n          maxCyclists: 12,\n          textureQuality: 'ultra',\n          shadowsEnabled: true,\n          effectsEnabled: true,\n          useSimplifiedPhysics: false,\n          maxFrameRate: 120,\n          drawDistance: 2000,\n          animationFrameskip: 0,\n          backgroundEnabled: true,\n          reflectionQuality: 'high',\n          lightingQuality: 'physically-based',\n          maxTrainingObjects: 60\n        }\n      }\n    };\n    \n    // Configuration spécifique pour les appareils mobiles\n    this.mobileOverrides = {\n      // Écrase certains paramètres pour optimiser sur mobile\n      shadowsEnabled: false,\n      postProcessingEnabled: false,\n      ambientOcclusionEnabled: false,\n      reflectionsEnabled: false,\n      drawDistance: 0.6, // multiplicateur\n      maxParticles: 0.3, // multiplicateur\n      maxFrameRate: Math.min, // prend le min entre la config standard et 60\n      backgroundDetail: level => Math.max(PERF_LEVELS.LOW, level - 1) // réduit de 1 niveau\n    };\n    \n    // Configuration spécifique pour les appareils en mode économie de batterie\n    this.batterySavingOverrides = {\n      shadowsEnabled: false,\n      postProcessingEnabled: false,\n      maxFrameRate: 30,\n      drawDistance: 0.5, // multiplicateur\n      terrainSegments: 0.5, // multiplicateur\n      textureQuality: level => Math.max(PERF_LEVELS.ULTRA_LOW, level - 2) // réduit de 2 niveaux\n    };\n  }\n  \n  /**\n   * Obtient la configuration optimale pour un composant 3D spécifique\n   * @param {string} componentType Type de composant ('colVisualization' ou 'trainingVisualization')\n   * @param {Object} [overrideFlags={}] Drapeaux pour forcer certaines options\n   * @returns {Object} Configuration optimale\n   */\n  getOptimalConfig(componentType, overrideFlags = {}) {\n    // Récupérer les capacités de l'appareil\n    const capabilities = deviceCapabilityDetector.getCapabilities();\n    let perfLevel = capabilities.performanceLevel;\n    \n    // Vérifier si on a une configuration pour ce composant\n    if (!this.configs[componentType]) {\n      console.warn(`3DConfigManager: configuration non trouvée pour ${componentType}`);\n      componentType = 'colVisualization'; // Fallback sur une config par défaut\n    }\n    \n    // Obtenir la configuration de base\n    let config = { ...this.configs[componentType][perfLevel] };\n    \n    // Appliquer les overrides pour mobile si nécessaire\n    if (capabilities.flags.isMobile || overrideFlags.forceMobileMode) {\n      config = this.applyMobileOverrides(config, perfLevel);\n    }\n    \n    // Appliquer les overrides pour économie de batterie si nécessaire\n    if (capabilities.flags.hasBatteryConstraints || overrideFlags.forceBatterySaving) {\n      config = this.applyBatterySavingOverrides(config, perfLevel);\n    }\n    \n    // Appliquer les overrides utilisateur si fournis\n    if (overrideFlags.userOverrides) {\n      config = { ...config, ...overrideFlags.userOverrides };\n    }\n    \n    // Garantir que les paramètres restent dans des limites raisonnables\n    config = this.sanitizeConfig(config);\n    \n    return config;\n  }\n  \n  /**\n   * Applique les overrides spécifiques aux appareils mobiles\n   * @param {Object} config Configuration de base\n   * @param {number} perfLevel Niveau de performance\n   * @returns {Object} Configuration modifiée\n   * @private\n   */\n  applyMobileOverrides(config, perfLevel) {\n    const result = { ...config };\n    \n    // Appliquer chaque override\n    Object.entries(this.mobileOverrides).forEach(([key, value]) => {\n      if (typeof value === 'function') {\n        // Si c'est une fonction, l'appliquer avec le niveau de performance\n        result[key] = value(perfLevel);\n      } else if (typeof value === 'number' && config[key] !== undefined) {\n        // Si c'est un multiplicateur\n        result[key] = Math.round(config[key] * value);\n      } else {\n        // Sinon remplacer directement\n        result[key] = value;\n      }\n    });\n    \n    return result;\n  }\n  \n  /**\n   * Applique les overrides pour le mode économie de batterie\n   * @param {Object} config Configuration de base\n   * @param {number} perfLevel Niveau de performance\n   * @returns {Object} Configuration modifiée\n   * @private\n   */\n  applyBatterySavingOverrides(config, perfLevel) {\n    const result = { ...config };\n    \n    // Appliquer chaque override\n    Object.entries(this.batterySavingOverrides).forEach(([key, value]) => {\n      if (typeof value === 'function') {\n        // Si c'est une fonction, l'appliquer avec le niveau de performance\n        result[key] = value(perfLevel);\n      } else if (typeof value === 'number' && config[key] !== undefined) {\n        // Si c'est un multiplicateur\n        result[key] = Math.round(config[key] * value);\n      } else {\n        // Sinon remplacer directement\n        result[key] = value;\n      }\n    });\n    \n    return result;\n  }\n  \n  /**\n   * Sanitize la configuration pour éviter des valeurs absurdes\n   * @param {Object} config Configuration à sanitizer\n   * @returns {Object} Configuration sanitizée\n   * @private\n   */\n  sanitizeConfig(config) {\n    const result = { ...config };\n    \n    // Limites minimales\n    if (result.terrainSegments) {\n      result.terrainSegments = Math.max(32, result.terrainSegments);\n    }\n    \n    if (result.textureSize) {\n      result.textureSize = Math.max(256, result.textureSize);\n    }\n    \n    if (result.drawDistance) {\n      result.drawDistance = Math.max(100, result.drawDistance);\n    }\n    \n    if (result.maxFrameRate) {\n      result.maxFrameRate = Math.max(24, result.maxFrameRate);\n    }\n    \n    return result;\n  }\n  \n  /**\n   * Génère un résumé des paramètres de la configuration\n   * @param {Object} config Configuration à résumer\n   * @returns {string} Résumé textuel de la configuration\n   */\n  generateConfigSummary(config) {\n    if (!config) return 'Configuration non disponible';\n    \n    const qualityIndicators = [\n      { prop: 'terrainSegments', high: 256, low: 64 },\n      { prop: 'textureSize', high: 2048, low: 512 },\n      { prop: 'shadowsEnabled', binary: true },\n      { prop: 'postProcessingEnabled', binary: true }\n    ];\n    \n    let qualityScore = 0;\n    let maxScore = 0;\n    \n    // Calculer un score de qualité basé sur les indicateurs\n    qualityIndicators.forEach(indicator => {\n      if (config[indicator.prop] !== undefined) {\n        if (indicator.binary) {\n          qualityScore += config[indicator.prop] ? 1 : 0;\n          maxScore += 1;\n        } else {\n          const normalized = Math.min(\n            1, \n            Math.max(0, (config[indicator.prop] - indicator.low) / (indicator.high - indicator.low))\n          );\n          qualityScore += normalized;\n          maxScore += 1;\n        }\n      }\n    });\n    \n    // Convertir en pourcentage\n    const qualityPercentage = Math.round((qualityScore / Math.max(1, maxScore)) * 100);\n    \n    // Générer le résumé\n    let performanceLevel = 'Moyen';\n    if (qualityPercentage >= 75) performanceLevel = 'Élevé';\n    else if (qualityPercentage <= 30) performanceLevel = 'Faible';\n    \n    return `Qualité visuelle: ${performanceLevel} (${qualityPercentage}%)\nDétail terrain: ${config.terrainSegments || 'N/A'}\nRésolution textures: ${config.textureSize || 'N/A'}\nOmbres: ${config.shadowsEnabled ? 'Activées' : 'Désactivées'}\nEffets visuels: ${config.postProcessingEnabled ? 'Activés' : 'Désactivés'}`;\n  }\n}\n\n// Exporter une instance unique\nconst threeDConfigManager = new ThreeDConfigManager();\nexport default threeDConfigManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}