{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{MapContainer,TileLayer,Polyline,Marker,Popup,useMap}from'react-leaflet';import L from'leaflet';import WindVisualization from'./WindVisualization';import{weatherService}from'../../services/weather.service';import'leaflet/dist/leaflet.css';import{Box,Typography,Grid,Paper,Card,CardHeader,CardContent,Button,ButtonGroup,CircularProgress,List,ListItem,ListItemIcon,ListItemText,Divider,Alert,Chip,Stack}from'@mui/material';import{styled}from'@mui/material/styles';import WbSunnyIcon from'@mui/icons-material/WbSunny';import ThunderstormIcon from'@mui/icons-material/Thunderstorm';import AcUnitIcon from'@mui/icons-material/AcUnit';import WaterIcon from'@mui/icons-material/Water';import CloudIcon from'@mui/icons-material/Cloud';import WarningIcon from'@mui/icons-material/Warning';import ThermostatIcon from'@mui/icons-material/Thermostat';import UmbrellaIcon from'@mui/icons-material/Umbrella';import AirIcon from'@mui/icons-material/Air';import WindPowerIcon from'@mui/icons-material/WindPower';// Component styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledPopup=styled(Popup)(_ref=>{let{theme,severity}=_ref;const bgColors={good:theme.palette.success.light,moderate:theme.palette.info.light,warning:theme.palette.warning.light,critical:theme.palette.error.light};return{'& .leaflet-popup-content-wrapper':{backgroundColor:bgColors[severity]||theme.palette.background.paper,borderRadius:theme.shape.borderRadius,boxShadow:theme.shadows[2]},'& .leaflet-popup-tip':{backgroundColor:bgColors[severity]||theme.palette.background.paper}};});const EquipmentCategory=styled(Card)(_ref2=>{let{theme}=_ref2;return{marginBottom:theme.spacing(2),height:'100%'};});// Helper component to set map view based on route\nconst MapViewSetter=_ref3=>{let{route}=_ref3;const map=useMap();useEffect(()=>{var _route$coordinates;if(route!==null&&route!==void 0&&(_route$coordinates=route.coordinates)!==null&&_route$coordinates!==void 0&&_route$coordinates.length){const bounds=L.latLngBounds(route.coordinates.map(coord=>[coord[0],coord[1]]));map.fitBounds(bounds,{padding:[50,50]});}},[map,route]);return null;};// Component to display weather markers along a route\nconst WeatherMarkers=_ref4=>{let{weatherPoints}=_ref4;const{t}=useTranslation();if(!(weatherPoints!==null&&weatherPoints!==void 0&&weatherPoints.length))return null;// Custom weather icon based on condition\nconst getWeatherIcon=condition=>{// Define icon URLs for different conditions\nconst iconMap={'Clear':'sun.png','Clouds':'cloud.png','Rain':'rain.png','Drizzle':'drizzle.png','Thunderstorm':'storm.png','Snow':'snow.png','Mist':'mist.png','Fog':'fog.png'};const iconUrl=`/images/icons/weather/${iconMap[condition]||'default.png'}`;return L.icon({iconUrl,iconSize:[32,32],iconAnchor:[16,16],popupAnchor:[0,-16]});};return weatherPoints.map((point,index)=>{var _point$weather,_point$weather$;const condition=((_point$weather=point.weather)===null||_point$weather===void 0?void 0:(_point$weather$=_point$weather[0])===null||_point$weather$===void 0?void 0:_point$weather$.main)||'Clouds';const icon=getWeatherIcon(condition);const severity=weatherService.getCyclingConditionSeverity(point);const temperatureClass=point.main.temp<5?'cold':point.main.temp>28?'hot':'neutral';return/*#__PURE__*/_jsx(Marker,{position:[point.lat,point.lon],icon:icon,children:/*#__PURE__*/_jsx(StyledPopup,{severity:severity,children:/*#__PURE__*/_jsxs(Box,{sx:{minWidth:180},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:condition}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",sx:{fontWeight:'bold',color:temperatureClass==='cold'?'info.main':temperatureClass==='hot'?'error.main':'text.primary',mb:1},children:[Math.round(point.main.temp),\"\\xB0C\"]}),/*#__PURE__*/_jsxs(List,{dense:true,disablePadding:true,children:[/*#__PURE__*/_jsxs(ListItem,{sx:{p:0},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:30},children:/*#__PURE__*/_jsx(AirIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:`${t('wind')}: ${point.wind.speed} km/h`,primaryTypographyProps:{variant:'body2'}})]}),/*#__PURE__*/_jsxs(ListItem,{sx:{p:0},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:30},children:/*#__PURE__*/_jsx(WaterIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:`${t('humidity')}: ${point.main.humidity}%`,primaryTypographyProps:{variant:'body2'}})]}),point.rain&&/*#__PURE__*/_jsxs(ListItem,{sx:{p:0},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:30},children:/*#__PURE__*/_jsx(UmbrellaIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:`${t('rain')}: ${point.rain['1h']} mm`,primaryTypographyProps:{variant:'body2'}})]})]}),/*#__PURE__*/_jsx(Chip,{label:`${t('cyclingCondition')}: ${t(severity)}`,size:\"small\",sx:{mt:1,fontWeight:'bold',bgcolor:severity==='good'?'success.light':severity==='moderate'?'info.light':severity==='warning'?'warning.light':'error.light'}})]})})},`weather-${index}`);});};// Component to show equipment recommendations\nconst EquipmentRecommendations=_ref5=>{let{weatherData}=_ref5;const{t}=useTranslation();if(!weatherData)return null;const recommendations=weatherService.getEquipmentRecommendations(weatherData);const categoryIcons={clothing:/*#__PURE__*/_jsx(ThermostatIcon,{}),accessories:/*#__PURE__*/_jsx(WbSunnyIcon,{}),bike:/*#__PURE__*/_jsx(WindPowerIcon,{}),nutrition:/*#__PURE__*/_jsx(WaterIcon,{}),safety:/*#__PURE__*/_jsx(WarningIcon,{})};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:t('recommendedEquipment')})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:Object.entries(recommendations).map(_ref6=>{let[category,items]=_ref6;if(!items.length)return null;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(EquipmentCategory,{variant:\"outlined\",children:[/*#__PURE__*/_jsx(CardHeader,{avatar:categoryIcons[category],title:t(category),titleTypographyProps:{variant:'subtitle1'},sx:{pb:0}}),/*#__PURE__*/_jsx(CardContent,{sx:{pt:1},children:/*#__PURE__*/_jsx(List,{dense:true,children:items.map((item,index)=>/*#__PURE__*/_jsx(ListItem,{sx:{py:0},children:/*#__PURE__*/_jsx(ListItemText,{primary:t(item)})},index))})})]})},category);})})})]});};// Component to show weather alerts\nconst WeatherAlerts=_ref7=>{let{alerts,severity}=_ref7;const{t}=useTranslation();if(!(alerts!==null&&alerts!==void 0&&alerts.length))return null;return/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:alerts.map((alert,index)=>/*#__PURE__*/_jsxs(Alert,{severity:alert.severity==='critical'?'error':'warning',variant:\"filled\",sx:{mb:1},action:/*#__PURE__*/_jsx(Button,{color:\"inherit\",size:\"small\",children:t('details')}),children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",fontWeight:\"bold\",children:alert.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:alert.description})]},index))});};// Main Weather Dashboard component\nconst WeatherDashboard=_ref8=>{let{routeId,routeData}=_ref8;const{t,i18n}=useTranslation();const[weatherData,setWeatherData]=useState(null);const[weatherPoints,setWeatherPoints]=useState([]);const[windData,setWindData]=useState([]);const[currentLocation,setCurrentLocation]=useState(null);const[alerts,setAlerts]=useState([]);const[loading,setLoading]=useState(true);const[selectedTimeframe,setSelectedTimeframe]=useState('current');// Convert route coordinates to format needed for weather service\nconst prepareRoutePoints=route=>{var _route$coordinates2;if(!(route!==null&&route!==void 0&&(_route$coordinates2=route.coordinates)!==null&&_route$coordinates2!==void 0&&_route$coordinates2.length))return[];// Take points at regular intervals to get weather data\nconst points=[];const step=Math.max(1,Math.floor(route.coordinates.length/5));// 5 points max\nfor(let i=0;i<route.coordinates.length;i+=step){if(points.length<5){// Limit to 5 points to avoid API overuse\npoints.push({lat:route.coordinates[i][0],lon:route.coordinates[i][1]});}}return points;};// Process weather data into wind visualization data\nconst processWindData=(weatherPoints,elevationData)=>{if(!(weatherPoints!==null&&weatherPoints!==void 0&&weatherPoints.length)||!elevationData)return[];const windData=[];const width=elevationData.width||10;const maxDistance=width;// For each weather point, create wind data\nfor(let i=0;i<weatherPoints.length;i++){const point=weatherPoints[i];if(!point.wind)continue;// Position on the 3D grid (simplified for example)\nconst x=i%3*(maxDistance/3)-maxDistance/2;const z=Math.floor(i/3)*(maxDistance/3)-maxDistance/2;// Find elevation at this point\nlet elevation=0;if(elevationData.heights&&elevationData.heights[0]){// Just get a random elevation from the data for demonstration\nconst randomIndex=Math.floor(Math.random()*elevationData.heights.length);if(elevationData.heights[randomIndex].length>0){elevation=elevationData.heights[randomIndex][0]||0;}}windData.push({x,z,elevation,speed:point.wind.speed,direction:point.wind.deg||0,gusts:point.wind.gust||point.wind.speed*1.3});}return windData;};// Generate alerts based on weather conditions\nconst generateWeatherAlerts=weatherPoints=>{if(!(weatherPoints!==null&&weatherPoints!==void 0&&weatherPoints.length))return[];const alerts=[];// Check for extreme temperatures\nconst temps=weatherPoints.map(p=>p.main.temp);const maxTemp=Math.max(...temps);const minTemp=Math.min(...temps);// Cold alert\nif(minTemp<3){alerts.push({severity:minTemp<0?'critical':'warning',title:t('coldTemperatureAlert'),description:t('coldTemperatureDescription',{temperature:Math.round(minTemp)}),type:'temperature'});}// Heat alert\nif(maxTemp>30){alerts.push({severity:maxTemp>35?'critical':'warning',title:t('heatAlert'),description:t('heatAlertDescription',{temperature:Math.round(maxTemp)}),type:'temperature'});}// Check for precipitation\nconst hasHeavyRain=weatherPoints.some(point=>point.rain&&point.rain['1h']&&point.rain['1h']>5);if(hasHeavyRain){alerts.push({severity:'warning',title:t('heavyRainAlert'),description:t('heavyRainDescription'),type:'precipitation'});}// Check for strong winds\nconst hasStrongWind=weatherPoints.some(point=>point.wind&&point.wind.speed>30);if(hasStrongWind){alerts.push({severity:'critical',title:t('strongWindAlert'),description:t('strongWindDescription'),type:'wind'});}// Check for thunderstorms\nconst hasThunderstorm=weatherPoints.some(point=>point.weather&&point.weather.some(w=>w.main==='Thunderstorm'));if(hasThunderstorm){alerts.push({severity:'critical',title:t('thunderstormAlert'),description:t('thunderstormDescription'),type:'storm'});}// Determine if a combination of factors creates a hazardous condition\nconst hasModeratePrecipitation=weatherPoints.some(point=>point.rain&&point.rain['1h']&&point.rain['1h']>2);const hasModerateWind=weatherPoints.some(point=>point.wind&&point.wind.speed>20);if(hasModeratePrecipitation&&hasModerateWind){alerts.push({severity:'warning',title:t('hazardousConditionsAlert'),description:t('hazardousConditionsDescription'),type:'combined'});}return alerts;};useEffect(()=>{setLoading(true);// Fetch weather data for the route\nconst fetchWeatherForRoute=async()=>{try{var _routeData$mainRoute;if(!(routeData!==null&&routeData!==void 0&&(_routeData$mainRoute=routeData.mainRoute)!==null&&_routeData$mainRoute!==void 0&&_routeData$mainRoute.coordinates)){setLoading(false);return;}// Prepare points along the route\nconst routePoints=prepareRoutePoints(routeData.mainRoute);if(!routePoints.length){setLoading(false);return;}// Current location (first point of the route)\nsetCurrentLocation(routePoints[0]);// Fetch weather data for each point\nconst weatherResponses=await Promise.all(routePoints.map(point=>weatherService.getCurrentWeather(point.lat,point.lon)));// Combine weather data with coordinates\nconst weatherWithCoords=weatherResponses.map((weather,index)=>({...weather,lat:routePoints[index].lat,lon:routePoints[index].lon}));// Store main weather data (first point or average)\nsetWeatherData(weatherWithCoords[0]);setWeatherPoints(weatherWithCoords);// Generate wind data for visualization\nconst windData=processWindData(weatherWithCoords,routeData.elevationData);setWindData(windData);// Generate alerts\nconst weatherAlerts=generateWeatherAlerts(weatherWithCoords);setAlerts(weatherAlerts);}catch(error){console.error('Error fetching weather data:',error);}finally{setLoading(false);}};fetchWeatherForRoute();},[routeData,i18n.language]);// Get route color based on surface type\nconst getRouteColor=surfaceType=>{switch(surfaceType){case'asphalt':return'#3388ff';case'gravel':return'#ff7800';case'dirt':return'#6B4226';default:return'#3388ff';}};// Loading state\nif(loading){return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:200,width:'100%'},children:[/*#__PURE__*/_jsx(CircularProgress,{size:40}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{ml:2},children:t('loadingWeatherData')})]});}// Error state - no route data\nif(!routeData){return/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{my:2},children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:t('noRouteDataAvailable')})});}const getWeatherIcon=condition=>{switch(condition){case'Clear':return/*#__PURE__*/_jsx(WbSunnyIcon,{fontSize:\"large\"});case'Clouds':return/*#__PURE__*/_jsx(CloudIcon,{fontSize:\"large\"});case'Rain':case'Drizzle':return/*#__PURE__*/_jsx(WaterIcon,{fontSize:\"large\"});case'Thunderstorm':return/*#__PURE__*/_jsx(ThunderstormIcon,{fontSize:\"large\"});case'Snow':return/*#__PURE__*/_jsx(AcUnitIcon,{fontSize:\"large\"});default:return/*#__PURE__*/_jsx(CloudIcon,{fontSize:\"large\"});}};return/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:3,mb:4},component:\"section\",\"aria-labelledby\":\"weather-dashboard-title\",children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',flexWrap:'wrap',mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",component:\"h2\",id:\"weather-dashboard-title\",children:[t('weatherDashboard'),\": \",routeData.name]}),/*#__PURE__*/_jsxs(ButtonGroup,{variant:\"outlined\",size:\"small\",\"aria-label\":t('timeframeSelector'),children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setSelectedTimeframe('current'),variant:selectedTimeframe==='current'?'contained':'outlined',\"aria-pressed\":selectedTimeframe==='current',children:t('currentConditions')}),/*#__PURE__*/_jsx(Button,{onClick:()=>setSelectedTimeframe('forecast'),variant:selectedTimeframe==='forecast'?'contained':'outlined',\"aria-pressed\":selectedTimeframe==='forecast',children:t('forecast24h')}),/*#__PURE__*/_jsx(Button,{onClick:()=>setSelectedTimeframe('week'),variant:selectedTimeframe==='week'?'contained':'outlined',\"aria-pressed\":selectedTimeframe==='week',children:t('weekForecast')})]})]}),/*#__PURE__*/_jsx(WeatherAlerts,{alerts:alerts}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Paper,{elevation:0,variant:\"outlined\",sx:{height:400,overflow:'hidden'},\"aria-label\":t('weatherMap'),children:/*#__PURE__*/_jsxs(MapContainer,{style:{height:'100%',width:'100%'},center:[48.8566,2.3522],zoom:10,children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/_jsx(Polyline,{positions:routeData.mainRoute.coordinates,pathOptions:{color:getRouteColor(routeData.mainRoute.surfaceType),weight:5}}),/*#__PURE__*/_jsx(WeatherMarkers,{weatherPoints:weatherPoints}),/*#__PURE__*/_jsx(MapViewSetter,{route:routeData.mainRoute})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(EquipmentRecommendations,{weatherData:weatherData})})]}),/*#__PURE__*/_jsx(Box,{sx:{mt:4},children:/*#__PURE__*/_jsx(WindVisualization,{passId:routeId,elevationData:routeData.elevationData,windData:windData,currentLocation:currentLocation})})]});};export default WeatherDashboard;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","MapContainer","TileLayer","Polyline","Marker","Popup","useMap","L","WindVisualization","weatherService","Box","Typography","Grid","Paper","Card","CardHeader","CardContent","Button","ButtonGroup","CircularProgress","List","ListItem","ListItemIcon","ListItemText","Divider","Alert","Chip","Stack","styled","WbSunnyIcon","ThunderstormIcon","AcUnitIcon","WaterIcon","CloudIcon","WarningIcon","ThermostatIcon","UmbrellaIcon","AirIcon","WindPowerIcon","jsx","_jsx","jsxs","_jsxs","StyledPopup","_ref","theme","severity","bgColors","good","palette","success","light","moderate","info","warning","critical","error","backgroundColor","background","paper","borderRadius","shape","boxShadow","shadows","EquipmentCategory","_ref2","marginBottom","spacing","height","MapViewSetter","_ref3","route","map","_route$coordinates","coordinates","length","bounds","latLngBounds","coord","fitBounds","padding","WeatherMarkers","_ref4","weatherPoints","t","getWeatherIcon","condition","iconMap","iconUrl","icon","iconSize","iconAnchor","popupAnchor","point","index","_point$weather","_point$weather$","weather","main","getCyclingConditionSeverity","temperatureClass","temp","position","lat","lon","children","sx","minWidth","variant","gutterBottom","fontWeight","color","mb","Math","round","dense","disablePadding","p","fontSize","primary","wind","speed","primaryTypographyProps","humidity","rain","label","size","mt","bgcolor","EquipmentRecommendations","_ref5","weatherData","recommendations","getEquipmentRecommendations","categoryIcons","clothing","accessories","bike","nutrition","safety","title","container","Object","entries","_ref6","category","items","item","xs","md","avatar","titleTypographyProps","pb","pt","py","WeatherAlerts","_ref7","alerts","alert","action","description","WeatherDashboard","_ref8","routeId","routeData","i18n","setWeatherData","setWeatherPoints","windData","setWindData","currentLocation","setCurrentLocation","setAlerts","loading","setLoading","selectedTimeframe","setSelectedTimeframe","prepareRoutePoints","_route$coordinates2","points","step","max","floor","i","push","processWindData","elevationData","width","maxDistance","x","z","elevation","heights","randomIndex","random","direction","deg","gusts","gust","generateWeatherAlerts","temps","maxTemp","minTemp","min","temperature","type","hasHeavyRain","some","hasStrongWind","hasThunderstorm","w","hasModeratePrecipitation","hasModerateWind","fetchWeatherForRoute","_routeData$mainRoute","mainRoute","routePoints","weatherResponses","Promise","all","getCurrentWeather","weatherWithCoords","weatherAlerts","console","language","getRouteColor","surfaceType","display","justifyContent","alignItems","ml","my","component","flexWrap","id","name","onClick","overflow","style","center","zoom","url","attribution","positions","pathOptions","weight","passId"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/weather/WeatherDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport WindVisualization from './WindVisualization';\nimport { weatherService } from '../../services/weather.service';\nimport 'leaflet/dist/leaflet.css';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Paper,\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  ButtonGroup,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Alert,\n  Chip,\n  Stack\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport WbSunnyIcon from '@mui/icons-material/WbSunny';\nimport ThunderstormIcon from '@mui/icons-material/Thunderstorm';\nimport AcUnitIcon from '@mui/icons-material/AcUnit';\nimport WaterIcon from '@mui/icons-material/Water';\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport UmbrellaIcon from '@mui/icons-material/Umbrella';\nimport AirIcon from '@mui/icons-material/Air';\nimport WindPowerIcon from '@mui/icons-material/WindPower';\n\n// Component styling\nconst StyledPopup = styled(Popup)(({ theme, severity }) => {\n  const bgColors = {\n    good: theme.palette.success.light,\n    moderate: theme.palette.info.light,\n    warning: theme.palette.warning.light,\n    critical: theme.palette.error.light,\n  };\n  \n  return {\n    '& .leaflet-popup-content-wrapper': {\n      backgroundColor: bgColors[severity] || theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      boxShadow: theme.shadows[2],\n    },\n    '& .leaflet-popup-tip': {\n      backgroundColor: bgColors[severity] || theme.palette.background.paper,\n    }\n  };\n});\n\nconst EquipmentCategory = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n  height: '100%',\n}));\n\n// Helper component to set map view based on route\nconst MapViewSetter = ({ route }) => {\n  const map = useMap();\n  \n  useEffect(() => {\n    if (route?.coordinates?.length) {\n      const bounds = L.latLngBounds(\n        route.coordinates.map(coord => [coord[0], coord[1]])\n      );\n      map.fitBounds(bounds, { padding: [50, 50] });\n    }\n  }, [map, route]);\n  \n  return null;\n};\n\n// Component to display weather markers along a route\nconst WeatherMarkers = ({ weatherPoints }) => {\n  const { t } = useTranslation();\n  \n  if (!weatherPoints?.length) return null;\n  \n  // Custom weather icon based on condition\n  const getWeatherIcon = (condition) => {\n    // Define icon URLs for different conditions\n    const iconMap = {\n      'Clear': 'sun.png',\n      'Clouds': 'cloud.png',\n      'Rain': 'rain.png',\n      'Drizzle': 'drizzle.png',\n      'Thunderstorm': 'storm.png',\n      'Snow': 'snow.png',\n      'Mist': 'mist.png',\n      'Fog': 'fog.png'\n    };\n    \n    const iconUrl = `/images/icons/weather/${iconMap[condition] || 'default.png'}`;\n    \n    return L.icon({\n      iconUrl,\n      iconSize: [32, 32],\n      iconAnchor: [16, 16],\n      popupAnchor: [0, -16]\n    });\n  };\n  \n  return weatherPoints.map((point, index) => {\n    const condition = point.weather?.[0]?.main || 'Clouds';\n    const icon = getWeatherIcon(condition);\n    const severity = weatherService.getCyclingConditionSeverity(point);\n    const temperatureClass = \n      point.main.temp < 5 ? 'cold' :\n      point.main.temp > 28 ? 'hot' : 'neutral';\n    \n    return (\n      <Marker \n        key={`weather-${index}`}\n        position={[point.lat, point.lon]} \n        icon={icon}\n      >\n        <StyledPopup severity={severity}>\n          <Box sx={{ minWidth: 180 }}>\n            <Typography variant=\"h6\" gutterBottom>{condition}</Typography>\n            <Typography \n              variant=\"h5\" \n              sx={{ \n                fontWeight: 'bold',\n                color: temperatureClass === 'cold' ? 'info.main' : \n                       temperatureClass === 'hot' ? 'error.main' : 'text.primary',\n                mb: 1\n              }}\n            >\n              {Math.round(point.main.temp)}°C\n            </Typography>\n            \n            <List dense disablePadding>\n              <ListItem sx={{ p: 0 }}>\n                <ListItemIcon sx={{ minWidth: 30 }}>\n                  <AirIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText \n                  primary={`${t('wind')}: ${point.wind.speed} km/h`}\n                  primaryTypographyProps={{ variant: 'body2' }}\n                />\n              </ListItem>\n              \n              <ListItem sx={{ p: 0 }}>\n                <ListItemIcon sx={{ minWidth: 30 }}>\n                  <WaterIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText \n                  primary={`${t('humidity')}: ${point.main.humidity}%`}\n                  primaryTypographyProps={{ variant: 'body2' }}\n                />\n              </ListItem>\n              \n              {point.rain && (\n                <ListItem sx={{ p: 0 }}>\n                  <ListItemIcon sx={{ minWidth: 30 }}>\n                    <UmbrellaIcon fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText \n                    primary={`${t('rain')}: ${point.rain['1h']} mm`}\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n              )}\n            </List>\n            \n            <Chip \n              label={`${t('cyclingCondition')}: ${t(severity)}`}\n              size=\"small\"\n              sx={{ \n                mt: 1, \n                fontWeight: 'bold',\n                bgcolor: severity === 'good' ? 'success.light' :\n                         severity === 'moderate' ? 'info.light' :\n                         severity === 'warning' ? 'warning.light' : 'error.light',\n              }}\n            />\n          </Box>\n        </StyledPopup>\n      </Marker>\n    );\n  });\n};\n\n// Component to show equipment recommendations\nconst EquipmentRecommendations = ({ weatherData }) => {\n  const { t } = useTranslation();\n  \n  if (!weatherData) return null;\n  \n  const recommendations = weatherService.getEquipmentRecommendations(weatherData);\n  \n  const categoryIcons = {\n    clothing: <ThermostatIcon />,\n    accessories: <WbSunnyIcon />,\n    bike: <WindPowerIcon />,\n    nutrition: <WaterIcon />,\n    safety: <WarningIcon />\n  };\n  \n  return (\n    <Card>\n      <CardHeader \n        title={<Typography variant=\"h6\">{t('recommendedEquipment')}</Typography>}\n      />\n      <CardContent>\n        <Grid container spacing={2}>\n          {Object.entries(recommendations).map(([category, items]) => {\n            if (!items.length) return null;\n            \n            return (\n              <Grid item xs={12} md={6} key={category}>\n                <EquipmentCategory variant=\"outlined\">\n                  <CardHeader\n                    avatar={categoryIcons[category]}\n                    title={t(category)}\n                    titleTypographyProps={{ variant: 'subtitle1' }}\n                    sx={{ pb: 0 }}\n                  />\n                  <CardContent sx={{ pt: 1 }}>\n                    <List dense>\n                      {items.map((item, index) => (\n                        <ListItem key={index} sx={{ py: 0 }}>\n                          <ListItemText primary={t(item)} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </CardContent>\n                </EquipmentCategory>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Component to show weather alerts\nconst WeatherAlerts = ({ alerts, severity }) => {\n  const { t } = useTranslation();\n  \n  if (!alerts?.length) return null;\n  \n  return (\n    <Box sx={{ mb: 2 }}>\n      {alerts.map((alert, index) => (\n        <Alert\n          key={index}\n          severity={alert.severity === 'critical' ? 'error' : 'warning'}\n          variant=\"filled\"\n          sx={{ mb: 1 }}\n          action={\n            <Button color=\"inherit\" size=\"small\">\n              {t('details')}\n            </Button>\n          }\n        >\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n            {alert.title}\n          </Typography>\n          <Typography variant=\"body2\">\n            {alert.description}\n          </Typography>\n        </Alert>\n      ))}\n    </Box>\n  );\n};\n\n// Main Weather Dashboard component\nconst WeatherDashboard = ({ routeId, routeData }) => {\n  const { t, i18n } = useTranslation();\n  const [weatherData, setWeatherData] = useState(null);\n  const [weatherPoints, setWeatherPoints] = useState([]);\n  const [windData, setWindData] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('current');\n  \n  // Convert route coordinates to format needed for weather service\n  const prepareRoutePoints = (route) => {\n    if (!route?.coordinates?.length) return [];\n    \n    // Take points at regular intervals to get weather data\n    const points = [];\n    const step = Math.max(1, Math.floor(route.coordinates.length / 5)); // 5 points max\n    \n    for (let i = 0; i < route.coordinates.length; i += step) {\n      if (points.length < 5) { // Limit to 5 points to avoid API overuse\n        points.push({ lat: route.coordinates[i][0], lon: route.coordinates[i][1] });\n      }\n    }\n    \n    return points;\n  };\n  \n  // Process weather data into wind visualization data\n  const processWindData = (weatherPoints, elevationData) => {\n    if (!weatherPoints?.length || !elevationData) return [];\n    \n    const windData = [];\n    const width = elevationData.width || 10;\n    const maxDistance = width;\n    \n    // For each weather point, create wind data\n    for (let i = 0; i < weatherPoints.length; i++) {\n      const point = weatherPoints[i];\n      if (!point.wind) continue;\n      \n      // Position on the 3D grid (simplified for example)\n      const x = (i % 3) * (maxDistance / 3) - maxDistance / 2;\n      const z = Math.floor(i / 3) * (maxDistance / 3) - maxDistance / 2;\n      \n      // Find elevation at this point\n      let elevation = 0;\n      if (elevationData.heights && elevationData.heights[0]) {\n        // Just get a random elevation from the data for demonstration\n        const randomIndex = Math.floor(Math.random() * elevationData.heights.length);\n        if (elevationData.heights[randomIndex].length > 0) {\n          elevation = elevationData.heights[randomIndex][0] || 0;\n        }\n      }\n      \n      windData.push({\n        x,\n        z,\n        elevation,\n        speed: point.wind.speed,\n        direction: point.wind.deg || 0,\n        gusts: point.wind.gust || point.wind.speed * 1.3\n      });\n    }\n    \n    return windData;\n  };\n  \n  // Generate alerts based on weather conditions\n  const generateWeatherAlerts = (weatherPoints) => {\n    if (!weatherPoints?.length) return [];\n    \n    const alerts = [];\n    \n    // Check for extreme temperatures\n    const temps = weatherPoints.map(p => p.main.temp);\n    const maxTemp = Math.max(...temps);\n    const minTemp = Math.min(...temps);\n    \n    // Cold alert\n    if (minTemp < 3) {\n      alerts.push({\n        severity: minTemp < 0 ? 'critical' : 'warning',\n        title: t('coldTemperatureAlert'),\n        description: t('coldTemperatureDescription', { temperature: Math.round(minTemp) }),\n        type: 'temperature'\n      });\n    }\n    \n    // Heat alert\n    if (maxTemp > 30) {\n      alerts.push({\n        severity: maxTemp > 35 ? 'critical' : 'warning',\n        title: t('heatAlert'),\n        description: t('heatAlertDescription', { temperature: Math.round(maxTemp) }),\n        type: 'temperature'\n      });\n    }\n    \n    // Check for precipitation\n    const hasHeavyRain = weatherPoints.some(point => \n      point.rain && point.rain['1h'] && point.rain['1h'] > 5);\n    \n    if (hasHeavyRain) {\n      alerts.push({\n        severity: 'warning',\n        title: t('heavyRainAlert'),\n        description: t('heavyRainDescription'),\n        type: 'precipitation'\n      });\n    }\n    \n    // Check for strong winds\n    const hasStrongWind = weatherPoints.some(point => \n      point.wind && point.wind.speed > 30);\n    \n    if (hasStrongWind) {\n      alerts.push({\n        severity: 'critical',\n        title: t('strongWindAlert'),\n        description: t('strongWindDescription'),\n        type: 'wind'\n      });\n    }\n    \n    // Check for thunderstorms\n    const hasThunderstorm = weatherPoints.some(point => \n      point.weather && point.weather.some(w => w.main === 'Thunderstorm'));\n    \n    if (hasThunderstorm) {\n      alerts.push({\n        severity: 'critical',\n        title: t('thunderstormAlert'),\n        description: t('thunderstormDescription'),\n        type: 'storm'\n      });\n    }\n    \n    // Determine if a combination of factors creates a hazardous condition\n    const hasModeratePrecipitation = weatherPoints.some(point => \n      point.rain && point.rain['1h'] && point.rain['1h'] > 2);\n    \n    const hasModerateWind = weatherPoints.some(point => \n      point.wind && point.wind.speed > 20);\n    \n    if (hasModeratePrecipitation && hasModerateWind) {\n      alerts.push({\n        severity: 'warning',\n        title: t('hazardousConditionsAlert'),\n        description: t('hazardousConditionsDescription'),\n        type: 'combined'\n      });\n    }\n    \n    return alerts;\n  };\n  \n  useEffect(() => {\n    setLoading(true);\n    \n    // Fetch weather data for the route\n    const fetchWeatherForRoute = async () => {\n      try {\n        if (!routeData?.mainRoute?.coordinates) {\n          setLoading(false);\n          return;\n        }\n        \n        // Prepare points along the route\n        const routePoints = prepareRoutePoints(routeData.mainRoute);\n        \n        if (!routePoints.length) {\n          setLoading(false);\n          return;\n        }\n        \n        // Current location (first point of the route)\n        setCurrentLocation(routePoints[0]);\n        \n        // Fetch weather data for each point\n        const weatherResponses = await Promise.all(\n          routePoints.map(point => \n            weatherService.getCurrentWeather(point.lat, point.lon)\n          )\n        );\n        \n        // Combine weather data with coordinates\n        const weatherWithCoords = weatherResponses.map((weather, index) => ({\n          ...weather,\n          lat: routePoints[index].lat,\n          lon: routePoints[index].lon\n        }));\n        \n        // Store main weather data (first point or average)\n        setWeatherData(weatherWithCoords[0]);\n        setWeatherPoints(weatherWithCoords);\n        \n        // Generate wind data for visualization\n        const windData = processWindData(\n          weatherWithCoords,\n          routeData.elevationData\n        );\n        setWindData(windData);\n        \n        // Generate alerts\n        const weatherAlerts = generateWeatherAlerts(weatherWithCoords);\n        setAlerts(weatherAlerts);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchWeatherForRoute();\n  }, [routeData, i18n.language]);\n  \n  // Get route color based on surface type\n  const getRouteColor = (surfaceType) => {\n    switch(surfaceType) {\n      case 'asphalt': return '#3388ff';\n      case 'gravel': return '#ff7800';\n      case 'dirt': return '#6B4226';\n      default: return '#3388ff';\n    }\n  };\n  \n  // Loading state\n  if (loading) {\n    return (\n      <Box \n        sx={{ \n          display: 'flex', \n          justifyContent: 'center', \n          alignItems: 'center', \n          height: 200,\n          width: '100%'\n        }}\n      >\n        <CircularProgress size={40} />\n        <Typography variant=\"h6\" sx={{ ml: 2 }}>\n          {t('loadingWeatherData')}\n        </Typography>\n      </Box>\n    );\n  }\n  \n  // Error state - no route data\n  if (!routeData) {\n    return (\n      <Alert severity=\"error\" sx={{ my: 2 }}>\n        <Typography variant=\"subtitle1\">\n          {t('noRouteDataAvailable')}\n        </Typography>\n      </Alert>\n    );\n  }\n  \n  const getWeatherIcon = (condition) => {\n    switch(condition) {\n      case 'Clear': return <WbSunnyIcon fontSize=\"large\" />;\n      case 'Clouds': return <CloudIcon fontSize=\"large\" />;\n      case 'Rain': case 'Drizzle': return <WaterIcon fontSize=\"large\" />;\n      case 'Thunderstorm': return <ThunderstormIcon fontSize=\"large\" />;\n      case 'Snow': return <AcUnitIcon fontSize=\"large\" />;\n      default: return <CloudIcon fontSize=\"large\" />;\n    }\n  };\n  \n  return (\n    <Paper \n      elevation={2} \n      sx={{ p: 3, mb: 4 }}\n      component=\"section\"\n      aria-labelledby=\"weather-dashboard-title\"\n    >\n      <Box \n        sx={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center',\n          flexWrap: 'wrap',\n          mb: 2\n        }}\n      >\n        <Typography variant=\"h5\" component=\"h2\" id=\"weather-dashboard-title\">\n          {t('weatherDashboard')}: {routeData.name}\n        </Typography>\n        \n        <ButtonGroup variant=\"outlined\" size=\"small\" aria-label={t('timeframeSelector')}>\n          <Button \n            onClick={() => setSelectedTimeframe('current')}\n            variant={selectedTimeframe === 'current' ? 'contained' : 'outlined'}\n            aria-pressed={selectedTimeframe === 'current'}\n          >\n            {t('currentConditions')}\n          </Button>\n          <Button\n            onClick={() => setSelectedTimeframe('forecast')}\n            variant={selectedTimeframe === 'forecast' ? 'contained' : 'outlined'}\n            aria-pressed={selectedTimeframe === 'forecast'}\n          >\n            {t('forecast24h')}\n          </Button>\n          <Button\n            onClick={() => setSelectedTimeframe('week')}\n            variant={selectedTimeframe === 'week' ? 'contained' : 'outlined'}\n            aria-pressed={selectedTimeframe === 'week'}\n          >\n            {t('weekForecast')}\n          </Button>\n        </ButtonGroup>\n      </Box>\n      \n      <WeatherAlerts alerts={alerts} />\n      \n      <Grid container spacing={3}>\n        <Grid item xs={12} md={8}>\n          <Paper \n            elevation={0} \n            variant=\"outlined\" \n            sx={{ height: 400, overflow: 'hidden' }}\n            aria-label={t('weatherMap')}\n          >\n            <MapContainer \n              style={{ height: '100%', width: '100%' }}\n              center={[48.8566, 2.3522]}\n              zoom={10}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              \n              {/* Main route polyline */}\n              <Polyline \n                positions={routeData.mainRoute.coordinates}\n                pathOptions={{ \n                  color: getRouteColor(routeData.mainRoute.surfaceType),\n                  weight: 5\n                }}\n              />\n              \n              {/* Weather markers */}\n              <WeatherMarkers weatherPoints={weatherPoints} />\n              \n              {/* Center map on route */}\n              <MapViewSetter route={routeData.mainRoute} />\n            </MapContainer>\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <EquipmentRecommendations weatherData={weatherData} />\n        </Grid>\n      </Grid>\n      \n      <Box sx={{ mt: 4 }}>\n        <WindVisualization \n          passId={routeId}\n          elevationData={routeData.elevationData}\n          windData={windData}\n          currentLocation={currentLocation}\n        />\n      </Box>\n      \n      {/*\n        Note: Forecast views (24h, week) would be implemented here\n        but are conditionally shown based on selectedTimeframe\n      */}\n      \n    </Paper>\n  );\n};\n\nWeatherDashboard.propTypes = {\n  routeId: PropTypes.string.isRequired,\n  routeData: PropTypes.object\n};\n\nexport default WeatherDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}