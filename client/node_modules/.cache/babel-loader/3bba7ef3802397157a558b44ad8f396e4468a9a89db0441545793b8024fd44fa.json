{"ast":null,"code":"/**\n * Contexte d'authentification pour l'application\n * Fournit des fonctionnalités d'authentification à l'ensemble de l'application\n */import React,{createContext,useState,useEffect,useContext,useCallback}from'react';import{useNavigate}from'react-router-dom';import enhancedAuthClient from'../services/enhancedAuthClient';import AuthErrorHandler from'../components/auth/AuthErrorHandler';// Création du contexte\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);/**\n * Fournisseur du contexte d'authentification\n * @param {Object} props Props du composant\n * @param {React.ReactNode} props.children Enfants du composant\n */export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();// Fonction pour charger le profil utilisateur\nconst loadUserProfile=useCallback(async()=>{try{const userInfo=await enhancedAuthClient.getUserInfo();setCurrentUser(userInfo);return userInfo;}catch(err){console.error('Erreur lors du chargement du profil utilisateur:',err);setCurrentUser(null);return null;}},[]);// Vérifier l'état d'authentification au chargement\nuseEffect(()=>{const checkAuth=async()=>{setLoading(true);try{const isAuthenticated=await enhancedAuthClient.isAuthenticated();if(isAuthenticated){await loadUserProfile();}else{setCurrentUser(null);}}catch(err){console.error('Erreur lors de la vérification de l\\'authentification:',err);setCurrentUser(null);}finally{setLoading(false);}};checkAuth();},[loadUserProfile]);// Gérer les événements d'authentification\nuseEffect(()=>{const handleSessionExpired=()=>{setCurrentUser(null);setError({code:'session_expired',message:'Votre session a expiré. Veuillez vous reconnecter.'});};const handleTokenRevoked=()=>{setCurrentUser(null);setError({code:'token_revoked',message:'Votre session a été révoquée. Veuillez vous reconnecter.'});};const handleAuthError=event=>{setError(event.detail);};// S'abonner aux événements\nwindow.addEventListener('auth:session-expired',handleSessionExpired);window.addEventListener('auth:token-revoked',handleTokenRevoked);window.addEventListener('auth:error',handleAuthError);// Se désabonner à la destruction\nreturn()=>{window.removeEventListener('auth:session-expired',handleSessionExpired);window.removeEventListener('auth:token-revoked',handleTokenRevoked);window.removeEventListener('auth:error',handleAuthError);};},[navigate]);// Fonction de connexion\nconst login=async credentials=>{setLoading(true);try{const user=await enhancedAuthClient.login(credentials);setCurrentUser(user);return user;}catch(err){console.error('Erreur de connexion:',err);setError({code:err.code||'auth_error',message:err.message||'Erreur lors de la connexion'});throw err;}finally{setLoading(false);}};// Fonction de déconnexion\nconst logout=async function(){let revokeAll=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;setLoading(true);try{await enhancedAuthClient.logout(revokeAll);setCurrentUser(null);navigate('/login');}catch(err){console.error('Erreur lors de la déconnexion:',err);}finally{setLoading(false);}};// Fonction pour obtenir un fetch authentifié\nconst getAuthFetch=useCallback(async()=>{try{return await enhancedAuthClient.getAuthenticatedFetch();}catch(err){console.error('Erreur lors de la récupération du fetch authentifié:',err);if(err.code==='no_token'){setCurrentUser(null);}throw err;}},[]);// Fermeture du dialogue d'erreur\nconst handleErrorClose=()=>{setError(null);};// Gestionnaire d'action d'erreur\nconst handleErrorAction=action=>{setError(null);switch(action){case'login':navigate('/login');break;case'manage_devices':navigate('/account/devices');break;default:// Autres actions\nbreak;}};// Valeurs exposées par le contexte\nconst contextValue={currentUser,loading,isAuthenticated:!!currentUser,login,logout,getAuthFetch,loadUserProfile,error};return/*#__PURE__*/_jsxs(AuthContext.Provider,{value:contextValue,children:[children,error&&/*#__PURE__*/_jsx(AuthErrorHandler,{errorCode:error.code,errorMessage:error.message,open:!!error,onClose:handleErrorClose,onAction:handleErrorAction,useSnackbar:error.code==='token_expired'// Utiliser snackbar pour les erreurs moins critiques\n})]});};/**\n * Hook pour utiliser le contexte d'authentification\n * @returns {Object} Contexte d'authentification\n */export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth doit être utilisé à l\\'intérieur d\\'un AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","useNavigate","enhancedAuthClient","AuthErrorHandler","jsx","_jsx","jsxs","_jsxs","AuthContext","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","error","setError","navigate","loadUserProfile","userInfo","getUserInfo","err","console","checkAuth","isAuthenticated","handleSessionExpired","code","message","handleTokenRevoked","handleAuthError","event","detail","window","addEventListener","removeEventListener","login","credentials","user","logout","revokeAll","arguments","length","undefined","getAuthFetch","getAuthenticatedFetch","handleErrorClose","handleErrorAction","action","contextValue","Provider","value","errorCode","errorMessage","open","onClose","onAction","useSnackbar","useAuth","context","Error"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/contexts/AuthContext.js"],"sourcesContent":["/**\n * Contexte d'authentification pour l'application\n * Fournit des fonctionnalités d'authentification à l'ensemble de l'application\n */\n\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport enhancedAuthClient from '../services/enhancedAuthClient';\nimport AuthErrorHandler from '../components/auth/AuthErrorHandler';\n\n// Création du contexte\nconst AuthContext = createContext(null);\n\n/**\n * Fournisseur du contexte d'authentification\n * @param {Object} props Props du composant\n * @param {React.ReactNode} props.children Enfants du composant\n */\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fonction pour charger le profil utilisateur\n  const loadUserProfile = useCallback(async () => {\n    try {\n      const userInfo = await enhancedAuthClient.getUserInfo();\n      setCurrentUser(userInfo);\n      return userInfo;\n    } catch (err) {\n      console.error('Erreur lors du chargement du profil utilisateur:', err);\n      setCurrentUser(null);\n      return null;\n    }\n  }, []);\n\n  // Vérifier l'état d'authentification au chargement\n  useEffect(() => {\n    const checkAuth = async () => {\n      setLoading(true);\n      try {\n        const isAuthenticated = await enhancedAuthClient.isAuthenticated();\n        \n        if (isAuthenticated) {\n          await loadUserProfile();\n        } else {\n          setCurrentUser(null);\n        }\n      } catch (err) {\n        console.error('Erreur lors de la vérification de l\\'authentification:', err);\n        setCurrentUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, [loadUserProfile]);\n\n  // Gérer les événements d'authentification\n  useEffect(() => {\n    const handleSessionExpired = () => {\n      setCurrentUser(null);\n      setError({\n        code: 'session_expired',\n        message: 'Votre session a expiré. Veuillez vous reconnecter.'\n      });\n    };\n\n    const handleTokenRevoked = () => {\n      setCurrentUser(null);\n      setError({\n        code: 'token_revoked',\n        message: 'Votre session a été révoquée. Veuillez vous reconnecter.'\n      });\n    };\n\n    const handleAuthError = (event) => {\n      setError(event.detail);\n    };\n\n    // S'abonner aux événements\n    window.addEventListener('auth:session-expired', handleSessionExpired);\n    window.addEventListener('auth:token-revoked', handleTokenRevoked);\n    window.addEventListener('auth:error', handleAuthError);\n\n    // Se désabonner à la destruction\n    return () => {\n      window.removeEventListener('auth:session-expired', handleSessionExpired);\n      window.removeEventListener('auth:token-revoked', handleTokenRevoked);\n      window.removeEventListener('auth:error', handleAuthError);\n    };\n  }, [navigate]);\n\n  // Fonction de connexion\n  const login = async (credentials) => {\n    setLoading(true);\n    try {\n      const user = await enhancedAuthClient.login(credentials);\n      setCurrentUser(user);\n      return user;\n    } catch (err) {\n      console.error('Erreur de connexion:', err);\n      setError({\n        code: err.code || 'auth_error',\n        message: err.message || 'Erreur lors de la connexion'\n      });\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction de déconnexion\n  const logout = async (revokeAll = false) => {\n    setLoading(true);\n    try {\n      await enhancedAuthClient.logout(revokeAll);\n      setCurrentUser(null);\n      navigate('/login');\n    } catch (err) {\n      console.error('Erreur lors de la déconnexion:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour obtenir un fetch authentifié\n  const getAuthFetch = useCallback(async () => {\n    try {\n      return await enhancedAuthClient.getAuthenticatedFetch();\n    } catch (err) {\n      console.error('Erreur lors de la récupération du fetch authentifié:', err);\n      if (err.code === 'no_token') {\n        setCurrentUser(null);\n      }\n      throw err;\n    }\n  }, []);\n\n  // Fermeture du dialogue d'erreur\n  const handleErrorClose = () => {\n    setError(null);\n  };\n\n  // Gestionnaire d'action d'erreur\n  const handleErrorAction = (action) => {\n    setError(null);\n    \n    switch (action) {\n      case 'login':\n        navigate('/login');\n        break;\n      case 'manage_devices':\n        navigate('/account/devices');\n        break;\n      default:\n        // Autres actions\n        break;\n    }\n  };\n\n  // Valeurs exposées par le contexte\n  const contextValue = {\n    currentUser,\n    loading,\n    isAuthenticated: !!currentUser,\n    login,\n    logout,\n    getAuthFetch,\n    loadUserProfile,\n    error\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n      \n      {/* Gestionnaire d'erreurs d'authentification */}\n      {error && (\n        <AuthErrorHandler\n          errorCode={error.code}\n          errorMessage={error.message}\n          open={!!error}\n          onClose={handleErrorClose}\n          onAction={handleErrorAction}\n          useSnackbar={error.code === 'token_expired'} // Utiliser snackbar pour les erreurs moins critiques\n        />\n      )}\n    </AuthContext.Provider>\n  );\n};\n\n/**\n * Hook pour utiliser le contexte d'authentification\n * @returns {Object} Contexte d'authentification\n */\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth doit être utilisé à l\\'intérieur d\\'un AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"AAAA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,CAAEC,WAAW,KAAQ,OAAO,CAC1F,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,kBAAkB,KAAM,gCAAgC,CAC/D,MAAO,CAAAC,gBAAgB,KAAM,qCAAqC,CAElE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,WAAW,cAAGZ,aAAa,CAAC,IAAI,CAAC,CAEvC;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAa,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAqB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAkB,eAAe,CAAGnB,WAAW,CAAC,SAAY,CAC9C,GAAI,CACF,KAAM,CAAAoB,QAAQ,CAAG,KAAM,CAAAlB,kBAAkB,CAACmB,WAAW,CAAC,CAAC,CACvDR,cAAc,CAACO,QAAQ,CAAC,CACxB,MAAO,CAAAA,QAAQ,CACjB,CAAE,MAAOE,GAAG,CAAE,CACZC,OAAO,CAACP,KAAK,CAAC,kDAAkD,CAAEM,GAAG,CAAC,CACtET,cAAc,CAAC,IAAI,CAAC,CACpB,MAAO,KAAI,CACb,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAf,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0B,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5BT,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAU,eAAe,CAAG,KAAM,CAAAvB,kBAAkB,CAACuB,eAAe,CAAC,CAAC,CAElE,GAAIA,eAAe,CAAE,CACnB,KAAM,CAAAN,eAAe,CAAC,CAAC,CACzB,CAAC,IAAM,CACLN,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CAAE,MAAOS,GAAG,CAAE,CACZC,OAAO,CAACP,KAAK,CAAC,wDAAwD,CAAEM,GAAG,CAAC,CAC5ET,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDS,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACL,eAAe,CAAC,CAAC,CAErB;AACArB,SAAS,CAAC,IAAM,CACd,KAAM,CAAA4B,oBAAoB,CAAGA,CAAA,GAAM,CACjCb,cAAc,CAAC,IAAI,CAAC,CACpBI,QAAQ,CAAC,CACPU,IAAI,CAAE,iBAAiB,CACvBC,OAAO,CAAE,oDACX,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/BhB,cAAc,CAAC,IAAI,CAAC,CACpBI,QAAQ,CAAC,CACPU,IAAI,CAAE,eAAe,CACrBC,OAAO,CAAE,0DACX,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAE,eAAe,CAAIC,KAAK,EAAK,CACjCd,QAAQ,CAACc,KAAK,CAACC,MAAM,CAAC,CACxB,CAAC,CAED;AACAC,MAAM,CAACC,gBAAgB,CAAC,sBAAsB,CAAER,oBAAoB,CAAC,CACrEO,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,CAAEL,kBAAkB,CAAC,CACjEI,MAAM,CAACC,gBAAgB,CAAC,YAAY,CAAEJ,eAAe,CAAC,CAEtD;AACA,MAAO,IAAM,CACXG,MAAM,CAACE,mBAAmB,CAAC,sBAAsB,CAAET,oBAAoB,CAAC,CACxEO,MAAM,CAACE,mBAAmB,CAAC,oBAAoB,CAAEN,kBAAkB,CAAC,CACpEI,MAAM,CAACE,mBAAmB,CAAC,YAAY,CAAEL,eAAe,CAAC,CAC3D,CAAC,CACH,CAAC,CAAE,CAACZ,QAAQ,CAAC,CAAC,CAEd;AACA,KAAM,CAAAkB,KAAK,CAAG,KAAO,CAAAC,WAAW,EAAK,CACnCtB,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAuB,IAAI,CAAG,KAAM,CAAApC,kBAAkB,CAACkC,KAAK,CAACC,WAAW,CAAC,CACxDxB,cAAc,CAACyB,IAAI,CAAC,CACpB,MAAO,CAAAA,IAAI,CACb,CAAE,MAAOhB,GAAG,CAAE,CACZC,OAAO,CAACP,KAAK,CAAC,sBAAsB,CAAEM,GAAG,CAAC,CAC1CL,QAAQ,CAAC,CACPU,IAAI,CAAEL,GAAG,CAACK,IAAI,EAAI,YAAY,CAC9BC,OAAO,CAAEN,GAAG,CAACM,OAAO,EAAI,6BAC1B,CAAC,CAAC,CACF,KAAM,CAAAN,GAAG,CACX,CAAC,OAAS,CACRP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAwB,MAAM,CAAG,cAAAA,CAAA,CAA6B,IAAtB,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACrC1B,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAb,kBAAkB,CAACqC,MAAM,CAACC,SAAS,CAAC,CAC1C3B,cAAc,CAAC,IAAI,CAAC,CACpBK,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAE,MAAOI,GAAG,CAAE,CACZC,OAAO,CAACP,KAAK,CAAC,gCAAgC,CAAEM,GAAG,CAAC,CACtD,CAAC,OAAS,CACRP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAA6B,YAAY,CAAG5C,WAAW,CAAC,SAAY,CAC3C,GAAI,CACF,MAAO,MAAM,CAAAE,kBAAkB,CAAC2C,qBAAqB,CAAC,CAAC,CACzD,CAAE,MAAOvB,GAAG,CAAE,CACZC,OAAO,CAACP,KAAK,CAAC,sDAAsD,CAAEM,GAAG,CAAC,CAC1E,GAAIA,GAAG,CAACK,IAAI,GAAK,UAAU,CAAE,CAC3Bd,cAAc,CAAC,IAAI,CAAC,CACtB,CACA,KAAM,CAAAS,GAAG,CACX,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAwB,gBAAgB,CAAGA,CAAA,GAAM,CAC7B7B,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAED;AACA,KAAM,CAAA8B,iBAAiB,CAAIC,MAAM,EAAK,CACpC/B,QAAQ,CAAC,IAAI,CAAC,CAEd,OAAQ+B,MAAM,EACZ,IAAK,OAAO,CACV9B,QAAQ,CAAC,QAAQ,CAAC,CAClB,MACF,IAAK,gBAAgB,CACnBA,QAAQ,CAAC,kBAAkB,CAAC,CAC5B,MACF,QACE;AACA,MACJ,CACF,CAAC,CAED;AACA,KAAM,CAAA+B,YAAY,CAAG,CACnBrC,WAAW,CACXE,OAAO,CACPW,eAAe,CAAE,CAAC,CAACb,WAAW,CAC9BwB,KAAK,CACLG,MAAM,CACNK,YAAY,CACZzB,eAAe,CACfH,KACF,CAAC,CAED,mBACET,KAAA,CAACC,WAAW,CAAC0C,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAtC,QAAA,EACvCA,QAAQ,CAGRK,KAAK,eACJX,IAAA,CAACF,gBAAgB,EACfiD,SAAS,CAAEpC,KAAK,CAACW,IAAK,CACtB0B,YAAY,CAAErC,KAAK,CAACY,OAAQ,CAC5B0B,IAAI,CAAE,CAAC,CAACtC,KAAM,CACduC,OAAO,CAAET,gBAAiB,CAC1BU,QAAQ,CAAET,iBAAkB,CAC5BU,WAAW,CAAEzC,KAAK,CAACW,IAAI,GAAK,eAAiB;AAAA,CAC9C,CACF,EACmB,CAAC,CAE3B,CAAC,CAED;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAA+B,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAG5D,UAAU,CAACS,WAAW,CAAC,CACvC,GAAI,CAACmD,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6DAA6D,CAAC,CAChF,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,cAAe,CAAAnD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}