{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';// Création du contexte d'authentification\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);// Provider qui enveloppera l'application\nexport const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);const[userProfile,setUserProfile]=useState(null);useEffect(()=>{// Simuler la récupération du user depuis le stockage local ou l'API\nconst checkUserAuth=async()=>{try{const storedUser=localStorage.getItem('user');if(storedUser){const user=JSON.parse(storedUser);setCurrentUser(user);// Récupérer le profil utilisateur\nawait fetchUserProfile(user.id);}}catch(error){console.error(\"Erreur lors de la vérification de l'authentification:\",error);}finally{setLoading(false);}};checkUserAuth();},[]);// Récupérer le profil utilisateur depuis l'API\nconst fetchUserProfile=async userId=>{try{// Pour la demo, créons un profil simulé\nconst defaultProfile={id:userId,firstName:\"Utilisateur\",lastName:\"Demo\",level:\"intermédiaire\",ftp:250,weight:75,height:180,goals:[\"amélioration FTP\",\"grimper cols\"],preferences:{theme:\"standard\",notifications:true,units:\"metric\"},trainingStats:{totalDistance:2500,totalElevation:35000,totalRides:45,totalTime:120}};setUserProfile(defaultProfile);return defaultProfile;}catch(error){console.error(\"Erreur lors de la récupération du profil utilisateur:\",error);return null;}};// Fonction de connexion\nconst login=async(email,password)=>{try{// En démo, on utilise un utilisateur fictif\nconst demoUser={id:\"user_123456\",email:email,name:\"Cycliste Demo\",authToken:\"jwt_token_demo_123456789\"};setCurrentUser(demoUser);localStorage.setItem('user',JSON.stringify(demoUser));// Récupérer le profil utilisateur\nawait fetchUserProfile(demoUser.id);return{success:true,user:demoUser};}catch(error){console.error(\"Erreur lors de la connexion:\",error);return{success:false,error:error.message};}};// Fonction de déconnexion\nconst logout=()=>{setCurrentUser(null);setUserProfile(null);localStorage.removeItem('user');};// Enregistrement d'un nouvel utilisateur\nconst register=async(email,password,name)=>{try{// En démo, on utilise un utilisateur fictif\nconst newUser={id:\"user_\"+Date.now(),email,name,authToken:\"jwt_token_new_\"+Date.now()};setCurrentUser(newUser);localStorage.setItem('user',JSON.stringify(newUser));// Créer un profil utilisateur par défaut\nconst defaultProfile={id:newUser.id,firstName:name.split(' ')[0],lastName:name.split(' ').slice(1).join(' '),level:\"débutant\",ftp:200,weight:75,height:175,goals:[\"amélioration endurance\"],preferences:{theme:\"standard\",notifications:true,units:\"metric\"}};setUserProfile(defaultProfile);return{success:true,user:newUser};}catch(error){console.error(\"Erreur lors de l'enregistrement:\",error);return{success:false,error:error.message};}};// Mise à jour du profil utilisateur\nconst updateUserProfile=async profileData=>{try{const updatedProfile={...userProfile,...profileData};setUserProfile(updatedProfile);// Normalement on ferait un appel API ici\nconsole.log(\"Profil utilisateur mis à jour:\",updatedProfile);return{success:true,profile:updatedProfile};}catch(error){console.error(\"Erreur lors de la mise à jour du profil:\",error);return{success:false,error:error.message};}};// Valeurs exposées par le contexte\nconst value={currentUser,userProfile,loading,login,logout,register,updateUserProfile,fetchUserProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});};// Hook personnalisé pour utiliser le contexte d'authentification\nexport const useAuth=()=>{return useContext(AuthContext);};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","userProfile","setUserProfile","checkUserAuth","storedUser","localStorage","getItem","user","JSON","parse","fetchUserProfile","id","error","console","userId","defaultProfile","firstName","lastName","level","ftp","weight","height","goals","preferences","theme","notifications","units","trainingStats","totalDistance","totalElevation","totalRides","totalTime","login","email","password","demoUser","name","authToken","setItem","stringify","success","message","logout","removeItem","register","newUser","Date","now","split","slice","join","updateUserProfile","profileData","updatedProfile","log","profile","value","Provider","useAuth"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Création du contexte d'authentification\nconst AuthContext = createContext(null);\n\n// Provider qui enveloppera l'application\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userProfile, setUserProfile] = useState(null);\n\n  useEffect(() => {\n    // Simuler la récupération du user depuis le stockage local ou l'API\n    const checkUserAuth = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const user = JSON.parse(storedUser);\n          setCurrentUser(user);\n          \n          // Récupérer le profil utilisateur\n          await fetchUserProfile(user.id);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la vérification de l'authentification:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkUserAuth();\n  }, []);\n\n  // Récupérer le profil utilisateur depuis l'API\n  const fetchUserProfile = async (userId) => {\n    try {\n      // Pour la demo, créons un profil simulé\n      const defaultProfile = {\n        id: userId,\n        firstName: \"Utilisateur\",\n        lastName: \"Demo\",\n        level: \"intermédiaire\",\n        ftp: 250,\n        weight: 75,\n        height: 180,\n        goals: [\"amélioration FTP\", \"grimper cols\"],\n        preferences: {\n          theme: \"standard\",\n          notifications: true,\n          units: \"metric\"\n        },\n        trainingStats: {\n          totalDistance: 2500,\n          totalElevation: 35000,\n          totalRides: 45,\n          totalTime: 120\n        }\n      };\n      \n      setUserProfile(defaultProfile);\n      return defaultProfile;\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération du profil utilisateur:\", error);\n      return null;\n    }\n  };\n\n  // Fonction de connexion\n  const login = async (email, password) => {\n    try {\n      // En démo, on utilise un utilisateur fictif\n      const demoUser = {\n        id: \"user_123456\",\n        email: email,\n        name: \"Cycliste Demo\",\n        authToken: \"jwt_token_demo_123456789\"\n      };\n\n      setCurrentUser(demoUser);\n      localStorage.setItem('user', JSON.stringify(demoUser));\n      \n      // Récupérer le profil utilisateur\n      await fetchUserProfile(demoUser.id);\n      \n      return { success: true, user: demoUser };\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion:\", error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  // Fonction de déconnexion\n  const logout = () => {\n    setCurrentUser(null);\n    setUserProfile(null);\n    localStorage.removeItem('user');\n  };\n\n  // Enregistrement d'un nouvel utilisateur\n  const register = async (email, password, name) => {\n    try {\n      // En démo, on utilise un utilisateur fictif\n      const newUser = {\n        id: \"user_\" + Date.now(),\n        email,\n        name,\n        authToken: \"jwt_token_new_\" + Date.now()\n      };\n\n      setCurrentUser(newUser);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      \n      // Créer un profil utilisateur par défaut\n      const defaultProfile = {\n        id: newUser.id,\n        firstName: name.split(' ')[0],\n        lastName: name.split(' ').slice(1).join(' '),\n        level: \"débutant\",\n        ftp: 200,\n        weight: 75,\n        height: 175,\n        goals: [\"amélioration endurance\"],\n        preferences: {\n          theme: \"standard\",\n          notifications: true,\n          units: \"metric\"\n        }\n      };\n      \n      setUserProfile(defaultProfile);\n      return { success: true, user: newUser };\n    } catch (error) {\n      console.error(\"Erreur lors de l'enregistrement:\", error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  // Mise à jour du profil utilisateur\n  const updateUserProfile = async (profileData) => {\n    try {\n      const updatedProfile = { ...userProfile, ...profileData };\n      setUserProfile(updatedProfile);\n      \n      // Normalement on ferait un appel API ici\n      console.log(\"Profil utilisateur mis à jour:\", updatedProfile);\n      \n      return { success: true, profile: updatedProfile };\n    } catch (error) {\n      console.error(\"Erreur lors de la mise à jour du profil:\", error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  // Valeurs exposées par le contexte\n  const value = {\n    currentUser,\n    userProfile,\n    loading,\n    login,\n    logout,\n    register,\n    updateUserProfile,\n    fetchUserProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook personnalisé pour utiliser le contexte d'authentification\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}