{"ast":null,"code":"/**\n * Service de gestion des Feature Flags\n * Permet l'activation/désactivation de fonctionnalités sans redéploiement\n * Supporte plusieurs sources de configuration (local, API, localStorage)\n */import axios from'axios';import{useEffect,useState,createContext,useContext}from'react';// Valeurs par défaut des feature flags (utilisées en fallback)\nimport{jsx as _jsx}from\"react/jsx-runtime\";const DEFAULT_FLAGS={// Fonctionnalités liées à l'interface utilisateur\nenableDarkMode:false,showBetaFeatures:false,useNewNavigation:false,// Fonctionnalités liées aux défis\nenableSevenMajorsChallenge:true,enableMonthlyChallenge:true,enableSocialSharing:true,// Fonctionnalités liées à l'API et aux performances\nenableApiCaching:true,enablePerformanceMonitoring:true,// Fonctionnalités expérimentales\nenable3DColVisualization:true,enableProgressiveLoading3D:true,// Nouveau flag pour le chargement progressif des visualisations 3D\nenableAIRecommendations:false,enableRealTimeWeather:true,// Fonctionnalités liées au cache et à l'optimisation\nenableAdvancedCaching:true,// Nouveau flag pour le système de cache avancé\nenableOfflineMode:false,// Nouveau flag pour le mode hors ligne\nenableLazyLoadingImages:true,// Nouveau flag pour le chargement paresseux des images\n// Fonctionnalités administratives\nenableAdvancedMetrics:true,enableBulkOperations:false,// Fonctionnalités liées à la nutrition\nenableNutritionPlanner:true,// Nouveau flag pour le planificateur de nutrition\nenableMealSuggestions:true,// Nouveau flag pour les suggestions de repas\nenableColSpecificNutrition:true,// Nouveau flag pour la nutrition spécifique aux cols\n// Fonctionnalités liées à l'entraînement\nenableTrainingPrograms:true,// Nouveau flag pour les programmes d'entraînement\nenablePerformanceAnalytics:true,// Nouveau flag pour les analyses de performance\nenableColSpecificTraining:true,// Nouveau flag pour l'entraînement spécifique aux cols\n// Fonctionnalités liées à la montagne\nenableMountainModule:true,// Nouveau flag pour le module montagne\nenableRegionalTrainingPlans:true// Nouveau flag pour les plans d'entraînement par région\n};// Types d'environnement supportés\nconst ENVIRONMENTS={DEVELOPMENT:'development',STAGING:'staging',PRODUCTION:'production'};// Contexte React pour fournir les flags à travers l'application\nconst FeatureFlagsContext=/*#__PURE__*/createContext({flags:DEFAULT_FLAGS,isLoading:true,error:null,updateFlag:()=>{},refreshFlags:()=>{},isEnabled:()=>false,// Nouvelle méthode pour vérifier plus facilement un flag\ngetVariant:()=>null// Nouvelle méthode pour les tests A/B\n});/**\n * Classe principale de gestion des feature flags\n */class FeatureFlagsService{constructor(){this.flags={...DEFAULT_FLAGS};this.subscribers=[];this.isInitialized=false;this.lastFetchTime=0;this.cacheDuration=5*60*1000;// 5 minutes en ms\nthis.environment=process.env.NODE_ENV||ENVIRONMENTS.DEVELOPMENT;this.userSegment=null;this.flagsHistory={};// Historique des changements de flags\n}/**\n   * Initialise le service et charge les flags depuis toutes les sources\n   * @returns {Promise<Object>} Les feature flags\n   */async initialize(){if(this.isInitialized){return this.flags;}try{// Déterminer le segment utilisateur pour les flags ciblés\nthis.determineUserSegment();// Chargement en cascade avec priorité (localStorage > API > defaults)\nawait this.loadFlagsFromLocalStorage();await this.fetchFlagsFromApi();// Vérifier les flags qui doivent être activés/désactivés par environnement\nthis.applyEnvironmentOverrides();// Initialiser l'historique des flags\nObject.keys(this.flags).forEach(key=>{this.flagsHistory[key]=[{value:this.flags[key],timestamp:Date.now(),source:'initialization'}];});this.isInitialized=true;this.notifySubscribers();return this.flags;}catch(error){console.error('Erreur lors de l\\'initialisation des feature flags:',error);// En cas d'erreur, utiliser les flags par défaut\nreturn this.flags;}}/**\n   * Détermine le segment utilisateur pour une expérience personnalisée\n   */determineUserSegment(){try{// Récupérer les informations utilisateur du localStorage\nconst userInfo=JSON.parse(localStorage.getItem('userInfo')||'{}');// On peut déterminer un segment basé sur différents critères\nif(userInfo.role==='admin'){this.userSegment='admin';}else if(userInfo.visits&&userInfo.visits>10){this.userSegment='power_user';}else if(userInfo.registeredAt){const registrationDate=new Date(userInfo.registeredAt);const oneMonthAgo=new Date();oneMonthAgo.setMonth(oneMonthAgo.getMonth()-1);if(registrationDate>oneMonthAgo){this.userSegment='new_user';}else{this.userSegment='regular_user';}}else{this.userSegment='anonymous';}}catch(error){console.error('Erreur lors de la détermination du segment utilisateur:',error);this.userSegment='unknown';}}/**\n   * Applique les valeurs par défaut spécifiques à l'environnement\n   */applyEnvironmentOverrides(){// Désactiver certaines fonctionnalités en production pour éviter les problèmes\nif(this.environment===ENVIRONMENTS.PRODUCTION){// En production, désactiver les fonctionnalités expérimentales par défaut\nconst productionOverrides={showBetaFeatures:false,enableAIRecommendations:false};// Mais ne pas écraser si explicitement activé via API ou localStorage\nObject.keys(productionOverrides).forEach(key=>{// Vérifier si la valeur a été définie explicitement par l'API ou localStorage\nif(!this.flagsHistory[key]||this.flagsHistory[key].length===0){this.flags[key]=productionOverrides[key];}});}// Activer plus de fonctionnalités en développement pour les tests\nif(this.environment===ENVIRONMENTS.DEVELOPMENT){const devOverrides={showBetaFeatures:true,enablePerformanceMonitoring:true};Object.assign(this.flags,devOverrides);}}/**\n   * Charge les flags depuis le localStorage\n   */async loadFlagsFromLocalStorage(){try{const storedFlags=localStorage.getItem('featureFlags');if(storedFlags){const parsedFlags=JSON.parse(storedFlags);this.flags={...this.flags,...parsedFlags};// Enregistrer la source dans l'historique\nObject.keys(parsedFlags).forEach(key=>{if(!this.flagsHistory[key])this.flagsHistory[key]=[];this.flagsHistory[key].push({value:parsedFlags[key],timestamp:Date.now(),source:'localStorage'});});}}catch(error){console.error('Erreur lors du chargement des feature flags du localStorage:',error);}}/**\n   * Récupère les flags depuis l'API\n   * @param {boolean} force Force le rafraîchissement même si le cache est valide\n   */async fetchFlagsFromApi(){let force=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const now=Date.now();// Vérifier si nous devons rafraîchir le cache\nif(!force&&now-this.lastFetchTime<this.cacheDuration){return this.flags;}try{const response=await axios.get('/api/feature-flags',{params:{segment:this.userSegment,environment:this.environment}});if(response.data&&response.data.flags){// Enregistrer les anciennes valeurs pour le tracking des changements\nconst oldFlags={...this.flags};// Mettre à jour les flags\nthis.flags={...this.flags,...response.data.flags};this.lastFetchTime=now;// Stocker dans localStorage pour utilisation offline\nlocalStorage.setItem('featureFlags',JSON.stringify(this.flags));// Mettre à jour l'historique des changements\nObject.keys(response.data.flags).forEach(key=>{if(!this.flagsHistory[key])this.flagsHistory[key]=[];this.flagsHistory[key].push({value:response.data.flags[key],previousValue:oldFlags[key],timestamp:now,source:'api'});});this.notifySubscribers();this.logFlagChanges(oldFlags,this.flags);}}catch(error){console.error('Erreur lors de la récupération des feature flags depuis l\\'API:',error);// En cas d'erreur, continuer avec les flags actuels\n}return this.flags;}/**\n   * Journalise les changements de flags pour débogage et analyses\n   * @param {Object} oldFlags Anciens flags\n   * @param {Object} newFlags Nouveaux flags\n   */logFlagChanges(oldFlags,newFlags){const changes=[];Object.keys(newFlags).forEach(key=>{if(oldFlags[key]!==newFlags[key]){changes.push({flag:key,oldValue:oldFlags[key],newValue:newFlags[key],timestamp:Date.now()});}});if(changes.length>0){console.info('Feature Flags mis à jour:',changes);// En développement, afficher une notification visuelle\nif(this.environment===ENVIRONMENTS.DEVELOPMENT&&typeof window!=='undefined'){// Créer une notification simple pour les développeurs\nthis.showDevNotification(`${changes.length} feature flags mis à jour`);}}}/**\n   * Affiche une notification pour les développeurs\n   * @param {string} message Message à afficher\n   */showDevNotification(message){if(typeof document==='undefined')return;const notificationId='feature-flag-notification';let notification=document.getElementById(notificationId);// Créer l'élément s'il n'existe pas\nif(!notification){notification=document.createElement('div');notification.id=notificationId;notification.style.position='fixed';notification.style.bottom='20px';notification.style.right='20px';notification.style.padding='10px 15px';notification.style.backgroundColor='#333';notification.style.color='white';notification.style.borderRadius='4px';notification.style.zIndex='9999';notification.style.opacity='0';notification.style.transition='opacity 0.3s ease-in-out';document.body.appendChild(notification);}// Mettre à jour le contenu\nnotification.textContent=message;notification.style.opacity='1';// Faire disparaître après 3 secondes\nsetTimeout(()=>{notification.style.opacity='0';setTimeout(()=>{if(notification.parentNode){notification.parentNode.removeChild(notification);}},300);},3000);}/**\n   * Met à jour un ou plusieurs feature flags\n   * @param {Object} flagUpdates Objet contenant les flags à mettre à jour\n   * @param {boolean} persistToServer Si vrai, envoie les modifications au serveur\n   * @returns {Promise<Object>} Les feature flags mis à jour\n   */async updateFlags(flagUpdates){let persistToServer=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;// Enregistrer les anciennes valeurs\nconst oldFlags={...this.flags};// Mettre à jour les flags localement\nthis.flags={...this.flags,...flagUpdates};// Stocker dans localStorage\nlocalStorage.setItem('featureFlags',JSON.stringify(this.flags));// Mettre à jour l'historique\nObject.keys(flagUpdates).forEach(key=>{if(!this.flagsHistory[key])this.flagsHistory[key]=[];this.flagsHistory[key].push({value:flagUpdates[key],previousValue:oldFlags[key],timestamp:Date.now(),source:'manual_update'});});// Journaliser les changements\nthis.logFlagChanges(oldFlags,this.flags);// Notifier les abonnés\nthis.notifySubscribers();// Persister sur le serveur si demandé\nif(persistToServer){try{await axios.post('/api/feature-flags',{flags:flagUpdates,segment:this.userSegment,environment:this.environment});}catch(error){console.error('Erreur lors de la mise à jour des feature flags sur le serveur:',error);}}return this.flags;}/**\n   * Vérifie si un feature flag est activé\n   * @param {string} flagName Nom du flag à vérifier\n   * @returns {boolean} Statut du flag (true = activé)\n   */isEnabled(flagName){// Si le flag n'existe pas, retourner false\nif(!(flagName in this.flags)){console.warn(`Feature flag \"${flagName}\" non trouvé`);return false;}return this.flags[flagName]===true;}/**\n   * Récupère la valeur d'un flag pour les tests A/B ou les flags multi-valeurs\n   * @param {string} flagName Nom du flag\n   * @param {any} defaultValue Valeur par défaut si le flag n'existe pas\n   * @returns {any} Valeur du flag ou valeur par défaut\n   */getVariant(flagName){let defaultValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!(flagName in this.flags)){console.warn(`Feature flag variant \"${flagName}\" non trouvé`);return defaultValue;}return this.flags[flagName];}/**\n   * S'abonne aux changements de feature flags\n   * @param {Function} callback Fonction appelée lors d'un changement\n   * @returns {Function} Fonction pour se désabonner\n   */subscribe(callback){this.subscribers.push(callback);// Retourner une fonction de nettoyage pour le désabonnement\nreturn()=>{this.subscribers=this.subscribers.filter(sub=>sub!==callback);};}/**\n   * Notifie tous les abonnés d'un changement de flags\n   */notifySubscribers(){this.subscribers.forEach(callback=>{try{callback(this.flags);}catch(error){console.error('Erreur lors de la notification d\\'un abonné aux feature flags:',error);}});}/**\n   * Récupère l'historique des changements pour un flag\n   * @param {string} flagName Nom du flag\n   * @returns {Array} Historique des changements\n   */getFlagHistory(flagName){return this.flagsHistory[flagName]||[];}/**\n   * Définit la durée du cache\n   * @param {number} durationMs Durée en milliseconds\n   */setCacheDuration(durationMs){this.cacheDuration=durationMs;}}// Créer une instance singleton du service\nconst featureFlagsService=new FeatureFlagsService();/**\n * Hook React pour utiliser les feature flags dans les composants\n * @returns {Object} Objet contenant les flags et fonctions utilitaires\n */export const useFeatureFlags=()=>{const context=useContext(FeatureFlagsContext);if(!context){throw new Error('useFeatureFlags doit être utilisé à l\\'intérieur d\\'un FeatureFlagsProvider');}return context;};/**\n * Fournisseur de contexte pour les feature flags\n * @param {Object} props Props du composant\n * @param {React.ReactNode} props.children Enfants du composant\n */export const FeatureFlagsProvider=_ref=>{let{children}=_ref;const[flags,setFlags]=useState(DEFAULT_FLAGS);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);// Charger les flags au montage du composant\nuseEffect(()=>{const initializeFlags=async()=>{try{setIsLoading(true);await featureFlagsService.initialize();setFlags({...featureFlagsService.flags});setError(null);}catch(err){setError(err.message||'Erreur lors du chargement des feature flags');}finally{setIsLoading(false);}};initializeFlags();// S'abonner aux changements\nconst unsubscribe=featureFlagsService.subscribe(updatedFlags=>{setFlags({...updatedFlags});});// Se désabonner lors du démontage\nreturn unsubscribe;},[]);// Fonction pour mettre à jour un flag\nconst updateFlag=async function(flagName,value){let persistToServer=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;try{await featureFlagsService.updateFlags({[flagName]:value},persistToServer);}catch(err){setError(err.message||'Erreur lors de la mise à jour du feature flag');}};// Fonction pour rafraîchir tous les flags\nconst refreshFlags=async()=>{try{setIsLoading(true);await featureFlagsService.fetchFlagsFromApi(true);setFlags({...featureFlagsService.flags});setError(null);}catch(err){setError(err.message||'Erreur lors du rafraîchissement des feature flags');}finally{setIsLoading(false);}};// Fonction pour vérifier si un flag est activé (raccourci)\nconst isEnabled=flagName=>{return featureFlagsService.isEnabled(flagName);};// Fonction pour récupérer la valeur d'un flag variant\nconst getVariant=function(flagName){let defaultValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return featureFlagsService.getVariant(flagName,defaultValue);};const value={flags,isLoading,error,updateFlag,refreshFlags,isEnabled,getVariant};return/*#__PURE__*/_jsx(FeatureFlagsContext.Provider,{value:value,children:children});};// Exporter le service pour une utilisation directe si nécessaire\nexport default featureFlagsService;","map":{"version":3,"names":["axios","useEffect","useState","createContext","useContext","jsx","_jsx","DEFAULT_FLAGS","enableDarkMode","showBetaFeatures","useNewNavigation","enableSevenMajorsChallenge","enableMonthlyChallenge","enableSocialSharing","enableApiCaching","enablePerformanceMonitoring","enable3DColVisualization","enableProgressiveLoading3D","enableAIRecommendations","enableRealTimeWeather","enableAdvancedCaching","enableOfflineMode","enableLazyLoadingImages","enableAdvancedMetrics","enableBulkOperations","enableNutritionPlanner","enableMealSuggestions","enableColSpecificNutrition","enableTrainingPrograms","enablePerformanceAnalytics","enableColSpecificTraining","enableMountainModule","enableRegionalTrainingPlans","ENVIRONMENTS","DEVELOPMENT","STAGING","PRODUCTION","FeatureFlagsContext","flags","isLoading","error","updateFlag","refreshFlags","isEnabled","getVariant","FeatureFlagsService","constructor","subscribers","isInitialized","lastFetchTime","cacheDuration","environment","process","env","NODE_ENV","userSegment","flagsHistory","initialize","determineUserSegment","loadFlagsFromLocalStorage","fetchFlagsFromApi","applyEnvironmentOverrides","Object","keys","forEach","key","value","timestamp","Date","now","source","notifySubscribers","console","userInfo","JSON","parse","localStorage","getItem","role","visits","registeredAt","registrationDate","oneMonthAgo","setMonth","getMonth","productionOverrides","length","devOverrides","assign","storedFlags","parsedFlags","push","force","arguments","undefined","response","get","params","segment","data","oldFlags","setItem","stringify","previousValue","logFlagChanges","newFlags","changes","flag","oldValue","newValue","info","window","showDevNotification","message","document","notificationId","notification","getElementById","createElement","id","style","position","bottom","right","padding","backgroundColor","color","borderRadius","zIndex","opacity","transition","body","appendChild","textContent","setTimeout","parentNode","removeChild","updateFlags","flagUpdates","persistToServer","post","flagName","warn","defaultValue","subscribe","callback","filter","sub","getFlagHistory","setCacheDuration","durationMs","featureFlagsService","useFeatureFlags","context","Error","FeatureFlagsProvider","_ref","children","setFlags","setIsLoading","setError","initializeFlags","err","unsubscribe","updatedFlags","Provider"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/services/featureFlags.js"],"sourcesContent":["/**\n * Service de gestion des Feature Flags\n * Permet l'activation/désactivation de fonctionnalités sans redéploiement\n * Supporte plusieurs sources de configuration (local, API, localStorage)\n */\nimport axios from 'axios';\nimport { useEffect, useState, createContext, useContext } from 'react';\n\n// Valeurs par défaut des feature flags (utilisées en fallback)\nconst DEFAULT_FLAGS = {\n  // Fonctionnalités liées à l'interface utilisateur\n  enableDarkMode: false,\n  showBetaFeatures: false,\n  useNewNavigation: false,\n  \n  // Fonctionnalités liées aux défis\n  enableSevenMajorsChallenge: true,\n  enableMonthlyChallenge: true,\n  enableSocialSharing: true,\n  \n  // Fonctionnalités liées à l'API et aux performances\n  enableApiCaching: true,\n  enablePerformanceMonitoring: true,\n  \n  // Fonctionnalités expérimentales\n  enable3DColVisualization: true,\n  enableProgressiveLoading3D: true,  // Nouveau flag pour le chargement progressif des visualisations 3D\n  enableAIRecommendations: false,\n  enableRealTimeWeather: true,\n  \n  // Fonctionnalités liées au cache et à l'optimisation\n  enableAdvancedCaching: true,      // Nouveau flag pour le système de cache avancé\n  enableOfflineMode: false,         // Nouveau flag pour le mode hors ligne\n  enableLazyLoadingImages: true,    // Nouveau flag pour le chargement paresseux des images\n  \n  // Fonctionnalités administratives\n  enableAdvancedMetrics: true,\n  enableBulkOperations: false,\n  \n  // Fonctionnalités liées à la nutrition\n  enableNutritionPlanner: true,     // Nouveau flag pour le planificateur de nutrition\n  enableMealSuggestions: true,      // Nouveau flag pour les suggestions de repas\n  enableColSpecificNutrition: true, // Nouveau flag pour la nutrition spécifique aux cols\n  \n  // Fonctionnalités liées à l'entraînement\n  enableTrainingPrograms: true,     // Nouveau flag pour les programmes d'entraînement\n  enablePerformanceAnalytics: true, // Nouveau flag pour les analyses de performance\n  enableColSpecificTraining: true,  // Nouveau flag pour l'entraînement spécifique aux cols\n  \n  // Fonctionnalités liées à la montagne\n  enableMountainModule: true,       // Nouveau flag pour le module montagne\n  enableRegionalTrainingPlans: true // Nouveau flag pour les plans d'entraînement par région\n};\n\n// Types d'environnement supportés\nconst ENVIRONMENTS = {\n  DEVELOPMENT: 'development',\n  STAGING: 'staging',\n  PRODUCTION: 'production'\n};\n\n// Contexte React pour fournir les flags à travers l'application\nconst FeatureFlagsContext = createContext({\n  flags: DEFAULT_FLAGS,\n  isLoading: true,\n  error: null,\n  updateFlag: () => {},\n  refreshFlags: () => {},\n  isEnabled: () => false,     // Nouvelle méthode pour vérifier plus facilement un flag\n  getVariant: () => null      // Nouvelle méthode pour les tests A/B\n});\n\n/**\n * Classe principale de gestion des feature flags\n */\nclass FeatureFlagsService {\n  constructor() {\n    this.flags = { ...DEFAULT_FLAGS };\n    this.subscribers = [];\n    this.isInitialized = false;\n    this.lastFetchTime = 0;\n    this.cacheDuration = 5 * 60 * 1000; // 5 minutes en ms\n    this.environment = process.env.NODE_ENV || ENVIRONMENTS.DEVELOPMENT;\n    this.userSegment = null;\n    this.flagsHistory = {}; // Historique des changements de flags\n  }\n\n  /**\n   * Initialise le service et charge les flags depuis toutes les sources\n   * @returns {Promise<Object>} Les feature flags\n   */\n  async initialize() {\n    if (this.isInitialized) {\n      return this.flags;\n    }\n\n    try {\n      // Déterminer le segment utilisateur pour les flags ciblés\n      this.determineUserSegment();\n      \n      // Chargement en cascade avec priorité (localStorage > API > defaults)\n      await this.loadFlagsFromLocalStorage();\n      await this.fetchFlagsFromApi();\n      \n      // Vérifier les flags qui doivent être activés/désactivés par environnement\n      this.applyEnvironmentOverrides();\n      \n      // Initialiser l'historique des flags\n      Object.keys(this.flags).forEach(key => {\n        this.flagsHistory[key] = [{\n          value: this.flags[key],\n          timestamp: Date.now(),\n          source: 'initialization'\n        }];\n      });\n      \n      this.isInitialized = true;\n      this.notifySubscribers();\n      \n      return this.flags;\n    } catch (error) {\n      console.error('Erreur lors de l\\'initialisation des feature flags:', error);\n      // En cas d'erreur, utiliser les flags par défaut\n      return this.flags;\n    }\n  }\n\n  /**\n   * Détermine le segment utilisateur pour une expérience personnalisée\n   */\n  determineUserSegment() {\n    try {\n      // Récupérer les informations utilisateur du localStorage\n      const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n      \n      // On peut déterminer un segment basé sur différents critères\n      if (userInfo.role === 'admin') {\n        this.userSegment = 'admin';\n      } else if (userInfo.visits && userInfo.visits > 10) {\n        this.userSegment = 'power_user';\n      } else if (userInfo.registeredAt) {\n        const registrationDate = new Date(userInfo.registeredAt);\n        const oneMonthAgo = new Date();\n        oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);\n        \n        if (registrationDate > oneMonthAgo) {\n          this.userSegment = 'new_user';\n        } else {\n          this.userSegment = 'regular_user';\n        }\n      } else {\n        this.userSegment = 'anonymous';\n      }\n    } catch (error) {\n      console.error('Erreur lors de la détermination du segment utilisateur:', error);\n      this.userSegment = 'unknown';\n    }\n  }\n\n  /**\n   * Applique les valeurs par défaut spécifiques à l'environnement\n   */\n  applyEnvironmentOverrides() {\n    // Désactiver certaines fonctionnalités en production pour éviter les problèmes\n    if (this.environment === ENVIRONMENTS.PRODUCTION) {\n      // En production, désactiver les fonctionnalités expérimentales par défaut\n      const productionOverrides = {\n        showBetaFeatures: false,\n        enableAIRecommendations: false\n      };\n      \n      // Mais ne pas écraser si explicitement activé via API ou localStorage\n      Object.keys(productionOverrides).forEach(key => {\n        // Vérifier si la valeur a été définie explicitement par l'API ou localStorage\n        if (!this.flagsHistory[key] || this.flagsHistory[key].length === 0) {\n          this.flags[key] = productionOverrides[key];\n        }\n      });\n    }\n    \n    // Activer plus de fonctionnalités en développement pour les tests\n    if (this.environment === ENVIRONMENTS.DEVELOPMENT) {\n      const devOverrides = {\n        showBetaFeatures: true,\n        enablePerformanceMonitoring: true\n      };\n      \n      Object.assign(this.flags, devOverrides);\n    }\n  }\n\n  /**\n   * Charge les flags depuis le localStorage\n   */\n  async loadFlagsFromLocalStorage() {\n    try {\n      const storedFlags = localStorage.getItem('featureFlags');\n      if (storedFlags) {\n        const parsedFlags = JSON.parse(storedFlags);\n        this.flags = { ...this.flags, ...parsedFlags };\n        \n        // Enregistrer la source dans l'historique\n        Object.keys(parsedFlags).forEach(key => {\n          if (!this.flagsHistory[key]) this.flagsHistory[key] = [];\n          this.flagsHistory[key].push({\n            value: parsedFlags[key],\n            timestamp: Date.now(),\n            source: 'localStorage'\n          });\n        });\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des feature flags du localStorage:', error);\n    }\n  }\n\n  /**\n   * Récupère les flags depuis l'API\n   * @param {boolean} force Force le rafraîchissement même si le cache est valide\n   */\n  async fetchFlagsFromApi(force = false) {\n    const now = Date.now();\n    \n    // Vérifier si nous devons rafraîchir le cache\n    if (!force && (now - this.lastFetchTime) < this.cacheDuration) {\n      return this.flags;\n    }\n    \n    try {\n      const response = await axios.get('/api/feature-flags', {\n        params: {\n          segment: this.userSegment,\n          environment: this.environment\n        }\n      });\n      \n      if (response.data && response.data.flags) {\n        // Enregistrer les anciennes valeurs pour le tracking des changements\n        const oldFlags = { ...this.flags };\n        \n        // Mettre à jour les flags\n        this.flags = { ...this.flags, ...response.data.flags };\n        this.lastFetchTime = now;\n        \n        // Stocker dans localStorage pour utilisation offline\n        localStorage.setItem('featureFlags', JSON.stringify(this.flags));\n        \n        // Mettre à jour l'historique des changements\n        Object.keys(response.data.flags).forEach(key => {\n          if (!this.flagsHistory[key]) this.flagsHistory[key] = [];\n          this.flagsHistory[key].push({\n            value: response.data.flags[key],\n            previousValue: oldFlags[key],\n            timestamp: now,\n            source: 'api'\n          });\n        });\n        \n        this.notifySubscribers();\n        this.logFlagChanges(oldFlags, this.flags);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des feature flags depuis l\\'API:', error);\n      // En cas d'erreur, continuer avec les flags actuels\n    }\n    \n    return this.flags;\n  }\n\n  /**\n   * Journalise les changements de flags pour débogage et analyses\n   * @param {Object} oldFlags Anciens flags\n   * @param {Object} newFlags Nouveaux flags\n   */\n  logFlagChanges(oldFlags, newFlags) {\n    const changes = [];\n    \n    Object.keys(newFlags).forEach(key => {\n      if (oldFlags[key] !== newFlags[key]) {\n        changes.push({\n          flag: key,\n          oldValue: oldFlags[key],\n          newValue: newFlags[key],\n          timestamp: Date.now()\n        });\n      }\n    });\n    \n    if (changes.length > 0) {\n      console.info('Feature Flags mis à jour:', changes);\n      \n      // En développement, afficher une notification visuelle\n      if (this.environment === ENVIRONMENTS.DEVELOPMENT && typeof window !== 'undefined') {\n        // Créer une notification simple pour les développeurs\n        this.showDevNotification(`${changes.length} feature flags mis à jour`);\n      }\n    }\n  }\n\n  /**\n   * Affiche une notification pour les développeurs\n   * @param {string} message Message à afficher\n   */\n  showDevNotification(message) {\n    if (typeof document === 'undefined') return;\n    \n    const notificationId = 'feature-flag-notification';\n    let notification = document.getElementById(notificationId);\n    \n    // Créer l'élément s'il n'existe pas\n    if (!notification) {\n      notification = document.createElement('div');\n      notification.id = notificationId;\n      notification.style.position = 'fixed';\n      notification.style.bottom = '20px';\n      notification.style.right = '20px';\n      notification.style.padding = '10px 15px';\n      notification.style.backgroundColor = '#333';\n      notification.style.color = 'white';\n      notification.style.borderRadius = '4px';\n      notification.style.zIndex = '9999';\n      notification.style.opacity = '0';\n      notification.style.transition = 'opacity 0.3s ease-in-out';\n      document.body.appendChild(notification);\n    }\n    \n    // Mettre à jour le contenu\n    notification.textContent = message;\n    notification.style.opacity = '1';\n    \n    // Faire disparaître après 3 secondes\n    setTimeout(() => {\n      notification.style.opacity = '0';\n      setTimeout(() => {\n        if (notification.parentNode) {\n          notification.parentNode.removeChild(notification);\n        }\n      }, 300);\n    }, 3000);\n  }\n\n  /**\n   * Met à jour un ou plusieurs feature flags\n   * @param {Object} flagUpdates Objet contenant les flags à mettre à jour\n   * @param {boolean} persistToServer Si vrai, envoie les modifications au serveur\n   * @returns {Promise<Object>} Les feature flags mis à jour\n   */\n  async updateFlags(flagUpdates, persistToServer = true) {\n    // Enregistrer les anciennes valeurs\n    const oldFlags = { ...this.flags };\n    \n    // Mettre à jour les flags localement\n    this.flags = { ...this.flags, ...flagUpdates };\n    \n    // Stocker dans localStorage\n    localStorage.setItem('featureFlags', JSON.stringify(this.flags));\n    \n    // Mettre à jour l'historique\n    Object.keys(flagUpdates).forEach(key => {\n      if (!this.flagsHistory[key]) this.flagsHistory[key] = [];\n      this.flagsHistory[key].push({\n        value: flagUpdates[key],\n        previousValue: oldFlags[key],\n        timestamp: Date.now(),\n        source: 'manual_update'\n      });\n    });\n    \n    // Journaliser les changements\n    this.logFlagChanges(oldFlags, this.flags);\n    \n    // Notifier les abonnés\n    this.notifySubscribers();\n    \n    // Persister sur le serveur si demandé\n    if (persistToServer) {\n      try {\n        await axios.post('/api/feature-flags', { \n          flags: flagUpdates,\n          segment: this.userSegment,\n          environment: this.environment\n        });\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour des feature flags sur le serveur:', error);\n      }\n    }\n    \n    return this.flags;\n  }\n\n  /**\n   * Vérifie si un feature flag est activé\n   * @param {string} flagName Nom du flag à vérifier\n   * @returns {boolean} Statut du flag (true = activé)\n   */\n  isEnabled(flagName) {\n    // Si le flag n'existe pas, retourner false\n    if (!(flagName in this.flags)) {\n      console.warn(`Feature flag \"${flagName}\" non trouvé`);\n      return false;\n    }\n    \n    return this.flags[flagName] === true;\n  }\n\n  /**\n   * Récupère la valeur d'un flag pour les tests A/B ou les flags multi-valeurs\n   * @param {string} flagName Nom du flag\n   * @param {any} defaultValue Valeur par défaut si le flag n'existe pas\n   * @returns {any} Valeur du flag ou valeur par défaut\n   */\n  getVariant(flagName, defaultValue = null) {\n    if (!(flagName in this.flags)) {\n      console.warn(`Feature flag variant \"${flagName}\" non trouvé`);\n      return defaultValue;\n    }\n    \n    return this.flags[flagName];\n  }\n\n  /**\n   * S'abonne aux changements de feature flags\n   * @param {Function} callback Fonction appelée lors d'un changement\n   * @returns {Function} Fonction pour se désabonner\n   */\n  subscribe(callback) {\n    this.subscribers.push(callback);\n    \n    // Retourner une fonction de nettoyage pour le désabonnement\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub !== callback);\n    };\n  }\n\n  /**\n   * Notifie tous les abonnés d'un changement de flags\n   */\n  notifySubscribers() {\n    this.subscribers.forEach(callback => {\n      try {\n        callback(this.flags);\n      } catch (error) {\n        console.error('Erreur lors de la notification d\\'un abonné aux feature flags:', error);\n      }\n    });\n  }\n\n  /**\n   * Récupère l'historique des changements pour un flag\n   * @param {string} flagName Nom du flag\n   * @returns {Array} Historique des changements\n   */\n  getFlagHistory(flagName) {\n    return this.flagsHistory[flagName] || [];\n  }\n\n  /**\n   * Définit la durée du cache\n   * @param {number} durationMs Durée en milliseconds\n   */\n  setCacheDuration(durationMs) {\n    this.cacheDuration = durationMs;\n  }\n}\n\n// Créer une instance singleton du service\nconst featureFlagsService = new FeatureFlagsService();\n\n/**\n * Hook React pour utiliser les feature flags dans les composants\n * @returns {Object} Objet contenant les flags et fonctions utilitaires\n */\nexport const useFeatureFlags = () => {\n  const context = useContext(FeatureFlagsContext);\n  \n  if (!context) {\n    throw new Error('useFeatureFlags doit être utilisé à l\\'intérieur d\\'un FeatureFlagsProvider');\n  }\n  \n  return context;\n};\n\n/**\n * Fournisseur de contexte pour les feature flags\n * @param {Object} props Props du composant\n * @param {React.ReactNode} props.children Enfants du composant\n */\nexport const FeatureFlagsProvider = ({ children }) => {\n  const [flags, setFlags] = useState(DEFAULT_FLAGS);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Charger les flags au montage du composant\n  useEffect(() => {\n    const initializeFlags = async () => {\n      try {\n        setIsLoading(true);\n        await featureFlagsService.initialize();\n        setFlags({ ...featureFlagsService.flags });\n        setError(null);\n      } catch (err) {\n        setError(err.message || 'Erreur lors du chargement des feature flags');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeFlags();\n\n    // S'abonner aux changements\n    const unsubscribe = featureFlagsService.subscribe(updatedFlags => {\n      setFlags({ ...updatedFlags });\n    });\n\n    // Se désabonner lors du démontage\n    return unsubscribe;\n  }, []);\n\n  // Fonction pour mettre à jour un flag\n  const updateFlag = async (flagName, value, persistToServer = true) => {\n    try {\n      await featureFlagsService.updateFlags({ [flagName]: value }, persistToServer);\n    } catch (err) {\n      setError(err.message || 'Erreur lors de la mise à jour du feature flag');\n    }\n  };\n\n  // Fonction pour rafraîchir tous les flags\n  const refreshFlags = async () => {\n    try {\n      setIsLoading(true);\n      await featureFlagsService.fetchFlagsFromApi(true);\n      setFlags({ ...featureFlagsService.flags });\n      setError(null);\n    } catch (err) {\n      setError(err.message || 'Erreur lors du rafraîchissement des feature flags');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fonction pour vérifier si un flag est activé (raccourci)\n  const isEnabled = (flagName) => {\n    return featureFlagsService.isEnabled(flagName);\n  };\n\n  // Fonction pour récupérer la valeur d'un flag variant\n  const getVariant = (flagName, defaultValue = null) => {\n    return featureFlagsService.getVariant(flagName, defaultValue);\n  };\n\n  const value = {\n    flags,\n    isLoading,\n    error,\n    updateFlag,\n    refreshFlags,\n    isEnabled,\n    getVariant\n  };\n\n  return (\n    <FeatureFlagsContext.Provider value={value}>\n      {children}\n    </FeatureFlagsContext.Provider>\n  );\n};\n\n// Exporter le service pour une utilisation directe si nécessaire\nexport default featureFlagsService;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,QAAQ,CAAEC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CAEtE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,aAAa,CAAG,CACpB;AACAC,cAAc,CAAE,KAAK,CACrBC,gBAAgB,CAAE,KAAK,CACvBC,gBAAgB,CAAE,KAAK,CAEvB;AACAC,0BAA0B,CAAE,IAAI,CAChCC,sBAAsB,CAAE,IAAI,CAC5BC,mBAAmB,CAAE,IAAI,CAEzB;AACAC,gBAAgB,CAAE,IAAI,CACtBC,2BAA2B,CAAE,IAAI,CAEjC;AACAC,wBAAwB,CAAE,IAAI,CAC9BC,0BAA0B,CAAE,IAAI,CAAG;AACnCC,uBAAuB,CAAE,KAAK,CAC9BC,qBAAqB,CAAE,IAAI,CAE3B;AACAC,qBAAqB,CAAE,IAAI,CAAO;AAClCC,iBAAiB,CAAE,KAAK,CAAU;AAClCC,uBAAuB,CAAE,IAAI,CAAK;AAElC;AACAC,qBAAqB,CAAE,IAAI,CAC3BC,oBAAoB,CAAE,KAAK,CAE3B;AACAC,sBAAsB,CAAE,IAAI,CAAM;AAClCC,qBAAqB,CAAE,IAAI,CAAO;AAClCC,0BAA0B,CAAE,IAAI,CAAE;AAElC;AACAC,sBAAsB,CAAE,IAAI,CAAM;AAClCC,0BAA0B,CAAE,IAAI,CAAE;AAClCC,yBAAyB,CAAE,IAAI,CAAG;AAElC;AACAC,oBAAoB,CAAE,IAAI,CAAQ;AAClCC,2BAA2B,CAAE,IAAK;AACpC,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,CACnBC,WAAW,CAAE,aAAa,CAC1BC,OAAO,CAAE,SAAS,CAClBC,UAAU,CAAE,YACd,CAAC,CAED;AACA,KAAM,CAAAC,mBAAmB,cAAGlC,aAAa,CAAC,CACxCmC,KAAK,CAAE/B,aAAa,CACpBgC,SAAS,CAAE,IAAI,CACfC,KAAK,CAAE,IAAI,CACXC,UAAU,CAAEA,CAAA,GAAM,CAAC,CAAC,CACpBC,YAAY,CAAEA,CAAA,GAAM,CAAC,CAAC,CACtBC,SAAS,CAAEA,CAAA,GAAM,KAAK,CAAM;AAC5BC,UAAU,CAAEA,CAAA,GAAM,IAAU;AAC9B,CAAC,CAAC,CAEF;AACA;AACA,GACA,KAAM,CAAAC,mBAAoB,CACxBC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACR,KAAK,CAAG,CAAE,GAAG/B,aAAc,CAAC,CACjC,IAAI,CAACwC,WAAW,CAAG,EAAE,CACrB,IAAI,CAACC,aAAa,CAAG,KAAK,CAC1B,IAAI,CAACC,aAAa,CAAG,CAAC,CACtB,IAAI,CAACC,aAAa,CAAG,CAAC,CAAG,EAAE,CAAG,IAAI,CAAE;AACpC,IAAI,CAACC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,EAAIrB,YAAY,CAACC,WAAW,CACnE,IAAI,CAACqB,WAAW,CAAG,IAAI,CACvB,IAAI,CAACC,YAAY,CAAG,CAAC,CAAC,CAAE;AAC1B,CAEA;AACF;AACA;AACA,KACE,KAAM,CAAAC,UAAUA,CAAA,CAAG,CACjB,GAAI,IAAI,CAACT,aAAa,CAAE,CACtB,MAAO,KAAI,CAACV,KAAK,CACnB,CAEA,GAAI,CACF;AACA,IAAI,CAACoB,oBAAoB,CAAC,CAAC,CAE3B;AACA,KAAM,KAAI,CAACC,yBAAyB,CAAC,CAAC,CACtC,KAAM,KAAI,CAACC,iBAAiB,CAAC,CAAC,CAE9B;AACA,IAAI,CAACC,yBAAyB,CAAC,CAAC,CAEhC;AACAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACzB,KAAK,CAAC,CAAC0B,OAAO,CAACC,GAAG,EAAI,CACrC,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAG,CAAC,CACxBC,KAAK,CAAE,IAAI,CAAC5B,KAAK,CAAC2B,GAAG,CAAC,CACtBE,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACrBC,MAAM,CAAE,gBACV,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,IAAI,CAACtB,aAAa,CAAG,IAAI,CACzB,IAAI,CAACuB,iBAAiB,CAAC,CAAC,CAExB,MAAO,KAAI,CAACjC,KAAK,CACnB,CAAE,MAAOE,KAAK,CAAE,CACdgC,OAAO,CAAChC,KAAK,CAAC,qDAAqD,CAAEA,KAAK,CAAC,CAC3E;AACA,MAAO,KAAI,CAACF,KAAK,CACnB,CACF,CAEA;AACF;AACA,KACEoB,oBAAoBA,CAAA,CAAG,CACrB,GAAI,CACF;AACA,KAAM,CAAAe,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAI,IAAI,CAAC,CAErE;AACA,GAAIJ,QAAQ,CAACK,IAAI,GAAK,OAAO,CAAE,CAC7B,IAAI,CAACvB,WAAW,CAAG,OAAO,CAC5B,CAAC,IAAM,IAAIkB,QAAQ,CAACM,MAAM,EAAIN,QAAQ,CAACM,MAAM,CAAG,EAAE,CAAE,CAClD,IAAI,CAACxB,WAAW,CAAG,YAAY,CACjC,CAAC,IAAM,IAAIkB,QAAQ,CAACO,YAAY,CAAE,CAChC,KAAM,CAAAC,gBAAgB,CAAG,GAAI,CAAAb,IAAI,CAACK,QAAQ,CAACO,YAAY,CAAC,CACxD,KAAM,CAAAE,WAAW,CAAG,GAAI,CAAAd,IAAI,CAAC,CAAC,CAC9Bc,WAAW,CAACC,QAAQ,CAACD,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAEhD,GAAIH,gBAAgB,CAAGC,WAAW,CAAE,CAClC,IAAI,CAAC3B,WAAW,CAAG,UAAU,CAC/B,CAAC,IAAM,CACL,IAAI,CAACA,WAAW,CAAG,cAAc,CACnC,CACF,CAAC,IAAM,CACL,IAAI,CAACA,WAAW,CAAG,WAAW,CAChC,CACF,CAAE,MAAOf,KAAK,CAAE,CACdgC,OAAO,CAAChC,KAAK,CAAC,yDAAyD,CAAEA,KAAK,CAAC,CAC/E,IAAI,CAACe,WAAW,CAAG,SAAS,CAC9B,CACF,CAEA;AACF;AACA,KACEM,yBAAyBA,CAAA,CAAG,CAC1B;AACA,GAAI,IAAI,CAACV,WAAW,GAAKlB,YAAY,CAACG,UAAU,CAAE,CAChD;AACA,KAAM,CAAAiD,mBAAmB,CAAG,CAC1B5E,gBAAgB,CAAE,KAAK,CACvBS,uBAAuB,CAAE,KAC3B,CAAC,CAED;AACA4C,MAAM,CAACC,IAAI,CAACsB,mBAAmB,CAAC,CAACrB,OAAO,CAACC,GAAG,EAAI,CAC9C;AACA,GAAI,CAAC,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,EAAI,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAACqB,MAAM,GAAK,CAAC,CAAE,CAClE,IAAI,CAAChD,KAAK,CAAC2B,GAAG,CAAC,CAAGoB,mBAAmB,CAACpB,GAAG,CAAC,CAC5C,CACF,CAAC,CAAC,CACJ,CAEA;AACA,GAAI,IAAI,CAACd,WAAW,GAAKlB,YAAY,CAACC,WAAW,CAAE,CACjD,KAAM,CAAAqD,YAAY,CAAG,CACnB9E,gBAAgB,CAAE,IAAI,CACtBM,2BAA2B,CAAE,IAC/B,CAAC,CAED+C,MAAM,CAAC0B,MAAM,CAAC,IAAI,CAAClD,KAAK,CAAEiD,YAAY,CAAC,CACzC,CACF,CAEA;AACF;AACA,KACE,KAAM,CAAA5B,yBAAyBA,CAAA,CAAG,CAChC,GAAI,CACF,KAAM,CAAA8B,WAAW,CAAGb,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACxD,GAAIY,WAAW,CAAE,CACf,KAAM,CAAAC,WAAW,CAAGhB,IAAI,CAACC,KAAK,CAACc,WAAW,CAAC,CAC3C,IAAI,CAACnD,KAAK,CAAG,CAAE,GAAG,IAAI,CAACA,KAAK,CAAE,GAAGoD,WAAY,CAAC,CAE9C;AACA5B,MAAM,CAACC,IAAI,CAAC2B,WAAW,CAAC,CAAC1B,OAAO,CAACC,GAAG,EAAI,CACtC,GAAI,CAAC,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAE,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAG,EAAE,CACxD,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAC0B,IAAI,CAAC,CAC1BzB,KAAK,CAAEwB,WAAW,CAACzB,GAAG,CAAC,CACvBE,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACrBC,MAAM,CAAE,cACV,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CACF,CAAE,MAAO9B,KAAK,CAAE,CACdgC,OAAO,CAAChC,KAAK,CAAC,8DAA8D,CAAEA,KAAK,CAAC,CACtF,CACF,CAEA;AACF;AACA;AACA,KACE,KAAM,CAAAoB,iBAAiBA,CAAA,CAAgB,IAAf,CAAAgC,KAAK,CAAAC,SAAA,CAAAP,MAAA,IAAAO,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,KAAK,CACnC,KAAM,CAAAxB,GAAG,CAAGD,IAAI,CAACC,GAAG,CAAC,CAAC,CAEtB;AACA,GAAI,CAACuB,KAAK,EAAKvB,GAAG,CAAG,IAAI,CAACpB,aAAa,CAAI,IAAI,CAACC,aAAa,CAAE,CAC7D,MAAO,KAAI,CAACZ,KAAK,CACnB,CAEA,GAAI,CACF,KAAM,CAAAyD,QAAQ,CAAG,KAAM,CAAA/F,KAAK,CAACgG,GAAG,CAAC,oBAAoB,CAAE,CACrDC,MAAM,CAAE,CACNC,OAAO,CAAE,IAAI,CAAC3C,WAAW,CACzBJ,WAAW,CAAE,IAAI,CAACA,WACpB,CACF,CAAC,CAAC,CAEF,GAAI4C,QAAQ,CAACI,IAAI,EAAIJ,QAAQ,CAACI,IAAI,CAAC7D,KAAK,CAAE,CACxC;AACA,KAAM,CAAA8D,QAAQ,CAAG,CAAE,GAAG,IAAI,CAAC9D,KAAM,CAAC,CAElC;AACA,IAAI,CAACA,KAAK,CAAG,CAAE,GAAG,IAAI,CAACA,KAAK,CAAE,GAAGyD,QAAQ,CAACI,IAAI,CAAC7D,KAAM,CAAC,CACtD,IAAI,CAACW,aAAa,CAAGoB,GAAG,CAExB;AACAO,YAAY,CAACyB,OAAO,CAAC,cAAc,CAAE3B,IAAI,CAAC4B,SAAS,CAAC,IAAI,CAAChE,KAAK,CAAC,CAAC,CAEhE;AACAwB,MAAM,CAACC,IAAI,CAACgC,QAAQ,CAACI,IAAI,CAAC7D,KAAK,CAAC,CAAC0B,OAAO,CAACC,GAAG,EAAI,CAC9C,GAAI,CAAC,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAE,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAG,EAAE,CACxD,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAC0B,IAAI,CAAC,CAC1BzB,KAAK,CAAE6B,QAAQ,CAACI,IAAI,CAAC7D,KAAK,CAAC2B,GAAG,CAAC,CAC/BsC,aAAa,CAAEH,QAAQ,CAACnC,GAAG,CAAC,CAC5BE,SAAS,CAAEE,GAAG,CACdC,MAAM,CAAE,KACV,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,IAAI,CAACC,iBAAiB,CAAC,CAAC,CACxB,IAAI,CAACiC,cAAc,CAACJ,QAAQ,CAAE,IAAI,CAAC9D,KAAK,CAAC,CAC3C,CACF,CAAE,MAAOE,KAAK,CAAE,CACdgC,OAAO,CAAChC,KAAK,CAAC,iEAAiE,CAAEA,KAAK,CAAC,CACvF;AACF,CAEA,MAAO,KAAI,CAACF,KAAK,CACnB,CAEA;AACF;AACA;AACA;AACA,KACEkE,cAAcA,CAACJ,QAAQ,CAAEK,QAAQ,CAAE,CACjC,KAAM,CAAAC,OAAO,CAAG,EAAE,CAElB5C,MAAM,CAACC,IAAI,CAAC0C,QAAQ,CAAC,CAACzC,OAAO,CAACC,GAAG,EAAI,CACnC,GAAImC,QAAQ,CAACnC,GAAG,CAAC,GAAKwC,QAAQ,CAACxC,GAAG,CAAC,CAAE,CACnCyC,OAAO,CAACf,IAAI,CAAC,CACXgB,IAAI,CAAE1C,GAAG,CACT2C,QAAQ,CAAER,QAAQ,CAACnC,GAAG,CAAC,CACvB4C,QAAQ,CAAEJ,QAAQ,CAACxC,GAAG,CAAC,CACvBE,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,GAAIqC,OAAO,CAACpB,MAAM,CAAG,CAAC,CAAE,CACtBd,OAAO,CAACsC,IAAI,CAAC,2BAA2B,CAAEJ,OAAO,CAAC,CAElD;AACA,GAAI,IAAI,CAACvD,WAAW,GAAKlB,YAAY,CAACC,WAAW,EAAI,MAAO,CAAA6E,MAAM,GAAK,WAAW,CAAE,CAClF;AACA,IAAI,CAACC,mBAAmB,CAAC,GAAGN,OAAO,CAACpB,MAAM,2BAA2B,CAAC,CACxE,CACF,CACF,CAEA;AACF;AACA;AACA,KACE0B,mBAAmBA,CAACC,OAAO,CAAE,CAC3B,GAAI,MAAO,CAAAC,QAAQ,GAAK,WAAW,CAAE,OAErC,KAAM,CAAAC,cAAc,CAAG,2BAA2B,CAClD,GAAI,CAAAC,YAAY,CAAGF,QAAQ,CAACG,cAAc,CAACF,cAAc,CAAC,CAE1D;AACA,GAAI,CAACC,YAAY,CAAE,CACjBA,YAAY,CAAGF,QAAQ,CAACI,aAAa,CAAC,KAAK,CAAC,CAC5CF,YAAY,CAACG,EAAE,CAAGJ,cAAc,CAChCC,YAAY,CAACI,KAAK,CAACC,QAAQ,CAAG,OAAO,CACrCL,YAAY,CAACI,KAAK,CAACE,MAAM,CAAG,MAAM,CAClCN,YAAY,CAACI,KAAK,CAACG,KAAK,CAAG,MAAM,CACjCP,YAAY,CAACI,KAAK,CAACI,OAAO,CAAG,WAAW,CACxCR,YAAY,CAACI,KAAK,CAACK,eAAe,CAAG,MAAM,CAC3CT,YAAY,CAACI,KAAK,CAACM,KAAK,CAAG,OAAO,CAClCV,YAAY,CAACI,KAAK,CAACO,YAAY,CAAG,KAAK,CACvCX,YAAY,CAACI,KAAK,CAACQ,MAAM,CAAG,MAAM,CAClCZ,YAAY,CAACI,KAAK,CAACS,OAAO,CAAG,GAAG,CAChCb,YAAY,CAACI,KAAK,CAACU,UAAU,CAAG,0BAA0B,CAC1DhB,QAAQ,CAACiB,IAAI,CAACC,WAAW,CAAChB,YAAY,CAAC,CACzC,CAEA;AACAA,YAAY,CAACiB,WAAW,CAAGpB,OAAO,CAClCG,YAAY,CAACI,KAAK,CAACS,OAAO,CAAG,GAAG,CAEhC;AACAK,UAAU,CAAC,IAAM,CACflB,YAAY,CAACI,KAAK,CAACS,OAAO,CAAG,GAAG,CAChCK,UAAU,CAAC,IAAM,CACf,GAAIlB,YAAY,CAACmB,UAAU,CAAE,CAC3BnB,YAAY,CAACmB,UAAU,CAACC,WAAW,CAACpB,YAAY,CAAC,CACnD,CACF,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAAE,IAAI,CAAC,CACV,CAEA;AACF;AACA;AACA;AACA;AACA,KACE,KAAM,CAAAqB,WAAWA,CAACC,WAAW,CAA0B,IAAxB,CAAAC,eAAe,CAAA9C,SAAA,CAAAP,MAAA,IAAAO,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACnD;AACA,KAAM,CAAAO,QAAQ,CAAG,CAAE,GAAG,IAAI,CAAC9D,KAAM,CAAC,CAElC;AACA,IAAI,CAACA,KAAK,CAAG,CAAE,GAAG,IAAI,CAACA,KAAK,CAAE,GAAGoG,WAAY,CAAC,CAE9C;AACA9D,YAAY,CAACyB,OAAO,CAAC,cAAc,CAAE3B,IAAI,CAAC4B,SAAS,CAAC,IAAI,CAAChE,KAAK,CAAC,CAAC,CAEhE;AACAwB,MAAM,CAACC,IAAI,CAAC2E,WAAW,CAAC,CAAC1E,OAAO,CAACC,GAAG,EAAI,CACtC,GAAI,CAAC,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAE,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAG,EAAE,CACxD,IAAI,CAACT,YAAY,CAACS,GAAG,CAAC,CAAC0B,IAAI,CAAC,CAC1BzB,KAAK,CAAEwE,WAAW,CAACzE,GAAG,CAAC,CACvBsC,aAAa,CAAEH,QAAQ,CAACnC,GAAG,CAAC,CAC5BE,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACrBC,MAAM,CAAE,eACV,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA,IAAI,CAACkC,cAAc,CAACJ,QAAQ,CAAE,IAAI,CAAC9D,KAAK,CAAC,CAEzC;AACA,IAAI,CAACiC,iBAAiB,CAAC,CAAC,CAExB;AACA,GAAIoE,eAAe,CAAE,CACnB,GAAI,CACF,KAAM,CAAA3I,KAAK,CAAC4I,IAAI,CAAC,oBAAoB,CAAE,CACrCtG,KAAK,CAAEoG,WAAW,CAClBxC,OAAO,CAAE,IAAI,CAAC3C,WAAW,CACzBJ,WAAW,CAAE,IAAI,CAACA,WACpB,CAAC,CAAC,CACJ,CAAE,MAAOX,KAAK,CAAE,CACdgC,OAAO,CAAChC,KAAK,CAAC,iEAAiE,CAAEA,KAAK,CAAC,CACzF,CACF,CAEA,MAAO,KAAI,CAACF,KAAK,CACnB,CAEA;AACF;AACA;AACA;AACA,KACEK,SAASA,CAACkG,QAAQ,CAAE,CAClB;AACA,GAAI,EAAEA,QAAQ,GAAI,KAAI,CAACvG,KAAK,CAAC,CAAE,CAC7BkC,OAAO,CAACsE,IAAI,CAAC,iBAAiBD,QAAQ,cAAc,CAAC,CACrD,MAAO,MAAK,CACd,CAEA,MAAO,KAAI,CAACvG,KAAK,CAACuG,QAAQ,CAAC,GAAK,IAAI,CACtC,CAEA;AACF;AACA;AACA;AACA;AACA,KACEjG,UAAUA,CAACiG,QAAQ,CAAuB,IAArB,CAAAE,YAAY,CAAAlD,SAAA,CAAAP,MAAA,IAAAO,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACtC,GAAI,EAAEgD,QAAQ,GAAI,KAAI,CAACvG,KAAK,CAAC,CAAE,CAC7BkC,OAAO,CAACsE,IAAI,CAAC,yBAAyBD,QAAQ,cAAc,CAAC,CAC7D,MAAO,CAAAE,YAAY,CACrB,CAEA,MAAO,KAAI,CAACzG,KAAK,CAACuG,QAAQ,CAAC,CAC7B,CAEA;AACF;AACA;AACA;AACA,KACEG,SAASA,CAACC,QAAQ,CAAE,CAClB,IAAI,CAAClG,WAAW,CAAC4C,IAAI,CAACsD,QAAQ,CAAC,CAE/B;AACA,MAAO,IAAM,CACX,IAAI,CAAClG,WAAW,CAAG,IAAI,CAACA,WAAW,CAACmG,MAAM,CAACC,GAAG,EAAIA,GAAG,GAAKF,QAAQ,CAAC,CACrE,CAAC,CACH,CAEA;AACF;AACA,KACE1E,iBAAiBA,CAAA,CAAG,CAClB,IAAI,CAACxB,WAAW,CAACiB,OAAO,CAACiF,QAAQ,EAAI,CACnC,GAAI,CACFA,QAAQ,CAAC,IAAI,CAAC3G,KAAK,CAAC,CACtB,CAAE,MAAOE,KAAK,CAAE,CACdgC,OAAO,CAAChC,KAAK,CAAC,gEAAgE,CAAEA,KAAK,CAAC,CACxF,CACF,CAAC,CAAC,CACJ,CAEA;AACF;AACA;AACA;AACA,KACE4G,cAAcA,CAACP,QAAQ,CAAE,CACvB,MAAO,KAAI,CAACrF,YAAY,CAACqF,QAAQ,CAAC,EAAI,EAAE,CAC1C,CAEA;AACF;AACA;AACA,KACEQ,gBAAgBA,CAACC,UAAU,CAAE,CAC3B,IAAI,CAACpG,aAAa,CAAGoG,UAAU,CACjC,CACF,CAEA;AACA,KAAM,CAAAC,mBAAmB,CAAG,GAAI,CAAA1G,mBAAmB,CAAC,CAAC,CAErD;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAA2G,eAAe,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,OAAO,CAAGrJ,UAAU,CAACiC,mBAAmB,CAAC,CAE/C,GAAI,CAACoH,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6EAA6E,CAAC,CAChG,CAEA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAE,oBAAoB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAACtH,KAAK,CAAEwH,QAAQ,CAAC,CAAG5J,QAAQ,CAACK,aAAa,CAAC,CACjD,KAAM,CAACgC,SAAS,CAAEwH,YAAY,CAAC,CAAG7J,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACsC,KAAK,CAAEwH,QAAQ,CAAC,CAAG9J,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgK,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACFF,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAR,mBAAmB,CAAC9F,UAAU,CAAC,CAAC,CACtCqG,QAAQ,CAAC,CAAE,GAAGP,mBAAmB,CAACjH,KAAM,CAAC,CAAC,CAC1C0H,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAE,MAAOE,GAAG,CAAE,CACZF,QAAQ,CAACE,GAAG,CAACjD,OAAO,EAAI,6CAA6C,CAAC,CACxE,CAAC,OAAS,CACR8C,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDE,eAAe,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAE,WAAW,CAAGZ,mBAAmB,CAACP,SAAS,CAACoB,YAAY,EAAI,CAChEN,QAAQ,CAAC,CAAE,GAAGM,YAAa,CAAC,CAAC,CAC/B,CAAC,CAAC,CAEF;AACA,MAAO,CAAAD,WAAW,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAA1H,UAAU,CAAG,cAAAA,CAAOoG,QAAQ,CAAE3E,KAAK,CAA6B,IAA3B,CAAAyE,eAAe,CAAA9C,SAAA,CAAAP,MAAA,IAAAO,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAC/D,GAAI,CACF,KAAM,CAAA0D,mBAAmB,CAACd,WAAW,CAAC,CAAE,CAACI,QAAQ,EAAG3E,KAAM,CAAC,CAAEyE,eAAe,CAAC,CAC/E,CAAE,MAAOuB,GAAG,CAAE,CACZF,QAAQ,CAACE,GAAG,CAACjD,OAAO,EAAI,+CAA+C,CAAC,CAC1E,CACF,CAAC,CAED;AACA,KAAM,CAAAvE,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACFqH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAR,mBAAmB,CAAC3F,iBAAiB,CAAC,IAAI,CAAC,CACjDkG,QAAQ,CAAC,CAAE,GAAGP,mBAAmB,CAACjH,KAAM,CAAC,CAAC,CAC1C0H,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAE,MAAOE,GAAG,CAAE,CACZF,QAAQ,CAACE,GAAG,CAACjD,OAAO,EAAI,mDAAmD,CAAC,CAC9E,CAAC,OAAS,CACR8C,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED;AACA,KAAM,CAAApH,SAAS,CAAIkG,QAAQ,EAAK,CAC9B,MAAO,CAAAU,mBAAmB,CAAC5G,SAAS,CAACkG,QAAQ,CAAC,CAChD,CAAC,CAED;AACA,KAAM,CAAAjG,UAAU,CAAG,QAAAA,CAACiG,QAAQ,CAA0B,IAAxB,CAAAE,YAAY,CAAAlD,SAAA,CAAAP,MAAA,IAAAO,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAC/C,MAAO,CAAA0D,mBAAmB,CAAC3G,UAAU,CAACiG,QAAQ,CAAEE,YAAY,CAAC,CAC/D,CAAC,CAED,KAAM,CAAA7E,KAAK,CAAG,CACZ5B,KAAK,CACLC,SAAS,CACTC,KAAK,CACLC,UAAU,CACVC,YAAY,CACZC,SAAS,CACTC,UACF,CAAC,CAED,mBACEtC,IAAA,CAAC+B,mBAAmB,CAACgI,QAAQ,EAACnG,KAAK,CAAEA,KAAM,CAAA2F,QAAA,CACxCA,QAAQ,CACmB,CAAC,CAEnC,CAAC,CAED;AACA,cAAe,CAAAN,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}