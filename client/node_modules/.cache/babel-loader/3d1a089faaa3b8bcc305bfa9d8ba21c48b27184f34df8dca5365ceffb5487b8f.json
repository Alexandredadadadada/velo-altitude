{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import HIITTemplates from'./HIITTemplates';import PerformanceTracker from'./PerformanceTracker';import WorkoutPlanner from'./WorkoutPlanner';import'./TrainingModule.css';/**\n * TrainingModule component provides cycling training functionalities including HIIT templates\n * and performance tracking visualizations\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TrainingModule=_ref=>{let{userId,initialView='templates'}=_ref;const{t}=useTranslation();const[activeView,setActiveView]=useState(initialView);const[userProfile,setUserProfile]=useState(null);const[userWorkouts,setUserWorkouts]=useState([]);const[loading,setLoading]=useState(true);// Load user profile and workout data\nuseEffect(()=>{const fetchUserData=async()=>{try{setLoading(true);// Mock data - would be replaced with actual API calls\n// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,500));// Mock user profile\nconst mockProfile={id:userId||'user-1',name:'Jean Cycliste',level:'intermediate',// beginner, intermediate, advanced, elite\nftp:260,// Functional Threshold Power\nmaxHr:185,// Max heart rate\nrestingHr:52,// Resting heart rate\nweight:72,// kg\npreferences:{workoutDuration:60,// preferred workout duration in minutes\nfocusAreas:['endurance','climbing'],// focus areas for training\noutdoorRiding:true// preference for indoor vs outdoor\n}};// Mock workout history\nconst mockWorkouts=[{id:'workout-1',date:'2025-03-28',type:'hiit',templateId:'hiit-1',duration:45,// minutes\ntss:65,// Training Stress Score\nmetrics:{averagePower:230,normalizedPower:245,averageHr:152,maxHr:178,calories:540,elevation:320},intervals:[{power:240,duration:180,rest:120},{power:250,duration:180,rest:120},{power:255,duration:180,rest:120},{power:260,duration:180,rest:120},{power:265,duration:180,rest:120}]},{id:'workout-2',date:'2025-03-30',type:'endurance',templateId:'endurance-1',duration:120,tss:85,metrics:{averagePower:195,normalizedPower:210,averageHr:142,maxHr:158,calories:1240,elevation:850}},{id:'workout-3',date:'2025-04-01',type:'hiit',templateId:'hiit-2',duration:60,tss:75,metrics:{averagePower:235,normalizedPower:255,averageHr:155,maxHr:182,calories:680,elevation:420},intervals:[{power:250,duration:60,rest:60},{power:255,duration:60,rest:60},{power:260,duration:60,rest:60},{power:270,duration:60,rest:60},{power:275,duration:60,rest:60},{power:280,duration:60,rest:60},{power:285,duration:60,rest:60},{power:290,duration:60,rest:60}]}];setUserProfile(mockProfile);setUserWorkouts(mockWorkouts);}catch(error){console.error('Error fetching user data:',error);}finally{setLoading(false);}};fetchUserData();},[userId]);// Handle saving a new workout\nconst handleSaveWorkout=newWorkout=>{// In a real app, this would make an API call to save the workout\nconst workoutWithId={...newWorkout,id:`workout-${Date.now()}`,date:new Date().toISOString().split('T')[0]};setUserWorkouts(prevWorkouts=>[...prevWorkouts,workoutWithId]);return workoutWithId;};// Handle updating user profile\nconst handleUpdateProfile=updatedProfile=>{// In a real app, this would make an API call to update the profile\nsetUserProfile(prevProfile=>({...prevProfile,...updatedProfile}));};// Generate views for the training module\nconst renderContent=()=>{if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"training-module-loading\",children:t('loadingTrainingData')});}switch(activeView){case'templates':return/*#__PURE__*/_jsx(HIITTemplates,{userProfile:userProfile,onSaveWorkout:handleSaveWorkout});case'performance':return/*#__PURE__*/_jsx(PerformanceTracker,{userProfile:userProfile,workouts:userWorkouts});case'planner':return/*#__PURE__*/_jsx(WorkoutPlanner,{userProfile:userProfile,workouts:userWorkouts,onSaveWorkout:handleSaveWorkout});default:return/*#__PURE__*/_jsx(\"div\",{children:t('selectTrainingView')});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"training-module\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"training-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('trainingModule')}),userProfile&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-profile-summary\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-name\",children:userProfile.name}),/*#__PURE__*/_jsx(\"span\",{className:\"user-level\",children:t(userProfile.level)}),/*#__PURE__*/_jsxs(\"span\",{className:\"user-ftp\",children:[\"FTP: \",userProfile.ftp,\"w\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"training-navigation\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`training-nav-button ${activeView==='templates'?'active':''}`,onClick:()=>setActiveView('templates'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-th-large\"}),t('hiitTemplates')]}),/*#__PURE__*/_jsxs(\"button\",{className:`training-nav-button ${activeView==='performance'?'active':''}`,onClick:()=>setActiveView('performance'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),t('performanceTracker')]}),/*#__PURE__*/_jsxs(\"button\",{className:`training-nav-button ${activeView==='planner'?'active':''}`,onClick:()=>setActiveView('planner'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-calendar-alt\"}),t('workoutPlanner')]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"training-content\",children:renderContent()})]});};export default TrainingModule;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","HIITTemplates","PerformanceTracker","WorkoutPlanner","jsx","_jsx","jsxs","_jsxs","TrainingModule","_ref","userId","initialView","t","activeView","setActiveView","userProfile","setUserProfile","userWorkouts","setUserWorkouts","loading","setLoading","fetchUserData","Promise","resolve","setTimeout","mockProfile","id","name","level","ftp","maxHr","restingHr","weight","preferences","workoutDuration","focusAreas","outdoorRiding","mockWorkouts","date","type","templateId","duration","tss","metrics","averagePower","normalizedPower","averageHr","calories","elevation","intervals","power","rest","error","console","handleSaveWorkout","newWorkout","workoutWithId","Date","now","toISOString","split","prevWorkouts","handleUpdateProfile","updatedProfile","prevProfile","renderContent","className","children","onSaveWorkout","workouts","onClick"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/training/TrainingModule.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport HIITTemplates from './HIITTemplates';\nimport PerformanceTracker from './PerformanceTracker';\nimport WorkoutPlanner from './WorkoutPlanner';\nimport './TrainingModule.css';\n\n/**\n * TrainingModule component provides cycling training functionalities including HIIT templates\n * and performance tracking visualizations\n */\nconst TrainingModule = ({ userId, initialView = 'templates' }) => {\n  const { t } = useTranslation();\n  const [activeView, setActiveView] = useState(initialView);\n  const [userProfile, setUserProfile] = useState(null);\n  const [userWorkouts, setUserWorkouts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  \n  // Load user profile and workout data\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        setLoading(true);\n        \n        // Mock data - would be replaced with actual API calls\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Mock user profile\n        const mockProfile = {\n          id: userId || 'user-1',\n          name: 'Jean Cycliste',\n          level: 'intermediate', // beginner, intermediate, advanced, elite\n          ftp: 260, // Functional Threshold Power\n          maxHr: 185, // Max heart rate\n          restingHr: 52, // Resting heart rate\n          weight: 72, // kg\n          preferences: {\n            workoutDuration: 60, // preferred workout duration in minutes\n            focusAreas: ['endurance', 'climbing'], // focus areas for training\n            outdoorRiding: true // preference for indoor vs outdoor\n          }\n        };\n        \n        // Mock workout history\n        const mockWorkouts = [\n          {\n            id: 'workout-1',\n            date: '2025-03-28',\n            type: 'hiit',\n            templateId: 'hiit-1',\n            duration: 45, // minutes\n            tss: 65, // Training Stress Score\n            metrics: {\n              averagePower: 230,\n              normalizedPower: 245,\n              averageHr: 152,\n              maxHr: 178,\n              calories: 540,\n              elevation: 320\n            },\n            intervals: [\n              { power: 240, duration: 180, rest: 120 },\n              { power: 250, duration: 180, rest: 120 },\n              { power: 255, duration: 180, rest: 120 },\n              { power: 260, duration: 180, rest: 120 },\n              { power: 265, duration: 180, rest: 120 }\n            ]\n          },\n          {\n            id: 'workout-2',\n            date: '2025-03-30',\n            type: 'endurance',\n            templateId: 'endurance-1',\n            duration: 120,\n            tss: 85,\n            metrics: {\n              averagePower: 195,\n              normalizedPower: 210,\n              averageHr: 142,\n              maxHr: 158,\n              calories: 1240,\n              elevation: 850\n            }\n          },\n          {\n            id: 'workout-3',\n            date: '2025-04-01',\n            type: 'hiit',\n            templateId: 'hiit-2',\n            duration: 60,\n            tss: 75,\n            metrics: {\n              averagePower: 235,\n              normalizedPower: 255,\n              averageHr: 155,\n              maxHr: 182,\n              calories: 680,\n              elevation: 420\n            },\n            intervals: [\n              { power: 250, duration: 60, rest: 60 },\n              { power: 255, duration: 60, rest: 60 },\n              { power: 260, duration: 60, rest: 60 },\n              { power: 270, duration: 60, rest: 60 },\n              { power: 275, duration: 60, rest: 60 },\n              { power: 280, duration: 60, rest: 60 },\n              { power: 285, duration: 60, rest: 60 },\n              { power: 290, duration: 60, rest: 60 }\n            ]\n          }\n        ];\n        \n        setUserProfile(mockProfile);\n        setUserWorkouts(mockWorkouts);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchUserData();\n  }, [userId]);\n  \n  // Handle saving a new workout\n  const handleSaveWorkout = (newWorkout) => {\n    // In a real app, this would make an API call to save the workout\n    const workoutWithId = {\n      ...newWorkout,\n      id: `workout-${Date.now()}`,\n      date: new Date().toISOString().split('T')[0]\n    };\n    \n    setUserWorkouts(prevWorkouts => [...prevWorkouts, workoutWithId]);\n    return workoutWithId;\n  };\n  \n  // Handle updating user profile\n  const handleUpdateProfile = (updatedProfile) => {\n    // In a real app, this would make an API call to update the profile\n    setUserProfile(prevProfile => ({\n      ...prevProfile,\n      ...updatedProfile\n    }));\n  };\n  \n  // Generate views for the training module\n  const renderContent = () => {\n    if (loading) {\n      return <div className=\"training-module-loading\">{t('loadingTrainingData')}</div>;\n    }\n    \n    switch (activeView) {\n      case 'templates':\n        return (\n          <HIITTemplates \n            userProfile={userProfile}\n            onSaveWorkout={handleSaveWorkout}\n          />\n        );\n      case 'performance':\n        return (\n          <PerformanceTracker \n            userProfile={userProfile}\n            workouts={userWorkouts}\n          />\n        );\n      case 'planner':\n        return (\n          <WorkoutPlanner \n            userProfile={userProfile}\n            workouts={userWorkouts}\n            onSaveWorkout={handleSaveWorkout}\n          />\n        );\n      default:\n        return <div>{t('selectTrainingView')}</div>;\n    }\n  };\n  \n  return (\n    <div className=\"training-module\">\n      <div className=\"training-header\">\n        <h2>{t('trainingModule')}</h2>\n        \n        {userProfile && (\n          <div className=\"user-profile-summary\">\n            <span className=\"user-name\">{userProfile.name}</span>\n            <span className=\"user-level\">{t(userProfile.level)}</span>\n            <span className=\"user-ftp\">FTP: {userProfile.ftp}w</span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"training-navigation\">\n        <button \n          className={`training-nav-button ${activeView === 'templates' ? 'active' : ''}`}\n          onClick={() => setActiveView('templates')}\n        >\n          <i className=\"fas fa-th-large\"></i>\n          {t('hiitTemplates')}\n        </button>\n        <button \n          className={`training-nav-button ${activeView === 'performance' ? 'active' : ''}`}\n          onClick={() => setActiveView('performance')}\n        >\n          <i className=\"fas fa-chart-line\"></i>\n          {t('performanceTracker')}\n        </button>\n        <button \n          className={`training-nav-button ${activeView === 'planner' ? 'active' : ''}`}\n          onClick={() => setActiveView('planner')}\n        >\n          <i className=\"fas fa-calendar-alt\"></i>\n          {t('workoutPlanner')}\n        </button>\n      </div>\n      \n      <div className=\"training-content\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nTrainingModule.propTypes = {\n  userId: PropTypes.string,\n  initialView: PropTypes.oneOf(['templates', 'performance', 'planner'])\n};\n\nexport default TrainingModule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}