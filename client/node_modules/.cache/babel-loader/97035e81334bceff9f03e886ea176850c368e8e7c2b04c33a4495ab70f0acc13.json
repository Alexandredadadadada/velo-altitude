{"ast":null,"code":"/**\n * Service centralisé pour le système d'entraînement\n * Gère la cohérence entre les différents types d'entraînement\n * et sert de point d'entrée unifié pour toutes les fonctionnalités liées\n */import FTPService from'./FTPEstimationService';// Types d'entraînement disponibles\nexport const TRAINING_TYPES={ENDURANCE:'endurance',// Endurance fondamentale (Z1-Z2)\nTEMPO:'tempo',// Tempo (Z3)\nTHRESHOLD:'threshold',// Seuil (Z4)\nVO2MAX:'vo2max',// VO2max (Z5)\nANAEROBIC:'anaerobic',// Capacité anaérobie (Z6)\nSPRINT:'sprint',// Sprint/Neuromuscular (Z7)\nHIIT:'hiit',// Entraînement par intervalles haute intensité (mixte)\nRECOVERY:'recovery',// Récupération active (Z1)\nSTRENGTH:'strength',// Force spécifique (faible cadence, Z3-Z4)\nTECHNIQUE:'technique',// Technique de pédalage, agilité, etc.\nCLIMBING:'climbing',// Entraînement en montée\nLONG_RIDE:'longRide'// Sortie longue\n};// Objectifs d'entraînement\nexport const TRAINING_GOALS={GENERAL_FITNESS:'generalFitness',// Forme générale et santé\nENDURANCE:'enduranceBuilding',// Construction d'endurance\nPOWER:'powerDevelopment',// Développement de puissance\nSPEED:'speedDevelopment',// Développement de vitesse\nWEIGHT_LOSS:'weightLoss',// Perte de poids\nEVENT_PREP:'eventPreparation',// Préparation à un événement\nRACE_PREP:'racePreparation',// Préparation à la compétition\nRECOVERY:'activeRecovery'// Récupération active\n};// Profils de cycliste\nexport const CYCLIST_PROFILES={ALL_ROUND:'allRound',// Polyvalent\nCLIMBER:'climber',// Grimpeur\nROULEUR:'rouleur',// Rouleur\nSPRINTER:'sprinter',// Sprinteur\nPUNCHEUR:'puncheur',// Puncheur\nTIME_TRIAL:'timeTrial',// Spécialiste du contre-la-montre\nRECREATIONAL:'recreational',// Cycliste récréatif\nTOURING:'touring'// Cyclotouriste\n};// Niveaux de cycliste\nexport const CYCLIST_LEVELS={BEGINNER:'beginner',// Débutant\nINTERMEDIATE:'intermediate',// Intermédiaire\nADVANCED:'advanced',// Avancé\nELITE:'elite'// Élite\n};/**\n * Calcule les métriques d'entraînement globales\n * @param {Object} workout - Séance d'entraînement avec intervalles\n * @param {number} ftp - FTP du cycliste\n * @returns {Object} Métriques calculées (TSS, IF, etc.)\n */export const calculateTrainingMetrics=(workout,ftp)=>{if(!workout||!workout.intervals||!Array.isArray(workout.intervals)||!ftp){console.error('Données insuffisantes pour calculer les métriques',{workout,ftp});return{tss:0,if:0,work:0,avgPower:0,normalizedPower:0,duration:0};}try{// Calcul de la durée en secondes\nconst totalDuration=workout.intervals.reduce((total,interval)=>{return total+(interval.duration||0)+(interval.restDuration||0);},0);// Calcul du travail total en joules\nconst totalWork=workout.intervals.reduce((total,interval)=>{const workDuration=interval.duration||0;const power=interval.power||0;return total+workDuration*power;},0);// Puissance moyenne\nconst avgPower=totalWork/totalDuration||0;// Calcul de la puissance normalisée (simplifiée)\n// Normalement nécessite un algorithme plus complexe avec échantillonnage aux 30s\n// Cette simplification est une approximation\nconst normalizedPower=Math.pow(workout.intervals.reduce((total,interval)=>{const workDuration=interval.duration||0;const power=interval.power||0;return total+workDuration*Math.pow(power,4);},0)/totalDuration,0.25)||0;// Intensité relative\nconst intensityFactor=normalizedPower/ftp;// Training Stress Score\nconst tss=totalDuration*normalizedPower*intensityFactor/(ftp*3600)*100;return{tss:Math.round(tss),if:parseFloat(intensityFactor.toFixed(2)),work:Math.round(totalWork/1000),// kJ\navgPower:Math.round(avgPower),normalizedPower:Math.round(normalizedPower),duration:Math.round(totalDuration/60)// minutes\n};}catch(error){console.error('Erreur lors du calcul des métriques d\\'entraînement',error);return{tss:0,if:0,work:0,avgPower:0,normalizedPower:0,duration:0};}};/**\n * Calcule la charge d'entraînement chronique (CTL), aiguë (ATL) et l'équilibre (TSB)\n * @param {Array} activities - Historique des activités avec TSS\n * @param {number} days - Nombre de jours à analyser\n * @returns {Object} CTL, ATL et TSB pour chaque jour\n */export const calculateTrainingLoad=function(activities){let days=arguments.length>1&&arguments[1]!==undefined?arguments[1]:42;if(!activities||!Array.isArray(activities)){return{ctl:[],atl:[],tsb:[]};}// Trier les activités par date\nconst sortedActivities=[...activities].sort((a,b)=>new Date(a.date)-new Date(b.date));// Créer un tableau de jours avec TSS\nconst now=new Date();const daysList=[];for(let i=days-1;i>=0;i--){const date=new Date(now);date.setDate(date.getDate()-i);const dateString=date.toISOString().split('T')[0];// Trouver les activités pour ce jour\nconst dayActivities=sortedActivities.filter(a=>a.date.startsWith(dateString));// Calculer le TSS total pour ce jour\nconst dayTSS=dayActivities.reduce((sum,activity)=>sum+(activity.tss||0),0);daysList.push({date:dateString,tss:dayTSS});}// Calculer CTL (42 jours), ATL (7 jours) et TSB\nconst result=daysList.map((day,index)=>{// Calculer CTL (constante de temps de 42 jours)\nlet ctlSum=0;let ctlDays=0;for(let i=0;i<=Math.min(index,41);i++){const factor=Math.exp(-i/42);ctlSum+=daysList[index-i].tss*factor;ctlDays+=factor;}const ctl=ctlSum/ctlDays;// Calculer ATL (constante de temps de 7 jours)\nlet atlSum=0;let atlDays=0;for(let i=0;i<=Math.min(index,6);i++){const factor=Math.exp(-i/7);atlSum+=daysList[index-i].tss*factor;atlDays+=factor;}const atl=atlSum/atlDays;// TSB = CTL - ATL\nconst tsb=ctl-atl;return{date:day.date,ctl:parseFloat(ctl.toFixed(1)),atl:parseFloat(atl.toFixed(1)),tsb:parseFloat(tsb.toFixed(1)),tss:day.tss};});return result;};/**\n * Détermine les recommandations d'entraînement basées sur le profil et l'historique\n * @param {Object} userProfile - Profil de l'utilisateur\n * @param {Array} trainingHistory - Historique des entraînements\n * @returns {Object} Recommandations personnalisées\n */export const getTrainingRecommendations=(userProfile,trainingHistory)=>{if(!userProfile){return{recommendedTypes:[],weeklyStructure:[],focusAreas:[],message:\"Complétez d'abord votre profil pour obtenir des recommandations personnalisées.\"};}// Extraire les informations pertinentes du profil\nconst{level,goal,profile,ftp,age,weight,hoursPerWeek}=userProfile;// Définir les types d'entraînement recommandés selon le niveau et l'objectif\nlet recommendedTypes=[];let weeklyStructure=[];let focusAreas=[];let message=\"\";// Vérifier et valider la FTP\nconst validFtp=FTPService.validateFTP(ftp,userProfile);// Base pour tous les cyclistes: endurance + récupération\nrecommendedTypes.push(TRAINING_TYPES.ENDURANCE,TRAINING_TYPES.RECOVERY);// Ajuster selon le niveau\nif(level===CYCLIST_LEVELS.BEGINNER){// Débutants: Principalement endurance et technique\nrecommendedTypes.push(TRAINING_TYPES.TECHNIQUE);message=\"Concentrez-vous sur le développement d'une base d'endurance solide et la technique de pédalage.\";weeklyStructure=[{day:1,type:TRAINING_TYPES.ENDURANCE,duration:60},{day:3,type:TRAINING_TYPES.TECHNIQUE,duration:45},{day:5,type:TRAINING_TYPES.ENDURANCE,duration:75},{day:7,type:TRAINING_TYPES.RECOVERY,duration:45}];focusAreas=[\"Constance\",\"Endurance de base\",\"Technique\"];}else if(level===CYCLIST_LEVELS.INTERMEDIATE){// Intermédiaires: Ajouter seuil et force\nrecommendedTypes.push(TRAINING_TYPES.THRESHOLD,TRAINING_TYPES.STRENGTH,TRAINING_TYPES.TEMPO);message=\"Commencez à incorporer des entraînements au seuil et de force spécifique à votre routine.\";weeklyStructure=[{day:1,type:TRAINING_TYPES.ENDURANCE,duration:90},{day:3,type:TRAINING_TYPES.THRESHOLD,duration:60},{day:5,type:TRAINING_TYPES.STRENGTH,duration:60},{day:6,type:TRAINING_TYPES.LONG_RIDE,duration:120},{day:7,type:TRAINING_TYPES.RECOVERY,duration:45}];focusAreas=[\"Seuil de puissance\",\"Force spécifique\",\"Volume d'endurance\"];}else if(level===CYCLIST_LEVELS.ADVANCED||level===CYCLIST_LEVELS.ELITE){// Avancés/Elite: Tous les types d'entraînement\nrecommendedTypes.push(TRAINING_TYPES.THRESHOLD,TRAINING_TYPES.VO2MAX,TRAINING_TYPES.HIIT,TRAINING_TYPES.ANAEROBIC,TRAINING_TYPES.SPRINT,TRAINING_TYPES.STRENGTH);message=\"Votre niveau vous permet d'utiliser toute la gamme des entraînements spécifiques au cyclisme.\";weeklyStructure=[{day:1,type:TRAINING_TYPES.ENDURANCE,duration:120},{day:2,type:TRAINING_TYPES.VO2MAX,duration:60},{day:3,type:TRAINING_TYPES.RECOVERY,duration:45},{day:4,type:TRAINING_TYPES.THRESHOLD,duration:90},{day:5,type:TRAINING_TYPES.HIIT,duration:60},{day:6,type:TRAINING_TYPES.LONG_RIDE,duration:180},{day:7,type:TRAINING_TYPES.RECOVERY,duration:60}];focusAreas=[\"Puissance au seuil\",\"VO2max\",\"Capacité anaérobie\",\"Périodisation\"];}// Ajuster selon le profil de cycliste\nif(profile===CYCLIST_PROFILES.CLIMBER){recommendedTypes.push(TRAINING_TYPES.CLIMBING);focusAreas.push(\"Puissance en montée\",\"Rapport poids/puissance\");}else if(profile===CYCLIST_PROFILES.SPRINTER){recommendedTypes.push(TRAINING_TYPES.SPRINT);focusAreas.push(\"Puissance maximale\",\"Accélération\");}else if(profile===CYCLIST_PROFILES.TOURING){recommendedTypes.push(TRAINING_TYPES.LONG_RIDE);focusAreas.push(\"Endurance longue distance\",\"Économie d'effort\");}// Ajuster selon l'âge\nif(age&&age>50){// Privilégier récupération et limiter haute intensité pour seniors\nfocusAreas.push(\"Récupération optimale\",\"Intensité contrôlée\");message+=\" À votre âge, accordez une attention particulière à la récupération entre les séances.\";}// Intégrer l'historique d'entraînement pour les recommandations\nif(trainingHistory&&trainingHistory.length>0){var _trainingLoad;const recentHistory=trainingHistory.slice(0,14);// Deux dernières semaines\n// Analyser la charge d'entraînement récente\nconst trainingLoad=calculateTrainingLoad(recentHistory);const latestTSB=((_trainingLoad=trainingLoad[trainingLoad.length-1])===null||_trainingLoad===void 0?void 0:_trainingLoad.tsb)||0;// Ajuster selon la fraîcheur/fatigue\nif(latestTSB<-20){// Fatigue importante\nmessage+=\" Votre fatigue est élevée. Privilégiez les séances de récupération cette semaine.\";recommendedTypes=[TRAINING_TYPES.RECOVERY,TRAINING_TYPES.ENDURANCE];}else if(latestTSB>10){// Bonne fraîcheur\nmessage+=\" Votre niveau de fraîcheur est optimal pour des séances de haute intensité.\";}// Identifier les lacunes dans l'entraînement\nconst typeDistribution=recentHistory.reduce((acc,workout)=>{const type=workout.type||TRAINING_TYPES.ENDURANCE;acc[type]=(acc[type]||0)+1;return acc;},{});// Recommander les types sous-représentés\nObject.values(TRAINING_TYPES).forEach(type=>{if(!typeDistribution[type]&&recommendedTypes.includes(type)){message+=` Pensez à intégrer des séances de ${type} qui sont absentes de votre entraînement récent.`;}});}return{recommendedTypes:[...new Set(recommendedTypes)],// Éliminer les doublons\nweeklyStructure,focusAreas,message};};/**\n * Génère un plan d'entraînement personnalisé\n * @param {Object} userProfile - Profil de l'utilisateur\n * @param {Object} preferences - Préférences d'entraînement\n * @param {number} weeks - Durée du plan en semaines\n * @returns {Object} Plan d'entraînement complet\n */export const generateTrainingPlan=function(userProfile,preferences){let weeks=arguments.length>2&&arguments[2]!==undefined?arguments[2]:8;// Cette fonction sera développée pour générer un plan complet\n// avec périodisation et progression\nreturn{// Structure à développer\nstartDate:new Date(),endDate:new Date(Date.now()+weeks*7*24*60*60*1000),phases:[],weeklySchedule:[]};};export default{TRAINING_TYPES,TRAINING_GOALS,CYCLIST_PROFILES,CYCLIST_LEVELS,calculateTrainingMetrics,calculateTrainingLoad,getTrainingRecommendations,generateTrainingPlan};","map":{"version":3,"names":["FTPService","TRAINING_TYPES","ENDURANCE","TEMPO","THRESHOLD","VO2MAX","ANAEROBIC","SPRINT","HIIT","RECOVERY","STRENGTH","TECHNIQUE","CLIMBING","LONG_RIDE","TRAINING_GOALS","GENERAL_FITNESS","POWER","SPEED","WEIGHT_LOSS","EVENT_PREP","RACE_PREP","CYCLIST_PROFILES","ALL_ROUND","CLIMBER","ROULEUR","SPRINTER","PUNCHEUR","TIME_TRIAL","RECREATIONAL","TOURING","CYCLIST_LEVELS","BEGINNER","INTERMEDIATE","ADVANCED","ELITE","calculateTrainingMetrics","workout","ftp","intervals","Array","isArray","console","error","tss","if","work","avgPower","normalizedPower","duration","totalDuration","reduce","total","interval","restDuration","totalWork","workDuration","power","Math","pow","intensityFactor","round","parseFloat","toFixed","calculateTrainingLoad","activities","days","arguments","length","undefined","ctl","atl","tsb","sortedActivities","sort","a","b","Date","date","now","daysList","i","setDate","getDate","dateString","toISOString","split","dayActivities","filter","startsWith","dayTSS","sum","activity","push","result","map","day","index","ctlSum","ctlDays","min","factor","exp","atlSum","atlDays","getTrainingRecommendations","userProfile","trainingHistory","recommendedTypes","weeklyStructure","focusAreas","message","level","goal","profile","age","weight","hoursPerWeek","validFtp","validateFTP","type","_trainingLoad","recentHistory","slice","trainingLoad","latestTSB","typeDistribution","acc","Object","values","forEach","includes","Set","generateTrainingPlan","preferences","weeks","startDate","endDate","phases","weeklySchedule"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/services/TrainingSystem.js"],"sourcesContent":["/**\n * Service centralisé pour le système d'entraînement\n * Gère la cohérence entre les différents types d'entraînement\n * et sert de point d'entrée unifié pour toutes les fonctionnalités liées\n */\n\nimport FTPService from './FTPEstimationService';\n\n// Types d'entraînement disponibles\nexport const TRAINING_TYPES = {\n  ENDURANCE: 'endurance',           // Endurance fondamentale (Z1-Z2)\n  TEMPO: 'tempo',                   // Tempo (Z3)\n  THRESHOLD: 'threshold',           // Seuil (Z4)\n  VO2MAX: 'vo2max',                 // VO2max (Z5)\n  ANAEROBIC: 'anaerobic',           // Capacité anaérobie (Z6)\n  SPRINT: 'sprint',                 // Sprint/Neuromuscular (Z7)\n  HIIT: 'hiit',                     // Entraînement par intervalles haute intensité (mixte)\n  RECOVERY: 'recovery',             // Récupération active (Z1)\n  STRENGTH: 'strength',             // Force spécifique (faible cadence, Z3-Z4)\n  TECHNIQUE: 'technique',           // Technique de pédalage, agilité, etc.\n  CLIMBING: 'climbing',             // Entraînement en montée\n  LONG_RIDE: 'longRide'             // Sortie longue\n};\n\n// Objectifs d'entraînement\nexport const TRAINING_GOALS = {\n  GENERAL_FITNESS: 'generalFitness',    // Forme générale et santé\n  ENDURANCE: 'enduranceBuilding',       // Construction d'endurance\n  POWER: 'powerDevelopment',            // Développement de puissance\n  SPEED: 'speedDevelopment',            // Développement de vitesse\n  WEIGHT_LOSS: 'weightLoss',            // Perte de poids\n  EVENT_PREP: 'eventPreparation',       // Préparation à un événement\n  RACE_PREP: 'racePreparation',         // Préparation à la compétition\n  RECOVERY: 'activeRecovery'            // Récupération active\n};\n\n// Profils de cycliste\nexport const CYCLIST_PROFILES = {\n  ALL_ROUND: 'allRound',            // Polyvalent\n  CLIMBER: 'climber',               // Grimpeur\n  ROULEUR: 'rouleur',               // Rouleur\n  SPRINTER: 'sprinter',             // Sprinteur\n  PUNCHEUR: 'puncheur',             // Puncheur\n  TIME_TRIAL: 'timeTrial',          // Spécialiste du contre-la-montre\n  RECREATIONAL: 'recreational',     // Cycliste récréatif\n  TOURING: 'touring'                // Cyclotouriste\n};\n\n// Niveaux de cycliste\nexport const CYCLIST_LEVELS = {\n  BEGINNER: 'beginner',             // Débutant\n  INTERMEDIATE: 'intermediate',     // Intermédiaire\n  ADVANCED: 'advanced',             // Avancé\n  ELITE: 'elite'                    // Élite\n};\n\n/**\n * Calcule les métriques d'entraînement globales\n * @param {Object} workout - Séance d'entraînement avec intervalles\n * @param {number} ftp - FTP du cycliste\n * @returns {Object} Métriques calculées (TSS, IF, etc.)\n */\nexport const calculateTrainingMetrics = (workout, ftp) => {\n  if (!workout || !workout.intervals || !Array.isArray(workout.intervals) || !ftp) {\n    console.error('Données insuffisantes pour calculer les métriques', { workout, ftp });\n    return {\n      tss: 0,\n      if: 0,\n      work: 0,\n      avgPower: 0,\n      normalizedPower: 0,\n      duration: 0\n    };\n  }\n\n  try {\n    // Calcul de la durée en secondes\n    const totalDuration = workout.intervals.reduce((total, interval) => {\n      return total + (interval.duration || 0) + (interval.restDuration || 0);\n    }, 0);\n    \n    // Calcul du travail total en joules\n    const totalWork = workout.intervals.reduce((total, interval) => {\n      const workDuration = interval.duration || 0;\n      const power = interval.power || 0;\n      return total + (workDuration * power);\n    }, 0);\n    \n    // Puissance moyenne\n    const avgPower = totalWork / totalDuration || 0;\n    \n    // Calcul de la puissance normalisée (simplifiée)\n    // Normalement nécessite un algorithme plus complexe avec échantillonnage aux 30s\n    // Cette simplification est une approximation\n    const normalizedPower = Math.pow(\n      workout.intervals.reduce((total, interval) => {\n        const workDuration = interval.duration || 0;\n        const power = interval.power || 0;\n        return total + (workDuration * Math.pow(power, 4));\n      }, 0) / totalDuration,\n      0.25\n    ) || 0;\n    \n    // Intensité relative\n    const intensityFactor = normalizedPower / ftp;\n    \n    // Training Stress Score\n    const tss = (totalDuration * normalizedPower * intensityFactor) / (ftp * 3600) * 100;\n    \n    return {\n      tss: Math.round(tss),\n      if: parseFloat(intensityFactor.toFixed(2)),\n      work: Math.round(totalWork / 1000), // kJ\n      avgPower: Math.round(avgPower),\n      normalizedPower: Math.round(normalizedPower),\n      duration: Math.round(totalDuration / 60) // minutes\n    };\n  } catch (error) {\n    console.error('Erreur lors du calcul des métriques d\\'entraînement', error);\n    return {\n      tss: 0,\n      if: 0,\n      work: 0,\n      avgPower: 0,\n      normalizedPower: 0,\n      duration: 0\n    };\n  }\n};\n\n/**\n * Calcule la charge d'entraînement chronique (CTL), aiguë (ATL) et l'équilibre (TSB)\n * @param {Array} activities - Historique des activités avec TSS\n * @param {number} days - Nombre de jours à analyser\n * @returns {Object} CTL, ATL et TSB pour chaque jour\n */\nexport const calculateTrainingLoad = (activities, days = 42) => {\n  if (!activities || !Array.isArray(activities)) {\n    return { ctl: [], atl: [], tsb: [] };\n  }\n\n  // Trier les activités par date\n  const sortedActivities = [...activities].sort((a, b) => \n    new Date(a.date) - new Date(b.date)\n  );\n\n  // Créer un tableau de jours avec TSS\n  const now = new Date();\n  const daysList = [];\n  \n  for (let i = days - 1; i >= 0; i--) {\n    const date = new Date(now);\n    date.setDate(date.getDate() - i);\n    const dateString = date.toISOString().split('T')[0];\n    \n    // Trouver les activités pour ce jour\n    const dayActivities = sortedActivities.filter(a => \n      a.date.startsWith(dateString)\n    );\n    \n    // Calculer le TSS total pour ce jour\n    const dayTSS = dayActivities.reduce((sum, activity) => \n      sum + (activity.tss || 0), 0\n    );\n    \n    daysList.push({\n      date: dateString,\n      tss: dayTSS\n    });\n  }\n  \n  // Calculer CTL (42 jours), ATL (7 jours) et TSB\n  const result = daysList.map((day, index) => {\n    // Calculer CTL (constante de temps de 42 jours)\n    let ctlSum = 0;\n    let ctlDays = 0;\n    \n    for (let i = 0; i <= Math.min(index, 41); i++) {\n      const factor = Math.exp(-i / 42);\n      ctlSum += daysList[index - i].tss * factor;\n      ctlDays += factor;\n    }\n    \n    const ctl = ctlSum / ctlDays;\n    \n    // Calculer ATL (constante de temps de 7 jours)\n    let atlSum = 0;\n    let atlDays = 0;\n    \n    for (let i = 0; i <= Math.min(index, 6); i++) {\n      const factor = Math.exp(-i / 7);\n      atlSum += daysList[index - i].tss * factor;\n      atlDays += factor;\n    }\n    \n    const atl = atlSum / atlDays;\n    \n    // TSB = CTL - ATL\n    const tsb = ctl - atl;\n    \n    return {\n      date: day.date,\n      ctl: parseFloat(ctl.toFixed(1)),\n      atl: parseFloat(atl.toFixed(1)),\n      tsb: parseFloat(tsb.toFixed(1)),\n      tss: day.tss\n    };\n  });\n  \n  return result;\n};\n\n/**\n * Détermine les recommandations d'entraînement basées sur le profil et l'historique\n * @param {Object} userProfile - Profil de l'utilisateur\n * @param {Array} trainingHistory - Historique des entraînements\n * @returns {Object} Recommandations personnalisées\n */\nexport const getTrainingRecommendations = (userProfile, trainingHistory) => {\n  if (!userProfile) {\n    return { \n      recommendedTypes: [], \n      weeklyStructure: [],\n      focusAreas: [],\n      message: \"Complétez d'abord votre profil pour obtenir des recommandations personnalisées.\"\n    };\n  }\n  \n  // Extraire les informations pertinentes du profil\n  const { level, goal, profile, ftp, age, weight, hoursPerWeek } = userProfile;\n  \n  // Définir les types d'entraînement recommandés selon le niveau et l'objectif\n  let recommendedTypes = [];\n  let weeklyStructure = [];\n  let focusAreas = [];\n  let message = \"\";\n  \n  // Vérifier et valider la FTP\n  const validFtp = FTPService.validateFTP(ftp, userProfile);\n  \n  // Base pour tous les cyclistes: endurance + récupération\n  recommendedTypes.push(TRAINING_TYPES.ENDURANCE, TRAINING_TYPES.RECOVERY);\n  \n  // Ajuster selon le niveau\n  if (level === CYCLIST_LEVELS.BEGINNER) {\n    // Débutants: Principalement endurance et technique\n    recommendedTypes.push(TRAINING_TYPES.TECHNIQUE);\n    message = \"Concentrez-vous sur le développement d'une base d'endurance solide et la technique de pédalage.\";\n    \n    weeklyStructure = [\n      { day: 1, type: TRAINING_TYPES.ENDURANCE, duration: 60 },\n      { day: 3, type: TRAINING_TYPES.TECHNIQUE, duration: 45 },\n      { day: 5, type: TRAINING_TYPES.ENDURANCE, duration: 75 },\n      { day: 7, type: TRAINING_TYPES.RECOVERY, duration: 45 }\n    ];\n    \n    focusAreas = [\"Constance\", \"Endurance de base\", \"Technique\"];\n    \n  } else if (level === CYCLIST_LEVELS.INTERMEDIATE) {\n    // Intermédiaires: Ajouter seuil et force\n    recommendedTypes.push(\n      TRAINING_TYPES.THRESHOLD, \n      TRAINING_TYPES.STRENGTH,\n      TRAINING_TYPES.TEMPO\n    );\n    \n    message = \"Commencez à incorporer des entraînements au seuil et de force spécifique à votre routine.\";\n    \n    weeklyStructure = [\n      { day: 1, type: TRAINING_TYPES.ENDURANCE, duration: 90 },\n      { day: 3, type: TRAINING_TYPES.THRESHOLD, duration: 60 },\n      { day: 5, type: TRAINING_TYPES.STRENGTH, duration: 60 },\n      { day: 6, type: TRAINING_TYPES.LONG_RIDE, duration: 120 },\n      { day: 7, type: TRAINING_TYPES.RECOVERY, duration: 45 }\n    ];\n    \n    focusAreas = [\"Seuil de puissance\", \"Force spécifique\", \"Volume d'endurance\"];\n    \n  } else if (level === CYCLIST_LEVELS.ADVANCED || level === CYCLIST_LEVELS.ELITE) {\n    // Avancés/Elite: Tous les types d'entraînement\n    recommendedTypes.push(\n      TRAINING_TYPES.THRESHOLD,\n      TRAINING_TYPES.VO2MAX,\n      TRAINING_TYPES.HIIT,\n      TRAINING_TYPES.ANAEROBIC,\n      TRAINING_TYPES.SPRINT,\n      TRAINING_TYPES.STRENGTH\n    );\n    \n    message = \"Votre niveau vous permet d'utiliser toute la gamme des entraînements spécifiques au cyclisme.\";\n    \n    weeklyStructure = [\n      { day: 1, type: TRAINING_TYPES.ENDURANCE, duration: 120 },\n      { day: 2, type: TRAINING_TYPES.VO2MAX, duration: 60 },\n      { day: 3, type: TRAINING_TYPES.RECOVERY, duration: 45 },\n      { day: 4, type: TRAINING_TYPES.THRESHOLD, duration: 90 },\n      { day: 5, type: TRAINING_TYPES.HIIT, duration: 60 },\n      { day: 6, type: TRAINING_TYPES.LONG_RIDE, duration: 180 },\n      { day: 7, type: TRAINING_TYPES.RECOVERY, duration: 60 }\n    ];\n    \n    focusAreas = [\"Puissance au seuil\", \"VO2max\", \"Capacité anaérobie\", \"Périodisation\"];\n  }\n  \n  // Ajuster selon le profil de cycliste\n  if (profile === CYCLIST_PROFILES.CLIMBER) {\n    recommendedTypes.push(TRAINING_TYPES.CLIMBING);\n    focusAreas.push(\"Puissance en montée\", \"Rapport poids/puissance\");\n  } else if (profile === CYCLIST_PROFILES.SPRINTER) {\n    recommendedTypes.push(TRAINING_TYPES.SPRINT);\n    focusAreas.push(\"Puissance maximale\", \"Accélération\");\n  } else if (profile === CYCLIST_PROFILES.TOURING) {\n    recommendedTypes.push(TRAINING_TYPES.LONG_RIDE);\n    focusAreas.push(\"Endurance longue distance\", \"Économie d'effort\");\n  }\n  \n  // Ajuster selon l'âge\n  if (age && age > 50) {\n    // Privilégier récupération et limiter haute intensité pour seniors\n    focusAreas.push(\"Récupération optimale\", \"Intensité contrôlée\");\n    message += \" À votre âge, accordez une attention particulière à la récupération entre les séances.\";\n  }\n  \n  // Intégrer l'historique d'entraînement pour les recommandations\n  if (trainingHistory && trainingHistory.length > 0) {\n    const recentHistory = trainingHistory.slice(0, 14); // Deux dernières semaines\n    \n    // Analyser la charge d'entraînement récente\n    const trainingLoad = calculateTrainingLoad(recentHistory);\n    const latestTSB = trainingLoad[trainingLoad.length - 1]?.tsb || 0;\n    \n    // Ajuster selon la fraîcheur/fatigue\n    if (latestTSB < -20) {\n      // Fatigue importante\n      message += \" Votre fatigue est élevée. Privilégiez les séances de récupération cette semaine.\";\n      recommendedTypes = [TRAINING_TYPES.RECOVERY, TRAINING_TYPES.ENDURANCE];\n    } else if (latestTSB > 10) {\n      // Bonne fraîcheur\n      message += \" Votre niveau de fraîcheur est optimal pour des séances de haute intensité.\";\n    }\n    \n    // Identifier les lacunes dans l'entraînement\n    const typeDistribution = recentHistory.reduce((acc, workout) => {\n      const type = workout.type || TRAINING_TYPES.ENDURANCE;\n      acc[type] = (acc[type] || 0) + 1;\n      return acc;\n    }, {});\n    \n    // Recommander les types sous-représentés\n    Object.values(TRAINING_TYPES).forEach(type => {\n      if (!typeDistribution[type] && recommendedTypes.includes(type)) {\n        message += ` Pensez à intégrer des séances de ${type} qui sont absentes de votre entraînement récent.`;\n      }\n    });\n  }\n  \n  return {\n    recommendedTypes: [...new Set(recommendedTypes)], // Éliminer les doublons\n    weeklyStructure,\n    focusAreas,\n    message\n  };\n};\n\n/**\n * Génère un plan d'entraînement personnalisé\n * @param {Object} userProfile - Profil de l'utilisateur\n * @param {Object} preferences - Préférences d'entraînement\n * @param {number} weeks - Durée du plan en semaines\n * @returns {Object} Plan d'entraînement complet\n */\nexport const generateTrainingPlan = (userProfile, preferences, weeks = 8) => {\n  // Cette fonction sera développée pour générer un plan complet\n  // avec périodisation et progression\n  \n  return {\n    // Structure à développer\n    startDate: new Date(),\n    endDate: new Date(Date.now() + weeks * 7 * 24 * 60 * 60 * 1000),\n    phases: [],\n    weeklySchedule: []\n  };\n};\n\nexport default {\n  TRAINING_TYPES,\n  TRAINING_GOALS,\n  CYCLIST_PROFILES,\n  CYCLIST_LEVELS,\n  calculateTrainingMetrics,\n  calculateTrainingLoad,\n  getTrainingRecommendations,\n  generateTrainingPlan\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}