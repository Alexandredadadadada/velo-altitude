{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{Box,Card,CardContent,Typography,Grid,Tabs,Tab,Button,TextField,FormControl,InputLabel,Select,MenuItem,Divider,Chip,CircularProgress,Paper,Alert,IconButton,Tooltip,InputAdornment,ToggleButtonGroup,ToggleButton,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Slider,Badge}from'@mui/material';import{DirectionsRun as RunIcon,FitnessCenter as FitnessIcon,Timer as TimerIcon,LocalFireDepartment as FireIcon,Favorite as HeartIcon,Info as InfoIcon,Save as SaveIcon,TimelapseRounded as ClockIcon,BoltRounded as ExpressIcon,Terrain as MountainIcon,Balance as BalanceIcon,ViewModule as StructuredIcon,FilterAlt as FilterIcon,Settings as SettingsIcon}from'@mui/icons-material';import{LineChart,Line,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip as RechartsTooltip,Legend,ResponsiveContainer,PieChart,Pie,Cell}from'recharts';import{useNotification}from'../common/NotificationSystem';import{brandConfig}from'../../config/branding';import CalorieCalculator from'./CalorieCalculator';import UserService from'../../services/UserService';// Importer les données HIIT structurées\nimport{hiitWorkoutsByTime,hiitWorkoutsByCalories,workoutBadges,getAllWorkouts,findWorkouts,calculateCalories}from'../../data/hiitWorkouts';/**\n * Composant de programmes HIIT spécifiques pour fitness et entraînement cycliste\n * Permet de créer et suivre des programmes d'entraînement par intervalles à haute intensité\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const HIITBuilder=_ref=>{let{userProfile,onSaveWorkout}=_ref;const{t}=useTranslation();const{notify}=useNotification();const[activeTab,setActiveTab]=useState(0);const[loading,setLoading]=useState(false);const[workouts,setWorkouts]=useState([]);const[selectedWorkout,setSelectedWorkout]=useState(null);const[filterView,setFilterView]=useState('time');// 'time' ou 'calories'\nconst[filterCriteria,setFilterCriteria]=useState({minDuration:0,maxDuration:90,minCalories:0,maxCalories:1200,type:'all',badgeType:'all'});const[customWorkout,setCustomWorkout]=useState({name:'',description:'',targetSystem:'aerobic',// aerobic, anaerobic, mixed\nduration:30,intervals:[]});const[currentInterval,setCurrentInterval]=useState({intensity:90,// % of FTP or max heart rate\nduration:30,// seconds\nrecovery:30,// seconds\nrepetitions:5});const[previewData,setPreviewData]=useState([]);// État pour le calculateur de calories\nconst[calorieCalculatorOpen,setCalorieCalculatorOpen]=useState(false);const[calorieSettings,setCalorieSettings]=useState({weight:(userProfile===null||userProfile===void 0?void 0:userProfile.weight)||70,age:(userProfile===null||userProfile===void 0?void 0:userProfile.age)||35,gender:(userProfile===null||userProfile===void 0?void 0:userProfile.gender)||'male',activityLevel:(userProfile===null||userProfile===void 0?void 0:userProfile.cyclist_type)==='beginner'?'beginner':(userProfile===null||userProfile===void 0?void 0:userProfile.cyclist_type)==='all-rounder'?'recreational':(userProfile===null||userProfile===void 0?void 0:userProfile.cyclist_type)==='climber'?'intermediate':(userProfile===null||userProfile===void 0?void 0:userProfile.cyclist_type)==='sprinter'?'advanced':'recreational',ftp:(userProfile===null||userProfile===void 0?void 0:userProfile.ftp)||200,useCustomFTP:userProfile!==null&&userProfile!==void 0&&userProfile.ftp?true:false});const[personalizedCalories,setPersonalizedCalories]=useState(true);// Systèmes d'énergie ciblés\nconst energySystems=[{value:'aerobic',label:t('aerobicSystem'),color:'#4CAF50',description:t('aerobicSystemDesc')},{value:'anaerobic',label:t('anaerobicSystem'),color:'#F44336',description:t('anaerobicSystemDesc')},{value:'mixed',label:t('mixedSystem'),color:'#FF9800',description:t('mixedSystemDesc')},{value:'neuromuscular',label:t('neuromuscularSystem'),color:'#9C27B0',description:t('neuromuscularSystemDesc')}];// Charger les templates HIIT\nuseEffect(()=>{if(userProfile){loadHIITData();}},[userProfile]);// Charger toutes les données HIIT\nconst loadHIITData=()=>{setLoading(true);// Utiliser les données du fichier hiitWorkouts.js au lieu des mocks\nsetWorkouts(getAllWorkouts());setLoading(false);};// Filtrer les séances HIIT selon les critères\nconst getFilteredWorkouts=()=>{return findWorkouts({minDuration:filterCriteria.minDuration,maxDuration:filterCriteria.maxDuration,minCalories:filterCriteria.minCalories,maxCalories:filterCriteria.maxCalories,type:filterCriteria.type!=='all'?filterCriteria.type:undefined,badgeType:filterCriteria.badgeType!=='all'?filterCriteria.badgeType:undefined});};// Gérer le changement d'onglet\nconst handleTabChange=(event,newValue)=>{setActiveTab(newValue);};// Gérer le changement de vue des filtres (temps ou calories)\nconst handleFilterViewChange=(event,newView)=>{if(newView!==null){setFilterView(newView);}};// Gérer les changements dans les critères de filtre\nconst handleFilterChange=(name,value)=>{setFilterCriteria(prev=>({...prev,[name]:value}));};// Générer un rendu pour le badge d'une séance\nconst renderWorkoutBadge=badgeType=>{if(!badgeType||!workoutBadges[badgeType])return null;const badge=workoutBadges[badgeType];const icon={'bolt':/*#__PURE__*/_jsx(ExpressIcon,{}),'local_fire_department':/*#__PURE__*/_jsx(FireIcon,{}),'terrain':/*#__PURE__*/_jsx(MountainIcon,{}),'watch_later':/*#__PURE__*/_jsx(ClockIcon,{}),'balance':/*#__PURE__*/_jsx(BalanceIcon,{}),'view_module':/*#__PURE__*/_jsx(StructuredIcon,{})}[badge.icon]||/*#__PURE__*/_jsx(InfoIcon,{});return/*#__PURE__*/_jsx(Chip,{icon:icon,label:badge.label,size:\"small\",sx:{backgroundColor:badge.color,color:'white',fontWeight:500,'& .MuiChip-icon':{color:'white'}}});};// Sélectionner une séance\nconst handleSelectWorkout=workout=>{setSelectedWorkout(workout);setActiveTab(3);// Passer à l'onglet de prévisualisation\nnotify({message:t('workoutSelected',{name:workout.name}),severity:'success'});};// Générer des intervalles simples\nconst generateIntervals=(workSecs,restSecs,repetitions,intensity)=>{const intervals=[];// Échauffement: 10 minutes en Z1-Z2\nintervals.push({type:'warmup',duration:600,intensity:60,label:t('warmup')});// Intervalles principaux\nfor(let i=0;i<repetitions;i++){intervals.push({type:'work',duration:workSecs,intensity:intensity,label:`${t('interval')} ${i+1}/${repetitions}`});intervals.push({type:'rest',duration:restSecs,intensity:50,label:`${t('recovery')} ${i+1}/${repetitions}`});}// Récupération: 5 minutes en Z1\nintervals.push({type:'cooldown',duration:300,intensity:50,label:t('cooldown')});return intervals;};// Générer des intervalles Sweet Spot (nouveau)\nconst generateSweetSpotIntervals=(repetitions,workSecs,restSecs,intensity)=>{const intervals=[];// Échauffement: 15 minutes progression Z1 à Z3\nintervals.push({type:'warmup',duration:900,intensity:65,label:t('warmup'),progressiveIntensity:true});// Intervalles Sweet Spot\nfor(let i=0;i<repetitions;i++){intervals.push({type:'work',duration:workSecs,intensity:intensity,label:`${t('sweetSpotInterval')} ${i+1}/${repetitions}`});intervals.push({type:'rest',duration:restSecs,intensity:55,label:`${t('recovery')} ${i+1}/${repetitions}`});}// Récupération: 10 minutes en Z1\nintervals.push({type:'cooldown',duration:600,intensity:50,label:t('cooldown')});return intervals;};// Générer des intervalles au seuil (nouveau)\nconst generateThresholdIntervals=(repetitions,workSecs,restSecs,intensity)=>{const intervals=[];// Échauffement: 15 minutes progression Z1 à Z3\nintervals.push({type:'warmup',duration:900,intensity:65,label:t('warmup'),progressiveIntensity:true});// Intervalles au seuil\nfor(let i=0;i<repetitions;i++){intervals.push({type:'work',duration:workSecs,intensity:intensity,label:`${t('thresholdInterval')} ${i+1}/${repetitions}`});intervals.push({type:'rest',duration:restSecs,intensity:55,label:`${t('recovery')} ${i+1}/${repetitions}`});}// Récupération: 10 minutes en Z1\nintervals.push({type:'cooldown',duration:600,intensity:50,label:t('cooldown')});return intervals;};// Générer une simulation de montée avec intensité progressive (nouveau)\nconst generateClimbPyramid=()=>{const intervals=[];// Échauffement: 15 minutes\nintervals.push({type:'warmup',duration:900,intensity:65,label:t('warmup'),progressiveIntensity:true});// Phase 1: Approche de la montée (75% FTP pendant 5 min)\nintervals.push({type:'work',duration:300,intensity:75,label:t('approachClimb')});// Phase 2: Début de montée (85% FTP pendant 5 min)\nintervals.push({type:'work',duration:300,intensity:85,label:t('startClimb')});// Phase 3: Section raide (100% FTP pendant 3 min)\nintervals.push({type:'work',duration:180,intensity:100,label:t('steepSection')});// Phase 4: Section très raide (110% FTP pendant 2 min)\nintervals.push({type:'work',duration:120,intensity:110,label:t('verySteepSection')});// Phase 5: Sommet (120% FTP pendant 1 min)\nintervals.push({type:'work',duration:60,intensity:120,label:t('summit')});// Phase 6: Récupération active (60% FTP pendant 5 min)\nintervals.push({type:'rest',duration:300,intensity:60,label:t('activeRecovery')});// Phase 7: Deuxième montée (inverse de la première)\nintervals.push({type:'work',duration:60,intensity:120,label:t('summit2')});intervals.push({type:'work',duration:120,intensity:110,label:t('verySteepSection2')});intervals.push({type:'work',duration:180,intensity:100,label:t('steepSection2')});intervals.push({type:'work',duration:300,intensity:85,label:t('descentClimb')});// Récupération: 10 minutes en Z1\nintervals.push({type:'cooldown',duration:600,intensity:50,label:t('cooldown')});return intervals;};// Calculer les statistiques du workout\nconst calculateWorkoutStats=intervals=>{if(!intervals||intervals.length===0){return{totalDuration:0,workDuration:0,restDuration:0,avgIntensity:0,maxIntensity:0,tss:0,intensityDistribution:[]};}let totalDuration=0;let totalWorkDuration=0;let totalRestDuration=0;let intensitySum=0;let maxIntensity=0;let workIfNormalized=0;// Distribution de l'intensité par zones\nconst zoneDistribution={'Z1':0,// Récupération (<60% FTP)\n'Z2':0,// Endurance (60-75% FTP)\n'Z3':0,// Tempo (76-90% FTP)\n'Z4':0,// Seuil (91-105% FTP)\n'Z5':0,// VO2Max (106-120% FTP)\n'Z6':0// Anaérobie (>120% FTP)\n};intervals.forEach(interval=>{totalDuration+=interval.duration;if(interval.type==='work'){totalWorkDuration+=interval.duration;}else if(interval.type==='rest'||interval.type==='cooldown'){totalRestDuration+=interval.duration;}intensitySum+=interval.intensity*interval.duration;maxIntensity=Math.max(maxIntensity,interval.intensity);// Calculer le travail normalisé (pour TSS)\nconst normalizedIntensity=Math.pow(interval.intensity/100,4);workIfNormalized+=normalizedIntensity*interval.duration;// Ajouter à la distribution des zones\nif(interval.intensity<=60){zoneDistribution['Z1']+=interval.duration;}else if(interval.intensity<=75){zoneDistribution['Z2']+=interval.duration;}else if(interval.intensity<=90){zoneDistribution['Z3']+=interval.duration;}else if(interval.intensity<=105){zoneDistribution['Z4']+=interval.duration;}else if(interval.intensity<=120){zoneDistribution['Z5']+=interval.duration;}else{zoneDistribution['Z6']+=interval.duration;}});const avgIntensity=intensitySum/totalDuration;// Calculer l'intensité normalisée\nconst normalizedIntensity=Math.pow(workIfNormalized/totalDuration,0.25)*100;// Calculer le TSS\n// TSS = (sec × NP × IF) ÷ (FTP × 3600) × 100\n// Où IF = NP/FTP\nconst userFTP=(userProfile===null||userProfile===void 0?void 0:userProfile.ftp)||200;const intensityFactor=normalizedIntensity/100;const tss=Math.round(totalDuration*normalizedIntensity*intensityFactor/(userFTP*36));// Préparer les données pour le graphique de distribution des zones\nconst intensityDistribution=Object.keys(zoneDistribution).map(zone=>{return{name:zone,value:Math.round(zoneDistribution[zone]/60),// Convertir en minutes\ntime:formatTime(zoneDistribution[zone])};});return{totalDuration,workDuration:totalWorkDuration,restDuration:totalRestDuration,avgIntensity,maxIntensity,normalizedIntensity:Math.round(normalizedIntensity),tss,intensityDistribution};};// Formater les secondes en format MM:SS\nconst formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins}:${secs<10?'0':''}${secs}`;};// Gérer la sauvegarde du workout\nconst handleSaveWorkout=workout=>{if(onSaveWorkout){// Ajouter des métadonnées avant de sauvegarder\nconst workoutToSave={...workout,id:workout.id||`custom-${Date.now()}`,createdAt:new Date().toISOString(),stats:calculateWorkoutStats(workout.intervals),calories:workout.caloriesBurned||calculateWorkoutStats(workout.intervals).calories};onSaveWorkout(workoutToSave);notify({message:t('workoutSaved',{name:workout.name}),severity:'success'});}};// Gérer les changements des paramètres de calories\nconst handleCalorieSettingsChange=newSettings=>{setCalorieSettings(newSettings);// Si nous avons un utilisateur connecté, enregistrer ses préférences\nif(userProfile&&userProfile.id){try{// Dans une véritable implémentation, cela appellerait l'API pour sauvegarder les préférences\nconsole.log('Sauvegarde des préférences calorigènes:',newSettings);notify(t('caloriePreferencesSaved'),'success');}catch(error){console.error('Erreur lors de la sauvegarde des préférences:',error);notify(t('errorSavingPreferences'),'error');}}// Mettre à jour les calories personnalisées pour tous les workouts\nsetPersonalizedCalories(true);};// Calculer les calories personnalisées pour un workout\nconst getPersonalizedCalories=workout=>{if(!personalizedCalories||!workout)return workout.caloriesBurned;// Calculer l'intensité totale pour cette séance\nlet totalIntensity=0;if(workout.format){totalIntensity=workout.format.reduce((total,interval)=>{const duration=interval.duration||0;const intensity=interval.intensity||0;const repeat=interval.repeat||1;if(interval.recovery&&interval.recoveryIntensity){const recoveryEffort=interval.recovery*interval.recoveryIntensity*repeat;return total+duration*intensity*repeat+recoveryEffort;}return total+duration*intensity*repeat;},0);}// Utiliser la fonction de calcul des calories\nreturn calculateCalories(totalIntensity,calorieSettings.weight,calorieSettings.ftp);};// Rendu des onglets\nconst renderTabContent=()=>{var _energySystems$find,_energySystems$find2;switch(activeTab){case 0:// Catalogue de séances\nreturn/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:t('workoutCatalog')}),loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Paper,{sx:{p:2,mb:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[/*#__PURE__*/_jsx(FilterIcon,{fontSize:\"small\",sx:{mr:1,verticalAlign:'middle'}}),t('filterWorkouts')]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsxs(ToggleButtonGroup,{value:filterView,exclusive:true,onChange:handleFilterViewChange,\"aria-label\":\"filter view\",size:\"small\",sx:{mb:2},children:[/*#__PURE__*/_jsxs(ToggleButton,{value:\"time\",\"aria-label\":\"filter by time\",children:[/*#__PURE__*/_jsx(TimerIcon,{fontSize:\"small\",sx:{mr:1}}),t('filterByTime')]}),/*#__PURE__*/_jsxs(ToggleButton,{value:\"calories\",\"aria-label\":\"filter by calories\",children:[/*#__PURE__*/_jsx(FireIcon,{fontSize:\"small\",sx:{mr:1}}),t('filterByCalories')]})]}),filterView==='time'?/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',px:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[t('duration'),\": \",filterCriteria.minDuration,\" - \",filterCriteria.maxDuration,\" min\"]}),/*#__PURE__*/_jsx(Slider,{value:[filterCriteria.minDuration,filterCriteria.maxDuration],onChange:(e,value)=>{handleFilterChange('minDuration',value[0]);handleFilterChange('maxDuration',value[1]);},valueLabelDisplay:\"auto\",min:0,max:90,step:5})]}):/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',px:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[t('calories'),\": \",filterCriteria.minCalories,\" - \",filterCriteria.maxCalories,\" kcal\"]}),/*#__PURE__*/_jsx(Slider,{value:[filterCriteria.minCalories,filterCriteria.maxCalories],onChange:(e,value)=>{handleFilterChange('minCalories',value[0]);handleFilterChange('maxCalories',value[1]);},valueLabelDisplay:\"auto\",min:0,max:1200,step:100})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsxs(FormControl,{size:\"small\",fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"workout-type-label\",children:t('workoutType')}),/*#__PURE__*/_jsxs(Select,{labelId:\"workout-type-label\",value:filterCriteria.type,onChange:e=>handleFilterChange('type',e.target.value),label:t('workoutType'),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:t('allTypes')}),/*#__PURE__*/_jsx(MenuItem,{value:\"power\",children:t('power')}),/*#__PURE__*/_jsx(MenuItem,{value:\"endurance\",children:t('endurance')}),/*#__PURE__*/_jsx(MenuItem,{value:\"mountain\",children:t('mountain')})]})]}),/*#__PURE__*/_jsxs(FormControl,{size:\"small\",fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"badge-type-label\",children:t('workoutCategory')}),/*#__PURE__*/_jsxs(Select,{labelId:\"badge-type-label\",value:filterCriteria.badgeType,onChange:e=>handleFilterChange('badgeType',e.target.value),label:t('workoutCategory'),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:t('allCategories')}),Object.entries(workoutBadges).map(_ref2=>{let[key,badge]=_ref2;return/*#__PURE__*/_jsx(MenuItem,{value:key,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:12,height:12,borderRadius:'50%',bgcolor:badge.color,mr:1}}),badge.label]})},key);})]})]})]})]})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[getFilteredWorkouts().length,\" \",t('workoutsFound')]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:getFilteredWorkouts().map(workout=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{height:'100%',display:'flex',flexDirection:'column',transition:'transform 0.2s','&:hover':{transform:'translateY(-4px)',boxShadow:6}},children:[/*#__PURE__*/_jsxs(CardContent,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",children:workout.name}),renderWorkoutBadge(workout.badgeType)]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2,minHeight:40},children:workout.description}),/*#__PURE__*/_jsx(Divider,{sx:{my:1}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mt:2},children:[/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(TimerIcon,{}),size:\"small\",label:`${workout.duration} min`,variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(FireIcon,{}),size:\"small\",label:`${workout.caloriesBurned} kcal`,variant:\"outlined\",color:\"error\"}),/*#__PURE__*/_jsx(Chip,{icon:workout.intensity==='high'||workout.intensity==='very-high'?/*#__PURE__*/_jsx(FitnessIcon,{}):/*#__PURE__*/_jsx(HeartIcon,{}),size:\"small\",label:t(workout.intensity),variant:\"outlined\",color:workout.intensity==='high'?'warning':workout.intensity==='very-high'?'error':'primary'})]})]}),/*#__PURE__*/_jsx(Box,{sx:{p:2,pt:0},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,onClick:()=>handleSelectWorkout(workout),children:t('selectWorkout')})})]})},workout.id))})]})]});case 1:// Création de séance personnalisée\nreturn/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:t('customWorkout')}),/*#__PURE__*/_jsx(Paper,{sx:{p:2,mb:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{label:t('workoutName'),value:customWorkout.name,onChange:e=>setCustomWorkout({...customWorkout,name:e.target.value}),fullWidth:true,margin:\"normal\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:t('targetSystem')}),/*#__PURE__*/_jsx(Select,{value:customWorkout.targetSystem,onChange:e=>setCustomWorkout({...customWorkout,targetSystem:e.target.value}),label:t('targetSystem'),children:energySystems.map(system=>/*#__PURE__*/_jsx(MenuItem,{value:system.value,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:12,height:12,borderRadius:'50%',bgcolor:system.color,mr:1}}),system.label]})},system.value))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{label:t('workoutDescription'),value:customWorkout.description,onChange:e=>setCustomWorkout({...customWorkout,description:e.target.value}),fullWidth:true,multiline:true,rows:2,margin:\"normal\"})})]})}),/*#__PURE__*/_jsxs(Paper,{sx:{p:2,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t('addIntervals')}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:3,children:/*#__PURE__*/_jsx(TextField,{label:t('workDuration'),type:\"number\",value:currentInterval.duration,onChange:e=>setCurrentInterval({...currentInterval,duration:parseInt(e.target.value)}),fullWidth:true,margin:\"normal\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:t('seconds')})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:3,children:/*#__PURE__*/_jsx(TextField,{label:t('recovery'),type:\"number\",value:currentInterval.recovery,onChange:e=>setCurrentInterval({...currentInterval,recovery:parseInt(e.target.value)}),fullWidth:true,margin:\"normal\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:t('seconds')})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:3,children:/*#__PURE__*/_jsx(TextField,{label:t('intensity'),type:\"number\",value:currentInterval.intensity,onChange:e=>setCurrentInterval({...currentInterval,intensity:parseInt(e.target.value)}),fullWidth:true,margin:\"normal\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"% FTP\"})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:3,children:/*#__PURE__*/_jsx(TextField,{label:t('repetitions'),type:\"number\",value:currentInterval.repetitions,onChange:e=>setCurrentInterval({...currentInterval,repetitions:parseInt(e.target.value)}),fullWidth:true,margin:\"normal\"})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,display:'flex',flexWrap:'wrap',gap:1},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{const newIntervals=generateIntervals(currentInterval.duration,currentInterval.recovery,currentInterval.repetitions,currentInterval.intensity);setCustomWorkout({...customWorkout,intervals:[...customWorkout.intervals,...newIntervals]});},children:t('addBasicIntervals')}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{const newIntervals=generateSweetSpotIntervals(currentInterval.repetitions,currentInterval.duration,currentInterval.recovery,currentInterval.intensity);setCustomWorkout({...customWorkout,intervals:[...customWorkout.intervals,...newIntervals]});},children:t('addSweetSpotIntervals')}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{const newIntervals=generateThresholdIntervals(currentInterval.repetitions,currentInterval.duration,currentInterval.recovery,currentInterval.intensity);setCustomWorkout({...customWorkout,intervals:[...customWorkout.intervals,...newIntervals]});},children:t('addThresholdIntervals')}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{const newIntervals=generateClimbPyramid();setCustomWorkout({...customWorkout,intervals:[...customWorkout.intervals,...newIntervals]});},children:t('addClimbPyramid')})]})]}),customWorkout.intervals.length>0&&/*#__PURE__*/_jsxs(Paper,{sx:{p:2,mb:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:t('currentIntervals')}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",size:\"small\",onClick:()=>setCustomWorkout({...customWorkout,intervals:[]}),children:t('clearAll')})]}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('type')}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:t('duration')}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:t('intensity')}),/*#__PURE__*/_jsx(TableCell,{children:t('description')})]})}),/*#__PURE__*/_jsx(TableBody,{children:customWorkout.intervals.map((interval,idx)=>/*#__PURE__*/_jsxs(TableRow,{sx:{backgroundColor:interval.type==='work'?'rgba(244, 67, 54, 0.1)':interval.type==='rest'?'rgba(76, 175, 80, 0.1)':interval.type==='warmup'?'rgba(33, 150, 243, 0.1)':'rgba(255, 152, 0, 0.1)'},children:[/*#__PURE__*/_jsx(TableCell,{children:interval.type==='work'?t('work'):interval.type==='rest'?t('rest'):interval.type==='warmup'?t('warmup'):t('cooldown')}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[Math.floor(interval.duration/60),\":\",(interval.duration%60).toString().padStart(2,'0')]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[interval.intensity,\"% FTP\"]}),/*#__PURE__*/_jsx(TableCell,{children:interval.label})]},idx))})]})}),/*#__PURE__*/_jsx(Box,{sx:{mt:2,display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>{// Mettre à jour la durée totale\nconst totalDuration=Math.round(calculateTotalDuration(customWorkout.intervals)/60);setCustomWorkout({...customWorkout,duration:totalDuration});// Passer à l'onglet de prévisualisation\nsetActiveTab(3);},children:t('previewWorkout')})})]})]});case 2:// Statistiques HIIT\nreturn/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:t('hiitStats')}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t('benefitsOfHiit')}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{sx:{height:'100%'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",gutterBottom:true,children:t('effectivenessByDuration')}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{duration:'15min',effectiveness:65,fatigue:40},{duration:'30min',effectiveness:85,fatigue:65},{duration:'45min',effectiveness:95,fatigue:80},{duration:'60min',effectiveness:100,fatigue:95},{duration:'75min',effectiveness:95,fatigue:100}],margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"duration\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"effectiveness\",name:t('trainingImpact'),fill:brandConfig.colors.primary}),/*#__PURE__*/_jsx(Bar,{dataKey:\"fatigue\",name:t('fatigue'),fill:brandConfig.colors.secondary})]})})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{sx:{height:'100%'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",gutterBottom:true,children:t('energySystemTargeting')}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:[{name:t('aerobicSystem'),value:35,color:'#4CAF50'},{name:t('anaerobicSystem'),value:45,color:'#F44336'},{name:t('mixedSystem'),value:20,color:'#FF9800'}],cx:\"50%\",cy:\"50%\",labelLine:false,outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",nameKey:\"name\",label:_ref3=>{let{name,percent}=_ref3;return`${name}: ${(percent*100).toFixed(0)}%`;},children:[{name:t('aerobicSystem'),value:35,color:'#4CAF50'},{name:t('anaerobicSystem'),value:45,color:'#F44336'},{name:t('mixedSystem'),value:20,color:'#FF9800'}].map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color},`cell-${index}`))}),/*#__PURE__*/_jsx(RechartsTooltip,{})]})})]})})})]})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t('workoutCalorieEstimations')}),/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:2},children:t('calorieCalculationNote')}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('workoutType')}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"15 \",t('minutes')]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"30 \",t('minutes')]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"45 \",t('minutes')]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"60+ \",t('minutes')]})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(ExpressIcon,{}),label:\"Express\",size:\"small\",sx:{backgroundColor:workoutBadges.express.color,color:'white'}})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"200-250 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"-\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"-\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"-\"})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(FireIcon,{}),label:\"Br\\xFBle-graisse\",size:\"small\",sx:{backgroundColor:workoutBadges.burn.color,color:'white'}})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"250-300 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"450-550 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"650-750 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"800-1000 kcal\"})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(MountainIcon,{}),label:\"Grimpeur\",size:\"small\",sx:{backgroundColor:workoutBadges.climb.color,color:'white'}})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"-\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"400-500 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"600-700 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"800-950 kcal\"})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(ClockIcon,{}),label:\"Endurance\",size:\"small\",sx:{backgroundColor:workoutBadges.endurance.color,color:'white'}})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"-\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"350-450 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"550-650 kcal\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"750-900 kcal\"})]})]})]})})]})]});case 3:// Onglet Prévisualisation du workout\nreturn/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:t('workoutPreview')}),!selectedWorkout&&customWorkout.intervals.length===0?/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:2},children:t('selectOrCreateWorkout')}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,bgcolor:'background.paper'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:selectedWorkout?selectedWorkout.name:customWorkout.name||t('customWorkout')}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:selectedWorkout?selectedWorkout.description:customWorkout.description||t('noDescription')}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mb:2},children:[/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(TimerIcon,{}),label:`${Math.round((selectedWorkout?calculateTotalDuration(selectedWorkout.intervals):calculateTotalDuration(customWorkout.intervals))/60)} min`,size:\"small\",color:\"primary\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(FitnessIcon,{}),label:(_energySystems$find=energySystems.find(s=>s.value===(selectedWorkout?selectedWorkout.targetSystem:customWorkout.targetSystem)))===null||_energySystems$find===void 0?void 0:_energySystems$find.label,size:\"small\",sx:{bgcolor:(_energySystems$find2=energySystems.find(s=>s.value===(selectedWorkout?selectedWorkout.targetSystem:customWorkout.targetSystem)))===null||_energySystems$find2===void 0?void 0:_energySystems$find2.color,color:'white'}}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(HeartIcon,{}),label:`${t('intensity')}: ${Math.round(calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).avgIntensity)}%`,size:\"small\",variant:\"outlined\",color:\"secondary\"}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(FireIcon,{}),label:`TSS: ${calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).tss}`,size:\"small\",variant:\"outlined\",color:\"error\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t('workoutStats')}),loading?/*#__PURE__*/_jsx(CircularProgress,{}):/*#__PURE__*/_jsxs(List,{dense:true,children:[/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:t('totalDuration'),secondary:`${Math.round((selectedWorkout?calculateTotalDuration(selectedWorkout.intervals):calculateTotalDuration(customWorkout.intervals))/60)} ${t('minutes')}`})}),/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:t('workToRestRatio'),secondary:`${Math.round(calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).workDuration/calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).restDuration*10)/10}:1`})}),/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:t('avgIntensity'),secondary:`${Math.round(calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).avgIntensity)}% FTP`})}),/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:t('normalizedIntensity'),secondary:`${calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).normalizedIntensity}% FTP`})}),/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:t('tssLabel'),secondary:/*#__PURE__*/_jsx(Tooltip,{title:t('tssExplanation'),children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).tss}),/*#__PURE__*/_jsx(InfoIcon,{fontSize:\"small\",color:\"action\",sx:{ml:1}})]})})})})]})]})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:7,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t('intensityProfile')}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:previewData,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\",label:{value:t('time'),position:'insideBottomRight',offset:-10}}),/*#__PURE__*/_jsx(YAxis,{label:{value:t('intensity'),angle:-90,position:'insideLeft'},domain:[0,dataMax=>Math.max(120,dataMax)]}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[`${value}% FTP`,t('intensity')]}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(ReferenceLine,{y:100,stroke:\"red\",strokeDasharray:\"3 3\",label:{value:\"FTP\",position:'right'}}),/*#__PURE__*/_jsx(ReferenceLine,{y:90,stroke:\"#ff9800\",strokeDasharray:\"3 3\",label:{value:\"90%\",position:'right'}}),/*#__PURE__*/_jsx(ReferenceLine,{y:75,stroke:\"#4caf50\",strokeDasharray:\"3 3\",label:{value:\"75%\",position:'right'}}),/*#__PURE__*/_jsx(Line,{type:\"stepAfter\",dataKey:\"intensity\",stroke:\"#8884d8\",strokeWidth:2,dot:false,activeDot:{r:8}})]})})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:5,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t('zoneDistribution')}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).intensityDistribution,cx:\"50%\",cy:\"50%\",labelLine:false,outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",nameKey:\"name\",label:_ref4=>{let{name,percent,time}=_ref4;return`${name}: ${(percent*100).toFixed(0)}% (${time})`;},children:calculateWorkoutStats(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).intensityDistribution.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.name==='Z1'?'#4fc3f7':entry.name==='Z2'?'#4caf50':entry.name==='Z3'?'#ff9800':entry.name==='Z4'?'#f44336':entry.name==='Z5'?'#9c27b0':'#e91e63'},`cell-${index}`))}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name,entry)=>[`${value} min (${entry.payload.time})`,name]}),/*#__PURE__*/_jsx(Legend,{})]})})]})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:7,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t('intervalStructure')}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('type')}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:t('duration')}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:t('intensity')}),/*#__PURE__*/_jsx(TableCell,{children:t('description')})]})}),/*#__PURE__*/_jsx(TableBody,{children:(selectedWorkout?selectedWorkout.intervals:customWorkout.intervals).map((interval,idx)=>/*#__PURE__*/_jsxs(TableRow,{sx:{backgroundColor:interval.type==='work'?'rgba(244, 67, 54, 0.1)':interval.type==='rest'?'rgba(76, 175, 80, 0.1)':interval.type==='warmup'?'rgba(33, 150, 243, 0.1)':'rgba(255, 152, 0, 0.1)'},children:[/*#__PURE__*/_jsx(TableCell,{children:interval.type==='work'?t('work'):interval.type==='rest'?t('rest'):interval.type==='warmup'?t('warmup'):t('cooldown')}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[Math.floor(interval.duration/60),\":\",(interval.duration%60).toString().padStart(2,'0')]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[interval.intensity,\"% FTP\"]}),/*#__PURE__*/_jsx(TableCell,{children:interval.label})]},idx))})]})})]})}),/*#__PURE__*/_jsx(Box,{sx:{mt:3,display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),onClick:()=>handleSaveWorkout(selectedWorkout||customWorkout),children:t('saveWorkout')})})]})]});// ... (autres onglets)\n}};return/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:t('hiitBuilder')}),/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,variant:\"scrollable\",scrollButtons:\"auto\",children:[/*#__PURE__*/_jsx(Tab,{label:t('templates')}),/*#__PURE__*/_jsx(Tab,{label:t('customWorkout')}),/*#__PURE__*/_jsx(Tab,{label:t('workoutStats')}),/*#__PURE__*/_jsx(Tab,{label:t('workoutPreview')})]}),renderTabContent(),/*#__PURE__*/_jsx(CalorieCalculator,{userProfile:userProfile,onCalorieSettingsChange:handleCalorieSettingsChange,open:calorieCalculatorOpen,onClose:()=>setCalorieCalculatorOpen(false)})]});};export default HIITBuilder;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","Box","Card","CardContent","Typography","Grid","Tabs","Tab","Button","TextField","FormControl","InputLabel","Select","MenuItem","Divider","Chip","CircularProgress","Paper","Alert","IconButton","Tooltip","InputAdornment","ToggleButtonGroup","ToggleButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Slider","Badge","DirectionsRun","RunIcon","FitnessCenter","FitnessIcon","Timer","TimerIcon","LocalFireDepartment","FireIcon","Favorite","HeartIcon","Info","InfoIcon","Save","SaveIcon","TimelapseRounded","ClockIcon","BoltRounded","ExpressIcon","Terrain","MountainIcon","Balance","BalanceIcon","ViewModule","StructuredIcon","FilterAlt","FilterIcon","Settings","SettingsIcon","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","RechartsTooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","useNotification","brandConfig","CalorieCalculator","UserService","hiitWorkoutsByTime","hiitWorkoutsByCalories","workoutBadges","getAllWorkouts","findWorkouts","calculateCalories","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HIITBuilder","_ref","userProfile","onSaveWorkout","t","notify","activeTab","setActiveTab","loading","setLoading","workouts","setWorkouts","selectedWorkout","setSelectedWorkout","filterView","setFilterView","filterCriteria","setFilterCriteria","minDuration","maxDuration","minCalories","maxCalories","type","badgeType","customWorkout","setCustomWorkout","name","description","targetSystem","duration","intervals","currentInterval","setCurrentInterval","intensity","recovery","repetitions","previewData","setPreviewData","calorieCalculatorOpen","setCalorieCalculatorOpen","calorieSettings","setCalorieSettings","weight","age","gender","activityLevel","cyclist_type","ftp","useCustomFTP","personalizedCalories","setPersonalizedCalories","energySystems","value","label","color","loadHIITData","getFilteredWorkouts","undefined","handleTabChange","event","newValue","handleFilterViewChange","newView","handleFilterChange","prev","renderWorkoutBadge","badge","icon","size","sx","backgroundColor","fontWeight","handleSelectWorkout","workout","message","severity","generateIntervals","workSecs","restSecs","push","i","generateSweetSpotIntervals","progressiveIntensity","generateThresholdIntervals","generateClimbPyramid","calculateWorkoutStats","length","totalDuration","workDuration","restDuration","avgIntensity","maxIntensity","tss","intensityDistribution","totalWorkDuration","totalRestDuration","intensitySum","workIfNormalized","zoneDistribution","forEach","interval","Math","max","normalizedIntensity","pow","userFTP","intensityFactor","round","Object","keys","map","zone","time","formatTime","seconds","mins","floor","secs","handleSaveWorkout","workoutToSave","id","Date","now","createdAt","toISOString","stats","calories","caloriesBurned","handleCalorieSettingsChange","newSettings","console","log","error","getPersonalizedCalories","totalIntensity","format","reduce","total","repeat","recoveryIntensity","recoveryEffort","renderTabContent","_energySystems$find","_energySystems$find2","p","children","variant","gutterBottom","display","justifyContent","mb","fontSize","mr","verticalAlign","container","spacing","item","xs","sm","exclusive","onChange","width","px","e","valueLabelDisplay","min","step","fullWidth","labelId","target","entries","_ref2","key","alignItems","height","borderRadius","bgcolor","md","flexDirection","transition","transform","boxShadow","flexGrow","component","minHeight","my","flexWrap","gap","mt","pt","onClick","margin","system","multiline","rows","parseInt","InputProps","endAdornment","position","newIntervals","align","idx","toString","padStart","calculateTotalDuration","data","effectiveness","fatigue","top","right","left","bottom","strokeDasharray","dataKey","fill","colors","primary","secondary","cx","cy","labelLine","outerRadius","nameKey","_ref3","percent","toFixed","entry","index","express","burn","climb","endurance","elevation","paragraph","find","s","List","dense","ListItem","ListItemText","title","ml","offset","angle","domain","dataMax","formatter","ReferenceLine","y","stroke","strokeWidth","dot","activeDot","r","_ref4","payload","startIcon","scrollButtons","onCalorieSettingsChange","open","onClose"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/training/HIITBuilder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Tabs,\n  Tab,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider,\n  Chip,\n  CircularProgress,\n  Paper,\n  Alert,\n  IconButton,\n  Tooltip,\n  InputAdornment,\n  ToggleButtonGroup,\n  ToggleButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Slider,\n  Badge\n} from '@mui/material';\nimport {\n  DirectionsRun as RunIcon,\n  FitnessCenter as FitnessIcon,\n  Timer as TimerIcon,\n  LocalFireDepartment as FireIcon,\n  Favorite as HeartIcon,\n  Info as InfoIcon,\n  Save as SaveIcon,\n  TimelapseRounded as ClockIcon,\n  BoltRounded as ExpressIcon,\n  Terrain as MountainIcon,\n  Balance as BalanceIcon,\n  ViewModule as StructuredIcon,\n  FilterAlt as FilterIcon,\n  Settings as SettingsIcon\n} from '@mui/icons-material';\nimport { \n  LineChart, \n  Line, \n  BarChart,\n  Bar,\n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip as RechartsTooltip, \n  Legend, \n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { useNotification } from '../common/NotificationSystem';\nimport { brandConfig } from '../../config/branding';\nimport CalorieCalculator from './CalorieCalculator';\nimport UserService from '../../services/UserService';\n\n// Importer les données HIIT structurées\nimport { \n  hiitWorkoutsByTime, \n  hiitWorkoutsByCalories, \n  workoutBadges, \n  getAllWorkouts,\n  findWorkouts,\n  calculateCalories \n} from '../../data/hiitWorkouts';\n\n/**\n * Composant de programmes HIIT spécifiques pour fitness et entraînement cycliste\n * Permet de créer et suivre des programmes d'entraînement par intervalles à haute intensité\n */\nconst HIITBuilder = ({ userProfile, onSaveWorkout }) => {\n  const { t } = useTranslation();\n  const { notify } = useNotification();\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [workouts, setWorkouts] = useState([]);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [filterView, setFilterView] = useState('time'); // 'time' ou 'calories'\n  const [filterCriteria, setFilterCriteria] = useState({\n    minDuration: 0,\n    maxDuration: 90,\n    minCalories: 0,\n    maxCalories: 1200,\n    type: 'all',\n    badgeType: 'all'\n  });\n  const [customWorkout, setCustomWorkout] = useState({\n    name: '',\n    description: '',\n    targetSystem: 'aerobic', // aerobic, anaerobic, mixed\n    duration: 30,\n    intervals: []\n  });\n  const [currentInterval, setCurrentInterval] = useState({\n    intensity: 90, // % of FTP or max heart rate\n    duration: 30, // seconds\n    recovery: 30, // seconds\n    repetitions: 5\n  });\n  const [previewData, setPreviewData] = useState([]);\n  \n  // État pour le calculateur de calories\n  const [calorieCalculatorOpen, setCalorieCalculatorOpen] = useState(false);\n  const [calorieSettings, setCalorieSettings] = useState({\n    weight: userProfile?.weight || 70,\n    age: userProfile?.age || 35,\n    gender: userProfile?.gender || 'male',\n    activityLevel: userProfile?.cyclist_type === 'beginner' ? 'beginner' :\n                   userProfile?.cyclist_type === 'all-rounder' ? 'recreational' :\n                   userProfile?.cyclist_type === 'climber' ? 'intermediate' :\n                   userProfile?.cyclist_type === 'sprinter' ? 'advanced' : 'recreational',\n    ftp: userProfile?.ftp || 200,\n    useCustomFTP: userProfile?.ftp ? true : false\n  });\n  const [personalizedCalories, setPersonalizedCalories] = useState(true);\n\n  // Systèmes d'énergie ciblés\n  const energySystems = [\n    { value: 'aerobic', label: t('aerobicSystem'), color: '#4CAF50', description: t('aerobicSystemDesc') },\n    { value: 'anaerobic', label: t('anaerobicSystem'), color: '#F44336', description: t('anaerobicSystemDesc') },\n    { value: 'mixed', label: t('mixedSystem'), color: '#FF9800', description: t('mixedSystemDesc') },\n    { value: 'neuromuscular', label: t('neuromuscularSystem'), color: '#9C27B0', description: t('neuromuscularSystemDesc') }\n  ];\n\n  // Charger les templates HIIT\n  useEffect(() => {\n    if (userProfile) {\n      loadHIITData();\n    }\n  }, [userProfile]);\n\n  // Charger toutes les données HIIT\n  const loadHIITData = () => {\n    setLoading(true);\n    \n    // Utiliser les données du fichier hiitWorkouts.js au lieu des mocks\n    setWorkouts(getAllWorkouts());\n    \n    setLoading(false);\n  };\n\n  // Filtrer les séances HIIT selon les critères\n  const getFilteredWorkouts = () => {\n    return findWorkouts({\n      minDuration: filterCriteria.minDuration,\n      maxDuration: filterCriteria.maxDuration,\n      minCalories: filterCriteria.minCalories,\n      maxCalories: filterCriteria.maxCalories,\n      type: filterCriteria.type !== 'all' ? filterCriteria.type : undefined,\n      badgeType: filterCriteria.badgeType !== 'all' ? filterCriteria.badgeType : undefined\n    });\n  };\n\n  // Gérer le changement d'onglet\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  // Gérer le changement de vue des filtres (temps ou calories)\n  const handleFilterViewChange = (event, newView) => {\n    if (newView !== null) {\n      setFilterView(newView);\n    }\n  };\n\n  // Gérer les changements dans les critères de filtre\n  const handleFilterChange = (name, value) => {\n    setFilterCriteria(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Générer un rendu pour le badge d'une séance\n  const renderWorkoutBadge = (badgeType) => {\n    if (!badgeType || !workoutBadges[badgeType]) return null;\n    \n    const badge = workoutBadges[badgeType];\n    const icon = {\n      'bolt': <ExpressIcon />,\n      'local_fire_department': <FireIcon />,\n      'terrain': <MountainIcon />,\n      'watch_later': <ClockIcon />,\n      'balance': <BalanceIcon />,\n      'view_module': <StructuredIcon />\n    }[badge.icon] || <InfoIcon />;\n    \n    return (\n      <Chip\n        icon={icon}\n        label={badge.label}\n        size=\"small\"\n        sx={{\n          backgroundColor: badge.color,\n          color: 'white',\n          fontWeight: 500,\n          '& .MuiChip-icon': {\n            color: 'white'\n          }\n        }}\n      />\n    );\n  };\n\n  // Sélectionner une séance\n  const handleSelectWorkout = (workout) => {\n    setSelectedWorkout(workout);\n    setActiveTab(3); // Passer à l'onglet de prévisualisation\n    \n    notify({\n      message: t('workoutSelected', { name: workout.name }),\n      severity: 'success'\n    });\n  };\n\n  // Générer des intervalles simples\n  const generateIntervals = (workSecs, restSecs, repetitions, intensity) => {\n    const intervals = [];\n    \n    // Échauffement: 10 minutes en Z1-Z2\n    intervals.push({\n      type: 'warmup',\n      duration: 600,\n      intensity: 60,\n      label: t('warmup')\n    });\n    \n    // Intervalles principaux\n    for (let i = 0; i < repetitions; i++) {\n      intervals.push({\n        type: 'work',\n        duration: workSecs,\n        intensity: intensity,\n        label: `${t('interval')} ${i + 1}/${repetitions}`\n      });\n      \n      intervals.push({\n        type: 'rest',\n        duration: restSecs,\n        intensity: 50,\n        label: `${t('recovery')} ${i + 1}/${repetitions}`\n      });\n    }\n    \n    // Récupération: 5 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 300,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n\n  // Générer des intervalles Sweet Spot (nouveau)\n  const generateSweetSpotIntervals = (repetitions, workSecs, restSecs, intensity) => {\n    const intervals = [];\n    \n    // Échauffement: 15 minutes progression Z1 à Z3\n    intervals.push({\n      type: 'warmup',\n      duration: 900,\n      intensity: 65,\n      label: t('warmup'),\n      progressiveIntensity: true\n    });\n    \n    // Intervalles Sweet Spot\n    for (let i = 0; i < repetitions; i++) {\n      intervals.push({\n        type: 'work',\n        duration: workSecs,\n        intensity: intensity,\n        label: `${t('sweetSpotInterval')} ${i + 1}/${repetitions}`\n      });\n      \n      intervals.push({\n        type: 'rest',\n        duration: restSecs,\n        intensity: 55,\n        label: `${t('recovery')} ${i + 1}/${repetitions}`\n      });\n    }\n    \n    // Récupération: 10 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 600,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n  \n  // Générer des intervalles au seuil (nouveau)\n  const generateThresholdIntervals = (repetitions, workSecs, restSecs, intensity) => {\n    const intervals = [];\n    \n    // Échauffement: 15 minutes progression Z1 à Z3\n    intervals.push({\n      type: 'warmup',\n      duration: 900,\n      intensity: 65,\n      label: t('warmup'),\n      progressiveIntensity: true\n    });\n    \n    // Intervalles au seuil\n    for (let i = 0; i < repetitions; i++) {\n      intervals.push({\n        type: 'work',\n        duration: workSecs,\n        intensity: intensity,\n        label: `${t('thresholdInterval')} ${i + 1}/${repetitions}`\n      });\n      \n      intervals.push({\n        type: 'rest',\n        duration: restSecs,\n        intensity: 55,\n        label: `${t('recovery')} ${i + 1}/${repetitions}`\n      });\n    }\n    \n    // Récupération: 10 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 600,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n  \n  // Générer une simulation de montée avec intensité progressive (nouveau)\n  const generateClimbPyramid = () => {\n    const intervals = [];\n    \n    // Échauffement: 15 minutes\n    intervals.push({\n      type: 'warmup',\n      duration: 900,\n      intensity: 65,\n      label: t('warmup'),\n      progressiveIntensity: true\n    });\n    \n    // Phase 1: Approche de la montée (75% FTP pendant 5 min)\n    intervals.push({\n      type: 'work',\n      duration: 300,\n      intensity: 75,\n      label: t('approachClimb')\n    });\n    \n    // Phase 2: Début de montée (85% FTP pendant 5 min)\n    intervals.push({\n      type: 'work',\n      duration: 300,\n      intensity: 85,\n      label: t('startClimb')\n    });\n    \n    // Phase 3: Section raide (100% FTP pendant 3 min)\n    intervals.push({\n      type: 'work',\n      duration: 180,\n      intensity: 100,\n      label: t('steepSection')\n    });\n    \n    // Phase 4: Section très raide (110% FTP pendant 2 min)\n    intervals.push({\n      type: 'work',\n      duration: 120,\n      intensity: 110,\n      label: t('verySteepSection')\n    });\n    \n    // Phase 5: Sommet (120% FTP pendant 1 min)\n    intervals.push({\n      type: 'work',\n      duration: 60,\n      intensity: 120,\n      label: t('summit')\n    });\n    \n    // Phase 6: Récupération active (60% FTP pendant 5 min)\n    intervals.push({\n      type: 'rest',\n      duration: 300,\n      intensity: 60,\n      label: t('activeRecovery')\n    });\n    \n    // Phase 7: Deuxième montée (inverse de la première)\n    intervals.push({\n      type: 'work',\n      duration: 60,\n      intensity: 120,\n      label: t('summit2')\n    });\n    \n    intervals.push({\n      type: 'work',\n      duration: 120,\n      intensity: 110,\n      label: t('verySteepSection2')\n    });\n    \n    intervals.push({\n      type: 'work',\n      duration: 180,\n      intensity: 100,\n      label: t('steepSection2')\n    });\n    \n    intervals.push({\n      type: 'work',\n      duration: 300,\n      intensity: 85,\n      label: t('descentClimb')\n    });\n    \n    // Récupération: 10 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 600,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n\n  // Calculer les statistiques du workout\n  const calculateWorkoutStats = (intervals) => {\n    if (!intervals || intervals.length === 0) {\n      return {\n        totalDuration: 0,\n        workDuration: 0,\n        restDuration: 0,\n        avgIntensity: 0,\n        maxIntensity: 0,\n        tss: 0,\n        intensityDistribution: []\n      };\n    }\n    \n    let totalDuration = 0;\n    let totalWorkDuration = 0;\n    let totalRestDuration = 0;\n    let intensitySum = 0;\n    let maxIntensity = 0;\n    let workIfNormalized = 0;\n    \n    // Distribution de l'intensité par zones\n    const zoneDistribution = {\n      'Z1': 0, // Récupération (<60% FTP)\n      'Z2': 0, // Endurance (60-75% FTP)\n      'Z3': 0, // Tempo (76-90% FTP)\n      'Z4': 0, // Seuil (91-105% FTP)\n      'Z5': 0, // VO2Max (106-120% FTP)\n      'Z6': 0  // Anaérobie (>120% FTP)\n    };\n    \n    intervals.forEach(interval => {\n      totalDuration += interval.duration;\n      \n      if (interval.type === 'work') {\n        totalWorkDuration += interval.duration;\n      } else if (interval.type === 'rest' || interval.type === 'cooldown') {\n        totalRestDuration += interval.duration;\n      }\n      \n      intensitySum += interval.intensity * interval.duration;\n      maxIntensity = Math.max(maxIntensity, interval.intensity);\n      \n      // Calculer le travail normalisé (pour TSS)\n      const normalizedIntensity = Math.pow(interval.intensity / 100, 4);\n      workIfNormalized += normalizedIntensity * interval.duration;\n      \n      // Ajouter à la distribution des zones\n      if (interval.intensity <= 60) {\n        zoneDistribution['Z1'] += interval.duration;\n      } else if (interval.intensity <= 75) {\n        zoneDistribution['Z2'] += interval.duration;\n      } else if (interval.intensity <= 90) {\n        zoneDistribution['Z3'] += interval.duration;\n      } else if (interval.intensity <= 105) {\n        zoneDistribution['Z4'] += interval.duration;\n      } else if (interval.intensity <= 120) {\n        zoneDistribution['Z5'] += interval.duration;\n      } else {\n        zoneDistribution['Z6'] += interval.duration;\n      }\n    });\n    \n    const avgIntensity = intensitySum / totalDuration;\n    \n    // Calculer l'intensité normalisée\n    const normalizedIntensity = Math.pow(workIfNormalized / totalDuration, 0.25) * 100;\n    \n    // Calculer le TSS\n    // TSS = (sec × NP × IF) ÷ (FTP × 3600) × 100\n    // Où IF = NP/FTP\n    const userFTP = userProfile?.ftp || 200;\n    const intensityFactor = normalizedIntensity / 100;\n    const tss = Math.round((totalDuration * normalizedIntensity * intensityFactor) / (userFTP * 36));\n    \n    // Préparer les données pour le graphique de distribution des zones\n    const intensityDistribution = Object.keys(zoneDistribution).map(zone => {\n      return {\n        name: zone,\n        value: Math.round(zoneDistribution[zone] / 60), // Convertir en minutes\n        time: formatTime(zoneDistribution[zone])\n      };\n    });\n    \n    return {\n      totalDuration,\n      workDuration: totalWorkDuration,\n      restDuration: totalRestDuration,\n      avgIntensity,\n      maxIntensity,\n      normalizedIntensity: Math.round(normalizedIntensity),\n      tss,\n      intensityDistribution\n    };\n  };\n  \n  // Formater les secondes en format MM:SS\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Gérer la sauvegarde du workout\n  const handleSaveWorkout = (workout) => {\n    if (onSaveWorkout) {\n      // Ajouter des métadonnées avant de sauvegarder\n      const workoutToSave = {\n        ...workout,\n        id: workout.id || `custom-${Date.now()}`,\n        createdAt: new Date().toISOString(),\n        stats: calculateWorkoutStats(workout.intervals),\n        calories: workout.caloriesBurned || calculateWorkoutStats(workout.intervals).calories\n      };\n      \n      onSaveWorkout(workoutToSave);\n      \n      notify({\n        message: t('workoutSaved', { name: workout.name }),\n        severity: 'success'\n      });\n    }\n  };\n\n  // Gérer les changements des paramètres de calories\n  const handleCalorieSettingsChange = (newSettings) => {\n    setCalorieSettings(newSettings);\n    \n    // Si nous avons un utilisateur connecté, enregistrer ses préférences\n    if (userProfile && userProfile.id) {\n      try {\n        // Dans une véritable implémentation, cela appellerait l'API pour sauvegarder les préférences\n        console.log('Sauvegarde des préférences calorigènes:', newSettings);\n        notify(t('caloriePreferencesSaved'), 'success');\n      } catch (error) {\n        console.error('Erreur lors de la sauvegarde des préférences:', error);\n        notify(t('errorSavingPreferences'), 'error');\n      }\n    }\n    \n    // Mettre à jour les calories personnalisées pour tous les workouts\n    setPersonalizedCalories(true);\n  };\n\n  // Calculer les calories personnalisées pour un workout\n  const getPersonalizedCalories = (workout) => {\n    if (!personalizedCalories || !workout) return workout.caloriesBurned;\n    \n    // Calculer l'intensité totale pour cette séance\n    let totalIntensity = 0;\n    \n    if (workout.format) {\n      totalIntensity = workout.format.reduce((total, interval) => {\n        const duration = interval.duration || 0;\n        const intensity = interval.intensity || 0;\n        const repeat = interval.repeat || 1;\n        \n        if (interval.recovery && interval.recoveryIntensity) {\n          const recoveryEffort = interval.recovery * interval.recoveryIntensity * repeat;\n          return total + (duration * intensity * repeat) + recoveryEffort;\n        }\n        \n        return total + (duration * intensity * repeat);\n      }, 0);\n    }\n    \n    // Utiliser la fonction de calcul des calories\n    return calculateCalories(\n      totalIntensity, \n      calorieSettings.weight, \n      calorieSettings.ftp\n    );\n  };\n\n  // Rendu des onglets\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 0: // Catalogue de séances\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('workoutCatalog')}\n            </Typography>\n            \n            {loading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n                <CircularProgress />\n              </Box>\n            ) : (\n              <>\n                <Paper sx={{ p: 2, mb: 3 }}>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    <FilterIcon fontSize=\"small\" sx={{ mr: 1, verticalAlign: 'middle' }} />\n                    {t('filterWorkouts')}\n                  </Typography>\n                  \n                  <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                      <ToggleButtonGroup\n                        value={filterView}\n                        exclusive\n                        onChange={handleFilterViewChange}\n                        aria-label=\"filter view\"\n                        size=\"small\"\n                        sx={{ mb: 2 }}\n                      >\n                        <ToggleButton value=\"time\" aria-label=\"filter by time\">\n                          <TimerIcon fontSize=\"small\" sx={{ mr: 1 }} />\n                          {t('filterByTime')}\n                        </ToggleButton>\n                        <ToggleButton value=\"calories\" aria-label=\"filter by calories\">\n                          <FireIcon fontSize=\"small\" sx={{ mr: 1 }} />\n                          {t('filterByCalories')}\n                        </ToggleButton>\n                      </ToggleButtonGroup>\n                      \n                      {filterView === 'time' ? (\n                        <Box sx={{ width: '100%', px: 2 }}>\n                          <Typography variant=\"body2\" gutterBottom>\n                            {t('duration')}: {filterCriteria.minDuration} - {filterCriteria.maxDuration} min\n                          </Typography>\n                          <Slider\n                            value={[filterCriteria.minDuration, filterCriteria.maxDuration]}\n                            onChange={(e, value) => {\n                              handleFilterChange('minDuration', value[0]);\n                              handleFilterChange('maxDuration', value[1]);\n                            }}\n                            valueLabelDisplay=\"auto\"\n                            min={0}\n                            max={90}\n                            step={5}\n                          />\n                        </Box>\n                      ) : (\n                        <Box sx={{ width: '100%', px: 2 }}>\n                          <Typography variant=\"body2\" gutterBottom>\n                            {t('calories')}: {filterCriteria.minCalories} - {filterCriteria.maxCalories} kcal\n                          </Typography>\n                          <Slider\n                            value={[filterCriteria.minCalories, filterCriteria.maxCalories]}\n                            onChange={(e, value) => {\n                              handleFilterChange('minCalories', value[0]);\n                              handleFilterChange('maxCalories', value[1]);\n                            }}\n                            valueLabelDisplay=\"auto\"\n                            min={0}\n                            max={1200}\n                            step={100}\n                          />\n                        </Box>\n                      )}\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6}>\n                      <FormControl size=\"small\" fullWidth sx={{ mb: 2 }}>\n                        <InputLabel id=\"workout-type-label\">{t('workoutType')}</InputLabel>\n                        <Select\n                          labelId=\"workout-type-label\"\n                          value={filterCriteria.type}\n                          onChange={(e) => handleFilterChange('type', e.target.value)}\n                          label={t('workoutType')}\n                        >\n                          <MenuItem value=\"all\">{t('allTypes')}</MenuItem>\n                          <MenuItem value=\"power\">{t('power')}</MenuItem>\n                          <MenuItem value=\"endurance\">{t('endurance')}</MenuItem>\n                          <MenuItem value=\"mountain\">{t('mountain')}</MenuItem>\n                        </Select>\n                      </FormControl>\n                      \n                      <FormControl size=\"small\" fullWidth>\n                        <InputLabel id=\"badge-type-label\">{t('workoutCategory')}</InputLabel>\n                        <Select\n                          labelId=\"badge-type-label\"\n                          value={filterCriteria.badgeType}\n                          onChange={(e) => handleFilterChange('badgeType', e.target.value)}\n                          label={t('workoutCategory')}\n                        >\n                          <MenuItem value=\"all\">{t('allCategories')}</MenuItem>\n                          {Object.entries(workoutBadges).map(([key, badge]) => (\n                            <MenuItem key={key} value={key}>\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                <Box\n                                  sx={{\n                                    width: 12,\n                                    height: 12,\n                                    borderRadius: '50%',\n                                    bgcolor: badge.color,\n                                    mr: 1\n                                  }}\n                                />\n                                {badge.label}\n                              </Box>\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </Paper>\n                \n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {getFilteredWorkouts().length} {t('workoutsFound')}\n                </Typography>\n                \n                <Grid container spacing={2}>\n                  {getFilteredWorkouts().map((workout) => (\n                    <Grid item xs={12} sm={6} md={4} key={workout.id}>\n                      <Card \n                        sx={{ \n                          height: '100%', \n                          display: 'flex', \n                          flexDirection: 'column',\n                          transition: 'transform 0.2s',\n                          '&:hover': {\n                            transform: 'translateY(-4px)',\n                            boxShadow: 6\n                          }\n                        }}\n                      >\n                        <CardContent sx={{ flexGrow: 1 }}>\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                            <Typography variant=\"h6\" component=\"div\">\n                              {workout.name}\n                            </Typography>\n                            {renderWorkoutBadge(workout.badgeType)}\n                          </Box>\n                          \n                          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2, minHeight: 40 }}>\n                            {workout.description}\n                          </Typography>\n                          \n                          <Divider sx={{ my: 1 }} />\n                          \n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 2 }}>\n                            <Chip\n                              icon={<TimerIcon />}\n                              size=\"small\"\n                              label={`${workout.duration} min`}\n                              variant=\"outlined\"\n                            />\n                            <Chip\n                              icon={<FireIcon />}\n                              size=\"small\"\n                              label={`${workout.caloriesBurned} kcal`}\n                              variant=\"outlined\"\n                              color=\"error\"\n                            />\n                            <Chip\n                              icon={\n                                workout.intensity === 'high' || workout.intensity === 'very-high' ? \n                                <FitnessIcon /> : <HeartIcon />\n                              }\n                              size=\"small\"\n                              label={t(workout.intensity)}\n                              variant=\"outlined\"\n                              color={\n                                workout.intensity === 'high' ? 'warning' :\n                                workout.intensity === 'very-high' ? 'error' :\n                                'primary'\n                              }\n                            />\n                          </Box>\n                        </CardContent>\n                        \n                        <Box sx={{ p: 2, pt: 0 }}>\n                          <Button \n                            variant=\"contained\"\n                            fullWidth\n                            onClick={() => handleSelectWorkout(workout)}\n                          >\n                            {t('selectWorkout')}\n                          </Button>\n                        </Box>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </>\n            )}\n          </Box>\n        );\n      \n      case 1: // Création de séance personnalisée\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('customWorkout')}\n            </Typography>\n            \n            <Paper sx={{ p: 2, mb: 3 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label={t('workoutName')}\n                    value={customWorkout.name}\n                    onChange={(e) => setCustomWorkout({ ...customWorkout, name: e.target.value })}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth margin=\"normal\">\n                    <InputLabel>{t('targetSystem')}</InputLabel>\n                    <Select\n                      value={customWorkout.targetSystem}\n                      onChange={(e) => setCustomWorkout({ ...customWorkout, targetSystem: e.target.value })}\n                      label={t('targetSystem')}\n                    >\n                      {energySystems.map((system) => (\n                        <MenuItem key={system.value} value={system.value}>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Box\n                              sx={{\n                                width: 12,\n                                height: 12,\n                                borderRadius: '50%',\n                                bgcolor: system.color,\n                                mr: 1\n                              }}\n                            />\n                            {system.label}\n                          </Box>\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    label={t('workoutDescription')}\n                    value={customWorkout.description}\n                    onChange={(e) => setCustomWorkout({ ...customWorkout, description: e.target.value })}\n                    fullWidth\n                    multiline\n                    rows={2}\n                    margin=\"normal\"\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n            \n            <Paper sx={{ p: 2, mb: 3 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t('addIntervals')}\n              </Typography>\n              \n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('workDuration')}\n                    type=\"number\"\n                    value={currentInterval.duration}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, duration: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">{t('seconds')}</InputAdornment>,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('recovery')}\n                    type=\"number\"\n                    value={currentInterval.recovery}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, recovery: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">{t('seconds')}</InputAdornment>,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('intensity')}\n                    type=\"number\"\n                    value={currentInterval.intensity}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, intensity: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">% FTP</InputAdornment>,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('repetitions')}\n                    type=\"number\"\n                    value={currentInterval.repetitions}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, repetitions: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </Grid>\n              </Grid>\n              \n              <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateIntervals(\n                      currentInterval.duration,\n                      currentInterval.recovery,\n                      currentInterval.repetitions,\n                      currentInterval.intensity\n                    );\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addBasicIntervals')}\n                </Button>\n                \n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateSweetSpotIntervals(\n                      currentInterval.repetitions,\n                      currentInterval.duration,\n                      currentInterval.recovery,\n                      currentInterval.intensity\n                    );\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addSweetSpotIntervals')}\n                </Button>\n                \n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateThresholdIntervals(\n                      currentInterval.repetitions,\n                      currentInterval.duration,\n                      currentInterval.recovery,\n                      currentInterval.intensity\n                    );\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addThresholdIntervals')}\n                </Button>\n                \n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateClimbPyramid();\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addClimbPyramid')}\n                </Button>\n              </Box>\n            </Paper>\n            \n            {customWorkout.intervals.length > 0 && (\n              <Paper sx={{ p: 2, mb: 3 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                  <Typography variant=\"subtitle1\">\n                    {t('currentIntervals')}\n                  </Typography>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\" \n                    size=\"small\"\n                    onClick={() => setCustomWorkout({ ...customWorkout, intervals: [] })}\n                  >\n                    {t('clearAll')}\n                  </Button>\n                </Box>\n                \n                <TableContainer>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>{t('type')}</TableCell>\n                        <TableCell align=\"right\">{t('duration')}</TableCell>\n                        <TableCell align=\"right\">{t('intensity')}</TableCell>\n                        <TableCell>{t('description')}</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {customWorkout.intervals.map((interval, idx) => (\n                        <TableRow\n                          key={idx}\n                          sx={{\n                            backgroundColor: \n                              interval.type === 'work' ? 'rgba(244, 67, 54, 0.1)' :\n                              interval.type === 'rest' ? 'rgba(76, 175, 80, 0.1)' :\n                              interval.type === 'warmup' ? 'rgba(33, 150, 243, 0.1)' :\n                              'rgba(255, 152, 0, 0.1)'\n                          }}\n                        >\n                          <TableCell>\n                            {interval.type === 'work' ? t('work') :\n                             interval.type === 'rest' ? t('rest') :\n                             interval.type === 'warmup' ? t('warmup') :\n                             t('cooldown')}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {Math.floor(interval.duration / 60)}:{(interval.duration % 60).toString().padStart(2, '0')}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {interval.intensity}% FTP\n                          </TableCell>\n                          <TableCell>{interval.label}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                \n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => {\n                      // Mettre à jour la durée totale\n                      const totalDuration = Math.round(calculateTotalDuration(customWorkout.intervals) / 60);\n                      setCustomWorkout({\n                        ...customWorkout,\n                        duration: totalDuration\n                      });\n                      \n                      // Passer à l'onglet de prévisualisation\n                      setActiveTab(3);\n                    }}\n                  >\n                    {t('previewWorkout')}\n                  </Button>\n                </Box>\n              </Paper>\n            )}\n          </Box>\n        );\n      \n      case 2: // Statistiques HIIT\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('hiitStats')}\n            </Typography>\n            \n            <Paper sx={{ p: 3, mb: 3 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t('benefitsOfHiit')}\n              </Typography>\n              \n              <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                  <Card sx={{ height: '100%' }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                        {t('effectivenessByDuration')}\n                      </Typography>\n                      \n                      <ResponsiveContainer width=\"100%\" height={250}>\n                        <BarChart\n                          data={[\n                            { duration: '15min', effectiveness: 65, fatigue: 40 },\n                            { duration: '30min', effectiveness: 85, fatigue: 65 },\n                            { duration: '45min', effectiveness: 95, fatigue: 80 },\n                            { duration: '60min', effectiveness: 100, fatigue: 95 },\n                            { duration: '75min', effectiveness: 95, fatigue: 100 }\n                          ]}\n                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                        >\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"duration\" />\n                          <YAxis />\n                          <RechartsTooltip />\n                          <Legend />\n                          <Bar dataKey=\"effectiveness\" name={t('trainingImpact')} fill={brandConfig.colors.primary} />\n                          <Bar dataKey=\"fatigue\" name={t('fatigue')} fill={brandConfig.colors.secondary} />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                \n                <Grid item xs={12} md={6}>\n                  <Card sx={{ height: '100%' }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                        {t('energySystemTargeting')}\n                      </Typography>\n                      \n                      <ResponsiveContainer width=\"100%\" height={250}>\n                        <PieChart>\n                          <Pie\n                            data={[\n                              { name: t('aerobicSystem'), value: 35, color: '#4CAF50' },\n                              { name: t('anaerobicSystem'), value: 45, color: '#F44336' },\n                              { name: t('mixedSystem'), value: 20, color: '#FF9800' }\n                            ]}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            labelLine={false}\n                            outerRadius={80}\n                            fill=\"#8884d8\"\n                            dataKey=\"value\"\n                            nameKey=\"name\"\n                            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                          >\n                            {[\n                              { name: t('aerobicSystem'), value: 35, color: '#4CAF50' },\n                              { name: t('anaerobicSystem'), value: 45, color: '#F44336' },\n                              { name: t('mixedSystem'), value: 20, color: '#FF9800' }\n                            ].map((entry, index) => (\n                              <Cell key={`cell-${index}`} fill={entry.color} />\n                            ))}\n                          </Pie>\n                          <RechartsTooltip />\n                        </PieChart>\n                      </ResponsiveContainer>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Grid>\n            </Paper>\n            \n            <Paper sx={{ p: 3 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t('workoutCalorieEstimations')}\n              </Typography>\n              \n              <Alert severity=\"info\" sx={{ mb: 2 }}>\n                {t('calorieCalculationNote')}\n              </Alert>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>{t('workoutType')}</TableCell>\n                      <TableCell align=\"right\">15 {t('minutes')}</TableCell>\n                      <TableCell align=\"right\">30 {t('minutes')}</TableCell>\n                      <TableCell align=\"right\">45 {t('minutes')}</TableCell>\n                      <TableCell align=\"right\">60+ {t('minutes')}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<ExpressIcon />} label=\"Express\" size=\"small\" sx={{ backgroundColor: workoutBadges.express.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">200-250 kcal</TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<FireIcon />} label=\"Brûle-graisse\" size=\"small\" sx={{ backgroundColor: workoutBadges.burn.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">250-300 kcal</TableCell>\n                      <TableCell align=\"right\">450-550 kcal</TableCell>\n                      <TableCell align=\"right\">650-750 kcal</TableCell>\n                      <TableCell align=\"right\">800-1000 kcal</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<MountainIcon />} label=\"Grimpeur\" size=\"small\" sx={{ backgroundColor: workoutBadges.climb.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">400-500 kcal</TableCell>\n                      <TableCell align=\"right\">600-700 kcal</TableCell>\n                      <TableCell align=\"right\">800-950 kcal</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<ClockIcon />} label=\"Endurance\" size=\"small\" sx={{ backgroundColor: workoutBadges.endurance.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">350-450 kcal</TableCell>\n                      <TableCell align=\"right\">550-650 kcal</TableCell>\n                      <TableCell align=\"right\">750-900 kcal</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Box>\n        );\n      \n      case 3: // Onglet Prévisualisation du workout\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('workoutPreview')}\n            </Typography>\n            \n            {!selectedWorkout && customWorkout.intervals.length === 0 ? (\n              <Alert severity=\"info\" sx={{ mb: 2 }}>\n                {t('selectOrCreateWorkout')}\n              </Alert>\n            ) : (\n              <>\n                <Grid container spacing={2} sx={{ mb: 3 }}>\n                  <Grid item xs={12} md={8}>\n                    <Paper \n                      elevation={2} \n                      sx={{ \n                        p: 2, \n                        bgcolor: 'background.paper' \n                      }}\n                    >\n                      <Typography variant=\"h6\">\n                        {selectedWorkout ? selectedWorkout.name : customWorkout.name || t('customWorkout')}\n                      </Typography>\n                      \n                      <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                        {selectedWorkout ? selectedWorkout.description : customWorkout.description || t('noDescription')}\n                      </Typography>\n                      \n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n                        <Chip \n                          icon={<TimerIcon />} \n                          label={`${Math.round((selectedWorkout ? calculateTotalDuration(selectedWorkout.intervals) : calculateTotalDuration(customWorkout.intervals)) / 60)} min`} \n                          size=\"small\" \n                          color=\"primary\"\n                          variant=\"outlined\"\n                        />\n                        \n                        <Chip \n                          icon={<FitnessIcon />} \n                          label={energySystems.find(s => s.value === (selectedWorkout ? selectedWorkout.targetSystem : customWorkout.targetSystem))?.label} \n                          size=\"small\"\n                          sx={{ \n                            bgcolor: energySystems.find(s => s.value === (selectedWorkout ? selectedWorkout.targetSystem : customWorkout.targetSystem))?.color,\n                            color: 'white'\n                          }}\n                        />\n                        \n                        <Chip \n                          icon={<HeartIcon />} \n                          label={`${t('intensity')}: ${Math.round(calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).avgIntensity)}%`} \n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                        />\n                        \n                        <Chip \n                          icon={<FireIcon />} \n                          label={`TSS: ${calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).tss}`} \n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"error\"\n                        />\n                      </Box>\n                    </Paper>\n                  </Grid>\n                  \n                  <Grid item xs={12} md={4}>\n                    <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        {t('workoutStats')}\n                      </Typography>\n                      \n                      {loading ? (\n                        <CircularProgress />\n                      ) : (\n                        <List dense>\n                          <ListItem>\n                            <ListItemText \n                              primary={t('totalDuration')}\n                              secondary={`${Math.round((selectedWorkout ? calculateTotalDuration(selectedWorkout.intervals) : calculateTotalDuration(customWorkout.intervals)) / 60)} ${t('minutes')}`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('workToRestRatio')}\n                              secondary={`${Math.round((calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).workDuration / calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).restDuration) * 10) / 10}:1`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('avgIntensity')}\n                              secondary={`${Math.round(calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).avgIntensity)}% FTP`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('normalizedIntensity')}\n                              secondary={`${calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).normalizedIntensity}% FTP`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('tssLabel')}\n                              secondary={\n                                <Tooltip title={t('tssExplanation')}>\n                                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <span>{calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).tss}</span>\n                                    <InfoIcon fontSize=\"small\" color=\"action\" sx={{ ml: 1 }} />\n                                  </Box>\n                                </Tooltip>\n                              }\n                            />\n                          </ListItem>\n                        </List>\n                      )}\n                    </Paper>\n                  </Grid>\n                </Grid>\n                \n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={7}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {t('intensityProfile')}\n                    </Typography>\n                    \n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <LineChart\n                        data={previewData}\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis \n                          dataKey=\"time\" \n                          label={{ value: t('time'), position: 'insideBottomRight', offset: -10 }}\n                        />\n                        <YAxis \n                          label={{ value: t('intensity'), angle: -90, position: 'insideLeft' }}\n                          domain={[0, dataMax => Math.max(120, dataMax)]}\n                        />\n                        <Tooltip formatter={(value) => [`${value}% FTP`, t('intensity')]} />\n                        <Legend />\n                        <ReferenceLine y={100} stroke=\"red\" strokeDasharray=\"3 3\" label={{ value: \"FTP\", position: 'right' }} />\n                        <ReferenceLine y={90} stroke=\"#ff9800\" strokeDasharray=\"3 3\" label={{ value: \"90%\", position: 'right' }} />\n                        <ReferenceLine y={75} stroke=\"#4caf50\" strokeDasharray=\"3 3\" label={{ value: \"75%\", position: 'right' }} />\n                        <Line \n                          type=\"stepAfter\" \n                          dataKey=\"intensity\" \n                          stroke=\"#8884d8\" \n                          strokeWidth={2}\n                          dot={false}\n                          activeDot={{ r: 8 }}\n                        />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </Grid>\n                  \n                  <Grid item xs={12} md={5}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {t('zoneDistribution')}\n                    </Typography>\n                    \n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <PieChart>\n                        <Pie\n                          data={calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).intensityDistribution}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"value\"\n                          nameKey=\"name\"\n                          label={({ name, percent, time }) => `${name}: ${(percent * 100).toFixed(0)}% (${time})`}\n                        >\n                          {calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).intensityDistribution.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={\n                              entry.name === 'Z1' ? '#4fc3f7' :\n                              entry.name === 'Z2' ? '#4caf50' :\n                              entry.name === 'Z3' ? '#ff9800' :\n                              entry.name === 'Z4' ? '#f44336' :\n                              entry.name === 'Z5' ? '#9c27b0' :\n                              '#e91e63'\n                            } />\n                          ))}\n                        </Pie>\n                        <Tooltip formatter={(value, name, entry) => [`${value} min (${entry.payload.time})`, name]} />\n                        <Legend />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  </Grid>\n                </Grid>\n                \n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={7}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {t('intervalStructure')}\n                    </Typography>\n                    \n                    <TableContainer component={Paper}>\n                      <Table size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>{t('type')}</TableCell>\n                            <TableCell align=\"right\">{t('duration')}</TableCell>\n                            <TableCell align=\"right\">{t('intensity')}</TableCell>\n                            <TableCell>{t('description')}</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).map((interval, idx) => (\n                            <TableRow\n                              key={idx}\n                              sx={{\n                                backgroundColor: \n                                  interval.type === 'work' ? 'rgba(244, 67, 54, 0.1)' :\n                                  interval.type === 'rest' ? 'rgba(76, 175, 80, 0.1)' :\n                                  interval.type === 'warmup' ? 'rgba(33, 150, 243, 0.1)' :\n                                  'rgba(255, 152, 0, 0.1)'\n                              }}\n                            >\n                              <TableCell>\n                                {interval.type === 'work' ? t('work') :\n                                 interval.type === 'rest' ? t('rest') :\n                                 interval.type === 'warmup' ? t('warmup') :\n                                 t('cooldown')}\n                              </TableCell>\n                              <TableCell align=\"right\">\n                                {Math.floor(interval.duration / 60)}:{(interval.duration % 60).toString().padStart(2, '0')}\n                              </TableCell>\n                              <TableCell align=\"right\">\n                                {interval.intensity}% FTP\n                              </TableCell>\n                              <TableCell>{interval.label}</TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </Grid>\n                </Grid>\n                \n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<SaveIcon />}\n                    onClick={() => handleSaveWorkout(selectedWorkout || customWorkout)}\n                  >\n                    {t('saveWorkout')}\n                  </Button>\n                </Box>\n              </>\n            )}\n          </Box>\n        );\n      // ... (autres onglets)\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        {t('hiitBuilder')}\n      </Typography>\n      \n      <Tabs \n        value={activeTab} \n        onChange={handleTabChange} \n        variant=\"scrollable\" \n        scrollButtons=\"auto\"\n      >\n        <Tab label={t('templates')} />\n        <Tab label={t('customWorkout')} />\n        <Tab label={t('workoutStats')} />\n        <Tab label={t('workoutPreview')} />\n      </Tabs>\n      \n      {renderTabContent()}\n      \n      <CalorieCalculator\n        userProfile={userProfile}\n        onCalorieSettingsChange={handleCalorieSettingsChange}\n        open={calorieCalculatorOpen}\n        onClose={() => setCalorieCalculatorOpen(false)}\n      />\n    </Box>\n  );\n};\n\nexport default HIITBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}