{"ast":null,"code":"import{useState,useEffect,useCallback,useMemo}from'react';import{useLocation,useNavigate}from'react-router-dom';import ColService from'../../services/colService';import weatherPreloader from'../../utils/weatherPreloader';import{useLocalStorage}from'../../hooks/useLocalStorage';/**\n * Hook personnalisé pour gérer la logique de l'explorateur de cols\n * @returns {Object} État et fonctions pour l'explorateur de cols\n */const useColsExplorer=()=>{const[cols,setCols]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedColId,setSelectedColId]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[filterRegion,setFilterRegion]=useState('');const[filterDifficulty,setFilterDifficulty]=useState('');const[filterElevation,setFilterElevation]=useState([0,3000]);const[filterSurface,setFilterSurface]=useState([]);const[filterTechnicalDifficulty,setFilterTechnicalDifficulty]=useState('');const[filterSeasons,setFilterSeasons]=useState([]);const[filtersOpen,setFiltersOpen]=useState(false);const[page,setPage]=useState(1);const[favorites,setFavorites]=useLocalStorage('colFavorites',[]);const itemsPerPage=10;const location=useLocation();const navigate=useNavigate();/**\n   * Déterminer la section active basée sur l'URL\n   */const getActiveSection=useCallback(()=>{if(location.pathname.includes('/seven-majors')){return'seven-majors';}return'explorer';},[location.pathname]);const activeSection=useMemo(()=>getActiveSection(),[getActiveSection]);/**\n   * Charger les cols avec filtres - optimisé avec debounce\n   */const fetchCols=useCallback(async()=>{try{setLoading(true);// Préparation des options de filtrage\nconst options={region:filterRegion||undefined,difficulty:filterDifficulty||undefined,minElevation:filterElevation[0]||undefined,maxElevation:filterElevation[1]||undefined,surface:filterSurface.length>0?filterSurface:undefined,technicalDifficulty:filterTechnicalDifficulty||undefined,seasons:filterSeasons.length>0?filterSeasons:undefined};const data=await ColService.getAllCols(options);setCols(data);// Sélectionner le premier col si aucun n'est sélectionné\nif(data.length>0&&!selectedColId){setSelectedColId(data[0].id);// Précharger les données météo pour ce col\nif(data[0].latitude&&data[0].longitude){weatherPreloader.addToPreloadQueue({lat:data[0].latitude,lng:data[0].longitude,name:data[0].name});}}setError(null);}catch(err){console.error('Erreur lors du chargement des cols:',err);setError('Impossible de charger la liste des cols. Veuillez réessayer plus tard.');}finally{setLoading(false);}},[filterRegion,filterDifficulty,filterElevation,filterSurface,filterTechnicalDifficulty,filterSeasons,selectedColId]);// Effectuer le chargement initial et à chaque changement de filtre\nuseEffect(()=>{// Utiliser un délai pour éviter les requêtes trop fréquentes\nconst debounceTimer=setTimeout(()=>{fetchCols();},300);return()=>clearTimeout(debounceTimer);},[fetchCols]);/**\n   * Filtrer les cols par terme de recherche\n   */const filteredCols=useMemo(()=>cols.filter(col=>{// Si le terme de recherche est vide, ne pas filtrer\nif(!searchTerm.trim())return true;const searchLower=searchTerm.toLowerCase();return col.name.toLowerCase().includes(searchLower)||col.region&&col.region.toLowerCase().includes(searchLower)||col.location&&col.location.toLowerCase().includes(searchLower);}),[cols,searchTerm]);/**\n   * Calculer la pagination\n   */const paginatedCols=useMemo(()=>{const startIndex=(page-1)*itemsPerPage;const endIndex=startIndex+itemsPerPage;return filteredCols.slice(startIndex,endIndex);},[filteredCols,page,itemsPerPage]);const pageCount=useMemo(()=>Math.ceil(filteredCols.length/itemsPerPage),[filteredCols.length,itemsPerPage]);// Réinitialiser la page quand les filtres changent\nuseEffect(()=>{setPage(1);},[searchTerm,filterRegion,filterDifficulty,filterElevation,filterSurface,filterTechnicalDifficulty,filterSeasons]);/**\n   * Gérer la sélection d'un col\n   */const handleColSelect=useCallback(colId=>{setSelectedColId(colId);// Précharger les données météo lorsqu'un col est sélectionné\nconst selectedCol=cols.find(col=>col.id===colId);if(selectedCol&&selectedCol.latitude&&selectedCol.longitude){weatherPreloader.addToPreloadQueue({lat:selectedCol.latitude,lng:selectedCol.longitude,name:selectedCol.name});}},[cols]);/**\n   * Ajouter/retirer un col des favoris\n   */const toggleFavorite=useCallback(colId=>{setFavorites(prevFavorites=>{if(prevFavorites.includes(colId)){return prevFavorites.filter(id=>id!==colId);}else{return[...prevFavorites,colId];}});},[setFavorites]);/**\n   * Réinitialiser tous les filtres\n   */const resetFilters=useCallback(()=>{setSearchTerm('');setFilterRegion('');setFilterDifficulty('');setFilterElevation([0,3000]);setFilterSurface([]);setFilterTechnicalDifficulty('');setFilterSeasons([]);},[]);/**\n   * Naviguer vers une section spécifique\n   */const navigateToSection=useCallback(section=>{if(section==='explorer'){navigate('/cols');}else if(section==='seven-majors'){navigate('/cols/seven-majors');}},[navigate]);return{cols,loading,error,selectedColId,searchTerm,filterRegion,filterDifficulty,filterElevation,filterSurface,filterTechnicalDifficulty,filterSeasons,filtersOpen,page,activeSection,filteredCols,paginatedCols,pageCount,favorites,toggleFavorite,setSearchTerm,setFilterRegion,setFilterDifficulty,setFilterElevation,setFilterSurface,setFilterTechnicalDifficulty,setFilterSeasons,setFiltersOpen,setPage,handleColSelect,resetFilters,navigateToSection};};export default useColsExplorer;","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","useLocation","useNavigate","ColService","weatherPreloader","useLocalStorage","useColsExplorer","cols","setCols","loading","setLoading","error","setError","selectedColId","setSelectedColId","searchTerm","setSearchTerm","filterRegion","setFilterRegion","filterDifficulty","setFilterDifficulty","filterElevation","setFilterElevation","filterSurface","setFilterSurface","filterTechnicalDifficulty","setFilterTechnicalDifficulty","filterSeasons","setFilterSeasons","filtersOpen","setFiltersOpen","page","setPage","favorites","setFavorites","itemsPerPage","location","navigate","getActiveSection","pathname","includes","activeSection","fetchCols","options","region","undefined","difficulty","minElevation","maxElevation","surface","length","technicalDifficulty","seasons","data","getAllCols","id","latitude","longitude","addToPreloadQueue","lat","lng","name","err","console","debounceTimer","setTimeout","clearTimeout","filteredCols","filter","col","trim","searchLower","toLowerCase","paginatedCols","startIndex","endIndex","slice","pageCount","Math","ceil","handleColSelect","colId","selectedCol","find","toggleFavorite","prevFavorites","resetFilters","navigateToSection","section"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/pages/hooks/useColsExplorer.js"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport ColService from '../../services/colService';\nimport weatherPreloader from '../../utils/weatherPreloader';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\n\n/**\n * Hook personnalisé pour gérer la logique de l'explorateur de cols\n * @returns {Object} État et fonctions pour l'explorateur de cols\n */\nconst useColsExplorer = () => {\n  const [cols, setCols] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedColId, setSelectedColId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRegion, setFilterRegion] = useState('');\n  const [filterDifficulty, setFilterDifficulty] = useState('');\n  const [filterElevation, setFilterElevation] = useState([0, 3000]);\n  const [filterSurface, setFilterSurface] = useState([]);\n  const [filterTechnicalDifficulty, setFilterTechnicalDifficulty] = useState('');\n  const [filterSeasons, setFilterSeasons] = useState([]);\n  const [filtersOpen, setFiltersOpen] = useState(false);\n  const [page, setPage] = useState(1);\n  const [favorites, setFavorites] = useLocalStorage('colFavorites', []);\n  const itemsPerPage = 10;\n  \n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  /**\n   * Déterminer la section active basée sur l'URL\n   */\n  const getActiveSection = useCallback(() => {\n    if (location.pathname.includes('/seven-majors')) {\n      return 'seven-majors';\n    }\n    return 'explorer';\n  }, [location.pathname]);\n  \n  const activeSection = useMemo(() => getActiveSection(), [getActiveSection]);\n  \n  /**\n   * Charger les cols avec filtres - optimisé avec debounce\n   */\n  const fetchCols = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      // Préparation des options de filtrage\n      const options = {\n        region: filterRegion || undefined,\n        difficulty: filterDifficulty || undefined,\n        minElevation: filterElevation[0] || undefined,\n        maxElevation: filterElevation[1] || undefined,\n        surface: filterSurface.length > 0 ? filterSurface : undefined,\n        technicalDifficulty: filterTechnicalDifficulty || undefined,\n        seasons: filterSeasons.length > 0 ? filterSeasons : undefined\n      };\n\n      const data = await ColService.getAllCols(options);\n      setCols(data);\n      \n      // Sélectionner le premier col si aucun n'est sélectionné\n      if (data.length > 0 && !selectedColId) {\n        setSelectedColId(data[0].id);\n        \n        // Précharger les données météo pour ce col\n        if (data[0].latitude && data[0].longitude) {\n          weatherPreloader.addToPreloadQueue({\n            lat: data[0].latitude,\n            lng: data[0].longitude,\n            name: data[0].name\n          });\n        }\n      }\n      \n      setError(null);\n    } catch (err) {\n      console.error('Erreur lors du chargement des cols:', err);\n      setError('Impossible de charger la liste des cols. Veuillez réessayer plus tard.');\n    } finally {\n      setLoading(false);\n    }\n  }, [filterRegion, filterDifficulty, filterElevation, filterSurface, filterTechnicalDifficulty, filterSeasons, selectedColId]);\n  \n  // Effectuer le chargement initial et à chaque changement de filtre\n  useEffect(() => {\n    // Utiliser un délai pour éviter les requêtes trop fréquentes\n    const debounceTimer = setTimeout(() => {\n      fetchCols();\n    }, 300);\n    \n    return () => clearTimeout(debounceTimer);\n  }, [fetchCols]);\n  \n  /**\n   * Filtrer les cols par terme de recherche\n   */\n  const filteredCols = useMemo(() => \n    cols.filter(col => {\n      // Si le terme de recherche est vide, ne pas filtrer\n      if (!searchTerm.trim()) return true;\n      \n      const searchLower = searchTerm.toLowerCase();\n      return (\n        col.name.toLowerCase().includes(searchLower) ||\n        (col.region && col.region.toLowerCase().includes(searchLower)) ||\n        (col.location && col.location.toLowerCase().includes(searchLower))\n      );\n    }),\n    [cols, searchTerm]\n  );\n  \n  /**\n   * Calculer la pagination\n   */\n  const paginatedCols = useMemo(() => {\n    const startIndex = (page - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return filteredCols.slice(startIndex, endIndex);\n  }, [filteredCols, page, itemsPerPage]);\n  \n  const pageCount = useMemo(() => \n    Math.ceil(filteredCols.length / itemsPerPage),\n    [filteredCols.length, itemsPerPage]\n  );\n  \n  // Réinitialiser la page quand les filtres changent\n  useEffect(() => {\n    setPage(1);\n  }, [searchTerm, filterRegion, filterDifficulty, filterElevation, filterSurface, filterTechnicalDifficulty, filterSeasons]);\n  \n  /**\n   * Gérer la sélection d'un col\n   */\n  const handleColSelect = useCallback((colId) => {\n    setSelectedColId(colId);\n    \n    // Précharger les données météo lorsqu'un col est sélectionné\n    const selectedCol = cols.find(col => col.id === colId);\n    if (selectedCol && selectedCol.latitude && selectedCol.longitude) {\n      weatherPreloader.addToPreloadQueue({\n        lat: selectedCol.latitude,\n        lng: selectedCol.longitude,\n        name: selectedCol.name\n      });\n    }\n  }, [cols]);\n  \n  /**\n   * Ajouter/retirer un col des favoris\n   */\n  const toggleFavorite = useCallback((colId) => {\n    setFavorites(prevFavorites => {\n      if (prevFavorites.includes(colId)) {\n        return prevFavorites.filter(id => id !== colId);\n      } else {\n        return [...prevFavorites, colId];\n      }\n    });\n  }, [setFavorites]);\n  \n  /**\n   * Réinitialiser tous les filtres\n   */\n  const resetFilters = useCallback(() => {\n    setSearchTerm('');\n    setFilterRegion('');\n    setFilterDifficulty('');\n    setFilterElevation([0, 3000]);\n    setFilterSurface([]);\n    setFilterTechnicalDifficulty('');\n    setFilterSeasons([]);\n  }, []);\n  \n  /**\n   * Naviguer vers une section spécifique\n   */\n  const navigateToSection = useCallback((section) => {\n    if (section === 'explorer') {\n      navigate('/cols');\n    } else if (section === 'seven-majors') {\n      navigate('/cols/seven-majors');\n    }\n  }, [navigate]);\n  \n  return {\n    cols,\n    loading,\n    error,\n    selectedColId,\n    searchTerm,\n    filterRegion,\n    filterDifficulty,\n    filterElevation,\n    filterSurface,\n    filterTechnicalDifficulty,\n    filterSeasons,\n    filtersOpen,\n    page,\n    activeSection,\n    filteredCols,\n    paginatedCols,\n    pageCount,\n    favorites,\n    toggleFavorite,\n    setSearchTerm,\n    setFilterRegion,\n    setFilterDifficulty,\n    setFilterElevation,\n    setFilterSurface,\n    setFilterTechnicalDifficulty,\n    setFilterSeasons,\n    setFiltersOpen,\n    setPage,\n    handleColSelect,\n    resetFilters,\n    navigateToSection\n  };\n};\n\nexport default useColsExplorer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}