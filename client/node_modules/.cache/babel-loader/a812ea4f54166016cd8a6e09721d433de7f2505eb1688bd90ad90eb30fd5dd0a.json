{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import{Card,Row,Col,Badge,ProgressBar,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlay,faPause,faStop,faClock,faChartLine,faFire}from'@fortawesome/free-solid-svg-icons';import{useTranslation}from'react-i18next';import Chart from'chart.js/auto';import{useNotification}from'../common/NotificationSystem';/**\n * Composant pour visualiser et suivre un entraînement HIIT\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HIITVisualizer=_ref=>{let{workout,onComplete,onSave}=_ref;const{t}=useTranslation();const{notify}=useNotification();const chartRef=useRef(null);const chartInstance=useRef(null);const[isActive,setIsActive]=useState(false);const[currentInterval,setCurrentInterval]=useState(0);const[elapsedTime,setElapsedTime]=useState(0);const[totalTime,setTotalTime]=useState(0);const[timerID,setTimerID]=useState(null);const[sessionStats,setSessionStats]=useState({tss:0,// Training Stress Score\nkj:0,// Kilojoules\ntimeInZones:[0,0,0,0,0,0,0]// Temps passé dans chaque zone\n});// Convertir le temps en format mm:ss\nconst formatTime=timeInSeconds=>{const minutes=Math.floor(timeInSeconds/60);const seconds=timeInSeconds%60;return`${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;};// Validation de l'entraînement\nuseEffect(()=>{if(!workout){notify.error(\"Données d'entraînement manquantes\");return;}try{if(!workout.intervals||!Array.isArray(workout.intervals)){notify.error(\"Intervalles d'entraînement invalides\");return;}// Calculer la durée totale de l'entraînement\nconst total=workout.intervals.reduce((sum,interval)=>sum+(interval.duration||0),0);if(total<=0){notify.error(\"Durée d'entraînement invalide\");return;}setTotalTime(total);// Initialiser la visualisation\ninitializeChart();}catch(error){console.error(\"Erreur lors de l'initialisation de l'entraînement\",error);notify.error(\"Erreur lors de l'initialisation\",error.message);}},[workout,notify]);// Création et mise à jour du graphique\nconst initializeChart=()=>{if(!workout||!workout.intervals||!chartRef.current)return;// Détruire le graphique existant s'il y en a un\nif(chartInstance.current){chartInstance.current.destroy();}// Préparer les données pour le graphique\nconst labels=[];const powerData=[];let currentTime=0;workout.intervals.forEach(interval=>{const durationMinutes=interval.duration/60;const intervalType=interval.type||'steady';// Pour chaque minute de l'intervalle\nfor(let i=0;i<durationMinutes;i++){currentTime+=60;labels.push(formatTime(currentTime));powerData.push(interval.power);}});// Référence à la FTP pour déterminer les zones de puissance\nconst ftp=workout.targetPower||200;// Créer le graphique\nconst ctx=chartRef.current.getContext('2d');chartInstance.current=new Chart(ctx,{type:'line',data:{labels:labels,datasets:[{label:'Puissance Cible (Watts)',data:powerData,borderColor:'rgb(75, 192, 192)',tension:0.1,fill:true,backgroundColor:'rgba(75, 192, 192, 0.2)'},{label:'FTP',data:Array(labels.length).fill(ftp),borderColor:'rgba(255, 99, 132, 0.8)',borderDash:[5,5],borderWidth:2,pointRadius:0}]},options:{responsive:true,maintainAspectRatio:false,scales:{y:{beginAtZero:true,title:{display:true,text:'Watts'}},x:{title:{display:true,text:'Temps (minutes)'}}},plugins:{tooltip:{callbacks:{title:context=>{return`Temps: ${context[0].label}`;},label:context=>{const power=context.raw;const percentOfFTP=Math.round(power/ftp*100);return[`Puissance: ${power} W`,`${percentOfFTP}% de FTP`];}}}}}});};// Démarrer/Reprendre l'entraînement\nconst startWorkout=()=>{if(isActive)return;setIsActive(true);// Démarrer le chronomètre\nconst id=setInterval(()=>{setElapsedTime(prev=>{const newTime=prev+1;// Vérifier si on doit passer à l'intervalle suivant\nlet totalDuration=0;let nextIntervalIndex=0;for(let i=0;i<workout.intervals.length;i++){totalDuration+=workout.intervals[i].duration;if(newTime<=totalDuration){nextIntervalIndex=i;break;}}if(nextIntervalIndex!==currentInterval){setCurrentInterval(nextIntervalIndex);// Annoncer le changement d'intervalle\nconst intervalType=workout.intervals[nextIntervalIndex].type;const power=workout.intervals[nextIntervalIndex].power;notify.info(`Nouvel intervalle: ${intervalType}, ${power}W`);}// Calculer les statistiques de la séance\nupdateSessionStats(newTime);// Vérifier si l'entraînement est terminé\nif(newTime>=totalTime){clearInterval(timerID);finishWorkout();return totalTime;}return newTime;});},1000);setTimerID(id);};// Mettre à jour les statistiques de la séance\nconst updateSessionStats=currentTime=>{if(!workout||!workout.intervals)return;// Trouver l'intervalle actuel\nlet accumulatedDuration=0;let currentIntervalData=null;for(const interval of workout.intervals){accumulatedDuration+=interval.duration;if(currentTime<=accumulatedDuration){currentIntervalData=interval;break;}}if(!currentIntervalData)return;// Calculer les statistiques supplémentaires\nsetSessionStats(prev=>{// Calculer les kilojoules (kJ = Watts * heures)\nconst hourFraction=1/3600;// une seconde en heures\nconst newKj=prev.kj+currentIntervalData.power*hourFraction;// Déterminer la zone de puissance\nconst ftp=workout.targetPower||200;const powerPercentage=currentIntervalData.power/ftp;// Incrémenter le temps passé dans la zone appropriée\nconst newTimeInZones=[...prev.timeInZones];if(powerPercentage<=0.55)newTimeInZones[0]++;else if(powerPercentage<=0.75)newTimeInZones[1]++;else if(powerPercentage<=0.9)newTimeInZones[2]++;else if(powerPercentage<=1.05)newTimeInZones[3]++;else if(powerPercentage<=1.3)newTimeInZones[4]++;else if(powerPercentage<=1.5)newTimeInZones[5]++;else newTimeInZones[6]++;// Calculer le TSS approximatif (Training Stress Score)\n// TSS = (durée_en_secondes * NP * IF) / (FTP * 36)\n// Pour simplifier, on utilise la puissance de l'intervalle au lieu de NP (Normalized Power)\n// et IF (Intensity Factor) = puissance / FTP\nconst tssIncrement=1*currentIntervalData.power*(currentIntervalData.power/ftp)/(ftp*36);return{tss:prev.tss+tssIncrement,kj:newKj,timeInZones:newTimeInZones};});};// Mettre en pause l'entraînement\nconst pauseWorkout=()=>{clearInterval(timerID);setIsActive(false);};// Terminer l'entraînement\nconst finishWorkout=()=>{clearInterval(timerID);setIsActive(false);// Arrondir les statistiques\nconst finalStats={tss:Math.round(sessionStats.tss),kj:Math.round(sessionStats.kj),timeInZones:sessionStats.timeInZones,duration:elapsedTime,completed:elapsedTime>=totalTime};// Notifier l'utilisateur\nnotify.success(\"Entraînement terminé !\",`TSS: ${finalStats.tss}, Énergie dépensée: ${finalStats.kj} kJ`);// Appeler le callback de fin\nif(onComplete){onComplete(finalStats);}};// Sauvegarder l'entraînement\nconst saveWorkout=()=>{if(!workout)return;try{if(onSave){const workoutData={...workout,stats:sessionStats,completedTime:elapsedTime,completionDate:new Date().toISOString(),completed:elapsedTime>=totalTime};onSave(workoutData);notify.success(\"Entraînement sauvegardé !\");}}catch(error){console.error(\"Erreur lors de la sauvegarde\",error);notify.error(\"Impossible de sauvegarder l'entraînement\",error.message);}};// Obtenir les informations sur l'intervalle actuel\nconst getCurrentIntervalInfo=()=>{if(!workout||!workout.intervals||workout.intervals.length===0){return{type:'inconnu',power:0,duration:0};}const intervalIndex=Math.min(currentInterval,workout.intervals.length-1);return workout.intervals[intervalIndex];};// Determiner le style de l'intervalle actuel\nconst getIntervalStyle=type=>{const styles={warmup:{color:'info',icon:faPlay},steady:{color:'success',icon:faChartLine},threshold:{color:'warning',icon:faFire},vo2max:{color:'danger',icon:faFire},recovery:{color:'info',icon:faClock},cooldown:{color:'primary',icon:faClock},default:{color:'secondary',icon:faChartLine}};return styles[type]||styles.default;};// Si aucun entraînement n'est fourni\nif(!workout){return/*#__PURE__*/_jsx(Card,{className:\"text-center my-4\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Aucun entra\\xEEnement s\\xE9lectionn\\xE9\"}),/*#__PURE__*/_jsx(Card.Text,{children:\"Veuillez s\\xE9lectionner un entra\\xEEnement pour commencer la session.\"})]})});}// Informations sur l'intervalle actuel\nconst currentIntervalInfo=getCurrentIntervalInfo();const intervalStyle=getIntervalStyle(currentIntervalInfo.type);const percentComplete=Math.min(100,elapsedTime/totalTime*100);return/*#__PURE__*/_jsx(\"div\",{className:\"hiit-visualizer\",children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mb-0\",children:workout.name}),/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",children:[formatTime(elapsedTime),\" / \",formatTime(totalTime)]})]}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(ProgressBar,{now:percentComplete,variant:\"primary\",label:`${Math.round(percentComplete)}%`,className:\"mb-2\",style:{height:'25px'}})}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"h-100 current-interval\",children:[/*#__PURE__*/_jsxs(Card.Header,{className:`bg-${intervalStyle.color} text-white`,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:intervalStyle.icon,className:\"me-2\"}),\"Intervalle Actuel: \",t(`intervals.${currentIntervalInfo.type}`)||currentIntervalInfo.type]}),/*#__PURE__*/_jsxs(Card.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"power-display mb-3\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"power-value\",children:currentIntervalInfo.power}),/*#__PURE__*/_jsx(\"span\",{className:\"power-unit\",children:\"watts\"})]}),/*#__PURE__*/_jsxs(Row,{className:\"interval-details\",children:[/*#__PURE__*/_jsx(Col,{xs:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faClock,className:\"me-2 text-muted\"}),formatTime(currentIntervalInfo.duration)]})}),/*#__PURE__*/_jsx(Col,{xs:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faFire,className:\"me-2 text-muted\"}),workout.targetPower?`${Math.round(currentIntervalInfo.power/workout.targetPower*100)}% FTP`:'FTP inconnue']})})]})]})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"h-100 session-stats\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Statistiques de la Session\"}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:6,className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"TSS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:Math.round(sessionStats.tss)})]}),/*#__PURE__*/_jsxs(Col,{xs:6,className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Kilojoules\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",children:[Math.round(sessionStats.kj),\" kJ\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"zones-distribution\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label mb-2\",children:\"Temps dans les zones\"}),/*#__PURE__*/_jsx(\"div\",{className:\"zones-bars\",children:sessionStats.timeInZones.map((time,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"zone-bar-container mb-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"zone-name\",children:[\"Z\",index+1]}),/*#__PURE__*/_jsx(ProgressBar,{now:time,max:totalTime,variant:index===0?'info':index===1?'success':index===2?'primary':index===3?'warning':index===4?'danger':index===5?'dark':'secondary',className:\"flex-grow-1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"zone-time\",children:[Math.round(time),\"s\"]})]},index))})]})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",style:{height:'300px'},children:/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef})}),/*#__PURE__*/_jsxs(\"div\",{className:\"workout-controls mt-4 d-flex justify-content-center\",children:[!isActive?/*#__PURE__*/_jsxs(Button,{variant:\"success\",size:\"lg\",onClick:startWorkout,className:\"me-2\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlay,className:\"me-2\"}),elapsedTime>0?'Reprendre':'Démarrer']}):/*#__PURE__*/_jsxs(Button,{variant:\"warning\",size:\"lg\",onClick:pauseWorkout,className:\"me-2\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPause,className:\"me-2\"}),\"Pause\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"danger\",size:\"lg\",onClick:finishWorkout,className:\"me-2\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faStop,className:\"me-2\"}),\"Terminer\"]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"lg\",onClick:saveWorkout,children:\"Sauvegarder\"})]})]})]})});};export default HIITVisualizer;","map":{"version":3,"names":["React","useRef","useEffect","useState","Card","Row","Col","Badge","ProgressBar","Button","FontAwesomeIcon","faPlay","faPause","faStop","faClock","faChartLine","faFire","useTranslation","Chart","useNotification","jsx","_jsx","jsxs","_jsxs","HIITVisualizer","_ref","workout","onComplete","onSave","t","notify","chartRef","chartInstance","isActive","setIsActive","currentInterval","setCurrentInterval","elapsedTime","setElapsedTime","totalTime","setTotalTime","timerID","setTimerID","sessionStats","setSessionStats","tss","kj","timeInZones","formatTime","timeInSeconds","minutes","Math","floor","seconds","toString","padStart","error","intervals","Array","isArray","total","reduce","sum","interval","duration","initializeChart","console","message","current","destroy","labels","powerData","currentTime","forEach","durationMinutes","intervalType","type","i","push","power","ftp","targetPower","ctx","getContext","data","datasets","label","borderColor","tension","fill","backgroundColor","length","borderDash","borderWidth","pointRadius","options","responsive","maintainAspectRatio","scales","y","beginAtZero","title","display","text","x","plugins","tooltip","callbacks","context","raw","percentOfFTP","round","startWorkout","id","setInterval","prev","newTime","totalDuration","nextIntervalIndex","info","updateSessionStats","clearInterval","finishWorkout","accumulatedDuration","currentIntervalData","hourFraction","newKj","powerPercentage","newTimeInZones","tssIncrement","pauseWorkout","finalStats","completed","success","saveWorkout","workoutData","stats","completedTime","completionDate","Date","toISOString","getCurrentIntervalInfo","intervalIndex","min","getIntervalStyle","styles","warmup","color","icon","steady","threshold","vo2max","recovery","cooldown","default","className","children","Body","Title","Text","currentIntervalInfo","intervalStyle","percentComplete","Header","name","bg","now","variant","style","height","md","xs","map","time","index","max","ref","size","onClick"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/training/HIITVisualizer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Row, Col, Badge, ProgressBar, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop, faClock, faChartLine, faFire } from '@fortawesome/free-solid-svg-icons';\nimport { useTranslation } from 'react-i18next';\nimport Chart from 'chart.js/auto';\nimport { useNotification } from '../common/NotificationSystem';\n\n/**\n * Composant pour visualiser et suivre un entraînement HIIT\n */\nconst HIITVisualizer = ({ workout, onComplete, onSave }) => {\n  const { t } = useTranslation();\n  const { notify } = useNotification();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  const [isActive, setIsActive] = useState(false);\n  const [currentInterval, setCurrentInterval] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n  const [timerID, setTimerID] = useState(null);\n  const [sessionStats, setSessionStats] = useState({\n    tss: 0,          // Training Stress Score\n    kj: 0,           // Kilojoules\n    timeInZones: [0, 0, 0, 0, 0, 0, 0],  // Temps passé dans chaque zone\n  });\n\n  // Convertir le temps en format mm:ss\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Validation de l'entraînement\n  useEffect(() => {\n    if (!workout) {\n      notify.error(\"Données d'entraînement manquantes\");\n      return;\n    }\n\n    try {\n      if (!workout.intervals || !Array.isArray(workout.intervals)) {\n        notify.error(\"Intervalles d'entraînement invalides\");\n        return;\n      }\n\n      // Calculer la durée totale de l'entraînement\n      const total = workout.intervals.reduce(\n        (sum, interval) => sum + (interval.duration || 0), \n        0\n      );\n      \n      if (total <= 0) {\n        notify.error(\"Durée d'entraînement invalide\");\n        return;\n      }\n      \n      setTotalTime(total);\n      \n      // Initialiser la visualisation\n      initializeChart();\n    } catch (error) {\n      console.error(\"Erreur lors de l'initialisation de l'entraînement\", error);\n      notify.error(\"Erreur lors de l'initialisation\", error.message);\n    }\n  }, [workout, notify]);\n\n  // Création et mise à jour du graphique\n  const initializeChart = () => {\n    if (!workout || !workout.intervals || !chartRef.current) return;\n\n    // Détruire le graphique existant s'il y en a un\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    // Préparer les données pour le graphique\n    const labels = [];\n    const powerData = [];\n    let currentTime = 0;\n\n    workout.intervals.forEach(interval => {\n      const durationMinutes = interval.duration / 60;\n      const intervalType = interval.type || 'steady';\n      \n      // Pour chaque minute de l'intervalle\n      for (let i = 0; i < durationMinutes; i++) {\n        currentTime += 60;\n        labels.push(formatTime(currentTime));\n        powerData.push(interval.power);\n      }\n    });\n\n    // Référence à la FTP pour déterminer les zones de puissance\n    const ftp = workout.targetPower || 200;\n\n    // Créer le graphique\n    const ctx = chartRef.current.getContext('2d');\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Puissance Cible (Watts)',\n            data: powerData,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1,\n            fill: true,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\n          },\n          {\n            label: 'FTP',\n            data: Array(labels.length).fill(ftp),\n            borderColor: 'rgba(255, 99, 132, 0.8)',\n            borderDash: [5, 5],\n            borderWidth: 2,\n            pointRadius: 0\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Watts'\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: 'Temps (minutes)'\n            }\n          }\n        },\n        plugins: {\n          tooltip: {\n            callbacks: {\n              title: (context) => {\n                return `Temps: ${context[0].label}`;\n              },\n              label: (context) => {\n                const power = context.raw;\n                const percentOfFTP = Math.round((power / ftp) * 100);\n                return [\n                  `Puissance: ${power} W`,\n                  `${percentOfFTP}% de FTP`\n                ];\n              }\n            }\n          }\n        }\n      }\n    });\n  };\n\n  // Démarrer/Reprendre l'entraînement\n  const startWorkout = () => {\n    if (isActive) return;\n    \n    setIsActive(true);\n    \n    // Démarrer le chronomètre\n    const id = setInterval(() => {\n      setElapsedTime(prev => {\n        const newTime = prev + 1;\n        \n        // Vérifier si on doit passer à l'intervalle suivant\n        let totalDuration = 0;\n        let nextIntervalIndex = 0;\n        \n        for (let i = 0; i < workout.intervals.length; i++) {\n          totalDuration += workout.intervals[i].duration;\n          if (newTime <= totalDuration) {\n            nextIntervalIndex = i;\n            break;\n          }\n        }\n        \n        if (nextIntervalIndex !== currentInterval) {\n          setCurrentInterval(nextIntervalIndex);\n          \n          // Annoncer le changement d'intervalle\n          const intervalType = workout.intervals[nextIntervalIndex].type;\n          const power = workout.intervals[nextIntervalIndex].power;\n          notify.info(`Nouvel intervalle: ${intervalType}, ${power}W`);\n        }\n        \n        // Calculer les statistiques de la séance\n        updateSessionStats(newTime);\n        \n        // Vérifier si l'entraînement est terminé\n        if (newTime >= totalTime) {\n          clearInterval(timerID);\n          finishWorkout();\n          return totalTime;\n        }\n        \n        return newTime;\n      });\n    }, 1000);\n    \n    setTimerID(id);\n  };\n\n  // Mettre à jour les statistiques de la séance\n  const updateSessionStats = (currentTime) => {\n    if (!workout || !workout.intervals) return;\n    \n    // Trouver l'intervalle actuel\n    let accumulatedDuration = 0;\n    let currentIntervalData = null;\n    \n    for (const interval of workout.intervals) {\n      accumulatedDuration += interval.duration;\n      if (currentTime <= accumulatedDuration) {\n        currentIntervalData = interval;\n        break;\n      }\n    }\n    \n    if (!currentIntervalData) return;\n    \n    // Calculer les statistiques supplémentaires\n    setSessionStats(prev => {\n      // Calculer les kilojoules (kJ = Watts * heures)\n      const hourFraction = 1 / 3600; // une seconde en heures\n      const newKj = prev.kj + (currentIntervalData.power * hourFraction);\n      \n      // Déterminer la zone de puissance\n      const ftp = workout.targetPower || 200;\n      const powerPercentage = currentIntervalData.power / ftp;\n      \n      // Incrémenter le temps passé dans la zone appropriée\n      const newTimeInZones = [...prev.timeInZones];\n      if (powerPercentage <= 0.55) newTimeInZones[0]++;\n      else if (powerPercentage <= 0.75) newTimeInZones[1]++;\n      else if (powerPercentage <= 0.9) newTimeInZones[2]++;\n      else if (powerPercentage <= 1.05) newTimeInZones[3]++;\n      else if (powerPercentage <= 1.3) newTimeInZones[4]++;\n      else if (powerPercentage <= 1.5) newTimeInZones[5]++;\n      else newTimeInZones[6]++;\n      \n      // Calculer le TSS approximatif (Training Stress Score)\n      // TSS = (durée_en_secondes * NP * IF) / (FTP * 36)\n      // Pour simplifier, on utilise la puissance de l'intervalle au lieu de NP (Normalized Power)\n      // et IF (Intensity Factor) = puissance / FTP\n      const tssIncrement = \n        (1 * currentIntervalData.power * (currentIntervalData.power / ftp)) / \n        (ftp * 36);\n      \n      return {\n        tss: prev.tss + tssIncrement,\n        kj: newKj,\n        timeInZones: newTimeInZones\n      };\n    });\n  };\n\n  // Mettre en pause l'entraînement\n  const pauseWorkout = () => {\n    clearInterval(timerID);\n    setIsActive(false);\n  };\n\n  // Terminer l'entraînement\n  const finishWorkout = () => {\n    clearInterval(timerID);\n    setIsActive(false);\n    \n    // Arrondir les statistiques\n    const finalStats = {\n      tss: Math.round(sessionStats.tss),\n      kj: Math.round(sessionStats.kj),\n      timeInZones: sessionStats.timeInZones,\n      duration: elapsedTime,\n      completed: elapsedTime >= totalTime\n    };\n    \n    // Notifier l'utilisateur\n    notify.success(\"Entraînement terminé !\", \n      `TSS: ${finalStats.tss}, Énergie dépensée: ${finalStats.kj} kJ`\n    );\n    \n    // Appeler le callback de fin\n    if (onComplete) {\n      onComplete(finalStats);\n    }\n  };\n\n  // Sauvegarder l'entraînement\n  const saveWorkout = () => {\n    if (!workout) return;\n    \n    try {\n      if (onSave) {\n        const workoutData = {\n          ...workout,\n          stats: sessionStats,\n          completedTime: elapsedTime,\n          completionDate: new Date().toISOString(),\n          completed: elapsedTime >= totalTime\n        };\n        \n        onSave(workoutData);\n        notify.success(\"Entraînement sauvegardé !\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la sauvegarde\", error);\n      notify.error(\"Impossible de sauvegarder l'entraînement\", error.message);\n    }\n  };\n\n  // Obtenir les informations sur l'intervalle actuel\n  const getCurrentIntervalInfo = () => {\n    if (!workout || !workout.intervals || workout.intervals.length === 0) {\n      return { type: 'inconnu', power: 0, duration: 0 };\n    }\n    \n    const intervalIndex = Math.min(currentInterval, workout.intervals.length - 1);\n    return workout.intervals[intervalIndex];\n  };\n\n  // Determiner le style de l'intervalle actuel\n  const getIntervalStyle = (type) => {\n    const styles = {\n      warmup: { color: 'info', icon: faPlay },\n      steady: { color: 'success', icon: faChartLine },\n      threshold: { color: 'warning', icon: faFire },\n      vo2max: { color: 'danger', icon: faFire },\n      recovery: { color: 'info', icon: faClock },\n      cooldown: { color: 'primary', icon: faClock },\n      default: { color: 'secondary', icon: faChartLine }\n    };\n    \n    return styles[type] || styles.default;\n  };\n\n  // Si aucun entraînement n'est fourni\n  if (!workout) {\n    return (\n      <Card className=\"text-center my-4\">\n        <Card.Body>\n          <Card.Title>Aucun entraînement sélectionné</Card.Title>\n          <Card.Text>\n            Veuillez sélectionner un entraînement pour commencer la session.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  // Informations sur l'intervalle actuel\n  const currentIntervalInfo = getCurrentIntervalInfo();\n  const intervalStyle = getIntervalStyle(currentIntervalInfo.type);\n  const percentComplete = Math.min(100, (elapsedTime / totalTime) * 100);\n\n  return (\n    <div className=\"hiit-visualizer\">\n      <Card className=\"mb-4\">\n        <Card.Header className=\"d-flex justify-content-between align-items-center\">\n          <h4 className=\"mb-0\">{workout.name}</h4>\n          <Badge bg=\"primary\">{formatTime(elapsedTime)} / {formatTime(totalTime)}</Badge>\n        </Card.Header>\n        \n        <Card.Body>\n          <div className=\"mb-4\">\n            <ProgressBar \n              now={percentComplete} \n              variant=\"primary\" \n              label={`${Math.round(percentComplete)}%`} \n              className=\"mb-2\"\n              style={{ height: '25px' }}\n            />\n          </div>\n          \n          <Row className=\"mb-4\">\n            <Col md={6}>\n              <Card className=\"h-100 current-interval\">\n                <Card.Header className={`bg-${intervalStyle.color} text-white`}>\n                  <FontAwesomeIcon icon={intervalStyle.icon} className=\"me-2\" />\n                  Intervalle Actuel: {t(`intervals.${currentIntervalInfo.type}`) || currentIntervalInfo.type}\n                </Card.Header>\n                <Card.Body className=\"text-center\">\n                  <div className=\"power-display mb-3\">\n                    <h1 className=\"power-value\">{currentIntervalInfo.power}</h1>\n                    <span className=\"power-unit\">watts</span>\n                  </div>\n                  \n                  <Row className=\"interval-details\">\n                    <Col xs={6}>\n                      <div className=\"detail-item\">\n                        <FontAwesomeIcon icon={faClock} className=\"me-2 text-muted\" />\n                        {formatTime(currentIntervalInfo.duration)}\n                      </div>\n                    </Col>\n                    <Col xs={6}>\n                      <div className=\"detail-item\">\n                        <FontAwesomeIcon icon={faFire} className=\"me-2 text-muted\" />\n                        {workout.targetPower ? `${Math.round((currentIntervalInfo.power / workout.targetPower) * 100)}% FTP` : 'FTP inconnue'}\n                      </div>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n            \n            <Col md={6}>\n              <Card className=\"h-100 session-stats\">\n                <Card.Header>Statistiques de la Session</Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col xs={6} className=\"mb-3\">\n                      <div className=\"stat-label\">TSS</div>\n                      <div className=\"stat-value\">{Math.round(sessionStats.tss)}</div>\n                    </Col>\n                    <Col xs={6} className=\"mb-3\">\n                      <div className=\"stat-label\">Kilojoules</div>\n                      <div className=\"stat-value\">{Math.round(sessionStats.kj)} kJ</div>\n                    </Col>\n                  </Row>\n                  \n                  <div className=\"zones-distribution\">\n                    <div className=\"stat-label mb-2\">Temps dans les zones</div>\n                    <div className=\"zones-bars\">\n                      {sessionStats.timeInZones.map((time, index) => (\n                        <div key={index} className=\"zone-bar-container mb-1\">\n                          <div className=\"zone-name\">Z{index + 1}</div>\n                          <ProgressBar \n                            now={time} \n                            max={totalTime} \n                            variant={\n                              index === 0 ? 'info' :\n                              index === 1 ? 'success' :\n                              index === 2 ? 'primary' :\n                              index === 3 ? 'warning' :\n                              index === 4 ? 'danger' :\n                              index === 5 ? 'dark' : 'secondary'\n                            } \n                            className=\"flex-grow-1\"\n                          />\n                          <div className=\"zone-time\">{Math.round(time)}s</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          \n          <div className=\"chart-container\" style={{ height: '300px' }}>\n            <canvas ref={chartRef} />\n          </div>\n          \n          <div className=\"workout-controls mt-4 d-flex justify-content-center\">\n            {!isActive ? (\n              <Button \n                variant=\"success\" \n                size=\"lg\" \n                onClick={startWorkout}\n                className=\"me-2\"\n              >\n                <FontAwesomeIcon icon={faPlay} className=\"me-2\" />\n                {elapsedTime > 0 ? 'Reprendre' : 'Démarrer'}\n              </Button>\n            ) : (\n              <Button \n                variant=\"warning\" \n                size=\"lg\" \n                onClick={pauseWorkout}\n                className=\"me-2\"\n              >\n                <FontAwesomeIcon icon={faPause} className=\"me-2\" />\n                Pause\n              </Button>\n            )}\n            \n            <Button \n              variant=\"danger\" \n              size=\"lg\" \n              onClick={finishWorkout}\n              className=\"me-2\"\n            >\n              <FontAwesomeIcon icon={faStop} className=\"me-2\" />\n              Terminer\n            </Button>\n            \n            <Button \n              variant=\"secondary\" \n              size=\"lg\" \n              onClick={saveWorkout}\n            >\n              Sauvegarder\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nHIITVisualizer.propTypes = {\n  workout: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    description: PropTypes.string,\n    duration: PropTypes.number,\n    targetPower: PropTypes.number, // FTP ou puissance cible en watts\n    intervals: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        duration: PropTypes.number.isRequired, // en secondes\n        power: PropTypes.number.isRequired // en watts\n      })\n    ).isRequired\n  }),\n  onComplete: PropTypes.func,\n  onSave: PropTypes.func\n};\n\nexport default HIITVisualizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}