{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Grid,Paper,Typography,Card,CardContent,CardMedia,CardActionArea,Box,Chip,ToggleButtonGroup,ToggleButton,CircularProgress}from'@mui/material';import{styled}from'@mui/material/styles';import TerrainIcon from'@mui/icons-material/Terrain';import WhatshotIcon from'@mui/icons-material/Whatshot';import HeightIcon from'@mui/icons-material/Height';import RouteIcon from'@mui/icons-material/Route';import mountainService from'../../../services/mountainService';import ColVisualization3D from'../../visualization/ColVisualization3D';import{useFeatureFlags}from'../../../hooks/useFeatureFlags';import axios from'axios';// Styles personnalisés\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegionToggleButton=styled(ToggleButton)(_ref=>{let{theme}=_ref;return{'&.Mui-selected':{backgroundColor:theme.palette.primary.main,color:theme.palette.primary.contrastText,'&:hover':{backgroundColor:theme.palette.primary.dark}}};});const ColCard=styled(Card)(_ref2=>{let{theme,selected}=_ref2;return{height:'100%',display:'flex',flexDirection:'column',transition:'all 0.3s ease',border:selected?`2px solid ${theme.palette.primary.main}`:'none',transform:selected?'translateY(-4px)':'none',boxShadow:selected?theme.shadows[8]:theme.shadows[1]};});/**\n * MountainDashboard - Tableau de bord pour la sélection et la visualisation des cols\n */function MountainDashboard(_ref3){let{onRegionChange,onColSelect,selectedRegion='alpes',selectedCol}=_ref3;const[cols,setCols]=useState([]);const[loading,setLoading]=useState(true);const[visualizationData,setVisualizationData]=useState(null);const[visualizationLoading,setVisualizationLoading]=useState(false);const{enableColSpecificTraining,enableColSpecificNutrition}=useFeatureFlags();const[stats,setStats]=useState({totalCols:0,averageAltitude:0,averageDifficulty:0,regionDistribution:{}});// État local pour stocker la région et le col sélectionnés si les props ne sont pas fournies\nconst[localSelectedRegion,setLocalSelectedRegion]=useState(selectedRegion||'alpes');const[localSelectedCol,setLocalSelectedCol]=useState(null);// Déterminer les valeurs réelles à utiliser\nconst effectiveSelectedRegion=selectedRegion||localSelectedRegion;const effectiveSelectedCol=selectedCol||localSelectedCol;useEffect(()=>{// Fonction pour charger les cols en fonction de la région sélectionnée\nconst fetchCols=async()=>{setLoading(true);try{const colsData=await mountainService.getCols({region:effectiveSelectedRegion});setCols(colsData||mockCols);// Utiliser les données mockées en cas d'erreur\n// Calculer les statistiques\nif(colsData&&colsData.length>0){calculateStats(colsData);}else{calculateStats(mockCols);}}catch(error){console.error(\"Erreur lors du chargement des cols:\",error);setCols(mockCols);calculateStats(mockCols);}finally{setLoading(false);}};fetchCols();},[effectiveSelectedRegion]);// Charger les données de visualisation 3D lorsqu'un col est sélectionné\nuseEffect(()=>{const fetch3DData=async()=>{if(!effectiveSelectedCol)return;setVisualizationLoading(true);try{const data=await mountainService.getCol3DVisualizationData(effectiveSelectedCol.id);setVisualizationData(data);}catch(error){console.error(\"Erreur lors du chargement des données 3D:\",error);setVisualizationData(null);}finally{setVisualizationLoading(false);}};fetch3DData();},[effectiveSelectedCol]);// Calcul des statistiques pour le dashboard\nconst calculateStats=colsData=>{const totalCols=colsData.length;const totalAltitude=colsData.reduce((sum,col)=>sum+col.altitude,0);const totalDifficulty=colsData.reduce((sum,col)=>sum+col.difficulty,0);// Distribution par région\nconst regions={};colsData.forEach(col=>{if(!regions[col.region]){regions[col.region]=0;}regions[col.region]++;});setStats({totalCols,averageAltitude:totalAltitude/totalCols,averageDifficulty:totalDifficulty/totalCols,regionDistribution:regions});};const handleRegionChange=(event,newRegion)=>{if(newRegion!==null){if(onRegionChange){onRegionChange(newRegion);}else{setLocalSelectedRegion(newRegion);}}};const handleColClick=col=>{if(onColSelect){onColSelect(col);}else{setLocalSelectedCol(col);}};return/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2,mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"S\\xE9lection de r\\xE9gion\"}),/*#__PURE__*/_jsxs(ToggleButtonGroup,{value:effectiveSelectedRegion,exclusive:true,onChange:handleRegionChange,\"aria-label\":\"r\\xE9gion de cols\",color:\"primary\",fullWidth:true,children:[/*#__PURE__*/_jsx(RegionToggleButton,{value:\"alpes\",\"aria-label\":\"Alpes\",children:\"Alpes\"}),/*#__PURE__*/_jsx(RegionToggleButton,{value:\"pyrenees\",\"aria-label\":\"Pyr\\xE9n\\xE9es\",children:\"Pyr\\xE9n\\xE9es\"}),/*#__PURE__*/_jsx(RegionToggleButton,{value:\"dolomites\",\"aria-label\":\"Dolomites\",children:\"Dolomites\"}),/*#__PURE__*/_jsx(RegionToggleButton,{value:\"ardennes\",\"aria-label\":\"Ardennes/Flandres\",children:\"Ardennes/Flandres\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Statistiques\"}),loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:5},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',mb:2},children:[/*#__PURE__*/_jsx(HeightIcon,{color:\"primary\",sx:{fontSize:40}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[Math.round(stats.averageAltitude),\"m\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Altitude moyenne\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',mb:2},children:[/*#__PURE__*/_jsx(WhatshotIcon,{color:\"warning\",sx:{fontSize:40}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[stats.averageDifficulty.toFixed(1),\"/10\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Difficult\\xE9 moyenne\"})]})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",gutterBottom:true,children:[stats.totalCols,\" cols disponibles\"]}),effectiveSelectedCol&&/*#__PURE__*/_jsxs(Box,{sx:{mt:3,p:2,bgcolor:'background.default',borderRadius:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[\"Col s\\xE9lectionn\\xE9: \",effectiveSelectedCol.name]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Altitude: \",effectiveSelectedCol.altitude,\"m\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Longueur: \",effectiveSelectedCol.length,\"km \\xE0 \",effectiveSelectedCol.gradient,\"%\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Difficult\\xE9: \",effectiveSelectedCol.difficulty,\"/10\"]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,display:'flex',flexWrap:'wrap',gap:1},children:[enableColSpecificTraining&&/*#__PURE__*/_jsx(Chip,{label:\"Entra\\xEEnement\",color:\"primary\",size:\"small\",onClick:()=>window.location.href=`/mountain/training?colId=${effectiveSelectedCol.id}`}),enableColSpecificNutrition&&/*#__PURE__*/_jsx(Chip,{label:\"Nutrition\",color:\"secondary\",size:\"small\",onClick:()=>window.location.href=`/mountain/nutrition?colId=${effectiveSelectedCol.id}`})]})]})]})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"Cols \",effectiveSelectedRegion.charAt(0).toUpperCase()+effectiveSelectedRegion.slice(1)]}),loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:5},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:cols.map(col=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(ColCard,{selected:effectiveSelectedCol&&effectiveSelectedCol.id===col.id,children:/*#__PURE__*/_jsxs(CardActionArea,{onClick:()=>handleColClick(col),children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",height:\"140\",image:col.image,alt:col.name}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",component:\"div\",noWrap:true,children:col.name}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5,mb:1},children:[/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(HeightIcon,{}),label:`${col.altitude}m`,size:\"small\",color:\"primary\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(WhatshotIcon,{}),label:`Difficulté: ${col.difficulty}/10`,size:\"small\",color:col.difficulty>7?\"error\":col.difficulty>5?\"warning\":\"success\",variant:\"outlined\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mt:1},children:[/*#__PURE__*/_jsx(RouteIcon,{fontSize:\"small\",color:\"action\",sx:{mr:0.5}}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[col.length,\"km @ \",col.gradient,\"%\"]})]})]})]})})},col.id))})]})}),effectiveSelectedCol&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"Visualisation 3D: \",effectiveSelectedCol.name]}),visualizationLoading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:5},children:/*#__PURE__*/_jsx(CircularProgress,{})}):visualizationData?/*#__PURE__*/_jsx(ColVisualization3D,{passId:effectiveSelectedCol.id,elevationData:visualizationData.elevationData,surfaceTypes:visualizationData.surfaceTypes,pointsOfInterest:visualizationData.pointsOfInterest}):/*#__PURE__*/_jsx(Box,{sx:{p:3,textAlign:'center'},children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"Donn\\xE9es de visualisation 3D non disponibles pour ce col.\"})})]})})]});}// Données mockées pour le développement\nconst mockCols=[{id:1,name:\"Col du Galibier\",region:\"alpes\",altitude:2642,length:23,gradient:5.5,difficulty:8.5,image:\"https://www.cyclingcols.com/sites/default/files/col/galibier%20S%20%2810%29.jpg\"},{id:2,name:\"Alpe d'Huez\",region:\"alpes\",altitude:1860,length:13.8,gradient:8.1,difficulty:8.0,image:\"https://www.cyclingcols.com/sites/default/files/col/alpe_d_huez.jpg\"},{id:3,name:\"Col du Tourmalet\",region:\"pyrenees\",altitude:2115,length:19,gradient:7.4,difficulty:8.8,image:\"https://www.cyclingcols.com/sites/default/files/col/tourmalet.jpg\"},{id:4,name:\"Stelvio\",region:\"dolomites\",altitude:2758,length:24.3,gradient:7.4,difficulty:9.2,image:\"https://www.cyclingcols.com/sites/default/files/col/stelvio%20N%20%281%29.jpg\"},{id:5,name:\"Mur de Huy\",region:\"ardennes\",altitude:204,length:1.3,gradient:9.6,difficulty:7.0,image:\"https://www.cyclingcols.com/sites/default/files/col/huy%20%285%29.JPG\"},{id:6,name:\"Col d'Izoard\",region:\"alpes\",altitude:2360,length:19,gradient:6.0,difficulty:7.5,image:\"https://www.cyclingcols.com/sites/default/files/col/izoard%20north%20%287%29.jpg\"}];export default MountainDashboard;","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","Card","CardContent","CardMedia","CardActionArea","Box","Chip","ToggleButtonGroup","ToggleButton","CircularProgress","styled","TerrainIcon","WhatshotIcon","HeightIcon","RouteIcon","mountainService","ColVisualization3D","useFeatureFlags","axios","jsx","_jsx","jsxs","_jsxs","RegionToggleButton","_ref","theme","backgroundColor","palette","primary","main","color","contrastText","dark","ColCard","_ref2","selected","height","display","flexDirection","transition","border","transform","boxShadow","shadows","MountainDashboard","_ref3","onRegionChange","onColSelect","selectedRegion","selectedCol","cols","setCols","loading","setLoading","visualizationData","setVisualizationData","visualizationLoading","setVisualizationLoading","enableColSpecificTraining","enableColSpecificNutrition","stats","setStats","totalCols","averageAltitude","averageDifficulty","regionDistribution","localSelectedRegion","setLocalSelectedRegion","localSelectedCol","setLocalSelectedCol","effectiveSelectedRegion","effectiveSelectedCol","fetchCols","colsData","getCols","region","mockCols","length","calculateStats","error","console","fetch3DData","data","getCol3DVisualizationData","id","totalAltitude","reduce","sum","col","altitude","totalDifficulty","difficulty","regions","forEach","handleRegionChange","event","newRegion","handleColClick","container","spacing","children","item","xs","sx","p","mb","variant","gutterBottom","value","exclusive","onChange","fullWidth","md","justifyContent","textAlign","fontSize","Math","round","toFixed","mt","bgcolor","borderRadius","name","gradient","flexWrap","gap","label","size","onClick","window","location","href","charAt","toUpperCase","slice","map","sm","component","image","alt","noWrap","icon","alignItems","mr","passId","elevationData","surfaceTypes","pointsOfInterest"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/mountain/components/MountainDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Card, CardContent, CardMedia, CardActionArea, Box, Chip, ToggleButtonGroup, ToggleButton, CircularProgress } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport TerrainIcon from '@mui/icons-material/Terrain';\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\nimport HeightIcon from '@mui/icons-material/Height';\nimport RouteIcon from '@mui/icons-material/Route';\nimport mountainService from '../../../services/mountainService';\nimport ColVisualization3D from '../../visualization/ColVisualization3D';\nimport { useFeatureFlags } from '../../../hooks/useFeatureFlags';\nimport axios from 'axios';\n\n// Styles personnalisés\nconst RegionToggleButton = styled(ToggleButton)(({ theme }) => ({\n  '&.Mui-selected': {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  },\n}));\n\nconst ColCard = styled(Card)(({ theme, selected }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'all 0.3s ease',\n  border: selected ? `2px solid ${theme.palette.primary.main}` : 'none',\n  transform: selected ? 'translateY(-4px)' : 'none',\n  boxShadow: selected ? theme.shadows[8] : theme.shadows[1],\n}));\n\n/**\n * MountainDashboard - Tableau de bord pour la sélection et la visualisation des cols\n */\nfunction MountainDashboard({ onRegionChange, onColSelect, selectedRegion = 'alpes', selectedCol }) {\n  const [cols, setCols] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [visualizationData, setVisualizationData] = useState(null);\n  const [visualizationLoading, setVisualizationLoading] = useState(false);\n  const { enableColSpecificTraining, enableColSpecificNutrition } = useFeatureFlags();\n  const [stats, setStats] = useState({\n    totalCols: 0,\n    averageAltitude: 0,\n    averageDifficulty: 0,\n    regionDistribution: {}\n  });\n\n  // État local pour stocker la région et le col sélectionnés si les props ne sont pas fournies\n  const [localSelectedRegion, setLocalSelectedRegion] = useState(selectedRegion || 'alpes');\n  const [localSelectedCol, setLocalSelectedCol] = useState(null);\n\n  // Déterminer les valeurs réelles à utiliser\n  const effectiveSelectedRegion = selectedRegion || localSelectedRegion;\n  const effectiveSelectedCol = selectedCol || localSelectedCol;\n\n  useEffect(() => {\n    // Fonction pour charger les cols en fonction de la région sélectionnée\n    const fetchCols = async () => {\n      setLoading(true);\n      try {\n        const colsData = await mountainService.getCols({ region: effectiveSelectedRegion });\n        \n        setCols(colsData || mockCols); // Utiliser les données mockées en cas d'erreur\n        \n        // Calculer les statistiques\n        if (colsData && colsData.length > 0) {\n          calculateStats(colsData);\n        } else {\n          calculateStats(mockCols);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des cols:\", error);\n        setCols(mockCols);\n        calculateStats(mockCols);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCols();\n  }, [effectiveSelectedRegion]);\n\n  // Charger les données de visualisation 3D lorsqu'un col est sélectionné\n  useEffect(() => {\n    const fetch3DData = async () => {\n      if (!effectiveSelectedCol) return;\n      \n      setVisualizationLoading(true);\n      try {\n        const data = await mountainService.getCol3DVisualizationData(effectiveSelectedCol.id);\n        setVisualizationData(data);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des données 3D:\", error);\n        setVisualizationData(null);\n      } finally {\n        setVisualizationLoading(false);\n      }\n    };\n\n    fetch3DData();\n  }, [effectiveSelectedCol]);\n\n  // Calcul des statistiques pour le dashboard\n  const calculateStats = (colsData) => {\n    const totalCols = colsData.length;\n    const totalAltitude = colsData.reduce((sum, col) => sum + col.altitude, 0);\n    const totalDifficulty = colsData.reduce((sum, col) => sum + col.difficulty, 0);\n    \n    // Distribution par région\n    const regions = {};\n    colsData.forEach(col => {\n      if (!regions[col.region]) {\n        regions[col.region] = 0;\n      }\n      regions[col.region]++;\n    });\n\n    setStats({\n      totalCols,\n      averageAltitude: totalAltitude / totalCols,\n      averageDifficulty: totalDifficulty / totalCols,\n      regionDistribution: regions\n    });\n  };\n\n  const handleRegionChange = (event, newRegion) => {\n    if (newRegion !== null) {\n      if (onRegionChange) {\n        onRegionChange(newRegion);\n      } else {\n        setLocalSelectedRegion(newRegion);\n      }\n    }\n  };\n\n  const handleColClick = (col) => {\n    if (onColSelect) {\n      onColSelect(col);\n    } else {\n      setLocalSelectedCol(col);\n    }\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* Sélecteur de région */}\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2, mb: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>Sélection de région</Typography>\n          <ToggleButtonGroup\n            value={effectiveSelectedRegion}\n            exclusive\n            onChange={handleRegionChange}\n            aria-label=\"région de cols\"\n            color=\"primary\"\n            fullWidth\n          >\n            <RegionToggleButton value=\"alpes\" aria-label=\"Alpes\">\n              Alpes\n            </RegionToggleButton>\n            <RegionToggleButton value=\"pyrenees\" aria-label=\"Pyrénées\">\n              Pyrénées\n            </RegionToggleButton>\n            <RegionToggleButton value=\"dolomites\" aria-label=\"Dolomites\">\n              Dolomites\n            </RegionToggleButton>\n            <RegionToggleButton value=\"ardennes\" aria-label=\"Ardennes/Flandres\">\n              Ardennes/Flandres\n            </RegionToggleButton>\n          </ToggleButtonGroup>\n        </Paper>\n      </Grid>\n      \n      {/* Statistiques */}\n      <Grid item xs={12} md={4}>\n        <Paper sx={{ p: 2, height: '100%' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Statistiques\n          </Typography>\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <Box>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Box sx={{ textAlign: 'center', mb: 2 }}>\n                    <HeightIcon color=\"primary\" sx={{ fontSize: 40 }} />\n                    <Typography variant=\"h6\">{Math.round(stats.averageAltitude)}m</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Altitude moyenne</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={6}>\n                  <Box sx={{ textAlign: 'center', mb: 2 }}>\n                    <WhatshotIcon color=\"warning\" sx={{ fontSize: 40 }} />\n                    <Typography variant=\"h6\">{stats.averageDifficulty.toFixed(1)}/10</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Difficulté moyenne</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {stats.totalCols} cols disponibles\n                  </Typography>\n                  \n                  {effectiveSelectedCol && (\n                    <Box sx={{ mt: 3, p: 2, bgcolor: 'background.default', borderRadius: 1 }}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Col sélectionné: {effectiveSelectedCol.name}\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Altitude: {effectiveSelectedCol.altitude}m\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Longueur: {effectiveSelectedCol.length}km à {effectiveSelectedCol.gradient}%\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Difficulté: {effectiveSelectedCol.difficulty}/10\n                      </Typography>\n                      \n                      <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                        {enableColSpecificTraining && (\n                          <Chip \n                            label=\"Entraînement\" \n                            color=\"primary\"\n                            size=\"small\"\n                            onClick={() => window.location.href = `/mountain/training?colId=${effectiveSelectedCol.id}`}\n                          />\n                        )}\n                        {enableColSpecificNutrition && (\n                          <Chip \n                            label=\"Nutrition\" \n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={() => window.location.href = `/mountain/nutrition?colId=${effectiveSelectedCol.id}`}\n                          />\n                        )}\n                      </Box>\n                    </Box>\n                  )}\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n        </Paper>\n      </Grid>\n\n      {/* Liste des cols */}\n      <Grid item xs={12} md={8}>\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Cols {effectiveSelectedRegion.charAt(0).toUpperCase() + effectiveSelectedRegion.slice(1)}\n          </Typography>\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <Grid container spacing={2}>\n              {cols.map((col) => (\n                <Grid item xs={12} sm={6} md={4} key={col.id}>\n                  <ColCard selected={effectiveSelectedCol && effectiveSelectedCol.id === col.id}>\n                    <CardActionArea onClick={() => handleColClick(col)}>\n                      <CardMedia\n                        component=\"img\"\n                        height=\"140\"\n                        image={col.image}\n                        alt={col.name}\n                      />\n                      <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\n                          {col.name}\n                        </Typography>\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mb: 1 }}>\n                          <Chip \n                            icon={<HeightIcon />} \n                            label={`${col.altitude}m`} \n                            size=\"small\" \n                            color=\"primary\"\n                            variant=\"outlined\"\n                          />\n                          <Chip \n                            icon={<WhatshotIcon />} \n                            label={`Difficulté: ${col.difficulty}/10`} \n                            size=\"small\"\n                            color={col.difficulty > 7 ? \"error\" : col.difficulty > 5 ? \"warning\" : \"success\"}\n                            variant=\"outlined\"\n                          />\n                        </Box>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n                          <RouteIcon fontSize=\"small\" color=\"action\" sx={{ mr: 0.5 }} />\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {col.length}km @ {col.gradient}%\n                          </Typography>\n                        </Box>\n                      </CardContent>\n                    </CardActionArea>\n                  </ColCard>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        </Paper>\n      </Grid>\n      \n      {/* Visualisation 3D du col */}\n      {effectiveSelectedCol && (\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Visualisation 3D: {effectiveSelectedCol.name}\n            </Typography>\n            \n            {visualizationLoading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>\n                <CircularProgress />\n              </Box>\n            ) : visualizationData ? (\n              <ColVisualization3D \n                passId={effectiveSelectedCol.id}\n                elevationData={visualizationData.elevationData}\n                surfaceTypes={visualizationData.surfaceTypes}\n                pointsOfInterest={visualizationData.pointsOfInterest}\n              />\n            ) : (\n              <Box sx={{ p: 3, textAlign: 'center' }}>\n                <Typography color=\"text.secondary\">\n                  Données de visualisation 3D non disponibles pour ce col.\n                </Typography>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\n// Données mockées pour le développement\nconst mockCols = [\n  {\n    id: 1,\n    name: \"Col du Galibier\",\n    region: \"alpes\",\n    altitude: 2642,\n    length: 23,\n    gradient: 5.5,\n    difficulty: 8.5,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/galibier%20S%20%2810%29.jpg\"\n  },\n  {\n    id: 2,\n    name: \"Alpe d'Huez\",\n    region: \"alpes\",\n    altitude: 1860,\n    length: 13.8,\n    gradient: 8.1,\n    difficulty: 8.0,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/alpe_d_huez.jpg\"\n  },\n  {\n    id: 3,\n    name: \"Col du Tourmalet\",\n    region: \"pyrenees\",\n    altitude: 2115,\n    length: 19,\n    gradient: 7.4,\n    difficulty: 8.8,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/tourmalet.jpg\"\n  },\n  {\n    id: 4,\n    name: \"Stelvio\",\n    region: \"dolomites\",\n    altitude: 2758,\n    length: 24.3,\n    gradient: 7.4,\n    difficulty: 9.2,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/stelvio%20N%20%281%29.jpg\"\n  },\n  {\n    id: 5,\n    name: \"Mur de Huy\",\n    region: \"ardennes\",\n    altitude: 204,\n    length: 1.3,\n    gradient: 9.6,\n    difficulty: 7.0,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/huy%20%285%29.JPG\"\n  },\n  {\n    id: 6,\n    name: \"Col d'Izoard\",\n    region: \"alpes\",\n    altitude: 2360,\n    length: 19,\n    gradient: 6.0,\n    difficulty: 7.5,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/izoard%20north%20%287%29.jpg\"\n  }\n];\n\nexport default MountainDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}