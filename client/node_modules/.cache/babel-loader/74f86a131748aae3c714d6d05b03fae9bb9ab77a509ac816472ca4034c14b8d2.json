{"ast":null,"code":"import{useState,useEffect}from'react';/**\n * Hook personnalisé pour gérer les drapeaux de fonctionnalités (feature flags)\n * Permet d'activer/désactiver certaines fonctionnalités de manière dynamique\n * \n * @param {string} flagName - Nom du drapeau de fonctionnalité à vérifier\n * @param {boolean} defaultValue - Valeur par défaut si le drapeau n'est pas défini\n * @returns {boolean} - État actuel du drapeau de fonctionnalité\n */const useFeatureFlags=function(flagName){let defaultValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const[isEnabled,setIsEnabled]=useState(defaultValue);useEffect(()=>{const checkFeatureFlag=async()=>{try{// En environnement de production, on pourrait récupérer ces valeurs d'une API\n// Pour l'instant, on utilise des valeurs statiques ou celles stockées en localStorage\nconst featureFlags={// Fonctionnalités principales\n'map-3d-visualization':true,'weather-integration':true,'ftp-calculator':true,'hiit-module':true,// Fonctionnalités en cours de développement\n'strava-integration':true,'advanced-analytics':true,'nutrition-planner':true,'community-challenges':true,// Fonctionnalités expérimentales\n'route-comparison':true,'ai-training-suggestions':false,'virtual-reality-preview':false,'live-group-rides':false};// Vérifier si la fonctionnalité est activée\nconst storedValue=localStorage.getItem(`feature-flag-${flagName}`);// Priorité au localStorage, puis aux valeurs statiques, puis à la valeur par défaut\nif(storedValue!==null){setIsEnabled(storedValue==='true');}else if(flagName in featureFlags){setIsEnabled(featureFlags[flagName]);// Stocker la valeur pour utilisation future\nlocalStorage.setItem(`feature-flag-${flagName}`,featureFlags[flagName]);}}catch(error){console.error('Erreur lors de la vérification des feature flags:',error);setIsEnabled(defaultValue);}};checkFeatureFlag();},[flagName,defaultValue]);return isEnabled;};// Exporter comme default export pour maintenir la compatibilité avec le code existant\nexport default useFeatureFlags;// Exporter également comme named export pour maintenir la compatibilité avec les imports nommés\nexport{useFeatureFlags};","map":{"version":3,"names":["useState","useEffect","useFeatureFlags","flagName","defaultValue","arguments","length","undefined","isEnabled","setIsEnabled","checkFeatureFlag","featureFlags","storedValue","localStorage","getItem","setItem","error","console"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/hooks/useFeatureFlags.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Hook personnalisé pour gérer les drapeaux de fonctionnalités (feature flags)\n * Permet d'activer/désactiver certaines fonctionnalités de manière dynamique\n * \n * @param {string} flagName - Nom du drapeau de fonctionnalité à vérifier\n * @param {boolean} defaultValue - Valeur par défaut si le drapeau n'est pas défini\n * @returns {boolean} - État actuel du drapeau de fonctionnalité\n */\nconst useFeatureFlags = (flagName, defaultValue = false) => {\n  const [isEnabled, setIsEnabled] = useState(defaultValue);\n\n  useEffect(() => {\n    const checkFeatureFlag = async () => {\n      try {\n        // En environnement de production, on pourrait récupérer ces valeurs d'une API\n        // Pour l'instant, on utilise des valeurs statiques ou celles stockées en localStorage\n        const featureFlags = {\n          // Fonctionnalités principales\n          'map-3d-visualization': true,\n          'weather-integration': true,\n          'ftp-calculator': true,\n          'hiit-module': true,\n          \n          // Fonctionnalités en cours de développement\n          'strava-integration': true,\n          'advanced-analytics': true,\n          'nutrition-planner': true,\n          'community-challenges': true,\n          \n          // Fonctionnalités expérimentales\n          'route-comparison': true,\n          'ai-training-suggestions': false,\n          'virtual-reality-preview': false,\n          'live-group-rides': false\n        };\n\n        // Vérifier si la fonctionnalité est activée\n        const storedValue = localStorage.getItem(`feature-flag-${flagName}`);\n        \n        // Priorité au localStorage, puis aux valeurs statiques, puis à la valeur par défaut\n        if (storedValue !== null) {\n          setIsEnabled(storedValue === 'true');\n        } else if (flagName in featureFlags) {\n          setIsEnabled(featureFlags[flagName]);\n          // Stocker la valeur pour utilisation future\n          localStorage.setItem(`feature-flag-${flagName}`, featureFlags[flagName]);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la vérification des feature flags:', error);\n        setIsEnabled(defaultValue);\n      }\n    };\n\n    checkFeatureFlag();\n  }, [flagName, defaultValue]);\n\n  return isEnabled;\n};\n\n// Exporter comme default export pour maintenir la compatibilité avec le code existant\nexport default useFeatureFlags;\n\n// Exporter également comme named export pour maintenir la compatibilité avec les imports nommés\nexport { useFeatureFlags };\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,eAAe,CAAG,QAAAA,CAACC,QAAQ,CAA2B,IAAzB,CAAAC,YAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACrD,KAAM,CAACG,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAACI,YAAY,CAAC,CAExDH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF;AACA;AACA,KAAM,CAAAC,YAAY,CAAG,CACnB;AACA,sBAAsB,CAAE,IAAI,CAC5B,qBAAqB,CAAE,IAAI,CAC3B,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,IAAI,CAEnB;AACA,oBAAoB,CAAE,IAAI,CAC1B,oBAAoB,CAAE,IAAI,CAC1B,mBAAmB,CAAE,IAAI,CACzB,sBAAsB,CAAE,IAAI,CAE5B;AACA,kBAAkB,CAAE,IAAI,CACxB,yBAAyB,CAAE,KAAK,CAChC,yBAAyB,CAAE,KAAK,CAChC,kBAAkB,CAAE,KACtB,CAAC,CAED;AACA,KAAM,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgBX,QAAQ,EAAE,CAAC,CAEpE;AACA,GAAIS,WAAW,GAAK,IAAI,CAAE,CACxBH,YAAY,CAACG,WAAW,GAAK,MAAM,CAAC,CACtC,CAAC,IAAM,IAAIT,QAAQ,GAAI,CAAAQ,YAAY,CAAE,CACnCF,YAAY,CAACE,YAAY,CAACR,QAAQ,CAAC,CAAC,CACpC;AACAU,YAAY,CAACE,OAAO,CAAC,gBAAgBZ,QAAQ,EAAE,CAAEQ,YAAY,CAACR,QAAQ,CAAC,CAAC,CAC1E,CACF,CAAE,MAAOa,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mDAAmD,CAAEA,KAAK,CAAC,CACzEP,YAAY,CAACL,YAAY,CAAC,CAC5B,CACF,CAAC,CAEDM,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,CAACP,QAAQ,CAAEC,YAAY,CAAC,CAAC,CAE5B,MAAO,CAAAI,SAAS,CAClB,CAAC,CAED;AACA,cAAe,CAAAN,eAAe,CAE9B;AACA,OAASA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}