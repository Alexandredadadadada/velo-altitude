{"ast":null,"code":"import React,{useRef,useEffect,useState,useCallback}from'react';import*as THREE from'three';import{Canvas,useFrame,useThree,useLoader}from'@react-three/fiber';import{OrbitControls,Text,useProgress}from'@react-three/drei';import{TextureLoader}from'three/src/loaders/TextureLoader';import{Box,Paper,Typography,Button,ButtonGroup,FormControl,InputLabel,Select,MenuItem,CircularProgress,Alert,Divider,IconButton,Slider}from'@mui/material';import{styled}from'@mui/material/styles';import{PlayArrow as PlayArrowIcon,Pause as PauseIcon,Speed as SpeedIcon,DirectionsBike as DirectionsBikeIcon}from'@mui/icons-material';import progressive3DLoader,{DETAIL_LEVELS}from'../../services/progressive3DLoader';import timeoutConfigService from'../../services/timeoutConfig';import featureFlagsService from'../../services/featureFlags';import apiCacheService,{CACHE_STRATEGIES}from'../../services/apiCache';import deviceCapabilityDetector from'../../utils/deviceCapabilityDetector';import threeDConfigManager from'../../utils/3DConfigManager';import mobileOptimizer from'../../utils/mobileOptimizer';import batteryOptimizer from'../../utils/batteryOptimizer';// Importer le service batteryOptimizer\n// Composant principal\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ColVisualization3D=_ref=>{let{passId,elevationData,surfaceTypes,pointsOfInterest}=_ref;const canvasRef=useRef(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[selectedPOI,setSelectedPOI]=useState(null);const[filteredPointsOfInterest,setFilteredPointsOfInterest]=useState([]);const[qualityLevel,setQualityLevel]=useState(DETAIL_LEVELS.MEDIUM);const[viewType,setViewType]=useState('free');const[poiFilters,setPoiFilters]=useState({viewpoint:true,restaurant:true,landmark:true,parking:true,danger:true});// Nouvelles variables d'état pour les optimisations\nconst[deviceCapabilities,setDeviceCapabilities]=useState(null);const[renderConfig,setRenderConfig]=useState(null);const[adaptiveQualityEnabled,setAdaptiveQualityEnabled]=useState(true);const[batteryMode,setBatteryMode]=useState(false);// Référence aux contrôleurs et renderers pour l'optimisation\nconst controlsRef=useRef(null);const rendererRef=useRef(null);const textureLoaderRef=useRef(null);// Stats de performance\nconst performanceStatsRef=useRef({frameRate:0,frameRateHistory:[],lastFrameTime:0,frameCount:0,lastPerformanceAdjustment:0});const[trailInfo,setTrailInfo]=useState({difficulty:'Difficile',length:'12.5 km',elevationGain:'850 m'});// Initialisation de la visualisation\nuseEffect(()=>{const initializeVisualization=async()=>{try{// Réinitialiser les états\nsetIsLoading(true);setError(null);setSelectedPOI(null);// Charger le pass depuis l'API si nécessaire\nif(!elevationData||!surfaceTypes){const passData=await apiCacheService.get(`/api/cols/${passId}`,{strategy:CACHE_STRATEGIES.CACHE_FIRST});if(!passData){setError('Impossible de charger les données du col');setIsLoading(false);return;}// Mettre à jour les états avec les données chargées\n// Dans un cas réel, vous adapteriez cette partie à votre structure de données\n}// Détection des capacités de l'appareil\nconst capabilities=await deviceCapabilityDetector.getCapabilities();setDeviceCapabilities(capabilities);// Obtenir la configuration optimale pour ce composant\nconst config=threeDConfigManager.getOptimalConfig('colVisualization',{forceBatterySaving:batteryMode});setRenderConfig(config);// Mettre à jour le niveau de qualité en fonction de la configuration\nsetQualityLevel(progressive3DLoader.getDetailLevelFromString(config.modelDetailLevel));// Créer et optimiser le loader de textures pour le chargement progressif\nif(!textureLoaderRef.current){textureLoaderRef.current=mobileOptimizer.setupProgressiveTextureLoading(new THREE.TextureLoader());}// Initialiser le chemin de fly-through si les données sont disponibles\nif(elevationData&&elevationData.path){initializeFlyThroughPath();}// Configurer les listeners pour les ajustements de qualité adaptatifs\nif(adaptiveQualityEnabled){setupAdaptiveQualityListeners();}// Initialiser le service batteryOptimizer\nawait batteryOptimizer.initialize();setBatteryMode(batteryOptimizer.isBatteryModeActive());setIsLoading(false);}catch(err){console.error('Erreur lors de l\\'initialisation de la visualisation:',err);setError('Une erreur est survenue lors du chargement de la visualisation 3D');setIsLoading(false);}};initializeVisualization();// Nettoyage lors du démontage du composant\nreturn()=>{// Arrêter les animations et les workers\nif(flyThroughAnimationRef.current){cancelAnimationFrame(flyThroughAnimationRef.current);}// Libérer les ressources\nif(rendererRef.current){rendererRef.current.dispose();}};},[passId,elevationData,pointsOfInterest,batteryMode,adaptiveQualityEnabled]);// Filtrer les points d'intérêt\nuseEffect(()=>{if(!pointsOfInterest||!Array.isArray(pointsOfInterest)){setFilteredPointsOfInterest([]);return;}// Appliquer les filtres sélectionnés\nconst filtered=Object.values(poiFilters).every(v=>v===false)?pointsOfInterest:pointsOfInterest.filter(poi=>poi&&poi.type&&poiFilters[poi.type]);setFilteredPointsOfInterest(filtered);},[poiFilters,pointsOfInterest]);// Gérer les changements de qualité\nconst handleQualityChange=useCallback(level=>{setQualityLevel(level);// Mettre à jour la configuration 3D\nconst newConfig={...renderConfig};newConfig.modelDetailLevel=progressive3DLoader.getStringFromDetailLevel(level);setRenderConfig(newConfig);// Désactiver l'ajustement adaptatif si changement manuel\nsetAdaptiveQualityEnabled(false);},[renderConfig]);// Nouvelle fonction pour configurer les listeners d'ajustement adaptatif de qualité\nconst setupAdaptiveQualityListeners=useCallback(()=>{// Écouter les événements d'ajustement de qualité\nconst handleQualityAdjustment=event=>{const{qualityMultiplier,reason}=event.detail;if(!renderConfig)return;// Ajuster le niveau de qualité en fonction du multiplicateur\nlet newLevel=qualityLevel;if(qualityMultiplier<=0.5){newLevel=DETAIL_LEVELS.LOW;}else if(qualityMultiplier<=0.8){newLevel=DETAIL_LEVELS.MEDIUM;}else{newLevel=DETAIL_LEVELS.HIGH;}// Ne mettre à jour que si le niveau change\nif(newLevel!==qualityLevel){setQualityLevel(newLevel);// Mettre à jour la configuration\nconst newConfig={...renderConfig};newConfig.modelDetailLevel=progressive3DLoader.getStringFromDetailLevel(newLevel);setRenderConfig(newConfig);console.log(`Ajustement automatique de la qualité: ${progressive3DLoader.getStringFromDetailLevel(newLevel)} (${reason})`);}};// Écouter les événements d'optimisation\nwindow.addEventListener('quality-adjustment',handleQualityAdjustment);// Nettoyage\nreturn()=>{window.removeEventListener('quality-adjustment',handleQualityAdjustment);};},[qualityLevel,renderConfig]);// Nouvelle fonction pour gérer le mode économie de batterie\nconst handleBatteryModeToggle=useCallback(()=>{const newBatteryMode=!batteryMode;setBatteryMode(newBatteryMode);// Mettre à jour la configuration\nconst config=threeDConfigManager.getOptimalConfig('colVisualization',{forceBatterySaving:newBatteryMode});setRenderConfig(config);// Mettre à jour le niveau de qualité\nsetQualityLevel(progressive3DLoader.getDetailLevelFromString(config.modelDetailLevel));console.log(`Mode économie de batterie ${newBatteryMode?'activé':'désactivé'}`);// Initialiser le service batteryOptimizer\nbatteryOptimizer.setBatteryMode(newBatteryMode);},[batteryMode]);// Composant interne pour optimiser le renderer THREE.js\nconst SceneManager=()=>{const{gl,camera}=useThree();// Stocker la référence au renderer\nuseEffect(()=>{rendererRef.current=gl;// Appliquer les optimisations mobiles\nif(deviceCapabilities&&(deviceCapabilities.flags.isMobile||deviceCapabilities.flags.isLowEndDevice)){mobileOptimizer.optimizeRenderer(gl);}// Configurer le rendu en fonction de la configuration\nif(renderConfig){// Paramètres de shadow map\nif(renderConfig.shadowsEnabled){gl.shadowMap.enabled=true;gl.shadowMap.type=THREE.PCFSoftShadowMap;gl.shadowMap.autoUpdate=false;gl.shadowMap.needsUpdate=true;}else{gl.shadowMap.enabled=false;}// Paramètres de clearing\ngl.setClearColor(new THREE.Color('#87CEEB'),1);// Limiter le framerate si nécessaire\nif(renderConfig.maxFrameRate&&renderConfig.maxFrameRate<60){gl.setAnimationLoop(time=>{const elapsed=time-performanceStatsRef.current.lastFrameTime;const targetElapsed=1000/renderConfig.maxFrameRate;if(elapsed>=targetElapsed){performanceStatsRef.current.lastFrameTime=time;gl.render(gl.scene,camera);}});}}// Nettoyer lors du démontage\nreturn()=>{if(gl.setAnimationLoop){gl.setAnimationLoop(null);}};},[gl,camera,deviceCapabilities,renderConfig]);// Suivre le FPS pour les ajustements adaptatifs\nuseFrame((state,delta)=>{if(!adaptiveQualityEnabled)return;// Calculer le FPS\nperformanceStatsRef.current.frameCount++;const now=performance.now();const elapsed=now-performanceStatsRef.current.lastPerformanceCheck;// Mettre à jour les statistiques toutes les secondes\nif(elapsed>1000){const currentFPS=Math.round(performanceStatsRef.current.frameCount*1000/elapsed);performanceStatsRef.current.frameRate=currentFPS;// Ajouter à l'historique\nperformanceStatsRef.current.frameRateHistory.push(currentFPS);if(performanceStatsRef.current.frameRateHistory.length>10){performanceStatsRef.current.frameRateHistory.shift();}// Réinitialiser les compteurs\nperformanceStatsRef.current.frameCount=0;performanceStatsRef.current.lastPerformanceCheck=now;}});return null;};return/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{mb:4,overflow:'hidden',position:'relative'},children:/*#__PURE__*/_jsx(VisualizationContainer,{children:error?/*#__PURE__*/_jsx(StyledAlert,{severity:\"error\",children:error}):isLoading?/*#__PURE__*/_jsx(LoadingOverlay,{children:/*#__PURE__*/_jsx(LoadingIndicator,{})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Canvas,{ref:canvasRef,camera:{position:[0,10,20],fov:60},shadows:renderConfig?renderConfig.shadowsEnabled:false,dpr:window.devicePixelRatio>2?2:window.devicePixelRatio// Limiter le DPR à 2 pour les performances\n,performance:{min:0.5}// Réduire la résolution si nécessaire pour maintenir les performances\n,children:[/*#__PURE__*/_jsx(SceneManager,{}),/*#__PURE__*/_jsx(\"ambientLight\",{intensity:0.5}),/*#__PURE__*/_jsx(\"directionalLight\",{position:[10,20,10],intensity:0.8,castShadow:renderConfig?renderConfig.shadowsEnabled:false,\"shadow-mapSize-width\":renderConfig?renderConfig.shadowMapSize||1024:1024,\"shadow-mapSize-height\":renderConfig?renderConfig.shadowMapSize||1024:1024}),/*#__PURE__*/_jsx(Terrain,{elevationData:elevationData,surfaceTypes:surfaceTypes,detailLevel:qualityLevel,renderConfig:renderConfig}),filteredPointsOfInterest.slice(0,renderConfig?renderConfig.maxPointsOfInterest:25).map((poi,index)=>/*#__PURE__*/_jsx(PointOfInterest,{position:[poi.x,(poi.elevation||0)*0.1+1,poi.z],label:poi.name,type:poi.type,isSelected:selectedPOI===poi,onClick:()=>handleSelectPOI(poi),detailLevel:qualityLevel},`poi-${index}`)),/*#__PURE__*/_jsx(OrbitControls,{ref:controlsRef,enableDamping:renderConfig?!renderConfig.useSimplifiedGeometry:true,dampingFactor:0.1,minDistance:5,maxDistance:100,target:selectedPOI?[selectedPOI.x,(selectedPOI.elevation||0)*0.1,selectedPOI.z]:[0,0,0]// Support tactile amélioré\n,touchAction:\"none\"// Empêcher le comportement de défilement par défaut sur tactile\n,touches:{ONE:THREE.TOUCH.ROTATE,TWO:THREE.TOUCH.DOLLY_PAN}// Optimisations tactiles via mobileOptimizer\n,...(deviceCapabilities!==null&&deviceCapabilities!==void 0&&deviceCapabilities.flags.isMobile?{rotateSpeed:0.8,zoomSpeed:1.2,panSpeed:0.8}:{})}),viewType==='flythrough'&&/*#__PURE__*/_jsx(FlyThroughCamera,{})]}),/*#__PURE__*/_jsxs(OverlayContainer,{children:[/*#__PURE__*/_jsxs(Box,{sx:{p:1.5},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:1},children:\"Visualisation 3D\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mr:1},children:\"Qualit\\xE9:\"}),/*#__PURE__*/_jsxs(ButtonGroup,{size:\"small\",children:[/*#__PURE__*/_jsx(Button,{variant:qualityLevel===DETAIL_LEVELS.LOW?\"contained\":\"outlined\",onClick:()=>handleQualityChange(DETAIL_LEVELS.LOW),children:\"Basse\"}),/*#__PURE__*/_jsx(Button,{variant:qualityLevel===DETAIL_LEVELS.MEDIUM?\"contained\":\"outlined\",onClick:()=>handleQualityChange(DETAIL_LEVELS.MEDIUM),children:\"Moyenne\"}),/*#__PURE__*/_jsx(Button,{variant:qualityLevel===DETAIL_LEVELS.HIGH?\"contained\":\"outlined\",onClick:()=>handleQualityChange(DETAIL_LEVELS.HIGH)// Désactiver le niveau élevé sur les appareils faibles\n,disabled:deviceCapabilities===null||deviceCapabilities===void 0?void 0:deviceCapabilities.flags.isLowEndDevice,children:\"Haute\"})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(AdaptiveQualityFlag,{active:adaptiveQualityEnabled,onClick:()=>setAdaptiveQualityEnabled(!adaptiveQualityEnabled),children:\"Auto\"}),/*#__PURE__*/_jsx(AdaptiveQualityFlag,{active:batteryMode,onClick:handleBatteryModeToggle,children:\"\\xC9co\"}),featureFlagsService.isEnabled('showPerformanceMetrics')&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",sx:{ml:1},children:[performanceStatsRef.current.frameRate,\" FPS\"]})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:1},children:\"Cam\\xE9ra:\"}),/*#__PURE__*/_jsxs(ButtonGroup,{size:\"small\",sx:{mb:1},children:[/*#__PURE__*/_jsx(Button,{variant:viewType==='free'?\"contained\":\"outlined\",onClick:()=>handleViewChange('free'),children:\"Libre\"}),/*#__PURE__*/_jsx(Button,{variant:viewType==='overview'?\"contained\":\"outlined\",onClick:()=>handleViewChange('overview'),children:\"Vue d'ensemble\"}),/*#__PURE__*/_jsx(Button,{variant:viewType==='flythrough'?\"contained\":\"outlined\",onClick:()=>handleViewChange('flythrough'),startIcon:/*#__PURE__*/_jsx(DirectionsBikeIcon,{})// Désactiver sur les appareils faibles si la configuration recommande de le faire\n,disabled:(deviceCapabilities===null||deviceCapabilities===void 0?void 0:deviceCapabilities.flags.isLowEndDevice)&&(renderConfig===null||renderConfig===void 0?void 0:renderConfig.useSimplifiedGeometry),children:\"Parcours\"})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:1},children:\"Filtre des points d'int\\xE9r\\xEAt:\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:[/*#__PURE__*/_jsx(PoiFilterChip,{active:poiFilters.viewpoint,onClick:()=>handlePOIFilterChange('viewpoint'),children:\"Panoramas\"}),/*#__PURE__*/_jsx(PoiFilterChip,{active:poiFilters.restaurant,onClick:()=>handlePOIFilterChange('restaurant'),children:\"Restaurants\"}),/*#__PURE__*/_jsx(PoiFilterChip,{active:poiFilters.landmark,onClick:()=>handlePOIFilterChange('landmark'),children:\"Points remarquables\"}),/*#__PURE__*/_jsx(PoiFilterChip,{active:poiFilters.parking,onClick:()=>handlePOIFilterChange('parking'),children:\"Parkings\"}),/*#__PURE__*/_jsx(PoiFilterChip,{active:poiFilters.danger,onClick:()=>handlePOIFilterChange('danger'),children:\"Zones dangereuses\"})]})]}),featureFlagsService.isEnabled('showDeviceCapabilities')&&deviceCapabilities&&/*#__PURE__*/_jsxs(Box,{sx:{p:1.5,borderTop:'1px solid rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",component:\"div\",children:[\"Appareil: \",deviceCapabilities.flags.isMobile?'Mobile':deviceCapabilities.flags.isTablet?'Tablette':'Desktop']}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",component:\"div\",children:[\"GPU: \",deviceCapabilities.gpu.vendor?deviceCapabilities.gpu.vendor.split(' ')[0]:'Non détecté',\" (\",Math.round(deviceCapabilities.gpu.estimatedMemory),\"MB)\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",component:\"div\",children:[\"CPU: \",deviceCapabilities.cpu.cores,\" c\\u0153urs\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",component:\"div\",children:[\"R\\xE9seau: \",deviceCapabilities.network.effectiveType]})]})]}),/*#__PURE__*/_jsxs(TrailInfoContainer,{children:[/*#__PURE__*/_jsxs(TrailInfoItem,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"Difficult\\xE9\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:'bold'},children:trailInfo.difficulty})]}),/*#__PURE__*/_jsxs(TrailInfoItem,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"Distance\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:'bold'},children:trailInfo.length})]}),/*#__PURE__*/_jsxs(TrailInfoItem,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"D\\xE9nivel\\xE9\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:'bold'},children:trailInfo.elevationGain})]})]})]})})});};export default ColVisualization3D;","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","THREE","Canvas","useFrame","useThree","useLoader","OrbitControls","Text","useProgress","TextureLoader","Box","Paper","Typography","Button","ButtonGroup","FormControl","InputLabel","Select","MenuItem","CircularProgress","Alert","Divider","IconButton","Slider","styled","PlayArrow","PlayArrowIcon","Pause","PauseIcon","Speed","SpeedIcon","DirectionsBike","DirectionsBikeIcon","progressive3DLoader","DETAIL_LEVELS","timeoutConfigService","featureFlagsService","apiCacheService","CACHE_STRATEGIES","deviceCapabilityDetector","threeDConfigManager","mobileOptimizer","batteryOptimizer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ColVisualization3D","_ref","passId","elevationData","surfaceTypes","pointsOfInterest","canvasRef","isLoading","setIsLoading","error","setError","selectedPOI","setSelectedPOI","filteredPointsOfInterest","setFilteredPointsOfInterest","qualityLevel","setQualityLevel","MEDIUM","viewType","setViewType","poiFilters","setPoiFilters","viewpoint","restaurant","landmark","parking","danger","deviceCapabilities","setDeviceCapabilities","renderConfig","setRenderConfig","adaptiveQualityEnabled","setAdaptiveQualityEnabled","batteryMode","setBatteryMode","controlsRef","rendererRef","textureLoaderRef","performanceStatsRef","frameRate","frameRateHistory","lastFrameTime","frameCount","lastPerformanceAdjustment","trailInfo","setTrailInfo","difficulty","length","elevationGain","initializeVisualization","passData","get","strategy","CACHE_FIRST","capabilities","getCapabilities","config","getOptimalConfig","forceBatterySaving","getDetailLevelFromString","modelDetailLevel","current","setupProgressiveTextureLoading","path","initializeFlyThroughPath","setupAdaptiveQualityListeners","initialize","isBatteryModeActive","err","console","flyThroughAnimationRef","cancelAnimationFrame","dispose","Array","isArray","filtered","Object","values","every","v","filter","poi","type","handleQualityChange","level","newConfig","getStringFromDetailLevel","handleQualityAdjustment","event","qualityMultiplier","reason","detail","newLevel","LOW","HIGH","log","window","addEventListener","removeEventListener","handleBatteryModeToggle","newBatteryMode","SceneManager","gl","camera","flags","isMobile","isLowEndDevice","optimizeRenderer","shadowsEnabled","shadowMap","enabled","PCFSoftShadowMap","autoUpdate","needsUpdate","setClearColor","Color","maxFrameRate","setAnimationLoop","time","elapsed","targetElapsed","render","scene","state","delta","now","performance","lastPerformanceCheck","currentFPS","Math","round","push","shift","elevation","sx","mb","overflow","position","children","VisualizationContainer","StyledAlert","severity","LoadingOverlay","LoadingIndicator","ref","fov","shadows","dpr","devicePixelRatio","min","intensity","castShadow","shadowMapSize","Terrain","detailLevel","slice","maxPointsOfInterest","map","index","PointOfInterest","x","z","label","name","isSelected","onClick","handleSelectPOI","enableDamping","useSimplifiedGeometry","dampingFactor","minDistance","maxDistance","target","touchAction","touches","ONE","TOUCH","ROTATE","TWO","DOLLY_PAN","rotateSpeed","zoomSpeed","panSpeed","FlyThroughCamera","OverlayContainer","p","variant","display","alignItems","mr","size","disabled","AdaptiveQualityFlag","active","isEnabled","ml","my","handleViewChange","startIcon","flexWrap","gap","PoiFilterChip","handlePOIFilterChange","borderTop","component","isTablet","gpu","vendor","split","estimatedMemory","cpu","cores","network","effectiveType","TrailInfoContainer","TrailInfoItem","fontWeight"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/visualization/ColVisualization3D.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { Canvas, useFrame, useThree, useLoader } from '@react-three/fiber';\nimport { OrbitControls, Text, useProgress } from '@react-three/drei';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { \n  Box, \n  Paper, \n  Typography, \n  Button, \n  ButtonGroup, \n  FormControl, \n  InputLabel, \n  Select, \n  MenuItem, \n  CircularProgress, \n  Alert,\n  Divider,\n  IconButton,\n  Slider\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { \n  PlayArrow as PlayArrowIcon, \n  Pause as PauseIcon, \n  Speed as SpeedIcon,\n  DirectionsBike as DirectionsBikeIcon \n} from '@mui/icons-material';\nimport progressive3DLoader, { DETAIL_LEVELS } from '../../services/progressive3DLoader';\nimport timeoutConfigService from '../../services/timeoutConfig';\nimport featureFlagsService from '../../services/featureFlags';\nimport apiCacheService, { CACHE_STRATEGIES } from '../../services/apiCache';\nimport deviceCapabilityDetector from '../../utils/deviceCapabilityDetector';\nimport threeDConfigManager from '../../utils/3DConfigManager';\nimport mobileOptimizer from '../../utils/mobileOptimizer';\nimport batteryOptimizer from '../../utils/batteryOptimizer'; // Importer le service batteryOptimizer\n\n// Composant principal\nconst ColVisualization3D = ({ passId, elevationData, surfaceTypes, pointsOfInterest }) => {\n  const canvasRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedPOI, setSelectedPOI] = useState(null);\n  const [filteredPointsOfInterest, setFilteredPointsOfInterest] = useState([]);\n  const [qualityLevel, setQualityLevel] = useState(DETAIL_LEVELS.MEDIUM);\n  const [viewType, setViewType] = useState('free');\n  const [poiFilters, setPoiFilters] = useState({\n    viewpoint: true,\n    restaurant: true,\n    landmark: true,\n    parking: true,\n    danger: true\n  });\n  \n  // Nouvelles variables d'état pour les optimisations\n  const [deviceCapabilities, setDeviceCapabilities] = useState(null);\n  const [renderConfig, setRenderConfig] = useState(null);\n  const [adaptiveQualityEnabled, setAdaptiveQualityEnabled] = useState(true);\n  const [batteryMode, setBatteryMode] = useState(false);\n  \n  // Référence aux contrôleurs et renderers pour l'optimisation\n  const controlsRef = useRef(null);\n  const rendererRef = useRef(null);\n  const textureLoaderRef = useRef(null);\n  \n  // Stats de performance\n  const performanceStatsRef = useRef({\n    frameRate: 0,\n    frameRateHistory: [],\n    lastFrameTime: 0,\n    frameCount: 0,\n    lastPerformanceAdjustment: 0\n  });\n\n  const [trailInfo, setTrailInfo] = useState({\n    difficulty: 'Difficile',\n    length: '12.5 km',\n    elevationGain: '850 m'\n  });\n  \n  // Initialisation de la visualisation\n  useEffect(() => {\n    const initializeVisualization = async () => {\n      try {\n        // Réinitialiser les états\n        setIsLoading(true);\n        setError(null);\n        setSelectedPOI(null);\n        \n        // Charger le pass depuis l'API si nécessaire\n        if (!elevationData || !surfaceTypes) {\n          const passData = await apiCacheService.get(`/api/cols/${passId}`, {\n            strategy: CACHE_STRATEGIES.CACHE_FIRST\n          });\n          \n          if (!passData) {\n            setError('Impossible de charger les données du col');\n            setIsLoading(false);\n            return;\n          }\n          \n          // Mettre à jour les états avec les données chargées\n          // Dans un cas réel, vous adapteriez cette partie à votre structure de données\n        }\n        \n        // Détection des capacités de l'appareil\n        const capabilities = await deviceCapabilityDetector.getCapabilities();\n        setDeviceCapabilities(capabilities);\n        \n        // Obtenir la configuration optimale pour ce composant\n        const config = threeDConfigManager.getOptimalConfig('colVisualization', {\n          forceBatterySaving: batteryMode\n        });\n        setRenderConfig(config);\n        \n        // Mettre à jour le niveau de qualité en fonction de la configuration\n        setQualityLevel(progressive3DLoader.getDetailLevelFromString(config.modelDetailLevel));\n        \n        // Créer et optimiser le loader de textures pour le chargement progressif\n        if (!textureLoaderRef.current) {\n          textureLoaderRef.current = mobileOptimizer.setupProgressiveTextureLoading(new THREE.TextureLoader());\n        }\n        \n        // Initialiser le chemin de fly-through si les données sont disponibles\n        if (elevationData && elevationData.path) {\n          initializeFlyThroughPath();\n        }\n        \n        // Configurer les listeners pour les ajustements de qualité adaptatifs\n        if (adaptiveQualityEnabled) {\n          setupAdaptiveQualityListeners();\n        }\n        \n        // Initialiser le service batteryOptimizer\n        await batteryOptimizer.initialize();\n        setBatteryMode(batteryOptimizer.isBatteryModeActive());\n        \n        setIsLoading(false);\n      } catch (err) {\n        console.error('Erreur lors de l\\'initialisation de la visualisation:', err);\n        setError('Une erreur est survenue lors du chargement de la visualisation 3D');\n        setIsLoading(false);\n      }\n    };\n    \n    initializeVisualization();\n    \n    // Nettoyage lors du démontage du composant\n    return () => {\n      // Arrêter les animations et les workers\n      if (flyThroughAnimationRef.current) {\n        cancelAnimationFrame(flyThroughAnimationRef.current);\n      }\n      \n      // Libérer les ressources\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n  }, [passId, elevationData, pointsOfInterest, batteryMode, adaptiveQualityEnabled]);\n  \n  // Filtrer les points d'intérêt\n  useEffect(() => {\n    if (!pointsOfInterest || !Array.isArray(pointsOfInterest)) {\n      setFilteredPointsOfInterest([]);\n      return;\n    }\n    \n    // Appliquer les filtres sélectionnés\n    const filtered = Object.values(poiFilters).every(v => v === false)\n      ? pointsOfInterest \n      : pointsOfInterest.filter(poi => poi && poi.type && poiFilters[poi.type]);\n    \n    setFilteredPointsOfInterest(filtered);\n  }, [poiFilters, pointsOfInterest]);\n  \n  // Gérer les changements de qualité\n  const handleQualityChange = useCallback((level) => {\n    setQualityLevel(level);\n    \n    // Mettre à jour la configuration 3D\n    const newConfig = { ...renderConfig };\n    newConfig.modelDetailLevel = progressive3DLoader.getStringFromDetailLevel(level);\n    setRenderConfig(newConfig);\n    \n    // Désactiver l'ajustement adaptatif si changement manuel\n    setAdaptiveQualityEnabled(false);\n  }, [renderConfig]);\n  \n  // Nouvelle fonction pour configurer les listeners d'ajustement adaptatif de qualité\n  const setupAdaptiveQualityListeners = useCallback(() => {\n    // Écouter les événements d'ajustement de qualité\n    const handleQualityAdjustment = (event) => {\n      const { qualityMultiplier, reason } = event.detail;\n      \n      if (!renderConfig) return;\n      \n      // Ajuster le niveau de qualité en fonction du multiplicateur\n      let newLevel = qualityLevel;\n      if (qualityMultiplier <= 0.5) {\n        newLevel = DETAIL_LEVELS.LOW;\n      } else if (qualityMultiplier <= 0.8) {\n        newLevel = DETAIL_LEVELS.MEDIUM;\n      } else {\n        newLevel = DETAIL_LEVELS.HIGH;\n      }\n      \n      // Ne mettre à jour que si le niveau change\n      if (newLevel !== qualityLevel) {\n        setQualityLevel(newLevel);\n        \n        // Mettre à jour la configuration\n        const newConfig = { ...renderConfig };\n        newConfig.modelDetailLevel = progressive3DLoader.getStringFromDetailLevel(newLevel);\n        setRenderConfig(newConfig);\n        \n        console.log(`Ajustement automatique de la qualité: ${progressive3DLoader.getStringFromDetailLevel(newLevel)} (${reason})`);\n      }\n    };\n    \n    // Écouter les événements d'optimisation\n    window.addEventListener('quality-adjustment', handleQualityAdjustment);\n    \n    // Nettoyage\n    return () => {\n      window.removeEventListener('quality-adjustment', handleQualityAdjustment);\n    };\n  }, [qualityLevel, renderConfig]);\n  \n  // Nouvelle fonction pour gérer le mode économie de batterie\n  const handleBatteryModeToggle = useCallback(() => {\n    const newBatteryMode = !batteryMode;\n    setBatteryMode(newBatteryMode);\n    \n    // Mettre à jour la configuration\n    const config = threeDConfigManager.getOptimalConfig('colVisualization', {\n      forceBatterySaving: newBatteryMode\n    });\n    setRenderConfig(config);\n    \n    // Mettre à jour le niveau de qualité\n    setQualityLevel(progressive3DLoader.getDetailLevelFromString(config.modelDetailLevel));\n    \n    console.log(`Mode économie de batterie ${newBatteryMode ? 'activé' : 'désactivé'}`);\n    \n    // Initialiser le service batteryOptimizer\n    batteryOptimizer.setBatteryMode(newBatteryMode);\n  }, [batteryMode]);\n\n  // Composant interne pour optimiser le renderer THREE.js\n  const SceneManager = () => {\n    const { gl, camera } = useThree();\n    \n    // Stocker la référence au renderer\n    useEffect(() => {\n      rendererRef.current = gl;\n      \n      // Appliquer les optimisations mobiles\n      if (deviceCapabilities && (deviceCapabilities.flags.isMobile || deviceCapabilities.flags.isLowEndDevice)) {\n        mobileOptimizer.optimizeRenderer(gl);\n      }\n      \n      // Configurer le rendu en fonction de la configuration\n      if (renderConfig) {\n        // Paramètres de shadow map\n        if (renderConfig.shadowsEnabled) {\n          gl.shadowMap.enabled = true;\n          gl.shadowMap.type = THREE.PCFSoftShadowMap;\n          gl.shadowMap.autoUpdate = false;\n          gl.shadowMap.needsUpdate = true;\n        } else {\n          gl.shadowMap.enabled = false;\n        }\n        \n        // Paramètres de clearing\n        gl.setClearColor(new THREE.Color('#87CEEB'), 1); \n        \n        // Limiter le framerate si nécessaire\n        if (renderConfig.maxFrameRate && renderConfig.maxFrameRate < 60) {\n          gl.setAnimationLoop((time) => {\n            const elapsed = time - performanceStatsRef.current.lastFrameTime;\n            const targetElapsed = 1000 / renderConfig.maxFrameRate;\n            \n            if (elapsed >= targetElapsed) {\n              performanceStatsRef.current.lastFrameTime = time;\n              gl.render(gl.scene, camera);\n            }\n          });\n        }\n      }\n      \n      // Nettoyer lors du démontage\n      return () => {\n        if (gl.setAnimationLoop) {\n          gl.setAnimationLoop(null);\n        }\n      };\n    }, [gl, camera, deviceCapabilities, renderConfig]);\n    \n    // Suivre le FPS pour les ajustements adaptatifs\n    useFrame((state, delta) => {\n      if (!adaptiveQualityEnabled) return;\n      \n      // Calculer le FPS\n      performanceStatsRef.current.frameCount++;\n      const now = performance.now();\n      const elapsed = now - performanceStatsRef.current.lastPerformanceCheck;\n      \n      // Mettre à jour les statistiques toutes les secondes\n      if (elapsed > 1000) {\n        const currentFPS = Math.round(performanceStatsRef.current.frameCount * 1000 / elapsed);\n        performanceStatsRef.current.frameRate = currentFPS;\n        \n        // Ajouter à l'historique\n        performanceStatsRef.current.frameRateHistory.push(currentFPS);\n        if (performanceStatsRef.current.frameRateHistory.length > 10) {\n          performanceStatsRef.current.frameRateHistory.shift();\n        }\n        \n        // Réinitialiser les compteurs\n        performanceStatsRef.current.frameCount = 0;\n        performanceStatsRef.current.lastPerformanceCheck = now;\n      }\n    });\n    \n    return null;\n  };\n\n  return (\n    <Paper elevation={3} sx={{ mb: 4, overflow: 'hidden', position: 'relative' }}>\n      <VisualizationContainer>\n        {error ? (\n          <StyledAlert severity=\"error\">{error}</StyledAlert>\n        ) : isLoading ? (\n          <LoadingOverlay>\n            <LoadingIndicator />\n          </LoadingOverlay>\n        ) : (\n          <>\n            <Canvas \n              ref={canvasRef} \n              camera={{ position: [0, 10, 20], fov: 60 }}\n              shadows={renderConfig ? renderConfig.shadowsEnabled : false}\n              dpr={window.devicePixelRatio > 2 ? 2 : window.devicePixelRatio} // Limiter le DPR à 2 pour les performances\n              performance={{ min: 0.5 }} // Réduire la résolution si nécessaire pour maintenir les performances\n            >\n              {/* Ajouter le gestionnaire de scène pour les optimisations */}\n              <SceneManager />\n              \n              {/* Reste du contenu */}\n              <ambientLight intensity={0.5} />\n              <directionalLight \n                position={[10, 20, 10]} \n                intensity={0.8} \n                castShadow={renderConfig ? renderConfig.shadowsEnabled : false}\n                shadow-mapSize-width={renderConfig ? renderConfig.shadowMapSize || 1024 : 1024}\n                shadow-mapSize-height={renderConfig ? renderConfig.shadowMapSize || 1024 : 1024}\n              />\n              \n              {/* Terrain */}\n              <Terrain \n                elevationData={elevationData} \n                surfaceTypes={surfaceTypes} \n                detailLevel={qualityLevel}\n                renderConfig={renderConfig}\n              />\n              \n              {/* Points d'intérêt - limités selon les capacités de l'appareil */}\n              {filteredPointsOfInterest.slice(0, renderConfig ? renderConfig.maxPointsOfInterest : 25).map((poi, index) => (\n                <PointOfInterest \n                  key={`poi-${index}`}\n                  position={[poi.x, (poi.elevation || 0) * 0.1 + 1, poi.z]} \n                  label={poi.name}\n                  type={poi.type}\n                  isSelected={selectedPOI === poi}\n                  onClick={() => handleSelectPOI(poi)}\n                  detailLevel={qualityLevel}\n                />\n              ))}\n              \n              {/* Contrôles optimisés pour différents appareils */}\n              <OrbitControls \n                ref={controlsRef}\n                enableDamping={renderConfig ? !renderConfig.useSimplifiedGeometry : true}\n                dampingFactor={0.1}\n                minDistance={5}\n                maxDistance={100}\n                target={selectedPOI ? [selectedPOI.x, (selectedPOI.elevation || 0) * 0.1, selectedPOI.z] : [0, 0, 0]}\n                // Support tactile amélioré\n                touchAction=\"none\" // Empêcher le comportement de défilement par défaut sur tactile\n                touches={{\n                  ONE: THREE.TOUCH.ROTATE,\n                  TWO: THREE.TOUCH.DOLLY_PAN\n                }}\n                // Optimisations tactiles via mobileOptimizer\n                {...(deviceCapabilities?.flags.isMobile ? {\n                  rotateSpeed: 0.8,\n                  zoomSpeed: 1.2,\n                  panSpeed: 0.8\n                } : {})}\n              />\n              \n              {/* Ajouter la caméra de fly-through lorsqu'elle est active */}\n              {viewType === 'flythrough' && <FlyThroughCamera />}\n            </Canvas>\n            \n            {/* Contrôles de qualité et informations */}\n            <OverlayContainer>\n              <Box sx={{ p: 1.5 }}>\n                <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Visualisation 3D</Typography>\n                \n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"body2\" sx={{ mr: 1 }}>Qualité:</Typography>\n                  <ButtonGroup size=\"small\">\n                    <Button \n                      variant={qualityLevel === DETAIL_LEVELS.LOW ? \"contained\" : \"outlined\"}\n                      onClick={() => handleQualityChange(DETAIL_LEVELS.LOW)}\n                    >\n                      Basse\n                    </Button>\n                    <Button \n                      variant={qualityLevel === DETAIL_LEVELS.MEDIUM ? \"contained\" : \"outlined\"}\n                      onClick={() => handleQualityChange(DETAIL_LEVELS.MEDIUM)}\n                    >\n                      Moyenne\n                    </Button>\n                    <Button \n                      variant={qualityLevel === DETAIL_LEVELS.HIGH ? \"contained\" : \"outlined\"}\n                      onClick={() => handleQualityChange(DETAIL_LEVELS.HIGH)}\n                      // Désactiver le niveau élevé sur les appareils faibles\n                      disabled={deviceCapabilities?.flags.isLowEndDevice}\n                    >\n                      Haute\n                    </Button>\n                  </ButtonGroup>\n                </Box>\n                \n                {/* Bouton pour activer/désactiver l'ajustement adaptatif de qualité */}\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <AdaptiveQualityFlag active={adaptiveQualityEnabled} onClick={() => setAdaptiveQualityEnabled(!adaptiveQualityEnabled)}>\n                    Auto\n                  </AdaptiveQualityFlag>\n                  \n                  {/* Bouton pour activer/désactiver le mode économie de batterie */}\n                  <AdaptiveQualityFlag active={batteryMode} onClick={handleBatteryModeToggle}>\n                    Éco\n                  </AdaptiveQualityFlag>\n                  \n                  {/* Afficher le FPS pour le débogage */}\n                  {featureFlagsService.isEnabled('showPerformanceMetrics') && (\n                    <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                      {performanceStatsRef.current.frameRate} FPS\n                    </Typography>\n                  )}\n                </Box>\n                \n                <Divider sx={{ my: 1 }} />\n                \n                <Typography variant=\"body2\" sx={{ mb: 1 }}>Caméra:</Typography>\n                <ButtonGroup size=\"small\" sx={{ mb: 1 }}>\n                  <Button \n                    variant={viewType === 'free' ? \"contained\" : \"outlined\"}\n                    onClick={() => handleViewChange('free')}\n                  >\n                    Libre\n                  </Button>\n                  <Button \n                    variant={viewType === 'overview' ? \"contained\" : \"outlined\"}\n                    onClick={() => handleViewChange('overview')}\n                  >\n                    Vue d'ensemble\n                  </Button>\n                  <Button \n                    variant={viewType === 'flythrough' ? \"contained\" : \"outlined\"}\n                    onClick={() => handleViewChange('flythrough')}\n                    startIcon={<DirectionsBikeIcon />}\n                    // Désactiver sur les appareils faibles si la configuration recommande de le faire\n                    disabled={deviceCapabilities?.flags.isLowEndDevice && renderConfig?.useSimplifiedGeometry}\n                  >\n                    Parcours\n                  </Button>\n                </ButtonGroup>\n                \n                <Divider sx={{ my: 1 }} />\n                \n                <Typography variant=\"body2\" sx={{ mb: 1 }}>Filtre des points d'intérêt:</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  <PoiFilterChip \n                    active={poiFilters.viewpoint} \n                    onClick={() => handlePOIFilterChange('viewpoint')}\n                  >\n                    Panoramas\n                  </PoiFilterChip>\n                  <PoiFilterChip \n                    active={poiFilters.restaurant} \n                    onClick={() => handlePOIFilterChange('restaurant')}\n                  >\n                    Restaurants\n                  </PoiFilterChip>\n                  <PoiFilterChip \n                    active={poiFilters.landmark} \n                    onClick={() => handlePOIFilterChange('landmark')}\n                  >\n                    Points remarquables\n                  </PoiFilterChip>\n                  <PoiFilterChip \n                    active={poiFilters.parking} \n                    onClick={() => handlePOIFilterChange('parking')}\n                  >\n                    Parkings\n                  </PoiFilterChip>\n                  <PoiFilterChip \n                    active={poiFilters.danger} \n                    onClick={() => handlePOIFilterChange('danger')}\n                  >\n                    Zones dangereuses\n                  </PoiFilterChip>\n                </Box>\n              </Box>\n              \n              {/* Afficher les informations sur l'appareil et la qualité si le flag est activé */}\n              {featureFlagsService.isEnabled('showDeviceCapabilities') && deviceCapabilities && (\n                <Box sx={{ p: 1.5, borderTop: '1px solid rgba(0,0,0,0.1)' }}>\n                  <Typography variant=\"caption\" component=\"div\">\n                    Appareil: {deviceCapabilities.flags.isMobile ? 'Mobile' : deviceCapabilities.flags.isTablet ? 'Tablette' : 'Desktop'}\n                  </Typography>\n                  <Typography variant=\"caption\" component=\"div\">\n                    GPU: {deviceCapabilities.gpu.vendor ? deviceCapabilities.gpu.vendor.split(' ')[0] : 'Non détecté'} ({Math.round(deviceCapabilities.gpu.estimatedMemory)}MB)\n                  </Typography>\n                  <Typography variant=\"caption\" component=\"div\">\n                    CPU: {deviceCapabilities.cpu.cores} cœurs\n                  </Typography>\n                  <Typography variant=\"caption\" component=\"div\">\n                    Réseau: {deviceCapabilities.network.effectiveType}\n                  </Typography>\n                </Box>\n              )}\n            </OverlayContainer>\n            \n            {/* Info trail */}\n            <TrailInfoContainer>\n              <TrailInfoItem>\n                <Typography variant=\"caption\">Difficulté</Typography>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>{trailInfo.difficulty}</Typography>\n              </TrailInfoItem>\n              <TrailInfoItem>\n                <Typography variant=\"caption\">Distance</Typography>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>{trailInfo.length}</Typography>\n              </TrailInfoItem>\n              <TrailInfoItem>\n                <Typography variant=\"caption\">Dénivelé</Typography>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>{trailInfo.elevationGain}</Typography>\n              </TrailInfoItem>\n            </TrailInfoContainer>\n          </>\n        )}\n      </VisualizationContainer>\n    </Paper>\n  );\n};\n\nexport default ColVisualization3D;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}