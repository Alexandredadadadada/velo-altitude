{"ast":null,"code":"import React,{useState,useEffect,useCallback,Suspense}from'react';import{Container,Grid,Typography,Paper,Box,Tab,Tabs,CircularProgress,Alert,Button,Snackbar,IconButton}from'@mui/material';import{useAuth}from'../context/AuthContext';import nutritionService from'../services/nutritionService';import{lazyLoad,LoadingFallback}from'../utils/lazyLoadHelper';import{Close as CloseIcon,Refresh as RefreshIcon}from'@mui/icons-material';// Interface pour l'affichage des données nutritionnelles du cycliste\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NutritionPage=()=>{var _nutritionData$goals,_nutritionData$prefer,_nutritionData$metric,_nutritionData$prefer2;const{user}=useAuth();const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[nutritionData,setNutritionData]=useState(null);const[currentTab,setCurrentTab]=useState(0);const[notification,setNotification]=useState(null);const[timeoutId,setTimeoutId]=useState(null);// Lazy load des composants pour optimiser les performances\nconst NutritionDashboard=lazyLoad(()=>import('../components/nutrition/NutritionDashboard'),{moduleName:'Tableau de bord nutritionnel',skeletonType:'complex'});const NutritionCalculator=lazyLoad(()=>import('../components/nutrition/NutritionCalculator'),{moduleName:'Calculateur nutritionnel',skeletonType:'content'});const NutritionRecommendations=lazyLoad(()=>import('../components/nutrition/NutritionRecommendations'),{moduleName:'Recommandations nutritionnelles',skeletonType:'card'});const MealPlanner=lazyLoad(()=>import('../components/nutrition/MealPlanner'),{moduleName:'Planificateur de repas',skeletonType:'complex',minDelay:500});const NutritionRecipesExplorer=lazyLoad(()=>import('../components/nutrition/NutritionRecipesExplorer'),{moduleName:'Explorateur de recettes',skeletonType:'complex'});// Récupérer les données nutritionnelles de l'utilisateur\nconst fetchNutritionData=useCallback(async()=>{if(!user||!user.id){setError(\"Vous devez être connecté pour accéder à cette page.\");setLoading(false);return;}try{setLoading(true);setError(null);// Configurer un timeout pour éviter une attente trop longue\nconst timeout=setTimeout(()=>{setError(\"La requête a pris trop de temps. Veuillez réessayer.\");setLoading(false);},8000);const data=await nutritionService.getUserNutritionData(user.id);// Annuler le timeout si la requête a réussi\nclearTimeout(timeout);if(!data){throw new Error(\"Aucune donnée nutritionnelle disponible.\");}// Vérifier si les données sont complètes\nconst isDataComplete=checkDataCompleteness(data);if(!isDataComplete){setNotification({severity:'warning',message:'Certaines données de votre profil sont incomplètes. Complétez votre profil pour des recommandations plus précises.'});}setNutritionData(data);}catch(err){console.error(\"Erreur lors de la récupération des données nutritionnelles:\",err);setError(\"Impossible de charger vos données nutritionnelles. Veuillez réessayer plus tard.\");}finally{setLoading(false);}},[user]);// Vérifier si les données du profil sont complètes\nconst checkDataCompleteness=data=>{if(!data)return false;// Vérifier les données essentielles\nconst hasMetrics=data.metrics&&data.metrics.weight&&data.metrics.height&&data.metrics.age;const hasGoals=data.goals&&data.goals.type;const hasActivity=data.metrics&&data.metrics.activityLevel;return hasMetrics&&hasGoals&&hasActivity;};// Charger les données au montage du composant\nuseEffect(()=>{fetchNutritionData();// Nettoyer le timeout en cas de démontage du composant\nreturn()=>{if(timeoutId){clearTimeout(timeoutId);}};},[fetchNutritionData]);// Gérer le changement d'onglet\nconst handleTabChange=(event,newValue)=>{setCurrentTab(newValue);};// Fermer les notifications\nconst handleCloseNotification=()=>{setNotification(null);};// Rafraîchir les données\nconst handleRefresh=()=>{fetchNutritionData();};// Afficher un message d'erreur si l'utilisateur n'est pas connecté\nif(!user){return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",sx:{mt:4,mb:4},children:/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:\"Vous devez \\xEAtre connect\\xE9 pour acc\\xE9der \\xE0 cette page.\"})});}// Afficher un indicateur de chargement\nif(loading){return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",sx:{mt:4,mb:4},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',my:4},children:[/*#__PURE__*/_jsx(CircularProgress,{sx:{mb:2}}),/*#__PURE__*/_jsx(Typography,{children:\"Chargement de vos donn\\xE9es nutritionnelles...\"})]})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{mt:4,mb:4},children:[/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3,mb:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Nutrition\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(RefreshIcon,{}),onClick:handleRefresh,children:\"Actualiser\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Optimisez votre alimentation pour am\\xE9liorer vos performances cyclistes et votre r\\xE9cup\\xE9ration.\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},action:/*#__PURE__*/_jsx(Button,{color:\"inherit\",size:\"small\",onClick:handleRefresh,children:\"R\\xE9essayer\"}),children:error}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:currentTab,onChange:handleTabChange,variant:\"fullWidth\",indicatorColor:\"primary\",textColor:\"primary\",children:[/*#__PURE__*/_jsx(Tab,{label:\"Tableau de bord\"}),/*#__PURE__*/_jsx(Tab,{label:\"Calculateur nutritionnel\"}),/*#__PURE__*/_jsx(Tab,{label:\"Recommandations\"}),/*#__PURE__*/_jsx(Tab,{label:\"Planificateur de repas\"}),/*#__PURE__*/_jsx(Tab,{label:\"Explorateur de recettes\"})]})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[currentTab===0&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingFallback,{moduleName:\"Tableau de bord nutritionnel\"}),children:/*#__PURE__*/_jsx(NutritionDashboard,{nutritionData:nutritionData,userId:user.id,onRefresh:handleRefresh})}),currentTab===1&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingFallback,{moduleName:\"Calculateur nutritionnel\"}),children:/*#__PURE__*/_jsx(NutritionCalculator,{userId:user.id,nutritionData:nutritionData,onCalculationComplete:data=>{// Mise à jour des données nutritionnelles avec les nouveaux calculs\nsetNutritionData(prevData=>({...prevData,calculations:data}));// Afficher une notification de succès\nsetNotification({severity:'success',message:'Calculs nutritionnels mis à jour avec succès !'});}})}),currentTab===2&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingFallback,{moduleName:\"Recommandations nutritionnelles\"}),children:/*#__PURE__*/_jsx(NutritionRecommendations,{userId:user.id,nutritionData:nutritionData})}),currentTab===3&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingFallback,{moduleName:\"Planificateur de repas\"}),children:/*#__PURE__*/_jsx(MealPlanner,{nutritionData:nutritionData,userId:user.id})}),currentTab===4&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingFallback,{moduleName:\"Explorateur de recettes\"}),children:/*#__PURE__*/_jsx(NutritionRecipesExplorer,{userProfile:nutritionData?{goal:((_nutritionData$goals=nutritionData.goals)===null||_nutritionData$goals===void 0?void 0:_nutritionData$goals.type)||'performance',dietaryRestrictions:((_nutritionData$prefer=nutritionData.preferences)===null||_nutritionData$prefer===void 0?void 0:_nutritionData$prefer.dietaryRestrictions)||[],weight:(_nutritionData$metric=nutritionData.metrics)===null||_nutritionData$metric===void 0?void 0:_nutritionData$metric.weight,preferences:((_nutritionData$prefer2=nutritionData.preferences)===null||_nutritionData$prefer2===void 0?void 0:_nutritionData$prefer2.favoriteRecipes)||[]}:null})})]}),/*#__PURE__*/_jsx(Snackbar,{open:notification!==null,autoHideDuration:6000,onClose:handleCloseNotification,message:notification===null||notification===void 0?void 0:notification.message,action:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"inherit\",onClick:handleCloseNotification,children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"small\"})}),anchorOrigin:{vertical:'bottom',horizontal:'center'},ContentProps:{sx:{backgroundColor:(notification===null||notification===void 0?void 0:notification.severity)==='success'?'success.main':(notification===null||notification===void 0?void 0:notification.severity)==='warning'?'warning.main':(notification===null||notification===void 0?void 0:notification.severity)==='error'?'error.main':'info.main'}}})]});};export default NutritionPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Suspense","Container","Grid","Typography","Paper","Box","Tab","Tabs","CircularProgress","Alert","Button","Snackbar","IconButton","useAuth","nutritionService","lazyLoad","LoadingFallback","Close","CloseIcon","Refresh","RefreshIcon","jsx","_jsx","jsxs","_jsxs","NutritionPage","_nutritionData$goals","_nutritionData$prefer","_nutritionData$metric","_nutritionData$prefer2","user","loading","setLoading","error","setError","nutritionData","setNutritionData","currentTab","setCurrentTab","notification","setNotification","timeoutId","setTimeoutId","NutritionDashboard","moduleName","skeletonType","NutritionCalculator","NutritionRecommendations","MealPlanner","minDelay","NutritionRecipesExplorer","fetchNutritionData","id","timeout","setTimeout","data","getUserNutritionData","clearTimeout","Error","isDataComplete","checkDataCompleteness","severity","message","err","console","hasMetrics","metrics","weight","height","age","hasGoals","goals","type","hasActivity","activityLevel","handleTabChange","event","newValue","handleCloseNotification","handleRefresh","maxWidth","sx","mt","mb","children","display","flexDirection","alignItems","my","elevation","p","justifyContent","variant","component","gutterBottom","startIcon","onClick","action","color","size","borderBottom","borderColor","value","onChange","indicatorColor","textColor","label","fallback","userId","onRefresh","onCalculationComplete","prevData","calculations","userProfile","goal","dietaryRestrictions","preferences","favoriteRecipes","open","autoHideDuration","onClose","fontSize","anchorOrigin","vertical","horizontal","ContentProps","backgroundColor"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/pages/NutritionPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, Suspense } from 'react';\nimport { \n  Container, \n  Grid, \n  Typography, \n  Paper, \n  Box, \n  Tab, \n  Tabs, \n  CircularProgress, \n  Alert, \n  Button,\n  Snackbar,\n  IconButton\n} from '@mui/material';\nimport { useAuth } from '../context/AuthContext';\nimport nutritionService from '../services/nutritionService';\nimport { lazyLoad, LoadingFallback } from '../utils/lazyLoadHelper';\nimport { Close as CloseIcon, Refresh as RefreshIcon } from '@mui/icons-material';\n\n// Interface pour l'affichage des données nutritionnelles du cycliste\nconst NutritionPage = () => {\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [nutritionData, setNutritionData] = useState(null);\n  const [currentTab, setCurrentTab] = useState(0);\n  const [notification, setNotification] = useState(null);\n  const [timeoutId, setTimeoutId] = useState(null);\n\n  // Lazy load des composants pour optimiser les performances\n  const NutritionDashboard = lazyLoad(() => import('../components/nutrition/NutritionDashboard'), {\n    moduleName: 'Tableau de bord nutritionnel',\n    skeletonType: 'complex'\n  });\n\n  const NutritionCalculator = lazyLoad(() => import('../components/nutrition/NutritionCalculator'), {\n    moduleName: 'Calculateur nutritionnel',\n    skeletonType: 'content'\n  });\n\n  const NutritionRecommendations = lazyLoad(() => import('../components/nutrition/NutritionRecommendations'), {\n    moduleName: 'Recommandations nutritionnelles',\n    skeletonType: 'card'\n  });\n\n  const MealPlanner = lazyLoad(() => import('../components/nutrition/MealPlanner'), {\n    moduleName: 'Planificateur de repas',\n    skeletonType: 'complex',\n    minDelay: 500\n  });\n\n  const NutritionRecipesExplorer = lazyLoad(() => import('../components/nutrition/NutritionRecipesExplorer'), {\n    moduleName: 'Explorateur de recettes',\n    skeletonType: 'complex'\n  });\n\n  // Récupérer les données nutritionnelles de l'utilisateur\n  const fetchNutritionData = useCallback(async () => {\n    if (!user || !user.id) {\n      setError(\"Vous devez être connecté pour accéder à cette page.\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Configurer un timeout pour éviter une attente trop longue\n      const timeout = setTimeout(() => {\n        setError(\"La requête a pris trop de temps. Veuillez réessayer.\");\n        setLoading(false);\n      }, 8000);\n      \n      const data = await nutritionService.getUserNutritionData(user.id);\n      \n      // Annuler le timeout si la requête a réussi\n      clearTimeout(timeout);\n      \n      if (!data) {\n        throw new Error(\"Aucune donnée nutritionnelle disponible.\");\n      }\n      \n      // Vérifier si les données sont complètes\n      const isDataComplete = checkDataCompleteness(data);\n      if (!isDataComplete) {\n        setNotification({\n          severity: 'warning',\n          message: 'Certaines données de votre profil sont incomplètes. Complétez votre profil pour des recommandations plus précises.'\n        });\n      }\n      \n      setNutritionData(data);\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des données nutritionnelles:\", err);\n      setError(\"Impossible de charger vos données nutritionnelles. Veuillez réessayer plus tard.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [user]);\n\n  // Vérifier si les données du profil sont complètes\n  const checkDataCompleteness = (data) => {\n    if (!data) return false;\n    \n    // Vérifier les données essentielles\n    const hasMetrics = data.metrics && \n                      data.metrics.weight && \n                      data.metrics.height && \n                      data.metrics.age;\n                      \n    const hasGoals = data.goals && \n                    data.goals.type;\n                    \n    const hasActivity = data.metrics && \n                       data.metrics.activityLevel;\n    \n    return hasMetrics && hasGoals && hasActivity;\n  };\n\n  // Charger les données au montage du composant\n  useEffect(() => {\n    fetchNutritionData();\n    \n    // Nettoyer le timeout en cas de démontage du composant\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [fetchNutritionData]);\n\n  // Gérer le changement d'onglet\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Fermer les notifications\n  const handleCloseNotification = () => {\n    setNotification(null);\n  };\n\n  // Rafraîchir les données\n  const handleRefresh = () => {\n    fetchNutritionData();\n  };\n\n  // Afficher un message d'erreur si l'utilisateur n'est pas connecté\n  if (!user) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Alert severity=\"error\">\n          Vous devez être connecté pour accéder à cette page.\n        </Alert>\n      </Container>\n    );\n  }\n\n  // Afficher un indicateur de chargement\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', my: 4 }}>\n          <CircularProgress sx={{ mb: 2 }} />\n          <Typography>Chargement de vos données nutritionnelles...</Typography>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      {/* En-tête */}\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Nutrition\n          </Typography>\n          <Button \n            variant=\"outlined\" \n            startIcon={<RefreshIcon />}\n            onClick={handleRefresh}\n          >\n            Actualiser\n          </Button>\n        </Box>\n        <Typography variant=\"body1\">\n          Optimisez votre alimentation pour améliorer vos performances cyclistes et votre récupération.\n        </Typography>\n      </Paper>\n      \n      {/* Affichage des erreurs */}\n      {error && (\n        <Alert \n          severity=\"error\" \n          sx={{ mb: 3 }}\n          action={\n            <Button color=\"inherit\" size=\"small\" onClick={handleRefresh}>\n              Réessayer\n            </Button>\n          }\n        >\n          {error}\n        </Alert>\n      )}\n      \n      {/* Navigation par onglets */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs \n          value={currentTab} \n          onChange={handleTabChange} \n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab label=\"Tableau de bord\" />\n          <Tab label=\"Calculateur nutritionnel\" />\n          <Tab label=\"Recommandations\" />\n          <Tab label=\"Planificateur de repas\" />\n          <Tab label=\"Explorateur de recettes\" />\n        </Tabs>\n      </Box>\n      \n      {/* Contenu des onglets */}\n      <Box sx={{ mt: 2 }}>\n        {/* Tableau de bord nutritionnel */}\n        {currentTab === 0 && (\n          <Suspense fallback={<LoadingFallback moduleName=\"Tableau de bord nutritionnel\" />}>\n            <NutritionDashboard \n              nutritionData={nutritionData} \n              userId={user.id} \n              onRefresh={handleRefresh} \n            />\n          </Suspense>\n        )}\n        \n        {/* Calculateur nutritionnel */}\n        {currentTab === 1 && (\n          <Suspense fallback={<LoadingFallback moduleName=\"Calculateur nutritionnel\" />}>\n            <NutritionCalculator \n              userId={user.id} \n              nutritionData={nutritionData} \n              onCalculationComplete={(data) => {\n                // Mise à jour des données nutritionnelles avec les nouveaux calculs\n                setNutritionData(prevData => ({\n                  ...prevData,\n                  calculations: data\n                }));\n                \n                // Afficher une notification de succès\n                setNotification({\n                  severity: 'success',\n                  message: 'Calculs nutritionnels mis à jour avec succès !'\n                });\n              }}\n            />\n          </Suspense>\n        )}\n        \n        {/* Recommandations nutritionnelles */}\n        {currentTab === 2 && (\n          <Suspense fallback={<LoadingFallback moduleName=\"Recommandations nutritionnelles\" />}>\n            <NutritionRecommendations \n              userId={user.id} \n              nutritionData={nutritionData} \n            />\n          </Suspense>\n        )}\n        \n        {/* Planificateur de repas */}\n        {currentTab === 3 && (\n          <Suspense fallback={<LoadingFallback moduleName=\"Planificateur de repas\" />}>\n            <MealPlanner \n              nutritionData={nutritionData} \n              userId={user.id} \n            />\n          </Suspense>\n        )}\n        \n        {/* Explorateur de recettes */}\n        {currentTab === 4 && (\n          <Suspense fallback={<LoadingFallback moduleName=\"Explorateur de recettes\" />}>\n            <NutritionRecipesExplorer \n              userProfile={nutritionData ? {\n                goal: nutritionData.goals?.type || 'performance',\n                dietaryRestrictions: nutritionData.preferences?.dietaryRestrictions || [],\n                weight: nutritionData.metrics?.weight,\n                preferences: nutritionData.preferences?.favoriteRecipes || []\n              } : null}\n            />\n          </Suspense>\n        )}\n      </Box>\n      \n      {/* Notifications */}\n      <Snackbar\n        open={notification !== null}\n        autoHideDuration={6000}\n        onClose={handleCloseNotification}\n        message={notification?.message}\n        action={\n          <IconButton\n            size=\"small\"\n            color=\"inherit\"\n            onClick={handleCloseNotification}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        ContentProps={{\n          sx: { \n            backgroundColor: notification?.severity === 'success' ? 'success.main' : \n                            notification?.severity === 'warning' ? 'warning.main' : \n                            notification?.severity === 'error' ? 'error.main' : 'info.main' \n          }\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default NutritionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}