{"ast":null,"code":"import React,{useState,useEffect,createContext,useContext}from'react';import{Alert,Toast,ToastContainer}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheckCircle,faExclamationTriangle,faExclamationCircle,faInfoCircle,faTimes}from'@fortawesome/free-solid-svg-icons';// Contexte pour la gestion des notifications\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext();/**\n * Provider pour le système de notification\n * Permet de gérer les notifications à travers l'application\n */export const NotificationProvider=_ref=>{let{children}=_ref;const[notifications,setNotifications]=useState([]);// Ajouter une nouvelle notification\nconst addNotification=notification=>{const id=Date.now().toString();const defaultDuration=notification.type==='error'?8000:5000;setNotifications(prev=>[...prev,{id,type:'info',title:'',message:'',duration:defaultDuration,...notification,timestamp:new Date()}]);// Enregistrer les erreurs dans la console pour le débogage\nif(notification.type==='error'){console.error(`Notification d'erreur: ${notification.title||''} - ${notification.message||''}`,notification.error||'');}return id;};// Supprimer une notification par ID\nconst removeNotification=id=>{setNotifications(prev=>prev.filter(notif=>notif.id!==id));};// Méthodes d'utilitaire pour différents types de notifications\nconst notify={success:function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return addNotification({type:'success',message,...options});},error:function(message){let error=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// Extraire le message d'erreur si un objet Error est fourni\nlet errorMessage=message;if(error&&typeof error==='object'){if(error.message){errorMessage=`${message}: ${error.message}`;}// Enregistrer l'erreur complète dans la console\nconsole.error('Détails de l\\'erreur:',error);}return addNotification({type:'error',message:errorMessage,error,...options});},warning:function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return addNotification({type:'warning',message,...options});},info:function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return addNotification({type:'info',message,...options});}};// Auto-supprimer les notifications après leur durée\nuseEffect(()=>{const timers=notifications.map(notification=>{if(notification.duration){return setTimeout(()=>{removeNotification(notification.id);},notification.duration);}return null;}).filter(Boolean);return()=>{timers.forEach(timer=>clearTimeout(timer));};},[notifications]);return/*#__PURE__*/_jsxs(NotificationContext.Provider,{value:{notifications,addNotification,removeNotification,notify},children:[children,/*#__PURE__*/_jsx(NotificationDisplay,{})]});};/**\n * Hook pour utiliser le système de notification\n */export const useNotification=()=>{const context=useContext(NotificationContext);if(!context){throw new Error('useNotification doit être utilisé à l\\'intérieur d\\'un NotificationProvider');}return context;};/**\n * Composant d'affichage des notifications\n */const NotificationDisplay=()=>{const{notifications,removeNotification}=useContext(NotificationContext);// Obtenir l'icône correspondant au type de notification\nconst getIcon=type=>{switch(type){case'success':return faCheckCircle;case'error':return faExclamationCircle;case'warning':return faExclamationTriangle;case'info':default:return faInfoCircle;}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ToastContainer,{position:\"bottom-end\",className:\"p-3\",style:{zIndex:1100},children:notifications.filter(notification=>notification.type!=='error').map(notification=>{var _notification$timesta;return/*#__PURE__*/_jsxs(Toast,{onClose:()=>removeNotification(notification.id),bg:notification.type==='info'?'light':notification.type,text:notification.type==='info'?'dark':'white',delay:notification.duration,autohide:true,children:[/*#__PURE__*/_jsxs(Toast.Header,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:getIcon(notification.type),className:\"me-2\"}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:notification.title||(notification.type==='success'?'Succès':notification.type==='warning'?'Attention':'Information')}),/*#__PURE__*/_jsx(\"small\",{children:(_notification$timesta=notification.timestamp)===null||_notification$timesta===void 0?void 0:_notification$timesta.toLocaleTimeString()})]}),/*#__PURE__*/_jsx(Toast.Body,{children:notification.message})]},notification.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"notification-alerts-container\",style:{position:'fixed',top:'20px',left:'50%',transform:'translateX(-50%)',zIndex:1100,maxWidth:'90%',width:'500px'},children:notifications.filter(notification=>notification.type==='error').map(notification=>/*#__PURE__*/_jsxs(Alert,{variant:\"danger\",dismissible:true,onClose:()=>removeNotification(notification.id),className:\"mb-3 shadow-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faExclamationCircle,className:\"me-2\",size:\"lg\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Alert.Heading,{children:notification.title||'Erreur'}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:notification.message})]})]}),notification.details&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 pt-2 border-top\",children:/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:notification.details})})]},notification.id))})]});};/**\n * Composant d'alerte\n */export const Notification=_ref2=>{let{type,title,message,onClose,dismissible=true}=_ref2;return/*#__PURE__*/_jsxs(Alert,{variant:type,dismissible:dismissible,onClose:onClose,children:[title&&/*#__PURE__*/_jsx(Alert.Heading,{children:title}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:message})]});};export default NotificationProvider;","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Alert","Toast","ToastContainer","FontAwesomeIcon","faCheckCircle","faExclamationTriangle","faExclamationCircle","faInfoCircle","faTimes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NotificationContext","NotificationProvider","_ref","children","notifications","setNotifications","addNotification","notification","id","Date","now","toString","defaultDuration","type","prev","title","message","duration","timestamp","console","error","removeNotification","filter","notif","notify","success","options","arguments","length","undefined","errorMessage","warning","info","timers","map","setTimeout","Boolean","forEach","timer","clearTimeout","Provider","value","NotificationDisplay","useNotification","context","Error","getIcon","position","className","style","zIndex","_notification$timesta","onClose","bg","text","delay","autohide","Header","icon","toLocaleTimeString","Body","top","left","transform","maxWidth","width","variant","dismissible","size","Heading","details","Notification","_ref2"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/common/NotificationSystem.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Toast, ToastContainer } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faCheckCircle, faExclamationTriangle, \n  faExclamationCircle, faInfoCircle, \n  faTimes \n} from '@fortawesome/free-solid-svg-icons';\n\n// Contexte pour la gestion des notifications\nconst NotificationContext = createContext();\n\n/**\n * Provider pour le système de notification\n * Permet de gérer les notifications à travers l'application\n */\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  // Ajouter une nouvelle notification\n  const addNotification = (notification) => {\n    const id = Date.now().toString();\n    const defaultDuration = notification.type === 'error' ? 8000 : 5000;\n    \n    setNotifications(prev => [\n      ...prev,\n      {\n        id,\n        type: 'info',\n        title: '',\n        message: '',\n        duration: defaultDuration,\n        ...notification,\n        timestamp: new Date()\n      }\n    ]);\n    \n    // Enregistrer les erreurs dans la console pour le débogage\n    if (notification.type === 'error') {\n      console.error(`Notification d'erreur: ${notification.title || ''} - ${notification.message || ''}`, \n                    notification.error || '');\n    }\n    \n    return id;\n  };\n\n  // Supprimer une notification par ID\n  const removeNotification = (id) => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  };\n\n  // Méthodes d'utilitaire pour différents types de notifications\n  const notify = {\n    success: (message, options = {}) => addNotification({ \n      type: 'success', message, ...options \n    }),\n    \n    error: (message, error = null, options = {}) => {\n      // Extraire le message d'erreur si un objet Error est fourni\n      let errorMessage = message;\n      if (error && typeof error === 'object') {\n        if (error.message) {\n          errorMessage = `${message}: ${error.message}`;\n        }\n        \n        // Enregistrer l'erreur complète dans la console\n        console.error('Détails de l\\'erreur:', error);\n      }\n      \n      return addNotification({ \n        type: 'error', \n        message: errorMessage, \n        error,\n        ...options \n      });\n    },\n    \n    warning: (message, options = {}) => addNotification({ \n      type: 'warning', message, ...options \n    }),\n    \n    info: (message, options = {}) => addNotification({ \n      type: 'info', message, ...options \n    })\n  };\n\n  // Auto-supprimer les notifications après leur durée\n  useEffect(() => {\n    const timers = notifications.map(notification => {\n      if (notification.duration) {\n        return setTimeout(() => {\n          removeNotification(notification.id);\n        }, notification.duration);\n      }\n      return null;\n    }).filter(Boolean);\n\n    return () => {\n      timers.forEach(timer => clearTimeout(timer));\n    };\n  }, [notifications]);\n\n  return (\n    <NotificationContext.Provider value={{ notifications, addNotification, removeNotification, notify }}>\n      {children}\n      <NotificationDisplay />\n    </NotificationContext.Provider>\n  );\n};\n\nNotificationProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Hook pour utiliser le système de notification\n */\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification doit être utilisé à l\\'intérieur d\\'un NotificationProvider');\n  }\n  return context;\n};\n\n/**\n * Composant d'affichage des notifications\n */\nconst NotificationDisplay = () => {\n  const { notifications, removeNotification } = useContext(NotificationContext);\n\n  // Obtenir l'icône correspondant au type de notification\n  const getIcon = (type) => {\n    switch (type) {\n      case 'success':\n        return faCheckCircle;\n      case 'error':\n        return faExclamationCircle;\n      case 'warning':\n        return faExclamationTriangle;\n      case 'info':\n      default:\n        return faInfoCircle;\n    }\n  };\n\n  return (\n    <>\n      {/* Notifications en bas à droite pour les messages de statut */}\n      <ToastContainer position=\"bottom-end\" className=\"p-3\" style={{ zIndex: 1100 }}>\n        {notifications\n          .filter(notification => notification.type !== 'error')\n          .map(notification => (\n            <Toast \n              key={notification.id}\n              onClose={() => removeNotification(notification.id)}\n              bg={notification.type === 'info' ? 'light' : notification.type}\n              text={notification.type === 'info' ? 'dark' : 'white'}\n              delay={notification.duration}\n              autohide\n            >\n              <Toast.Header>\n                <FontAwesomeIcon icon={getIcon(notification.type)} className=\"me-2\" />\n                <strong className=\"me-auto\">\n                  {notification.title || \n                  (notification.type === 'success' ? 'Succès' : \n                   notification.type === 'warning' ? 'Attention' : 'Information')}\n                </strong>\n                <small>{notification.timestamp?.toLocaleTimeString()}</small>\n              </Toast.Header>\n              <Toast.Body>\n                {notification.message}\n              </Toast.Body>\n            </Toast>\n          ))}\n      </ToastContainer>\n\n      {/* Alertes centrées pour les erreurs importantes */}\n      <div className=\"notification-alerts-container\" style={{ \n        position: 'fixed', \n        top: '20px', \n        left: '50%', \n        transform: 'translateX(-50%)',\n        zIndex: 1100,\n        maxWidth: '90%',\n        width: '500px'\n      }}>\n        {notifications\n          .filter(notification => notification.type === 'error')\n          .map(notification => (\n            <Alert \n              key={notification.id} \n              variant=\"danger\" \n              dismissible\n              onClose={() => removeNotification(notification.id)}\n              className=\"mb-3 shadow-sm\"\n            >\n              <div className=\"d-flex align-items-center\">\n                <FontAwesomeIcon icon={faExclamationCircle} className=\"me-2\" size=\"lg\" />\n                <div>\n                  <Alert.Heading>{notification.title || 'Erreur'}</Alert.Heading>\n                  <p className=\"mb-0\">{notification.message}</p>\n                </div>\n              </div>\n              {notification.details && (\n                <div className=\"mt-2 pt-2 border-top\">\n                  <small className=\"text-muted\">{notification.details}</small>\n                </div>\n              )}\n            </Alert>\n          ))}\n      </div>\n    </>\n  );\n};\n\n/**\n * Composant d'alerte\n */\nexport const Notification = ({ type, title, message, onClose, dismissible = true }) => {\n  return (\n    <Alert variant={type} dismissible={dismissible} onClose={onClose}>\n      {title && <Alert.Heading>{title}</Alert.Heading>}\n      <p className=\"mb-0\">{message}</p>\n    </Alert>\n  );\n};\n\nNotification.propTypes = {\n  type: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'danger']),\n  title: PropTypes.string,\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func,\n  dismissible: PropTypes.bool\n};\n\nexport default NotificationProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}