{"ast":null,"code":"import React,{useState,useEffect}from'react';import ReactMapGL,{Source,Layer}from'react-map-gl';import'mapbox-gl/dist/mapbox-gl.css';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer}from'recharts';import{CSSTransition,TransitionGroup}from'react-transition-group';import axios from'axios';import Pass3DViewer from'./Pass3DViewer';import'./PassVisualizer.css';// Constantes pour les styles de carte\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MAPBOX_TOKEN='YOUR_MAPBOX_TOKEN';// À remplacer par une clé réelle dans un environnement de production\nconst mapStyle='mapbox://styles/mapbox/outdoors-v11';// Constantes pour les types de vues\nconst VIEW_TYPES={MAP_2D:'2d',PROFILE:'profile',VIEW_3D:'3d'};// Composant principal pour la visualisation intégrée des cols\nconst PassVisualizer=_ref=>{var _passData$summary,_passData$summary2,_passData$summary3;let{passId}=_ref;const[passData,setPassData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeView,setActiveView]=useState(VIEW_TYPES.MAP_2D);const[viewState,setViewState]=useState({longitude:2.3488,latitude:46.8534,zoom:9});const[selectedPoint,setSelectedPoint]=useState(null);const[annotations,setAnnotations]=useState([]);// Charger les données du col\nuseEffect(()=>{setLoading(true);// Récupérer les données de visualisation du col\naxios.get(`/api/visualization/passes/${passId}/visualization`).then(response=>{if(response.data.status==='success'){setPassData(response.data.data);// Centrer la carte sur le col\nif(response.data.data.coordinates){const middlePoint=Math.floor(response.data.data.coordinates.length/2);setViewState({longitude:response.data.data.coordinates[middlePoint][0],latitude:response.data.data.coordinates[middlePoint][1],zoom:12});}}else{setError('Erreur lors du chargement des données');}}).catch(err=>{console.error('Erreur lors de la récupération des données du col:',err);setError(`Erreur lors de la récupération des données: ${err.message}`);}).finally(()=>{setLoading(false);});},[passId]);// Préparer les données pour le graphique d'élévation\nconst prepareElevationData=()=>{if(!passData||!passData.elevationProfile)return[];return passData.elevationProfile.map(point=>({distance:point[0],elevation:point[1],gradient:point[2]||0}));};// Gérer le clic sur un point du profil d'élévation\nconst handleProfilePointClick=data=>{setSelectedPoint(data);// Trouver les coordonnées correspondantes sur la carte pour centrer la vue\nif(passData&&passData.coordinates){const closestPoint=passData.coordinates.reduce((closest,point,index)=>{const distance=Math.abs(point[2]-data.distance);if(distance<closest.distance){return{index,distance,coords:[point[0],point[1]]};}return closest;},{index:0,distance:Infinity,coords:[0,0]});// Centrer la carte sur ce point\nsetViewState({...viewState,longitude:closestPoint.coords[0],latitude:closestPoint.coords[1],zoom:14});}};// Gérer le changement de type de vue\nconst handleViewChange=newView=>{setActiveView(newView);};// Définir la couleur en fonction de la pente\nconst getColorForGradient=gradient=>{if(gradient<=4)return'#4CAF50';// Vert\nif(gradient<=7)return'#FFC107';// Jaune\nif(gradient<=10)return'#FF9800';// Orange\nif(gradient<=15)return'#F44336';// Rouge\nreturn'#9C27B0';// Violet\n};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pass-visualizer-loading\",children:\"Chargement des donn\\xE9es...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-error\",children:[\"Erreur: \",error]});}if(!passData){return/*#__PURE__*/_jsx(\"div\",{className:\"pass-visualizer-error\",children:\"Aucune donn\\xE9e disponible pour ce col\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:passData.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Distance\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"info-value\",children:[passData.length,\" km\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"D\\xE9nivel\\xE9\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"info-value\",children:[((_passData$summary=passData.summary)===null||_passData$summary===void 0?void 0:_passData$summary.elevationGain)||0,\" m\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Pente moyenne\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"info-value\",children:[((_passData$summary2=passData.summary)===null||_passData$summary2===void 0?void 0:_passData$summary2.averageGradient.toFixed(1))||0,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Pente max\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"info-value\",children:[((_passData$summary3=passData.summary)===null||_passData$summary3===void 0?void 0:_passData$summary3.maxGradient.toFixed(1))||0,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Difficult\\xE9\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:passData.difficulty})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-tabs\",children:[/*#__PURE__*/_jsxs(\"button\",{className:activeView===VIEW_TYPES.MAP_2D?'active':'',onClick:()=>handleViewChange(VIEW_TYPES.MAP_2D),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map\"}),\" Carte 2D\"]}),/*#__PURE__*/_jsxs(\"button\",{className:activeView===VIEW_TYPES.PROFILE?'active':'',onClick:()=>handleViewChange(VIEW_TYPES.PROFILE),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),\" Profil d'\\xE9l\\xE9vation\"]}),/*#__PURE__*/_jsxs(\"button\",{className:activeView===VIEW_TYPES.VIEW_3D?'active':'',onClick:()=>handleViewChange(VIEW_TYPES.VIEW_3D),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-cube\"}),\" Visualisation 3D\"]})]}),/*#__PURE__*/_jsx(TransitionGroup,{children:/*#__PURE__*/_jsx(CSSTransition,{timeout:300,classNames:\"fade\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-content\",children:[activeView===VIEW_TYPES.MAP_2D&&/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-map\",children:[/*#__PURE__*/_jsx(ReactMapGL,{...viewState,onMove:evt=>setViewState(evt.viewState),style:{width:'100%',height:'100%'},mapStyle:mapStyle,mapboxAccessToken:MAPBOX_TOKEN,children:passData.keyPoints&&passData.keyPoints.map((point,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"map-marker\",style:{left:`${point.x}px`,top:`${point.y}px`,backgroundColor:point.type==='start'?'#4CAF50':point.type==='summit'?'#F44336':'#2196F3'},children:/*#__PURE__*/_jsx(\"div\",{className:\"map-marker-label\",children:point.name})},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-legend\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"L\\xE9gende\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-items\",children:passData.colorScale&&passData.colorScale.map((item,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color\",style:{backgroundColor:item.color}}),/*#__PURE__*/_jsxs(\"span\",{className:\"legend-label\",children:[item.gradient,\" - \",item.difficulty]})]},idx))})]}),annotations.map((annotation,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:`map-annotation ${annotation.type}`,style:{left:annotation.x,top:annotation.y},children:[/*#__PURE__*/_jsx(\"div\",{className:\"annotation-marker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"annotation-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:annotation.title}),/*#__PURE__*/_jsx(\"p\",{children:annotation.content})]})]},idx))]}),activeView===VIEW_TYPES.PROFILE&&/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-profile\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-chart\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:prepareElevationData(),margin:{top:20,right:30,left:20,bottom:30},onClick:data=>{if(data&&data.activePayload&&data.activePayload[0]){handleProfilePointClick(data.activePayload[0].payload);}},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"distance\",label:{value:'Distance (km)',position:'insideBottom',offset:-10}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Altitude (m)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name,props)=>{if(name==='elevation')return[`${value} m`,'Altitude'];if(name==='gradient')return[`${value}%`,'Pente'];return[value,name];}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"elevation\",stroke:\"#8884d8\",dot:false,strokeWidth:3,isAnimationActive:false}),passData.segmentsByDifficulty&&passData.segmentsByDifficulty.flatMap(diffCategory=>diffCategory.segments.map((segment,idx)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"elevation\",stroke:diffCategory.color,strokeWidth:5,dot:false,activeDot:false,isAnimationActive:false,name:`${diffCategory.difficulty} (${segment.avgGradient.toFixed(1)}%)`// Dans une implémentation réelle, nous filtrerions les points pour n'inclure que ceux du segment\n},`${diffCategory.difficulty}-${idx}`)))]})})}),selectedPoint&&/*#__PURE__*/_jsxs(\"div\",{className:\"profile-point-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Point s\\xE9lectionn\\xE9\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"point-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Distance\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"detail-value\",children:[selectedPoint.distance.toFixed(1),\" km\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Altitude\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"detail-value\",children:[selectedPoint.elevation,\" m\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Pente\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"detail-value\",children:[selectedPoint.gradient.toFixed(1),\"%\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-key-segments\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Segments cl\\xE9s\"}),/*#__PURE__*/_jsx(\"div\",{className:\"segments-list\",children:passData.keyPoints&&passData.keyPoints.filter(p=>p.type==='key_segment').map((segment,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:`segment-item severity-${segment.severity}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"segment-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:segment.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"segment-gradient\",children:[segment.gradient.toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"segment-details\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Du km \",segment.distanceStart.toFixed(1),\" au km \",segment.distanceEnd.toFixed(1)]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Longueur: \",segment.length.toFixed(1),\" km\"]})]})]},idx))})]})]}),activeView===VIEW_TYPES.VIEW_3D&&/*#__PURE__*/_jsx(\"div\",{className:\"pass-visualizer-3d\",children:/*#__PURE__*/_jsx(Pass3DViewer,{passId:passId})})]})},activeView)}),/*#__PURE__*/_jsxs(\"div\",{className:\"pass-visualizer-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:()=>window.history.back(),children:\"Retour \\xE0 la liste\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",children:\"Ajouter \\xE0 mon itin\\xE9raire\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",children:\"T\\xE9l\\xE9charger GPX\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",children:\"Comparer avec un autre col\"})]})]});};export default PassVisualizer;","map":{"version":3,"names":["React","useState","useEffect","ReactMapGL","Source","Layer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","CSSTransition","TransitionGroup","axios","Pass3DViewer","jsx","_jsx","jsxs","_jsxs","MAPBOX_TOKEN","mapStyle","VIEW_TYPES","MAP_2D","PROFILE","VIEW_3D","PassVisualizer","_ref","_passData$summary","_passData$summary2","_passData$summary3","passId","passData","setPassData","loading","setLoading","error","setError","activeView","setActiveView","viewState","setViewState","longitude","latitude","zoom","selectedPoint","setSelectedPoint","annotations","setAnnotations","get","then","response","data","status","coordinates","middlePoint","Math","floor","length","catch","err","console","message","finally","prepareElevationData","elevationProfile","map","point","distance","elevation","gradient","handleProfilePointClick","closestPoint","reduce","closest","index","abs","coords","Infinity","handleViewChange","newView","getColorForGradient","className","children","name","summary","elevationGain","averageGradient","toFixed","maxGradient","difficulty","onClick","timeout","classNames","onMove","evt","style","width","height","mapboxAccessToken","keyPoints","idx","left","x","top","y","backgroundColor","type","colorScale","item","color","annotation","title","content","margin","right","bottom","activePayload","payload","strokeDasharray","dataKey","label","value","position","offset","angle","formatter","props","stroke","dot","strokeWidth","isAnimationActive","segmentsByDifficulty","flatMap","diffCategory","segments","segment","activeDot","avgGradient","filter","p","severity","distanceStart","distanceEnd","window","history","back"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/visualization/PassVisualizer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport axios from 'axios';\nimport Pass3DViewer from './Pass3DViewer';\nimport './PassVisualizer.css';\n\n// Constantes pour les styles de carte\nconst MAPBOX_TOKEN = 'YOUR_MAPBOX_TOKEN'; // À remplacer par une clé réelle dans un environnement de production\nconst mapStyle = 'mapbox://styles/mapbox/outdoors-v11';\n\n// Constantes pour les types de vues\nconst VIEW_TYPES = {\n  MAP_2D: '2d',\n  PROFILE: 'profile',\n  VIEW_3D: '3d'\n};\n\n// Composant principal pour la visualisation intégrée des cols\nconst PassVisualizer = ({ passId }) => {\n  const [passData, setPassData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeView, setActiveView] = useState(VIEW_TYPES.MAP_2D);\n  const [viewState, setViewState] = useState({\n    longitude: 2.3488,\n    latitude: 46.8534,\n    zoom: 9\n  });\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const [annotations, setAnnotations] = useState([]);\n\n  // Charger les données du col\n  useEffect(() => {\n    setLoading(true);\n    \n    // Récupérer les données de visualisation du col\n    axios.get(`/api/visualization/passes/${passId}/visualization`)\n      .then(response => {\n        if (response.data.status === 'success') {\n          setPassData(response.data.data);\n          \n          // Centrer la carte sur le col\n          if (response.data.data.coordinates) {\n            const middlePoint = Math.floor(response.data.data.coordinates.length / 2);\n            setViewState({\n              longitude: response.data.data.coordinates[middlePoint][0],\n              latitude: response.data.data.coordinates[middlePoint][1],\n              zoom: 12\n            });\n          }\n        } else {\n          setError('Erreur lors du chargement des données');\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des données du col:', err);\n        setError(`Erreur lors de la récupération des données: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [passId]);\n\n  // Préparer les données pour le graphique d'élévation\n  const prepareElevationData = () => {\n    if (!passData || !passData.elevationProfile) return [];\n    \n    return passData.elevationProfile.map(point => ({\n      distance: point[0],\n      elevation: point[1],\n      gradient: point[2] || 0\n    }));\n  };\n\n  // Gérer le clic sur un point du profil d'élévation\n  const handleProfilePointClick = (data) => {\n    setSelectedPoint(data);\n    \n    // Trouver les coordonnées correspondantes sur la carte pour centrer la vue\n    if (passData && passData.coordinates) {\n      const closestPoint = passData.coordinates.reduce((closest, point, index) => {\n        const distance = Math.abs(point[2] - data.distance);\n        if (distance < closest.distance) {\n          return { index, distance, coords: [point[0], point[1]] };\n        }\n        return closest;\n      }, { index: 0, distance: Infinity, coords: [0, 0] });\n      \n      // Centrer la carte sur ce point\n      setViewState({\n        ...viewState,\n        longitude: closestPoint.coords[0],\n        latitude: closestPoint.coords[1],\n        zoom: 14\n      });\n    }\n  };\n\n  // Gérer le changement de type de vue\n  const handleViewChange = (newView) => {\n    setActiveView(newView);\n  };\n\n  // Définir la couleur en fonction de la pente\n  const getColorForGradient = (gradient) => {\n    if (gradient <= 4) return '#4CAF50'; // Vert\n    if (gradient <= 7) return '#FFC107'; // Jaune\n    if (gradient <= 10) return '#FF9800'; // Orange\n    if (gradient <= 15) return '#F44336'; // Rouge\n    return '#9C27B0'; // Violet\n  };\n\n  if (loading) {\n    return <div className=\"pass-visualizer-loading\">Chargement des données...</div>;\n  }\n\n  if (error) {\n    return <div className=\"pass-visualizer-error\">Erreur: {error}</div>;\n  }\n\n  if (!passData) {\n    return <div className=\"pass-visualizer-error\">Aucune donnée disponible pour ce col</div>;\n  }\n\n  return (\n    <div className=\"pass-visualizer-container\">\n      <div className=\"pass-visualizer-header\">\n        <h2>{passData.name}</h2>\n        <div className=\"pass-visualizer-info\">\n          <div className=\"info-item\">\n            <span className=\"info-label\">Distance</span>\n            <span className=\"info-value\">{passData.length} km</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Dénivelé</span>\n            <span className=\"info-value\">{passData.summary?.elevationGain || 0} m</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Pente moyenne</span>\n            <span className=\"info-value\">{passData.summary?.averageGradient.toFixed(1) || 0}%</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Pente max</span>\n            <span className=\"info-value\">{passData.summary?.maxGradient.toFixed(1) || 0}%</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Difficulté</span>\n            <span className=\"info-value\">{passData.difficulty}</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"pass-visualizer-tabs\">\n        <button\n          className={activeView === VIEW_TYPES.MAP_2D ? 'active' : ''}\n          onClick={() => handleViewChange(VIEW_TYPES.MAP_2D)}\n        >\n          <i className=\"fas fa-map\"></i> Carte 2D\n        </button>\n        <button\n          className={activeView === VIEW_TYPES.PROFILE ? 'active' : ''}\n          onClick={() => handleViewChange(VIEW_TYPES.PROFILE)}\n        >\n          <i className=\"fas fa-chart-line\"></i> Profil d'élévation\n        </button>\n        <button\n          className={activeView === VIEW_TYPES.VIEW_3D ? 'active' : ''}\n          onClick={() => handleViewChange(VIEW_TYPES.VIEW_3D)}\n        >\n          <i className=\"fas fa-cube\"></i> Visualisation 3D\n        </button>\n      </div>\n      \n      <TransitionGroup>\n        <CSSTransition key={activeView} timeout={300} classNames=\"fade\">\n          <div className=\"pass-visualizer-content\">\n            {activeView === VIEW_TYPES.MAP_2D && (\n              <div className=\"pass-visualizer-map\">\n                <ReactMapGL\n                  {...viewState}\n                  onMove={evt => setViewState(evt.viewState)}\n                  style={{ width: '100%', height: '100%' }}\n                  mapStyle={mapStyle}\n                  mapboxAccessToken={MAPBOX_TOKEN}\n                >\n                  {/* Dans une implémentation réelle, nous ajouterions des couches\n                      pour visualiser le col sur la carte */}\n                  \n                  {/* Points d'intérêt */}\n                  {passData.keyPoints && passData.keyPoints.map((point, idx) => (\n                    <div \n                      key={idx}\n                      className=\"map-marker\"\n                      style={{\n                        left: `${point.x}px`,\n                        top: `${point.y}px`,\n                        backgroundColor: point.type === 'start' ? '#4CAF50' :\n                                         point.type === 'summit' ? '#F44336' :\n                                         '#2196F3'\n                      }}\n                    >\n                      <div className=\"map-marker-label\">{point.name}</div>\n                    </div>\n                  ))}\n                </ReactMapGL>\n                \n                {/* Légende */}\n                <div className=\"map-legend\">\n                  <h3>Légende</h3>\n                  <div className=\"legend-items\">\n                    {passData.colorScale && passData.colorScale.map((item, idx) => (\n                      <div key={idx} className=\"legend-item\">\n                        <span className=\"legend-color\" style={{ backgroundColor: item.color }}></span>\n                        <span className=\"legend-label\">{item.gradient} - {item.difficulty}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                {/* Annotations superposées */}\n                {annotations.map((annotation, idx) => (\n                  <div key={idx} className={`map-annotation ${annotation.type}`} style={{ left: annotation.x, top: annotation.y }}>\n                    <div className=\"annotation-marker\"></div>\n                    <div className=\"annotation-content\">\n                      <h4>{annotation.title}</h4>\n                      <p>{annotation.content}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {activeView === VIEW_TYPES.PROFILE && (\n              <div className=\"pass-visualizer-profile\">\n                <div className=\"profile-chart\">\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart\n                      data={prepareElevationData()}\n                      margin={{ top: 20, right: 30, left: 20, bottom: 30 }}\n                      onClick={(data) => {\n                        if (data && data.activePayload && data.activePayload[0]) {\n                          handleProfilePointClick(data.activePayload[0].payload);\n                        }\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis \n                        dataKey=\"distance\" \n                        label={{ value: 'Distance (km)', position: 'insideBottom', offset: -10 }} \n                      />\n                      <YAxis \n                        label={{ value: 'Altitude (m)', angle: -90, position: 'insideLeft' }} \n                      />\n                      <Tooltip \n                        formatter={(value, name, props) => {\n                          if (name === 'elevation') return [`${value} m`, 'Altitude'];\n                          if (name === 'gradient') return [`${value}%`, 'Pente'];\n                          return [value, name];\n                        }}\n                      />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"elevation\" \n                        stroke=\"#8884d8\" \n                        dot={false} \n                        strokeWidth={3} \n                        isAnimationActive={false} \n                      />\n                      {/* Ajouter des marques pour les segments colorés selon la pente */}\n                      {passData.segmentsByDifficulty && passData.segmentsByDifficulty.flatMap(diffCategory => \n                        diffCategory.segments.map((segment, idx) => (\n                          <Line \n                            key={`${diffCategory.difficulty}-${idx}`}\n                            type=\"monotone\" \n                            dataKey=\"elevation\" \n                            stroke={diffCategory.color} \n                            strokeWidth={5}\n                            dot={false}\n                            activeDot={false}\n                            isAnimationActive={false}\n                            name={`${diffCategory.difficulty} (${segment.avgGradient.toFixed(1)}%)`}\n                            // Dans une implémentation réelle, nous filtrerions les points pour n'inclure que ceux du segment\n                          />\n                        ))\n                      )}\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n                \n                {/* Informations sur le point sélectionné */}\n                {selectedPoint && (\n                  <div className=\"profile-point-info\">\n                    <h3>Point sélectionné</h3>\n                    <div className=\"point-details\">\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Distance</span>\n                        <span className=\"detail-value\">{selectedPoint.distance.toFixed(1)} km</span>\n                      </div>\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Altitude</span>\n                        <span className=\"detail-value\">{selectedPoint.elevation} m</span>\n                      </div>\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Pente</span>\n                        <span className=\"detail-value\">{selectedPoint.gradient.toFixed(1)}%</span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Segments clés */}\n                <div className=\"profile-key-segments\">\n                  <h3>Segments clés</h3>\n                  <div className=\"segments-list\">\n                    {passData.keyPoints && passData.keyPoints.filter(p => p.type === 'key_segment').map((segment, idx) => (\n                      <div key={idx} className={`segment-item severity-${segment.severity}`}>\n                        <div className=\"segment-header\">\n                          <h4>{segment.name}</h4>\n                          <span className=\"segment-gradient\">{segment.gradient.toFixed(1)}%</span>\n                        </div>\n                        <div className=\"segment-details\">\n                          <span>Du km {segment.distanceStart.toFixed(1)} au km {segment.distanceEnd.toFixed(1)}</span>\n                          <span>Longueur: {segment.length.toFixed(1)} km</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {activeView === VIEW_TYPES.VIEW_3D && (\n              <div className=\"pass-visualizer-3d\">\n                <Pass3DViewer passId={passId} />\n              </div>\n            )}\n          </div>\n        </CSSTransition>\n      </TransitionGroup>\n      \n      <div className=\"pass-visualizer-actions\">\n        <button className=\"btn-secondary\" onClick={() => window.history.back()}>\n          Retour à la liste\n        </button>\n        <button className=\"btn-primary\">\n          Ajouter à mon itinéraire\n        </button>\n        <button className=\"btn-secondary\">\n          Télécharger GPX\n        </button>\n        <button className=\"btn-secondary\">\n          Comparer avec un autre col\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PassVisualizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}