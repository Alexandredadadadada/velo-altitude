{"ast":null,"code":"/**\n * Service pour la gestion des données des cols cyclistes\n */import api from'./api';// Vérifier si nous utilisons les données mockées ou les API réelles\nconst USE_MOCK_DATA=process.env.REACT_APP_USE_MOCK_DATA==='true';// Données mockées des cols cyclistes\nconst mockCols=[{id:'col-1',name:'Col du Grand Ballon',elevation:1424,location:{lat:47.9019,lng:7.0958},difficulty:'Difficile',length:9.3,avgGradient:6.8,maxGradient:11.2,region:'Vosges',description:'Le Grand Ballon, plus haut sommet du massif des Vosges, offre une ascension exigeante avec des panoramas exceptionnels sur la plaine d\\'Alsace.',imageUrl:'https://www.cyclingcols.com/sites/default/files/col/Grand%20Ballon/grand%20ballon%20gravel.jpg',terrainData:{elevationProfile:[{distance:0,elevation:454},{distance:1,elevation:525},{distance:2,elevation:610},{distance:3,elevation:703},{distance:4,elevation:812},{distance:5,elevation:918},{distance:6,elevation:1049},{distance:7,elevation:1186},{distance:8,elevation:1320},{distance:9,elevation:1424}],// Coordonnées 3D approximatives pour la visualisation\ncoordinates3D:Array.from({length:100},(_,i)=>{const t=i/99;const distance=t*9.3;const elevation=454+t*(1424-454);const width=0.5*Math.sin(t*Math.PI);// Largeur de la route\nreturn{x:distance,// Distance horizontale\ny:elevation/100,// Élévation (échelle réduite pour la visualisation)\nz:width// Largeur de la route\n};}),// Points d'intérêt le long du col\npointsOfInterest:[{distance:2.3,type:'viewpoint',name:'Vue sur la Vallée de Guebwiller'},{distance:5.7,type:'rest',name:'Ferme-Auberge du Grand Ballon'},{distance:9.3,type:'summit',name:'Sommet du Grand Ballon'}]}},{id:'col-2',name:'Col de la Schlucht',elevation:1139,location:{lat:48.0565,lng:7.0094},difficulty:'Modéré',length:7.8,avgGradient:5.5,maxGradient:8.0,region:'Vosges',description:'Le Col de la Schlucht est l\\'un des cols les plus connus des Vosges, reliant la vallée de Kaysersberg à celle de Gérardmer, avec une route bien entretenue et des forêts luxuriantes.',imageUrl:'https://www.cyclingcols.com/sites/default/files/col/Schlucht/col%20de%20la%20schlucht_0.jpg',terrainData:{elevationProfile:[{distance:0,elevation:710},{distance:1,elevation:760},{distance:2,elevation:815},{distance:3,elevation:880},{distance:4,elevation:940},{distance:5,elevation:1000},{distance:6,elevation:1075},{distance:7,elevation:1120},{distance:7.8,elevation:1139}],// Coordonnées 3D approximatives pour la visualisation\ncoordinates3D:Array.from({length:100},(_,i)=>{const t=i/99;const distance=t*7.8;const elevation=710+t*(1139-710);const width=0.7*Math.sin(t*Math.PI);// Largeur de la route\nreturn{x:distance,// Distance horizontale\ny:elevation/100,// Élévation (échelle réduite pour la visualisation)\nz:width// Largeur de la route\n};}),// Points d'intérêt le long du col\npointsOfInterest:[{distance:2.5,type:'rest',name:'Auberge du Schantzwasen'},{distance:4.8,type:'viewpoint',name:'Point de vue sur les Vosges'},{distance:7.8,type:'summit',name:'Col de la Schlucht'}]}},{id:'col-3',name:'Col du Donon',elevation:727,location:{lat:48.5121,lng:7.1526},difficulty:'Facile',length:5.4,avgGradient:4.2,maxGradient:7.5,region:'Vosges',description:'Le Col du Donon est une ascension accessible offrant de beaux passages forestiers et des vues dégagées au sommet, dominé par le Temple du Donon.',imageUrl:'https://www.cyclingcols.com/sites/default/files/col/Donon/donon.jpg',terrainData:{elevationProfile:[{distance:0,elevation:500},{distance:1,elevation:540},{distance:2,elevation:580},{distance:3,elevation:630},{distance:4,elevation:670},{distance:5,elevation:710},{distance:5.4,elevation:727}],// Coordonnées 3D approximatives pour la visualisation\ncoordinates3D:Array.from({length:100},(_,i)=>{const t=i/99;const distance=t*5.4;const elevation=500+t*(727-500);const width=0.6*Math.sin(t*Math.PI);// Largeur de la route\nreturn{x:distance,// Distance horizontale\ny:elevation/100,// Élévation (échelle réduite pour la visualisation)\nz:width// Largeur de la route\n};}),// Points d'intérêt le long du col\npointsOfInterest:[{distance:1.8,type:'rest',name:'Aire de pique-nique'},{distance:3.5,type:'viewpoint',name:'Panorama sur la vallée'},{distance:5.4,type:'summit',name:'Temple du Donon'}]}}];const ColService={/**\n   * Récupère la liste des cols cyclistes\n   * @param {Object} options - Options de filtrage\n   * @returns {Promise<Array>} Liste des cols\n   */getAllCols:async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{if(USE_MOCK_DATA){console.log('Using mock data for cols');// Filtrer les cols selon les options\nlet filteredCols=[...mockCols];if(options.region){filteredCols=filteredCols.filter(col=>col.region===options.region);}if(options.difficulty){filteredCols=filteredCols.filter(col=>col.difficulty===options.difficulty);}if(options.minElevation){filteredCols=filteredCols.filter(col=>col.elevation>=options.minElevation);}if(options.maxElevation){filteredCols=filteredCols.filter(col=>col.elevation<=options.maxElevation);}if(options.surface&&options.surface.length>0){filteredCols=filteredCols.filter(col=>options.surface.some(s=>col.surface&&col.surface.toLowerCase().includes(s.toLowerCase())));}if(options.technicalDifficulty){filteredCols=filteredCols.filter(col=>col.technical_difficulty&&col.technical_difficulty.toString()===options.technicalDifficulty.toString());}if(options.seasons&&options.seasons.length>0){filteredCols=filteredCols.filter(col=>col.recommended_season&&options.seasons.some(s=>col.recommended_season.map(rs=>rs.toLowerCase()).includes(s.toLowerCase())));}// Simuler une latence réseau\nawait new Promise(resolve=>setTimeout(resolve,500));return filteredCols;}// Construire les paramètres de requête\nconst params=new URLSearchParams();if(options.region)params.append('region',options.region);if(options.difficulty)params.append('difficulty',options.difficulty);if(options.minElevation)params.append('minElevation',options.minElevation);if(options.maxElevation)params.append('maxElevation',options.maxElevation);if(options.surface&&options.surface.length>0){options.surface.forEach(surface=>{params.append('surface',surface.toLowerCase());});}if(options.technicalDifficulty)params.append('technicalDifficulty',options.technicalDifficulty);if(options.seasons&&options.seasons.length>0){options.seasons.forEach(season=>{params.append('season',season.toLowerCase());});}// Appel API réel\nconst response=await api.get(`/cols?${params.toString()}`);return response.data;}catch(error){console.error('Error fetching cols:',error);throw error;}},/**\n   * Récupère les détails d'un col spécifique\n   * @param {string} colId - ID du col\n   * @returns {Promise<Object>} Détails du col\n   */getColById:async colId=>{try{if(USE_MOCK_DATA){console.log(`Using mock data for col ${colId}`);const col=mockCols.find(c=>c.id===colId);if(!col){throw new Error(`Col with ID ${colId} not found`);}// Simuler une latence réseau\nawait new Promise(resolve=>setTimeout(resolve,300));return col;}// Appel API réel\nconst response=await api.get(`/cols/${colId}`);return response.data;}catch(error){console.error(`Error fetching col ${colId}:`,error);throw error;}},/**\n   * Récupère les données d'élévation d'un col pour le graphique\n   * @param {string} colId - ID du col\n   * @returns {Promise<Array>} Données d'élévation\n   */getColElevationData:async colId=>{try{if(USE_MOCK_DATA){console.log(`Using mock data for elevation profile of col ${colId}`);const col=mockCols.find(c=>c.id===colId);if(!col){throw new Error(`Col with ID ${colId} not found`);}// Simuler une latence réseau\nawait new Promise(resolve=>setTimeout(resolve,200));return col.terrainData.elevationProfile;}// Appel API réel\nconst response=await api.get(`/cols/${colId}/elevation`);return response.data;}catch(error){console.error(`Error fetching elevation data for col ${colId}:`,error);throw error;}},/**\n   * Récupère les données de terrain 3D d'un col pour la visualisation\n   * @param {string} colId - ID du col\n   * @returns {Promise<Object>} Données de terrain 3D\n   */getCol3DTerrainData:async colId=>{try{if(USE_MOCK_DATA){console.log(`Using mock data for 3D terrain of col ${colId}`);const col=mockCols.find(c=>c.id===colId);if(!col){throw new Error(`Col with ID ${colId} not found`);}// Simuler une latence réseau\nawait new Promise(resolve=>setTimeout(resolve,400));return{coordinates:col.terrainData.coordinates3D,pointsOfInterest:col.terrainData.pointsOfInterest};}// Appel API réel\nconst response=await api.get(`/cols/${colId}/terrain3d`);return response.data;}catch(error){console.error(`Error fetching 3D terrain data for col ${colId}:`,error);throw error;}}};export default ColService;","map":{"version":3,"names":["api","USE_MOCK_DATA","process","env","REACT_APP_USE_MOCK_DATA","mockCols","id","name","elevation","location","lat","lng","difficulty","length","avgGradient","maxGradient","region","description","imageUrl","terrainData","elevationProfile","distance","coordinates3D","Array","from","_","i","t","width","Math","sin","PI","x","y","z","pointsOfInterest","type","ColService","getAllCols","options","arguments","undefined","console","log","filteredCols","filter","col","minElevation","maxElevation","surface","some","s","toLowerCase","includes","technicalDifficulty","technical_difficulty","toString","seasons","recommended_season","map","rs","Promise","resolve","setTimeout","params","URLSearchParams","append","forEach","season","response","get","data","error","getColById","colId","find","c","Error","getColElevationData","getCol3DTerrainData","coordinates"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/services/colService.js"],"sourcesContent":["/**\n * Service pour la gestion des données des cols cyclistes\n */\nimport api from './api';\n\n// Vérifier si nous utilisons les données mockées ou les API réelles\nconst USE_MOCK_DATA = process.env.REACT_APP_USE_MOCK_DATA === 'true';\n\n// Données mockées des cols cyclistes\nconst mockCols = [\n  {\n    id: 'col-1',\n    name: 'Col du Grand Ballon',\n    elevation: 1424,\n    location: {\n      lat: 47.9019,\n      lng: 7.0958\n    },\n    difficulty: 'Difficile',\n    length: 9.3,\n    avgGradient: 6.8,\n    maxGradient: 11.2,\n    region: 'Vosges',\n    description: 'Le Grand Ballon, plus haut sommet du massif des Vosges, offre une ascension exigeante avec des panoramas exceptionnels sur la plaine d\\'Alsace.',\n    imageUrl: 'https://www.cyclingcols.com/sites/default/files/col/Grand%20Ballon/grand%20ballon%20gravel.jpg',\n    terrainData: {\n      elevationProfile: [\n        { distance: 0, elevation: 454 },\n        { distance: 1, elevation: 525 },\n        { distance: 2, elevation: 610 },\n        { distance: 3, elevation: 703 },\n        { distance: 4, elevation: 812 },\n        { distance: 5, elevation: 918 },\n        { distance: 6, elevation: 1049 },\n        { distance: 7, elevation: 1186 },\n        { distance: 8, elevation: 1320 },\n        { distance: 9, elevation: 1424 }\n      ],\n      // Coordonnées 3D approximatives pour la visualisation\n      coordinates3D: Array.from({ length: 100 }, (_, i) => {\n        const t = i / 99;\n        const distance = t * 9.3;\n        const elevation = 454 + t * (1424 - 454);\n        const width = 0.5 * Math.sin(t * Math.PI); // Largeur de la route\n        \n        return {\n          x: distance,  // Distance horizontale\n          y: elevation / 100,  // Élévation (échelle réduite pour la visualisation)\n          z: width      // Largeur de la route\n        };\n      }),\n      // Points d'intérêt le long du col\n      pointsOfInterest: [\n        { distance: 2.3, type: 'viewpoint', name: 'Vue sur la Vallée de Guebwiller' },\n        { distance: 5.7, type: 'rest', name: 'Ferme-Auberge du Grand Ballon' },\n        { distance: 9.3, type: 'summit', name: 'Sommet du Grand Ballon' }\n      ]\n    }\n  },\n  {\n    id: 'col-2',\n    name: 'Col de la Schlucht',\n    elevation: 1139,\n    location: {\n      lat: 48.0565,\n      lng: 7.0094\n    },\n    difficulty: 'Modéré',\n    length: 7.8,\n    avgGradient: 5.5,\n    maxGradient: 8.0,\n    region: 'Vosges',\n    description: 'Le Col de la Schlucht est l\\'un des cols les plus connus des Vosges, reliant la vallée de Kaysersberg à celle de Gérardmer, avec une route bien entretenue et des forêts luxuriantes.',\n    imageUrl: 'https://www.cyclingcols.com/sites/default/files/col/Schlucht/col%20de%20la%20schlucht_0.jpg',\n    terrainData: {\n      elevationProfile: [\n        { distance: 0, elevation: 710 },\n        { distance: 1, elevation: 760 },\n        { distance: 2, elevation: 815 },\n        { distance: 3, elevation: 880 },\n        { distance: 4, elevation: 940 },\n        { distance: 5, elevation: 1000 },\n        { distance: 6, elevation: 1075 },\n        { distance: 7, elevation: 1120 },\n        { distance: 7.8, elevation: 1139 }\n      ],\n      // Coordonnées 3D approximatives pour la visualisation\n      coordinates3D: Array.from({ length: 100 }, (_, i) => {\n        const t = i / 99;\n        const distance = t * 7.8;\n        const elevation = 710 + t * (1139 - 710);\n        const width = 0.7 * Math.sin(t * Math.PI); // Largeur de la route\n        \n        return {\n          x: distance,  // Distance horizontale\n          y: elevation / 100,  // Élévation (échelle réduite pour la visualisation)\n          z: width      // Largeur de la route\n        };\n      }),\n      // Points d'intérêt le long du col\n      pointsOfInterest: [\n        { distance: 2.5, type: 'rest', name: 'Auberge du Schantzwasen' },\n        { distance: 4.8, type: 'viewpoint', name: 'Point de vue sur les Vosges' },\n        { distance: 7.8, type: 'summit', name: 'Col de la Schlucht' }\n      ]\n    }\n  },\n  {\n    id: 'col-3',\n    name: 'Col du Donon',\n    elevation: 727,\n    location: {\n      lat: 48.5121,\n      lng: 7.1526\n    },\n    difficulty: 'Facile',\n    length: 5.4,\n    avgGradient: 4.2,\n    maxGradient: 7.5,\n    region: 'Vosges',\n    description: 'Le Col du Donon est une ascension accessible offrant de beaux passages forestiers et des vues dégagées au sommet, dominé par le Temple du Donon.',\n    imageUrl: 'https://www.cyclingcols.com/sites/default/files/col/Donon/donon.jpg',\n    terrainData: {\n      elevationProfile: [\n        { distance: 0, elevation: 500 },\n        { distance: 1, elevation: 540 },\n        { distance: 2, elevation: 580 },\n        { distance: 3, elevation: 630 },\n        { distance: 4, elevation: 670 },\n        { distance: 5, elevation: 710 },\n        { distance: 5.4, elevation: 727 }\n      ],\n      // Coordonnées 3D approximatives pour la visualisation\n      coordinates3D: Array.from({ length: 100 }, (_, i) => {\n        const t = i / 99;\n        const distance = t * 5.4;\n        const elevation = 500 + t * (727 - 500);\n        const width = 0.6 * Math.sin(t * Math.PI); // Largeur de la route\n        \n        return {\n          x: distance,  // Distance horizontale\n          y: elevation / 100,  // Élévation (échelle réduite pour la visualisation)\n          z: width      // Largeur de la route\n        };\n      }),\n      // Points d'intérêt le long du col\n      pointsOfInterest: [\n        { distance: 1.8, type: 'rest', name: 'Aire de pique-nique' },\n        { distance: 3.5, type: 'viewpoint', name: 'Panorama sur la vallée' },\n        { distance: 5.4, type: 'summit', name: 'Temple du Donon' }\n      ]\n    }\n  }\n];\n\nconst ColService = {\n  /**\n   * Récupère la liste des cols cyclistes\n   * @param {Object} options - Options de filtrage\n   * @returns {Promise<Array>} Liste des cols\n   */\n  getAllCols: async (options = {}) => {\n    try {\n      if (USE_MOCK_DATA) {\n        console.log('Using mock data for cols');\n        \n        // Filtrer les cols selon les options\n        let filteredCols = [...mockCols];\n        \n        if (options.region) {\n          filteredCols = filteredCols.filter(col => col.region === options.region);\n        }\n        \n        if (options.difficulty) {\n          filteredCols = filteredCols.filter(col => col.difficulty === options.difficulty);\n        }\n        \n        if (options.minElevation) {\n          filteredCols = filteredCols.filter(col => col.elevation >= options.minElevation);\n        }\n        \n        if (options.maxElevation) {\n          filteredCols = filteredCols.filter(col => col.elevation <= options.maxElevation);\n        }\n        \n        if (options.surface && options.surface.length > 0) {\n          filteredCols = filteredCols.filter(col => \n            options.surface.some(s => col.surface && col.surface.toLowerCase().includes(s.toLowerCase()))\n          );\n        }\n        \n        if (options.technicalDifficulty) {\n          filteredCols = filteredCols.filter(col => \n            col.technical_difficulty && col.technical_difficulty.toString() === options.technicalDifficulty.toString()\n          );\n        }\n        \n        if (options.seasons && options.seasons.length > 0) {\n          filteredCols = filteredCols.filter(col => \n            col.recommended_season && options.seasons.some(s => \n              col.recommended_season.map(rs => rs.toLowerCase()).includes(s.toLowerCase())\n            )\n          );\n        }\n        \n        // Simuler une latence réseau\n        await new Promise(resolve => setTimeout(resolve, 500));\n        return filteredCols;\n      }\n      \n      // Construire les paramètres de requête\n      const params = new URLSearchParams();\n      if (options.region) params.append('region', options.region);\n      if (options.difficulty) params.append('difficulty', options.difficulty);\n      if (options.minElevation) params.append('minElevation', options.minElevation);\n      if (options.maxElevation) params.append('maxElevation', options.maxElevation);\n      if (options.surface && options.surface.length > 0) {\n        options.surface.forEach(surface => {\n          params.append('surface', surface.toLowerCase());\n        });\n      }\n      if (options.technicalDifficulty) params.append('technicalDifficulty', options.technicalDifficulty);\n      if (options.seasons && options.seasons.length > 0) {\n        options.seasons.forEach(season => {\n          params.append('season', season.toLowerCase());\n        });\n      }\n      \n      // Appel API réel\n      const response = await api.get(`/cols?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching cols:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Récupère les détails d'un col spécifique\n   * @param {string} colId - ID du col\n   * @returns {Promise<Object>} Détails du col\n   */\n  getColById: async (colId) => {\n    try {\n      if (USE_MOCK_DATA) {\n        console.log(`Using mock data for col ${colId}`);\n        \n        const col = mockCols.find(c => c.id === colId);\n        if (!col) {\n          throw new Error(`Col with ID ${colId} not found`);\n        }\n        \n        // Simuler une latence réseau\n        await new Promise(resolve => setTimeout(resolve, 300));\n        return col;\n      }\n      \n      // Appel API réel\n      const response = await api.get(`/cols/${colId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching col ${colId}:`, error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Récupère les données d'élévation d'un col pour le graphique\n   * @param {string} colId - ID du col\n   * @returns {Promise<Array>} Données d'élévation\n   */\n  getColElevationData: async (colId) => {\n    try {\n      if (USE_MOCK_DATA) {\n        console.log(`Using mock data for elevation profile of col ${colId}`);\n        \n        const col = mockCols.find(c => c.id === colId);\n        if (!col) {\n          throw new Error(`Col with ID ${colId} not found`);\n        }\n        \n        // Simuler une latence réseau\n        await new Promise(resolve => setTimeout(resolve, 200));\n        return col.terrainData.elevationProfile;\n      }\n      \n      // Appel API réel\n      const response = await api.get(`/cols/${colId}/elevation`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching elevation data for col ${colId}:`, error);\n      throw error;\n    }\n  },\n  \n  /**\n   * Récupère les données de terrain 3D d'un col pour la visualisation\n   * @param {string} colId - ID du col\n   * @returns {Promise<Object>} Données de terrain 3D\n   */\n  getCol3DTerrainData: async (colId) => {\n    try {\n      if (USE_MOCK_DATA) {\n        console.log(`Using mock data for 3D terrain of col ${colId}`);\n        \n        const col = mockCols.find(c => c.id === colId);\n        if (!col) {\n          throw new Error(`Col with ID ${colId} not found`);\n        }\n        \n        // Simuler une latence réseau\n        await new Promise(resolve => setTimeout(resolve, 400));\n        return {\n          coordinates: col.terrainData.coordinates3D,\n          pointsOfInterest: col.terrainData.pointsOfInterest\n        };\n      }\n      \n      // Appel API réel\n      const response = await api.get(`/cols/${colId}/terrain3d`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching 3D terrain data for col ${colId}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default ColService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}