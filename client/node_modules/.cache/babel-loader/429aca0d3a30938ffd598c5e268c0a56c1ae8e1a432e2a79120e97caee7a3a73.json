{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Map,Source,Layer}from'react-map-gl';import'mapbox-gl/dist/mapbox-gl.css';import'./RouteAlternatives.css';// Constantes pour les styles de carte\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MAPBOX_TOKEN='YOUR_MAPBOX_TOKEN';// À remplacer par une clé réelle dans un environnement de production\nconst mapStyle='mapbox://styles/mapbox/outdoors-v11';// Icônes pour les conditions météo\nconst weatherIcons={rain:{icon:'🌧️',color:'#3498db',text:'Pluie'},wind:{icon:'💨',color:'#7f8c8d',text:'Vent'},cold:{icon:'❄️',color:'#9b59b6',text:'Froid'},heat:{icon:'🔥',color:'#e74c3c',text:'Chaleur'},storm:{icon:'⚡',color:'#f39c12',text:'Orage'}};// Composant pour les conditions météo\nconst WeatherConditions=_ref=>{let{issues}=_ref;if(!issues||issues.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"route-weather-conditions favorable\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"weather-icon\",children:\"\\u2600\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Conditions favorables\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Aucun probl\\xE8me m\\xE9t\\xE9o identifi\\xE9 pour cet itin\\xE9raire\"})]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"route-weather-conditions unfavorable\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"weather-icons\",children:issues.map((issue,index)=>{var _weatherIcons$issue$t,_weatherIcons$issue$t2;return/*#__PURE__*/_jsx(\"div\",{className:\"weather-icon\",style:{backgroundColor:(_weatherIcons$issue$t=weatherIcons[issue.type])===null||_weatherIcons$issue$t===void 0?void 0:_weatherIcons$issue$t.color},children:(_weatherIcons$issue$t2=weatherIcons[issue.type])===null||_weatherIcons$issue$t2===void 0?void 0:_weatherIcons$issue$t2.icon},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Conditions d\\xE9favorables\"}),/*#__PURE__*/_jsx(\"ul\",{children:issues.map((issue,index)=>/*#__PURE__*/_jsx(\"li\",{className:`severity-${issue.severity}`,children:issue.description},index))})]})]});};// Composant principal pour les itinéraires alternatifs\nconst RouteAlternatives=_ref2=>{let{routeId}=_ref2;const[alternatives,setAlternatives]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('weather');const[selectedRouteIndex,setSelectedRouteIndex]=useState(0);const[viewState,setViewState]=useState({longitude:2.3488,// Centre de la France\nlatitude:46.8534,zoom:6});// Simuler les conditions météo (dans une application réelle, ces données viendraient d'une API météo)\nconst[weatherConditions,setWeatherConditions]=useState({precipitation:18,temperature:28,windSpeed:35,stormRisk:false});// Profil utilisateur (dans une application réelle, ces données viendraient du profil authentifié)\nconst[userProfile,setUserProfile]=useState({level:'intermediate',// beginner, intermediate, advanced, expert\nwithChildren:false,preferences:['cultural','landscape']});// Charger les alternatives basées sur la météo\nuseEffect(()=>{setLoading(true);axios.get(`/api/route-alternatives/${routeId}/weather-alternatives`,{params:weatherConditions}).then(response=>{if(response.data.status==='success'){setAlternatives(prev=>({...prev,weather:response.data.data}));}else{console.error('Erreur dans la réponse:',response.data);}}).catch(err=>{console.error('Erreur lors de la récupération des alternatives météo:',err);setError(`Erreur lors de la récupération des alternatives: ${err.message}`);}).finally(()=>{setLoading(false);});},[routeId,weatherConditions]);// Charger les variantes basées sur le profil\nuseEffect(()=>{setLoading(true);axios.post(`/api/route-alternatives/${routeId}/profile-variants`,userProfile).then(response=>{if(response.data.status==='success'){setAlternatives(prev=>({...prev,profile:response.data.data}));}else{console.error('Erreur dans la réponse:',response.data);}}).catch(err=>{console.error('Erreur lors de la récupération des variantes de profil:',err);setError(`Erreur lors de la récupération des variantes: ${err.message}`);}).finally(()=>{setLoading(false);});},[routeId,userProfile]);// Fonction pour mettre à jour les conditions météo\nconst updateWeatherCondition=(condition,value)=>{setWeatherConditions(prev=>({...prev,[condition]:value}));};// Fonction pour mettre à jour le profil utilisateur\nconst updateUserProfile=(field,value)=>{setUserProfile(prev=>{if(field==='preferences'){// Si la préférence existe déjà, la retirer, sinon l'ajouter\nconst updatedPreferences=prev.preferences.includes(value)?prev.preferences.filter(pref=>pref!==value):[...prev.preferences,value];return{...prev,preferences:updatedPreferences};}return{...prev,[field]:value};});};// Sélectionner le bon tableau de routes à afficher selon l'onglet actif\nconst getRoutesToDisplay=()=>{if(!alternatives)return[];if(activeTab==='weather'){var _alternatives$weather,_alternatives$weather2;return[(_alternatives$weather=alternatives.weather)===null||_alternatives$weather===void 0?void 0:_alternatives$weather.originalRoute,...(((_alternatives$weather2=alternatives.weather)===null||_alternatives$weather2===void 0?void 0:_alternatives$weather2.alternatives)||[])].filter(Boolean);}if(activeTab==='profile'){var _alternatives$profile,_alternatives$profile2;return[(_alternatives$profile=alternatives.profile)===null||_alternatives$profile===void 0?void 0:_alternatives$profile.originalRoute,...(((_alternatives$profile2=alternatives.profile)===null||_alternatives$profile2===void 0?void 0:_alternatives$profile2.variants)||[])].filter(Boolean);}return[];};const routes=getRoutesToDisplay();const selectedRoute=routes[selectedRouteIndex]||null;// Centrer la carte sur l'itinéraire sélectionné\nuseEffect(()=>{if(selectedRoute&&selectedRoute.boundingBox){setViewState({longitude:(selectedRoute.boundingBox[0]+selectedRoute.boundingBox[2])/2,latitude:(selectedRoute.boundingBox[1]+selectedRoute.boundingBox[3])/2,zoom:10});}},[selectedRouteIndex,selectedRoute]);if(loading&&!alternatives){return/*#__PURE__*/_jsx(\"div\",{className:\"route-alternatives-loading\",children:\"Chargement des alternatives...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"route-alternatives-error\",children:[\"Erreur: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"route-alternatives-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"route-alternatives-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Alternatives d'itin\\xE9raires\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"route-alternatives-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:activeTab==='weather'?'active':'',onClick:()=>setActiveTab('weather'),children:\"Alternatives m\\xE9t\\xE9o\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='profile'?'active':'',onClick:()=>setActiveTab('profile'),children:\"Variantes de profil\"})]})]}),activeTab==='weather'&&/*#__PURE__*/_jsxs(\"div\",{className:\"weather-controls\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Conditions m\\xE9t\\xE9o actuelles\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-sliders\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"weather-slider\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Pr\\xE9cipitation (mm): \",weatherConditions.precipitation,\"mm\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"50\",value:weatherConditions.precipitation,onChange:e=>updateWeatherCondition('precipitation',parseInt(e.target.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-slider\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Temp\\xE9rature (\\xB0C): \",weatherConditions.temperature,\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"-10\",max:\"40\",value:weatherConditions.temperature,onChange:e=>updateWeatherCondition('temperature',parseInt(e.target.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-slider\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Vitesse du vent (km/h): \",weatherConditions.windSpeed,\"km/h\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"100\",value:weatherConditions.windSpeed,onChange:e=>updateWeatherCondition('windSpeed',parseInt(e.target.value))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"weather-checkbox\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:weatherConditions.stormRisk,onChange:e=>updateWeatherCondition('stormRisk',e.target.checked)}),\"Risque d'orage\"]})})]}),(alternatives===null||alternatives===void 0?void 0:alternatives.weather)&&/*#__PURE__*/_jsx(WeatherConditions,{issues:alternatives.weather.weatherIssues||[]})]}),activeTab==='profile'&&/*#__PURE__*/_jsxs(\"div\",{className:\"profile-controls\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Votre profil\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-selectors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Niveau\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-buttons\",children:['beginner','intermediate','advanced','expert'].map(level=>/*#__PURE__*/_jsx(\"button\",{className:userProfile.level===level?'active':'',onClick:()=>updateUserProfile('level',level),children:level==='beginner'?'Débutant':level==='intermediate'?'Intermédiaire':level==='advanced'?'Avancé':'Expert'},level))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Voyagez-vous avec des enfants?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:userProfile.withChildren?'active':'',onClick:()=>updateUserProfile('withChildren',true),children:\"Oui\"}),/*#__PURE__*/_jsx(\"button\",{className:!userProfile.withChildren?'active':'',onClick:()=>updateUserProfile('withChildren',false),children:\"Non\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pr\\xE9f\\xE9rences (s\\xE9lectionnez-en plusieurs)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-buttons\",children:[{id:'cultural',label:'Culture'},{id:'performance',label:'Performance'},{id:'relaxed',label:'Détente'},{id:'landscape',label:'Paysages'}].map(pref=>/*#__PURE__*/_jsx(\"button\",{className:userProfile.preferences.includes(pref.id)?'active':'',onClick:()=>updateUserProfile('preferences',pref.id),children:pref.label},pref.id))})]})]}),(alternatives===null||alternatives===void 0?void 0:alternatives.profile)&&/*#__PURE__*/_jsxs(\"div\",{className:\"recommended-profile\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Profil recommand\\xE9 pour vous: \"}),/*#__PURE__*/_jsx(\"span\",{className:\"recommended-type\",children:alternatives.profile.recommendedType==='sportive'?'Sportif':alternatives.profile.recommendedType==='touristic'?'Touristique':'Famille'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"route-comparison-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"route-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Itin\\xE9raires disponibles\"}),/*#__PURE__*/_jsx(\"div\",{className:\"route-buttons\",children:routes.map((route,index)=>/*#__PURE__*/_jsxs(\"button\",{className:`route-button ${selectedRouteIndex===index?'active':''} ${route.type||''}`,onClick:()=>setSelectedRouteIndex(index),children:[/*#__PURE__*/_jsx(\"span\",{className:\"route-name\",children:route.name}),route.reason&&/*#__PURE__*/_jsx(\"span\",{className:\"route-reason\",children:route.reason}),route.suitability&&/*#__PURE__*/_jsxs(\"div\",{className:\"route-suitability\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"suitability-bar\",style:{width:`${route.suitability.score}%`}}),/*#__PURE__*/_jsx(\"span\",{className:\"suitability-text\",children:route.suitability.description})]})]},route.id||index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"route-details\",children:selectedRoute?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"route-map\",children:/*#__PURE__*/_jsx(Map,{...viewState,onMove:evt=>setViewState(evt.viewState),style:{width:'100%',height:'100%'},mapStyle:mapStyle,mapboxAccessToken:MAPBOX_TOKEN})}),/*#__PURE__*/_jsxs(\"div\",{className:\"route-info-panel\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedRoute.name}),/*#__PURE__*/_jsx(\"p\",{children:selectedRoute.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"route-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Distance\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[selectedRoute.totalDistance,\" km\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"D\\xE9nivel\\xE9\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[selectedRoute.totalElevation,\" m\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Dur\\xE9e estim\\xE9e\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[Math.floor(selectedRoute.estimatedTime/60),\"h\",selectedRoute.estimatedTime%60?` ${selectedRoute.estimatedTime%60}min`:'']})]}),selectedRoute.difficultyChange&&/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Changement de difficult\\xE9\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:selectedRoute.difficultyChange})]})]}),selectedRoute.highlights&&selectedRoute.highlights.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"route-highlights\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Points forts\"}),/*#__PURE__*/_jsx(\"ul\",{children:selectedRoute.highlights.map((highlight,idx)=>/*#__PURE__*/_jsx(\"li\",{children:highlight},idx))})]}),selectedRoute.safetyPoints&&selectedRoute.safetyPoints.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"route-safety\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Points de s\\xE9curit\\xE9\"}),/*#__PURE__*/_jsx(\"ul\",{children:selectedRoute.safetyPoints.map((point,idx)=>/*#__PURE__*/_jsxs(\"li\",{children:[point.name,\" - \",point.description]},idx))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"route-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",children:\"Utiliser cet itin\\xE9raire\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",children:\"T\\xE9l\\xE9charger GPX\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",children:\"Voir d\\xE9tails\"})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-route-selected\",children:\"S\\xE9lectionnez un itin\\xE9raire pour voir ses d\\xE9tails\"})})]})]});};export default RouteAlternatives;","map":{"version":3,"names":["React","useState","useEffect","axios","Map","Source","Layer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MAPBOX_TOKEN","mapStyle","weatherIcons","rain","icon","color","text","wind","cold","heat","storm","WeatherConditions","_ref","issues","length","className","children","map","issue","index","_weatherIcons$issue$t","_weatherIcons$issue$t2","style","backgroundColor","type","severity","description","RouteAlternatives","_ref2","routeId","alternatives","setAlternatives","loading","setLoading","error","setError","activeTab","setActiveTab","selectedRouteIndex","setSelectedRouteIndex","viewState","setViewState","longitude","latitude","zoom","weatherConditions","setWeatherConditions","precipitation","temperature","windSpeed","stormRisk","userProfile","setUserProfile","level","withChildren","preferences","get","params","then","response","data","status","prev","weather","console","catch","err","message","finally","post","profile","updateWeatherCondition","condition","value","updateUserProfile","field","updatedPreferences","includes","filter","pref","getRoutesToDisplay","_alternatives$weather","_alternatives$weather2","originalRoute","Boolean","_alternatives$profile","_alternatives$profile2","variants","routes","selectedRoute","boundingBox","onClick","min","max","onChange","e","parseInt","target","checked","weatherIssues","id","label","recommendedType","route","name","reason","suitability","width","score","onMove","evt","height","mapboxAccessToken","totalDistance","totalElevation","Math","floor","estimatedTime","difficultyChange","highlights","highlight","idx","safetyPoints","point"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/visualization/RouteAlternatives.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, Source, Layer } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './RouteAlternatives.css';\n\n// Constantes pour les styles de carte\nconst MAPBOX_TOKEN = 'YOUR_MAPBOX_TOKEN'; // À remplacer par une clé réelle dans un environnement de production\nconst mapStyle = 'mapbox://styles/mapbox/outdoors-v11';\n\n// Icônes pour les conditions météo\nconst weatherIcons = {\n  rain: { icon: '🌧️', color: '#3498db', text: 'Pluie' },\n  wind: { icon: '💨', color: '#7f8c8d', text: 'Vent' },\n  cold: { icon: '❄️', color: '#9b59b6', text: 'Froid' },\n  heat: { icon: '🔥', color: '#e74c3c', text: 'Chaleur' },\n  storm: { icon: '⚡', color: '#f39c12', text: 'Orage' }\n};\n\n// Composant pour les conditions météo\nconst WeatherConditions = ({ issues }) => {\n  if (!issues || issues.length === 0) {\n    return (\n      <div className=\"route-weather-conditions favorable\">\n        <div className=\"weather-icon\">☀️</div>\n        <div className=\"weather-info\">\n          <h4>Conditions favorables</h4>\n          <p>Aucun problème météo identifié pour cet itinéraire</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"route-weather-conditions unfavorable\">\n      <div className=\"weather-icons\">\n        {issues.map((issue, index) => (\n          <div \n            key={index} \n            className=\"weather-icon\" \n            style={{ backgroundColor: weatherIcons[issue.type]?.color }}\n          >\n            {weatherIcons[issue.type]?.icon}\n          </div>\n        ))}\n      </div>\n      <div className=\"weather-info\">\n        <h4>Conditions défavorables</h4>\n        <ul>\n          {issues.map((issue, index) => (\n            <li key={index} className={`severity-${issue.severity}`}>{issue.description}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\n// Composant principal pour les itinéraires alternatifs\nconst RouteAlternatives = ({ routeId }) => {\n  const [alternatives, setAlternatives] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('weather');\n  const [selectedRouteIndex, setSelectedRouteIndex] = useState(0);\n  const [viewState, setViewState] = useState({\n    longitude: 2.3488,  // Centre de la France\n    latitude: 46.8534,\n    zoom: 6\n  });\n\n  // Simuler les conditions météo (dans une application réelle, ces données viendraient d'une API météo)\n  const [weatherConditions, setWeatherConditions] = useState({\n    precipitation: 18,\n    temperature: 28,\n    windSpeed: 35,\n    stormRisk: false\n  });\n\n  // Profil utilisateur (dans une application réelle, ces données viendraient du profil authentifié)\n  const [userProfile, setUserProfile] = useState({\n    level: 'intermediate', // beginner, intermediate, advanced, expert\n    withChildren: false,\n    preferences: ['cultural', 'landscape']\n  });\n\n  // Charger les alternatives basées sur la météo\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`/api/route-alternatives/${routeId}/weather-alternatives`, {\n      params: weatherConditions\n    })\n      .then(response => {\n        if (response.data.status === 'success') {\n          setAlternatives(prev => ({ ...prev, weather: response.data.data }));\n        } else {\n          console.error('Erreur dans la réponse:', response.data);\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des alternatives météo:', err);\n        setError(`Erreur lors de la récupération des alternatives: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [routeId, weatherConditions]);\n\n  // Charger les variantes basées sur le profil\n  useEffect(() => {\n    setLoading(true);\n    axios.post(`/api/route-alternatives/${routeId}/profile-variants`, userProfile)\n      .then(response => {\n        if (response.data.status === 'success') {\n          setAlternatives(prev => ({ ...prev, profile: response.data.data }));\n        } else {\n          console.error('Erreur dans la réponse:', response.data);\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des variantes de profil:', err);\n        setError(`Erreur lors de la récupération des variantes: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [routeId, userProfile]);\n\n  // Fonction pour mettre à jour les conditions météo\n  const updateWeatherCondition = (condition, value) => {\n    setWeatherConditions(prev => ({ ...prev, [condition]: value }));\n  };\n\n  // Fonction pour mettre à jour le profil utilisateur\n  const updateUserProfile = (field, value) => {\n    setUserProfile(prev => {\n      if (field === 'preferences') {\n        // Si la préférence existe déjà, la retirer, sinon l'ajouter\n        const updatedPreferences = prev.preferences.includes(value)\n          ? prev.preferences.filter(pref => pref !== value)\n          : [...prev.preferences, value];\n        \n        return { ...prev, preferences: updatedPreferences };\n      }\n      return { ...prev, [field]: value };\n    });\n  };\n\n  // Sélectionner le bon tableau de routes à afficher selon l'onglet actif\n  const getRoutesToDisplay = () => {\n    if (!alternatives) return [];\n    \n    if (activeTab === 'weather') {\n      return [\n        alternatives.weather?.originalRoute,\n        ...(alternatives.weather?.alternatives || [])\n      ].filter(Boolean);\n    }\n    \n    if (activeTab === 'profile') {\n      return [\n        alternatives.profile?.originalRoute,\n        ...(alternatives.profile?.variants || [])\n      ].filter(Boolean);\n    }\n    \n    return [];\n  };\n\n  const routes = getRoutesToDisplay();\n  const selectedRoute = routes[selectedRouteIndex] || null;\n\n  // Centrer la carte sur l'itinéraire sélectionné\n  useEffect(() => {\n    if (selectedRoute && selectedRoute.boundingBox) {\n      setViewState({\n        longitude: (selectedRoute.boundingBox[0] + selectedRoute.boundingBox[2]) / 2,\n        latitude: (selectedRoute.boundingBox[1] + selectedRoute.boundingBox[3]) / 2,\n        zoom: 10\n      });\n    }\n  }, [selectedRouteIndex, selectedRoute]);\n\n  if (loading && !alternatives) {\n    return <div className=\"route-alternatives-loading\">Chargement des alternatives...</div>;\n  }\n\n  if (error) {\n    return <div className=\"route-alternatives-error\">Erreur: {error}</div>;\n  }\n\n  return (\n    <div className=\"route-alternatives-container\">\n      <div className=\"route-alternatives-header\">\n        <h2>Alternatives d'itinéraires</h2>\n        <div className=\"route-alternatives-tabs\">\n          <button\n            className={activeTab === 'weather' ? 'active' : ''}\n            onClick={() => setActiveTab('weather')}\n          >\n            Alternatives météo\n          </button>\n          <button\n            className={activeTab === 'profile' ? 'active' : ''}\n            onClick={() => setActiveTab('profile')}\n          >\n            Variantes de profil\n          </button>\n        </div>\n      </div>\n\n      {activeTab === 'weather' && (\n        <div className=\"weather-controls\">\n          <h3>Conditions météo actuelles</h3>\n          <div className=\"weather-sliders\">\n            <div className=\"weather-slider\">\n              <label>Précipitation (mm): {weatherConditions.precipitation}mm</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"50\"\n                value={weatherConditions.precipitation}\n                onChange={(e) => updateWeatherCondition('precipitation', parseInt(e.target.value))}\n              />\n            </div>\n            <div className=\"weather-slider\">\n              <label>Température (°C): {weatherConditions.temperature}°C</label>\n              <input\n                type=\"range\"\n                min=\"-10\"\n                max=\"40\"\n                value={weatherConditions.temperature}\n                onChange={(e) => updateWeatherCondition('temperature', parseInt(e.target.value))}\n              />\n            </div>\n            <div className=\"weather-slider\">\n              <label>Vitesse du vent (km/h): {weatherConditions.windSpeed}km/h</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                value={weatherConditions.windSpeed}\n                onChange={(e) => updateWeatherCondition('windSpeed', parseInt(e.target.value))}\n              />\n            </div>\n            <div className=\"weather-checkbox\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={weatherConditions.stormRisk}\n                  onChange={(e) => updateWeatherCondition('stormRisk', e.target.checked)}\n                />\n                Risque d'orage\n              </label>\n            </div>\n          </div>\n\n          {alternatives?.weather && (\n            <WeatherConditions issues={alternatives.weather.weatherIssues || []} />\n          )}\n        </div>\n      )}\n\n      {activeTab === 'profile' && (\n        <div className=\"profile-controls\">\n          <h3>Votre profil</h3>\n          <div className=\"profile-selectors\">\n            <div className=\"profile-selector\">\n              <label>Niveau</label>\n              <div className=\"profile-buttons\">\n                {['beginner', 'intermediate', 'advanced', 'expert'].map(level => (\n                  <button\n                    key={level}\n                    className={userProfile.level === level ? 'active' : ''}\n                    onClick={() => updateUserProfile('level', level)}\n                  >\n                    {level === 'beginner' ? 'Débutant' : \n                     level === 'intermediate' ? 'Intermédiaire' :\n                     level === 'advanced' ? 'Avancé' : 'Expert'}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <div className=\"profile-selector\">\n              <label>Voyagez-vous avec des enfants?</label>\n              <div className=\"profile-buttons\">\n                <button\n                  className={userProfile.withChildren ? 'active' : ''}\n                  onClick={() => updateUserProfile('withChildren', true)}\n                >\n                  Oui\n                </button>\n                <button\n                  className={!userProfile.withChildren ? 'active' : ''}\n                  onClick={() => updateUserProfile('withChildren', false)}\n                >\n                  Non\n                </button>\n              </div>\n            </div>\n            <div className=\"profile-selector\">\n              <label>Préférences (sélectionnez-en plusieurs)</label>\n              <div className=\"profile-buttons\">\n                {[\n                  { id: 'cultural', label: 'Culture' },\n                  { id: 'performance', label: 'Performance' },\n                  { id: 'relaxed', label: 'Détente' },\n                  { id: 'landscape', label: 'Paysages' }\n                ].map(pref => (\n                  <button\n                    key={pref.id}\n                    className={userProfile.preferences.includes(pref.id) ? 'active' : ''}\n                    onClick={() => updateUserProfile('preferences', pref.id)}\n                  >\n                    {pref.label}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {alternatives?.profile && (\n            <div className=\"recommended-profile\">\n              <h4>Profil recommandé pour vous: </h4>\n              <span className=\"recommended-type\">\n                {alternatives.profile.recommendedType === 'sportive' ? 'Sportif' : \n                 alternatives.profile.recommendedType === 'touristic' ? 'Touristique' : 'Famille'}\n              </span>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"route-comparison-container\">\n        <div className=\"route-list\">\n          <h3>Itinéraires disponibles</h3>\n          <div className=\"route-buttons\">\n            {routes.map((route, index) => (\n              <button\n                key={route.id || index}\n                className={`route-button ${selectedRouteIndex === index ? 'active' : ''} ${route.type || ''}`}\n                onClick={() => setSelectedRouteIndex(index)}\n              >\n                <span className=\"route-name\">{route.name}</span>\n                {route.reason && <span className=\"route-reason\">{route.reason}</span>}\n                {route.suitability && (\n                  <div className=\"route-suitability\">\n                    <div className=\"suitability-bar\" style={{ width: `${route.suitability.score}%` }}></div>\n                    <span className=\"suitability-text\">{route.suitability.description}</span>\n                  </div>\n                )}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"route-details\">\n          {selectedRoute ? (\n            <>\n              <div className=\"route-map\">\n                <Map\n                  {...viewState}\n                  onMove={evt => setViewState(evt.viewState)}\n                  style={{ width: '100%', height: '100%' }}\n                  mapStyle={mapStyle}\n                  mapboxAccessToken={MAPBOX_TOKEN}\n                >\n                  {/* Dans une implémentation réelle, nous ajouterions des couches\n                      pour visualiser les itinéraires sur la carte */}\n                </Map>\n              </div>\n\n              <div className=\"route-info-panel\">\n                <h3>{selectedRoute.name}</h3>\n                <p>{selectedRoute.description}</p>\n                \n                <div className=\"route-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Distance</span>\n                    <span className=\"stat-value\">{selectedRoute.totalDistance} km</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Dénivelé</span>\n                    <span className=\"stat-value\">{selectedRoute.totalElevation} m</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Durée estimée</span>\n                    <span className=\"stat-value\">\n                      {Math.floor(selectedRoute.estimatedTime / 60)}h{selectedRoute.estimatedTime % 60 ? ` ${selectedRoute.estimatedTime % 60}min` : ''}\n                    </span>\n                  </div>\n                  {selectedRoute.difficultyChange && (\n                    <div className=\"stat-item\">\n                      <span className=\"stat-label\">Changement de difficulté</span>\n                      <span className=\"stat-value\">{selectedRoute.difficultyChange}</span>\n                    </div>\n                  )}\n                </div>\n\n                {selectedRoute.highlights && selectedRoute.highlights.length > 0 && (\n                  <div className=\"route-highlights\">\n                    <h4>Points forts</h4>\n                    <ul>\n                      {selectedRoute.highlights.map((highlight, idx) => (\n                        <li key={idx}>{highlight}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n\n                {selectedRoute.safetyPoints && selectedRoute.safetyPoints.length > 0 && (\n                  <div className=\"route-safety\">\n                    <h4>Points de sécurité</h4>\n                    <ul>\n                      {selectedRoute.safetyPoints.map((point, idx) => (\n                        <li key={idx}>{point.name} - {point.description}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                \n                <div className=\"route-actions\">\n                  <button className=\"btn-primary\">Utiliser cet itinéraire</button>\n                  <button className=\"btn-secondary\">Télécharger GPX</button>\n                  <button className=\"btn-secondary\">Voir détails</button>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"no-route-selected\">\n              Sélectionnez un itinéraire pour voir ses détails\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RouteAlternatives;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}