{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import Calendar from'react-calendar';import'react-calendar/dist/Calendar.css';/**\n * WorkoutPlanner component for scheduling and planning cycling workouts\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WorkoutPlanner=_ref=>{var _userProfile$preferen;let{userProfile,workouts,onSaveWorkout}=_ref;const{t}=useTranslation();const[selectedDate,setSelectedDate]=useState(new Date());const[plannedWorkouts,setPlannedWorkouts]=useState([]);const[workoutTemplates,setWorkoutTemplates]=useState([]);const[selectedTemplate,setSelectedTemplate]=useState(null);const[isAddingWorkout,setIsAddingWorkout]=useState(false);const[loading,setLoading]=useState(true);// Load workout templates and planned workouts\nuseEffect(()=>{const fetchData=async()=>{setLoading(true);try{// Mock delay for API call simulation\nawait new Promise(resolve=>setTimeout(resolve,300));// Generate templates based on user profile\nconst mockTemplates=generateWorkoutTemplates(userProfile);setWorkoutTemplates(mockTemplates);// Generate mock planned workouts\nconst mockPlannedWorkouts=generateMockPlannedWorkouts();setPlannedWorkouts(mockPlannedWorkouts);if(mockTemplates.length>0){setSelectedTemplate(mockTemplates[0]);}}catch(error){console.error('Error loading workout plans:',error);}finally{setLoading(false);}};fetchData();},[userProfile]);/**\n   * Generate workout templates based on user profile\n   */const generateWorkoutTemplates=profile=>{if(!profile)return[];const{level,ftp,preferences}=profile;const focusAreas=(preferences===null||preferences===void 0?void 0:preferences.focusAreas)||['endurance'];const templates=[{id:'recovery-ride',name:t('recoveryRide'),type:'recovery',description:t('recoveryRideDesc'),duration:30,intensity:'low',metrics:{targetPower:Math.round(ftp*0.6),targetHr:level==='beginner'?120:130}},{id:'endurance-ride',name:t('enduranceRide'),type:'endurance',description:t('enduranceRideDesc'),duration:90,intensity:'medium-low',metrics:{targetPower:Math.round(ftp*0.75),targetHr:level==='beginner'?130:140}},{id:'tempo-ride',name:t('tempoRide'),type:'endurance',description:t('tempoRideDesc'),duration:60,intensity:'medium',metrics:{targetPower:Math.round(ftp*0.85),targetHr:level==='beginner'?140:150}},{id:'sweet-spot',name:t('sweetSpot'),type:'hiit',description:t('sweetSpotDesc'),duration:75,intensity:'medium-high',metrics:{targetPower:Math.round(ftp*0.9),targetHr:level==='beginner'?150:160}},{id:'threshold',name:t('threshold'),type:'hiit',description:t('thresholdDesc'),duration:60,intensity:'high',metrics:{targetPower:Math.round(ftp*0.95),targetHr:level==='beginner'?160:170}},{id:'vo2max',name:t('vo2max'),type:'hiit',description:t('vo2maxDesc'),duration:45,intensity:'very-high',metrics:{targetPower:Math.round(ftp*1.1),targetHr:level==='beginner'?170:180}}];// Add specific focus area workouts\nif(focusAreas.includes('climbing')){templates.push({id:'climbing',name:t('climbingWorkout'),type:'hiit',description:t('climbingWorkoutDesc'),duration:60,intensity:'high',metrics:{targetPower:Math.round(ftp*0.93),targetHr:level==='beginner'?160:170}});}if(focusAreas.includes('sprinting')){templates.push({id:'sprint',name:t('sprintWorkout'),type:'hiit',description:t('sprintWorkoutDesc'),duration:45,intensity:'very-high',metrics:{targetPower:Math.round(ftp*1.3),targetHr:level==='beginner'?170:180}});}return templates;};/**\n   * Generate mock planned workouts\n   */const generateMockPlannedWorkouts=()=>{const today=new Date();const mockPlanned=[];// Add a few planned workouts in the future\nfor(let i=1;i<=10;i++){// Skip some days to make it look realistic\nif(i%3===0)continue;const futureDate=new Date();futureDate.setDate(today.getDate()+i);mockPlanned.push({id:`planned-${i}`,date:futureDate.toISOString().split('T')[0],templateId:i%5===0?'recovery-ride':i%4===0?'threshold':i%3===0?'endurance-ride':i%2===0?'sweet-spot':'tempo-ride',name:i%5===0?t('recoveryRide'):i%4===0?t('threshold'):i%3===0?t('enduranceRide'):i%2===0?t('sweetSpot'):t('tempoRide'),type:i%4===0||i%2===0?'hiit':'endurance',duration:i%5===0?30:i%3===0?90:60,notes:''});}return mockPlanned;};/**\n   * Handle date selection from calendar\n   */const handleDateChange=date=>{setSelectedDate(date);setIsAddingWorkout(false);};/**\n   * Handle template selection\n   */const handleTemplateSelect=template=>{setSelectedTemplate(template);};/**\n   * Start adding a new workout\n   */const handleAddWorkout=()=>{setIsAddingWorkout(true);};/**\n   * Save a planned workout for the selected date\n   */const handleSavePlannedWorkout=()=>{if(!selectedTemplate)return;const dateStr=selectedDate.toISOString().split('T')[0];const newPlannedWorkout={id:`planned-${Date.now()}`,date:dateStr,templateId:selectedTemplate.id,name:selectedTemplate.name,type:selectedTemplate.type,duration:selectedTemplate.duration,notes:document.getElementById('workout-notes').value||''};setPlannedWorkouts([...plannedWorkouts,newPlannedWorkout]);setIsAddingWorkout(false);};/**\n   * Remove a planned workout\n   */const handleRemoveWorkout=workoutId=>{setPlannedWorkouts(plannedWorkouts.filter(w=>w.id!==workoutId));};/**\n   * Start a workout now (convert planned to actual)\n   */const handleStartWorkout=workout=>{var _template$metrics,_template$metrics2,_template$metrics3,_template$metrics4,_template$metrics5;const template=workoutTemplates.find(t=>t.id===workout.templateId);if(!template)return;// Create an actual workout from the planned one\nconst actualWorkout={type:workout.type,templateId:workout.templateId,name:workout.name,duration:workout.duration,tss:Math.round(workout.duration*(((_template$metrics=template.metrics)===null||_template$metrics===void 0?void 0:_template$metrics.targetPower)/((userProfile===null||userProfile===void 0?void 0:userProfile.ftp)||200))*100/60),metrics:{averagePower:((_template$metrics2=template.metrics)===null||_template$metrics2===void 0?void 0:_template$metrics2.targetPower)||200,normalizedPower:Math.round((((_template$metrics3=template.metrics)===null||_template$metrics3===void 0?void 0:_template$metrics3.targetPower)||200)*1.05),averageHr:((_template$metrics4=template.metrics)===null||_template$metrics4===void 0?void 0:_template$metrics4.targetHr)||150,maxHr:Math.round((((_template$metrics5=template.metrics)===null||_template$metrics5===void 0?void 0:_template$metrics5.targetHr)||150)*1.1),calories:Math.round(workout.duration*10),elevation:0},intervals:[]};// Add intervals if it's a HIIT workout\nif(workout.type==='hiit'){var _template$metrics6,_template$metrics7,_template$metrics8;actualWorkout.intervals=[{power:Math.round(((_template$metrics6=template.metrics)===null||_template$metrics6===void 0?void 0:_template$metrics6.targetPower)*1.1),duration:180,rest:120},{power:Math.round(((_template$metrics7=template.metrics)===null||_template$metrics7===void 0?void 0:_template$metrics7.targetPower)*1.15),duration:180,rest:120},{power:Math.round(((_template$metrics8=template.metrics)===null||_template$metrics8===void 0?void 0:_template$metrics8.targetPower)*1.2),duration:180,rest:120}];}onSaveWorkout(actualWorkout);// Remove from planned workouts\nhandleRemoveWorkout(workout.id);alert(t('workoutStarted'));};/**\n   * Get workouts for the selected date\n   */const getWorkoutsForDate=date=>{const dateStr=date.toISOString().split('T')[0];return plannedWorkouts.filter(w=>w.date===dateStr);};/**\n   * Render calendar tile contents\n   */const tileContent=_ref2=>{let{date,view}=_ref2;if(view!=='month')return null;const dateWorkouts=getWorkoutsForDate(date);if(dateWorkouts.length===0)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"workout-date-indicator\",children:dateWorkouts.map((workout,index)=>/*#__PURE__*/_jsx(\"div\",{className:`workout-indicator ${workout.type}`,title:workout.name},index))});};/**\n   * Get class for intensity level\n   */const getIntensityClass=intensity=>{switch(intensity){case'low':return'intensity-low';case'medium-low':return'intensity-medium-low';case'medium':return'intensity-medium';case'medium-high':return'intensity-medium-high';case'high':return'intensity-high';case'very-high':return'intensity-very-high';default:return'intensity-medium';}};// Loading state\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"workout-planner-loading\",children:t('loadingWorkoutPlanner')});}// Selected date in ISO format for comparison\nconst selectedDateStr=selectedDate.toISOString().split('T')[0];// Workouts for the selected date\nconst dateWorkouts=plannedWorkouts.filter(w=>w.date===selectedDateStr);return/*#__PURE__*/_jsxs(\"div\",{className:\"workout-planner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"planner-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"planner-calendar\",children:/*#__PURE__*/_jsx(Calendar,{onChange:handleDateChange,value:selectedDate,tileContent:tileContent,minDate:new Date()})}),/*#__PURE__*/_jsxs(\"div\",{className:\"planner-details\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[t('selectedDate'),\": \",selectedDateStr]}),dateWorkouts.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-workouts\",children:[/*#__PURE__*/_jsx(\"p\",{children:t('noWorkoutsPlanned')}),/*#__PURE__*/_jsxs(\"button\",{className:\"add-workout-button\",onClick:handleAddWorkout,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\" \",t('addWorkout')]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"date-workouts\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('plannedWorkouts')}),dateWorkouts.map((workout,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"planned-workout-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"workout-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:workout.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"workout-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"start-workout-button\",onClick:()=>handleStartWorkout(workout),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-play\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-workout-button\",onClick:()=>handleRemoveWorkout(workout.id),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"workout-type\",children:t(workout.type)}),/*#__PURE__*/_jsxs(\"div\",{className:\"workout-duration\",children:[workout.duration,\" \",t('min')]}),workout.notes&&/*#__PURE__*/_jsx(\"div\",{className:\"workout-notes\",children:workout.notes})]},index)),/*#__PURE__*/_jsxs(\"button\",{className:\"add-workout-button\",onClick:handleAddWorkout,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\" \",t('addAnotherWorkout')]})]}),isAddingWorkout&&/*#__PURE__*/_jsxs(\"div\",{className:\"add-workout-form\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[t('addWorkoutTo'),\" \",selectedDateStr]}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-selector\",children:[/*#__PURE__*/_jsx(\"h5\",{children:t('selectWorkoutTemplate')}),/*#__PURE__*/_jsx(\"div\",{className:\"templates-grid\",children:workoutTemplates.map((template,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`template-card ${(selectedTemplate===null||selectedTemplate===void 0?void 0:selectedTemplate.id)===template.id?'selected':''} ${template.type}`,onClick:()=>handleTemplateSelect(template),children:[/*#__PURE__*/_jsx(\"h5\",{children:template.name}),/*#__PURE__*/_jsx(\"div\",{className:`template-intensity ${getIntensityClass(template.intensity)}`,children:t(template.intensity)}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-duration\",children:[template.duration,\" \",t('min')]})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"workout-notes-input\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"workout-notes\",children:[t('workoutNotes'),\":\"]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"workout-notes\",rows:\"3\",placeholder:t('enterNotesPlaceholder')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"save-workout-button\",onClick:handleSavePlannedWorkout,disabled:!selectedTemplate,children:t('savePlannedWorkout')}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:()=>setIsAddingWorkout(false),children:t('cancel')})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"training-recommendations\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('trainingRecommendations')}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('weeklyTraining')}),/*#__PURE__*/_jsx(\"p\",{children:t('weeklyTrainingRecommendation')}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[t('hiitSessions'),\": 2-3\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[t('enduranceSessions'),\": 1-2\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[t('recoverySessions'),\": 1\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[t('restDays'),\": 2\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('monthlyCycle')}),/*#__PURE__*/_jsx(\"p\",{children:t('monthlyCycleRecommendation')}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[t('week1'),\": \",t('buildPhase')]}),/*#__PURE__*/_jsxs(\"li\",{children:[t('week2'),\": \",t('intensityPhase')]}),/*#__PURE__*/_jsxs(\"li\",{children:[t('week3'),\": \",t('peakPhase')]}),/*#__PURE__*/_jsxs(\"li\",{children:[t('week4'),\": \",t('recoveryPhase')]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('focusAreas')}),/*#__PURE__*/_jsx(\"p\",{children:t('basedOnProfile')}),/*#__PURE__*/_jsx(\"ul\",{children:userProfile===null||userProfile===void 0?void 0:(_userProfile$preferen=userProfile.preferences)===null||_userProfile$preferen===void 0?void 0:_userProfile$preferen.focusAreas.map((area,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[t(area),\": \",t(`${area}Recommendation`)]},index))})]})]})]})]});};export default WorkoutPlanner;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","Calendar","jsx","_jsx","jsxs","_jsxs","WorkoutPlanner","_ref","_userProfile$preferen","userProfile","workouts","onSaveWorkout","t","selectedDate","setSelectedDate","Date","plannedWorkouts","setPlannedWorkouts","workoutTemplates","setWorkoutTemplates","selectedTemplate","setSelectedTemplate","isAddingWorkout","setIsAddingWorkout","loading","setLoading","fetchData","Promise","resolve","setTimeout","mockTemplates","generateWorkoutTemplates","mockPlannedWorkouts","generateMockPlannedWorkouts","length","error","console","profile","level","ftp","preferences","focusAreas","templates","id","name","type","description","duration","intensity","metrics","targetPower","Math","round","targetHr","includes","push","today","mockPlanned","i","futureDate","setDate","getDate","date","toISOString","split","templateId","notes","handleDateChange","handleTemplateSelect","template","handleAddWorkout","handleSavePlannedWorkout","dateStr","newPlannedWorkout","now","document","getElementById","value","handleRemoveWorkout","workoutId","filter","w","handleStartWorkout","workout","_template$metrics","_template$metrics2","_template$metrics3","_template$metrics4","_template$metrics5","find","actualWorkout","tss","averagePower","normalizedPower","averageHr","maxHr","calories","elevation","intervals","_template$metrics6","_template$metrics7","_template$metrics8","power","rest","alert","getWorkoutsForDate","tileContent","_ref2","view","dateWorkouts","className","children","map","index","title","getIntensityClass","selectedDateStr","onChange","minDate","onClick","htmlFor","rows","placeholder","disabled","area"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/training/WorkoutPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\n/**\n * WorkoutPlanner component for scheduling and planning cycling workouts\n */\nconst WorkoutPlanner = ({ userProfile, workouts, onSaveWorkout }) => {\n  const { t } = useTranslation();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [plannedWorkouts, setPlannedWorkouts] = useState([]);\n  const [workoutTemplates, setWorkoutTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [isAddingWorkout, setIsAddingWorkout] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Load workout templates and planned workouts\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      \n      try {\n        // Mock delay for API call simulation\n        await new Promise(resolve => setTimeout(resolve, 300));\n        \n        // Generate templates based on user profile\n        const mockTemplates = generateWorkoutTemplates(userProfile);\n        setWorkoutTemplates(mockTemplates);\n        \n        // Generate mock planned workouts\n        const mockPlannedWorkouts = generateMockPlannedWorkouts();\n        setPlannedWorkouts(mockPlannedWorkouts);\n        \n        if (mockTemplates.length > 0) {\n          setSelectedTemplate(mockTemplates[0]);\n        }\n      } catch (error) {\n        console.error('Error loading workout plans:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [userProfile]);\n  \n  /**\n   * Generate workout templates based on user profile\n   */\n  const generateWorkoutTemplates = (profile) => {\n    if (!profile) return [];\n    \n    const { level, ftp, preferences } = profile;\n    const focusAreas = preferences?.focusAreas || ['endurance'];\n    \n    const templates = [\n      {\n        id: 'recovery-ride',\n        name: t('recoveryRide'),\n        type: 'recovery',\n        description: t('recoveryRideDesc'),\n        duration: 30,\n        intensity: 'low',\n        metrics: {\n          targetPower: Math.round(ftp * 0.6),\n          targetHr: level === 'beginner' ? 120 : 130\n        }\n      },\n      {\n        id: 'endurance-ride',\n        name: t('enduranceRide'),\n        type: 'endurance',\n        description: t('enduranceRideDesc'),\n        duration: 90,\n        intensity: 'medium-low',\n        metrics: {\n          targetPower: Math.round(ftp * 0.75),\n          targetHr: level === 'beginner' ? 130 : 140\n        }\n      },\n      {\n        id: 'tempo-ride',\n        name: t('tempoRide'),\n        type: 'endurance',\n        description: t('tempoRideDesc'),\n        duration: 60,\n        intensity: 'medium',\n        metrics: {\n          targetPower: Math.round(ftp * 0.85),\n          targetHr: level === 'beginner' ? 140 : 150\n        }\n      },\n      {\n        id: 'sweet-spot',\n        name: t('sweetSpot'),\n        type: 'hiit',\n        description: t('sweetSpotDesc'),\n        duration: 75,\n        intensity: 'medium-high',\n        metrics: {\n          targetPower: Math.round(ftp * 0.9),\n          targetHr: level === 'beginner' ? 150 : 160\n        }\n      },\n      {\n        id: 'threshold',\n        name: t('threshold'),\n        type: 'hiit',\n        description: t('thresholdDesc'),\n        duration: 60,\n        intensity: 'high',\n        metrics: {\n          targetPower: Math.round(ftp * 0.95),\n          targetHr: level === 'beginner' ? 160 : 170\n        }\n      },\n      {\n        id: 'vo2max',\n        name: t('vo2max'),\n        type: 'hiit',\n        description: t('vo2maxDesc'),\n        duration: 45,\n        intensity: 'very-high',\n        metrics: {\n          targetPower: Math.round(ftp * 1.1),\n          targetHr: level === 'beginner' ? 170 : 180\n        }\n      }\n    ];\n    \n    // Add specific focus area workouts\n    if (focusAreas.includes('climbing')) {\n      templates.push({\n        id: 'climbing',\n        name: t('climbingWorkout'),\n        type: 'hiit',\n        description: t('climbingWorkoutDesc'),\n        duration: 60,\n        intensity: 'high',\n        metrics: {\n          targetPower: Math.round(ftp * 0.93),\n          targetHr: level === 'beginner' ? 160 : 170\n        }\n      });\n    }\n    \n    if (focusAreas.includes('sprinting')) {\n      templates.push({\n        id: 'sprint',\n        name: t('sprintWorkout'),\n        type: 'hiit',\n        description: t('sprintWorkoutDesc'),\n        duration: 45,\n        intensity: 'very-high',\n        metrics: {\n          targetPower: Math.round(ftp * 1.3),\n          targetHr: level === 'beginner' ? 170 : 180\n        }\n      });\n    }\n    \n    return templates;\n  };\n  \n  /**\n   * Generate mock planned workouts\n   */\n  const generateMockPlannedWorkouts = () => {\n    const today = new Date();\n    const mockPlanned = [];\n    \n    // Add a few planned workouts in the future\n    for (let i = 1; i <= 10; i++) {\n      // Skip some days to make it look realistic\n      if (i % 3 === 0) continue;\n      \n      const futureDate = new Date();\n      futureDate.setDate(today.getDate() + i);\n      \n      mockPlanned.push({\n        id: `planned-${i}`,\n        date: futureDate.toISOString().split('T')[0],\n        templateId: i % 5 === 0 ? 'recovery-ride' : \n                  i % 4 === 0 ? 'threshold' : \n                  i % 3 === 0 ? 'endurance-ride' : \n                  i % 2 === 0 ? 'sweet-spot' : 'tempo-ride',\n        name: i % 5 === 0 ? t('recoveryRide') : \n              i % 4 === 0 ? t('threshold') : \n              i % 3 === 0 ? t('enduranceRide') : \n              i % 2 === 0 ? t('sweetSpot') : t('tempoRide'),\n        type: i % 4 === 0 || i % 2 === 0 ? 'hiit' : 'endurance',\n        duration: i % 5 === 0 ? 30 : \n                 i % 3 === 0 ? 90 : 60,\n        notes: ''\n      });\n    }\n    \n    return mockPlanned;\n  };\n  \n  /**\n   * Handle date selection from calendar\n   */\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setIsAddingWorkout(false);\n  };\n  \n  /**\n   * Handle template selection\n   */\n  const handleTemplateSelect = (template) => {\n    setSelectedTemplate(template);\n  };\n  \n  /**\n   * Start adding a new workout\n   */\n  const handleAddWorkout = () => {\n    setIsAddingWorkout(true);\n  };\n  \n  /**\n   * Save a planned workout for the selected date\n   */\n  const handleSavePlannedWorkout = () => {\n    if (!selectedTemplate) return;\n    \n    const dateStr = selectedDate.toISOString().split('T')[0];\n    \n    const newPlannedWorkout = {\n      id: `planned-${Date.now()}`,\n      date: dateStr,\n      templateId: selectedTemplate.id,\n      name: selectedTemplate.name,\n      type: selectedTemplate.type,\n      duration: selectedTemplate.duration,\n      notes: document.getElementById('workout-notes').value || ''\n    };\n    \n    setPlannedWorkouts([...plannedWorkouts, newPlannedWorkout]);\n    setIsAddingWorkout(false);\n  };\n  \n  /**\n   * Remove a planned workout\n   */\n  const handleRemoveWorkout = (workoutId) => {\n    setPlannedWorkouts(plannedWorkouts.filter(w => w.id !== workoutId));\n  };\n  \n  /**\n   * Start a workout now (convert planned to actual)\n   */\n  const handleStartWorkout = (workout) => {\n    const template = workoutTemplates.find(t => t.id === workout.templateId);\n    \n    if (!template) return;\n    \n    // Create an actual workout from the planned one\n    const actualWorkout = {\n      type: workout.type,\n      templateId: workout.templateId,\n      name: workout.name,\n      duration: workout.duration,\n      tss: Math.round(workout.duration * (template.metrics?.targetPower / (userProfile?.ftp || 200)) * 100 / 60),\n      metrics: {\n        averagePower: template.metrics?.targetPower || 200,\n        normalizedPower: Math.round((template.metrics?.targetPower || 200) * 1.05),\n        averageHr: template.metrics?.targetHr || 150,\n        maxHr: Math.round((template.metrics?.targetHr || 150) * 1.1),\n        calories: Math.round(workout.duration * 10),\n        elevation: 0\n      },\n      intervals: []\n    };\n    \n    // Add intervals if it's a HIIT workout\n    if (workout.type === 'hiit') {\n      actualWorkout.intervals = [\n        { power: Math.round(template.metrics?.targetPower * 1.1), duration: 180, rest: 120 },\n        { power: Math.round(template.metrics?.targetPower * 1.15), duration: 180, rest: 120 },\n        { power: Math.round(template.metrics?.targetPower * 1.2), duration: 180, rest: 120 }\n      ];\n    }\n    \n    onSaveWorkout(actualWorkout);\n    \n    // Remove from planned workouts\n    handleRemoveWorkout(workout.id);\n    \n    alert(t('workoutStarted'));\n  };\n  \n  /**\n   * Get workouts for the selected date\n   */\n  const getWorkoutsForDate = (date) => {\n    const dateStr = date.toISOString().split('T')[0];\n    return plannedWorkouts.filter(w => w.date === dateStr);\n  };\n  \n  /**\n   * Render calendar tile contents\n   */\n  const tileContent = ({ date, view }) => {\n    if (view !== 'month') return null;\n    \n    const dateWorkouts = getWorkoutsForDate(date);\n    \n    if (dateWorkouts.length === 0) return null;\n    \n    return (\n      <div className=\"workout-date-indicator\">\n        {dateWorkouts.map((workout, index) => (\n          <div \n            key={index} \n            className={`workout-indicator ${workout.type}`}\n            title={workout.name}\n          />\n        ))}\n      </div>\n    );\n  };\n  \n  /**\n   * Get class for intensity level\n   */\n  const getIntensityClass = (intensity) => {\n    switch (intensity) {\n      case 'low': return 'intensity-low';\n      case 'medium-low': return 'intensity-medium-low';\n      case 'medium': return 'intensity-medium';\n      case 'medium-high': return 'intensity-medium-high';\n      case 'high': return 'intensity-high';\n      case 'very-high': return 'intensity-very-high';\n      default: return 'intensity-medium';\n    }\n  };\n  \n  // Loading state\n  if (loading) {\n    return <div className=\"workout-planner-loading\">{t('loadingWorkoutPlanner')}</div>;\n  }\n  \n  // Selected date in ISO format for comparison\n  const selectedDateStr = selectedDate.toISOString().split('T')[0];\n  \n  // Workouts for the selected date\n  const dateWorkouts = plannedWorkouts.filter(w => w.date === selectedDateStr);\n  \n  return (\n    <div className=\"workout-planner\">\n      <div className=\"planner-main\">\n        <div className=\"planner-calendar\">\n          <Calendar\n            onChange={handleDateChange}\n            value={selectedDate}\n            tileContent={tileContent}\n            minDate={new Date()}\n          />\n        </div>\n        \n        <div className=\"planner-details\">\n          <h3>{t('selectedDate')}: {selectedDateStr}</h3>\n          \n          {dateWorkouts.length === 0 ? (\n            <div className=\"no-workouts\">\n              <p>{t('noWorkoutsPlanned')}</p>\n              <button \n                className=\"add-workout-button\"\n                onClick={handleAddWorkout}\n              >\n                <i className=\"fas fa-plus\"></i> {t('addWorkout')}\n              </button>\n            </div>\n          ) : (\n            <div className=\"date-workouts\">\n              <h4>{t('plannedWorkouts')}</h4>\n              {dateWorkouts.map((workout, index) => (\n                <div key={index} className=\"planned-workout-card\">\n                  <div className=\"workout-header\">\n                    <h5>{workout.name}</h5>\n                    <div className=\"workout-actions\">\n                      <button \n                        className=\"start-workout-button\"\n                        onClick={() => handleStartWorkout(workout)}\n                      >\n                        <i className=\"fas fa-play\"></i>\n                      </button>\n                      <button \n                        className=\"remove-workout-button\"\n                        onClick={() => handleRemoveWorkout(workout.id)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"workout-type\">{t(workout.type)}</div>\n                  <div className=\"workout-duration\">{workout.duration} {t('min')}</div>\n                  {workout.notes && <div className=\"workout-notes\">{workout.notes}</div>}\n                </div>\n              ))}\n              \n              <button \n                className=\"add-workout-button\"\n                onClick={handleAddWorkout}\n              >\n                <i className=\"fas fa-plus\"></i> {t('addAnotherWorkout')}\n              </button>\n            </div>\n          )}\n          \n          {isAddingWorkout && (\n            <div className=\"add-workout-form\">\n              <h4>{t('addWorkoutTo')} {selectedDateStr}</h4>\n              \n              <div className=\"template-selector\">\n                <h5>{t('selectWorkoutTemplate')}</h5>\n                <div className=\"templates-grid\">\n                  {workoutTemplates.map((template, index) => (\n                    <div \n                      key={index}\n                      className={`template-card ${selectedTemplate?.id === template.id ? 'selected' : ''} ${template.type}`}\n                      onClick={() => handleTemplateSelect(template)}\n                    >\n                      <h5>{template.name}</h5>\n                      <div className={`template-intensity ${getIntensityClass(template.intensity)}`}>\n                        {t(template.intensity)}\n                      </div>\n                      <div className=\"template-duration\">{template.duration} {t('min')}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"workout-notes-input\">\n                <label htmlFor=\"workout-notes\">{t('workoutNotes')}:</label>\n                <textarea \n                  id=\"workout-notes\" \n                  rows=\"3\" \n                  placeholder={t('enterNotesPlaceholder')}\n                ></textarea>\n              </div>\n              \n              <div className=\"form-actions\">\n                <button \n                  className=\"save-workout-button\"\n                  onClick={handleSavePlannedWorkout}\n                  disabled={!selectedTemplate}\n                >\n                  {t('savePlannedWorkout')}\n                </button>\n                <button \n                  className=\"cancel-button\"\n                  onClick={() => setIsAddingWorkout(false)}\n                >\n                  {t('cancel')}\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"training-recommendations\">\n        <h3>{t('trainingRecommendations')}</h3>\n        <div className=\"recommendation-cards\">\n          <div className=\"recommendation-card\">\n            <h4>{t('weeklyTraining')}</h4>\n            <p>{t('weeklyTrainingRecommendation')}</p>\n            <ul>\n              <li>{t('hiitSessions')}: 2-3</li>\n              <li>{t('enduranceSessions')}: 1-2</li>\n              <li>{t('recoverySessions')}: 1</li>\n              <li>{t('restDays')}: 2</li>\n            </ul>\n          </div>\n          \n          <div className=\"recommendation-card\">\n            <h4>{t('monthlyCycle')}</h4>\n            <p>{t('monthlyCycleRecommendation')}</p>\n            <ul>\n              <li>{t('week1')}: {t('buildPhase')}</li>\n              <li>{t('week2')}: {t('intensityPhase')}</li>\n              <li>{t('week3')}: {t('peakPhase')}</li>\n              <li>{t('week4')}: {t('recoveryPhase')}</li>\n            </ul>\n          </div>\n          \n          <div className=\"recommendation-card\">\n            <h4>{t('focusAreas')}</h4>\n            <p>{t('basedOnProfile')}</p>\n            <ul>\n              {userProfile?.preferences?.focusAreas.map((area, index) => (\n                <li key={index}>{t(area)}: {t(`${area}Recommendation`)}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nWorkoutPlanner.propTypes = {\n  userProfile: PropTypes.object,\n  workouts: PropTypes.array,\n  onSaveWorkout: PropTypes.func.isRequired\n};\n\nexport default WorkoutPlanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}