{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext();export const NotificationProvider=_ref=>{let{children}=_ref;const[notifications,setNotifications]=useState([]);// Ajouter une notification\nconst addNotification=notification=>{const id=Date.now();const newNotification={id,...notification,read:false,createdAt:new Date().toISOString()};setNotifications(prev=>[newNotification,...prev]);return id;};// Marquer une notification comme lue\nconst markAsRead=id=>{setNotifications(prev=>prev.map(notification=>notification.id===id?{...notification,read:true}:notification));};// Supprimer une notification\nconst removeNotification=id=>{setNotifications(prev=>prev.filter(notification=>notification.id!==id));};// Marquer toutes les notifications comme lues\nconst markAllAsRead=()=>{setNotifications(prev=>prev.map(notification=>({...notification,read:true})));};// Supprimer toutes les notifications\nconst clearAll=()=>{setNotifications([]);};// Notification de succès\nconst success=function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return addNotification({type:'success',message,...options});};// Notification d'erreur\nconst error=function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return addNotification({type:'error',message,...options});};// Notification d'information\nconst info=function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return addNotification({type:'info',message,...options});};// Notification d'avertissement\nconst warning=function(message){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return addNotification({type:'warning',message,...options});};const value={notifications,unreadCount:notifications.filter(n=>!n.read).length,addNotification,markAsRead,removeNotification,markAllAsRead,clearAll,success,error,info,warning};return/*#__PURE__*/_jsx(NotificationContext.Provider,{value:value,children:children});};export const useNotifications=()=>{const context=useContext(NotificationContext);if(context===undefined){throw new Error('useNotifications doit être utilisé avec NotificationProvider');}return context;};export default NotificationContext;","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","NotificationContext","NotificationProvider","_ref","children","notifications","setNotifications","addNotification","notification","id","Date","now","newNotification","read","createdAt","toISOString","prev","markAsRead","map","removeNotification","filter","markAllAsRead","clearAll","success","message","options","arguments","length","undefined","type","error","info","warning","value","unreadCount","n","Provider","useNotifications","context","Error"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/context/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst NotificationContext = createContext();\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  // Ajouter une notification\n  const addNotification = (notification) => {\n    const id = Date.now();\n    const newNotification = {\n      id,\n      ...notification,\n      read: false,\n      createdAt: new Date().toISOString(),\n    };\n    \n    setNotifications(prev => [newNotification, ...prev]);\n    return id;\n  };\n\n  // Marquer une notification comme lue\n  const markAsRead = (id) => {\n    setNotifications(prev => \n      prev.map(notification => \n        notification.id === id \n          ? { ...notification, read: true } \n          : notification\n      )\n    );\n  };\n\n  // Supprimer une notification\n  const removeNotification = (id) => {\n    setNotifications(prev => \n      prev.filter(notification => notification.id !== id)\n    );\n  };\n\n  // Marquer toutes les notifications comme lues\n  const markAllAsRead = () => {\n    setNotifications(prev => \n      prev.map(notification => ({ ...notification, read: true }))\n    );\n  };\n\n  // Supprimer toutes les notifications\n  const clearAll = () => {\n    setNotifications([]);\n  };\n\n  // Notification de succès\n  const success = (message, options = {}) => {\n    return addNotification({\n      type: 'success',\n      message,\n      ...options\n    });\n  };\n\n  // Notification d'erreur\n  const error = (message, options = {}) => {\n    return addNotification({\n      type: 'error',\n      message,\n      ...options\n    });\n  };\n\n  // Notification d'information\n  const info = (message, options = {}) => {\n    return addNotification({\n      type: 'info',\n      message,\n      ...options\n    });\n  };\n\n  // Notification d'avertissement\n  const warning = (message, options = {}) => {\n    return addNotification({\n      type: 'warning',\n      message,\n      ...options\n    });\n  };\n\n  const value = {\n    notifications,\n    unreadCount: notifications.filter(n => !n.read).length,\n    addNotification,\n    markAsRead,\n    removeNotification,\n    markAllAsRead,\n    clearAll,\n    success,\n    error,\n    info,\n    warning\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotifications doit être utilisé avec NotificationProvider');\n  }\n  return context;\n};\n\nexport default NotificationContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}