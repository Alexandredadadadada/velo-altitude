{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Grid,Paper,Typography,Box,TextField,Button,MenuItem,CircularProgress,Alert,Card,CardContent,Divider,FormControl,InputLabel,Select,Slider,FormHelperText,List,ListItem,ListItemText,ListItemIcon,Tabs,Tab}from'@mui/material';import{DirectionsBike,Straighten,MonitorWeight,Accessibility,Timeline,Speed,LocalFireDepartment,WaterDrop,Fastfood,EggAlt,Cake,Opacity,RestaurantMenu,Event,Science,Timer,Restaurant,LocalDining}from'@mui/icons-material';import nutritionService from'../../services/nutritionService';import monitoringService from'../../services/monitoringService';/**\n * Calculateur nutritionnel pour les cyclistes\n * Permet de calculer les besoins caloriques et en macronutriments en fonction du profil et des objectifs\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NutritionCalculator=_ref=>{let{userId}=_ref;// État du formulaire\nconst[formData,setFormData]=useState({weight:'',height:'',age:'',gender:'male',activityLevel:'moderatelyActive',goals:'performance',trainingDuration:60,trainingType:'endurance',// Type d'entraînement (endurance, intensité, etc.)\ntrainingIntensity:'moderate',// Intensité de l'entraînement\nweeklyDistance:100,// Distance hebdomadaire en km\nupcomingEvent:false,// Préparation pour un événement\neventType:'',// Type d'événement (course, granfondo, etc.)\neventDate:null// Date de l'événement\n});// États pour le traitement et les résultats\nconst[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[results,setResults]=useState(null);const[formErrors,setFormErrors]=useState({});// Niveaux d'activité\nconst activityLevels=[{value:'sedentary',label:'Sédentaire (peu ou pas d\\'exercice)'},{value:'lightlyActive',label:'Légèrement actif (exercice léger 1-3 jours/semaine)'},{value:'moderatelyActive',label:'Modérément actif (exercice modéré 3-5 jours/semaine)'},{value:'veryActive',label:'Très actif (exercice intense 6-7 jours/semaine)'},{value:'extremelyActive',label:'Extrêmement actif (exercice intense quotidien ou athlète professionnel)'}];// Objectifs nutritionnels\nconst nutritionGoals=[{value:'weightLoss',label:'Perte de poids'},{value:'maintenance',label:'Maintien du poids'},{value:'performance',label:'Performance optimale'}];// Types d'entraînement pour cyclistes\nconst trainingTypes=[{value:'endurance',label:'Endurance (longue distance, intensité modérée)'},{value:'tempo',label:'Tempo/Sweet Spot (intensité soutenue)'},{value:'threshold',label:'Seuil (intervalles à haute intensité)'},{value:'vo2max',label:'VO2max (intervalles très intenses)'},{value:'sprint',label:'Sprint/Force (efforts explosifs)'},{value:'recovery',label:'Récupération (intensité très faible)'}];// Intensités d'entraînement\nconst trainingIntensities=[{value:'low',label:'Faible (Zone 1-2: <75% FCM)'},{value:'moderate',label:'Modérée (Zone 3: 75-85% FCM)'},{value:'high',label:'Élevée (Zone 4: 85-95% FCM)'},{value:'very_high',label:'Très élevée (Zone 5-6: >95% FCM)'}];// Types d'événements\nconst eventTypes=[{value:'race',label:'Course (compétition)'},{value:'granfondo',label:'Cyclosportive/Gran Fondo'},{value:'century',label:'Century Ride (100+ km)'},{value:'multi_day',label:'Événement multi-jours'}];// Références pour le suivi des performances\nconst renderStartTime=useRef(Date.now());const interactionCount=useRef(0);const formComplexity=useRef('simple');const calculationStartTime=useRef(null);// Gérer les changements de champ\nconst handleChange=e=>{const{name,value}=e.target;// Incrémentation du compteur d'interactions\ninteractionCount.current+=1;setFormData({...formData,[name]:value});// Mise à jour de la complexité du formulaire\nupdateFormComplexity();// Effacer l'erreur correspondante\nif(formErrors[name]){setFormErrors({...formErrors,[name]:null});}};// Gérer le changement de durée d'entraînement via le slider\nconst handleSliderChange=(event,newValue)=>{setFormData({...formData,trainingDuration:newValue});};// Évaluer la complexité du formulaire basée sur les champs remplis\nconst updateFormComplexity=()=>{// Compter le nombre de champs remplis\nconst filledFields=Object.values(formData).filter(val=>val!==''&&val!==null&&val!==false).length;if(filledFields>=10||formData.upcomingEvent){formComplexity.current='complete';}else if(filledFields>=6){formComplexity.current='advanced';}else{formComplexity.current='simple';}};// Validation du formulaire\nconst validateForm=()=>{let errors={};let isValid=true;if(!formData.weight||formData.weight<=0){errors.weight='Veuillez entrer un poids valide';isValid=false;}if(!formData.height||formData.height<=0){errors.height='Veuillez entrer une taille valide';isValid=false;}if(!formData.age||formData.age<=0||formData.age>120){errors.age='Veuillez entrer un âge valide';isValid=false;}setFormErrors(errors);return isValid;};// Soumission du formulaire\nconst handleSubmit=async e=>{e.preventDefault();// Enregistrement des métriques d'interaction\nmonitoringService.trackUserInteraction('nutrition_calculator','submit',{formComplexity:formComplexity.current,interactionCount:interactionCount.current,fieldsCount:Object.keys(formData).length});const errors=validateForm();if(Object.keys(errors).length>0){setFormErrors(errors);return;}setLoading(true);setError(null);calculationStartTime.current=Date.now();try{// Envoi des données au service de nutrition\nconst nutritionResults=await nutritionService.calculateNutrition({...formData,userId});setResults(nutritionResults);// Suivi des performances de calcul\nconst calculationTime=Date.now()-calculationStartTime.current;monitoringService.trackApiPerformance('nutrition_calculation',calculationTime,{success:true,formComplexity:formComplexity.current,resultSize:JSON.stringify(nutritionResults).length});}catch(err){setError(err.message||'Une erreur est survenue lors du calcul nutritionnel');// Suivi des erreurs\nmonitoringService.trackApiPerformance('nutrition_calculation',Date.now()-calculationStartTime.current,{success:false,errorType:err.name,errorMessage:err.message});}finally{setLoading(false);}};// Rendu de la section de résultats\nconst renderResults=()=>{if(!results)return null;return/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mt:2},children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Vos besoins nutritionnels\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",paragraph:true,children:\"Bas\\xE9s sur votre profil et vos objectifs, voici vos besoins nutritionnels quotidiens estim\\xE9s.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{elevation:2,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(LocalFireDepartment,{color:\"primary\",sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Besoins caloriques\"})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h3\",sx:{mb:2,fontWeight:'bold',color:'primary.main'},children:[results.dailyCalories,\" kcal\"]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"M\\xE9tabolisme de base (BMR)\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[results.bmr,\" kcal\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"D\\xE9pense \\xE9nerg\\xE9tique totale\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[results.tdee,\" kcal\"]})]})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{elevation:2,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Fastfood,{color:\"primary\",sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Macronutriments\"})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Cake,{sx:{color:'#4CAF50',fontSize:40}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[results.macronutrients.carbs.grams,\"g\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Glucides\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",children:[\"(\",results.macronutrients.carbs.percentage,\"%)\"]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(EggAlt,{sx:{color:'#2196F3',fontSize:40}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[results.macronutrients.protein.grams,\"g\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Prot\\xE9ines\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",children:[\"(\",results.macronutrients.protein.percentage,\"%)\"]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Opacity,{sx:{color:'#FF9800',fontSize:40}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[results.macronutrients.fat.grams,\"g\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Lipides\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",children:[\"(\",results.macronutrients.fat.percentage,\"%)\"]})]})})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{elevation:2,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(WaterDrop,{color:\"primary\",sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Besoins en hydratation\"})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[results.hydration.base,\"L\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Base quotidienne\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[results.hydration.training,\"L\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Pendant l'entra\\xEEnement\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[results.hydration.total,\"L\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Total recommand\\xE9\"})]})})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{elevation:2,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Recommandations personnalis\\xE9es\"}),/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:(event,newValue)=>setTabValue(newValue),variant:\"fullWidth\",sx:{mb:2},children:[/*#__PURE__*/_jsx(Tab,{label:\"Avant\"}),/*#__PURE__*/_jsx(Tab,{label:\"Pendant\"}),/*#__PURE__*/_jsx(Tab,{label:\"Apr\\xE8s\"}),/*#__PURE__*/_jsx(Tab,{label:\"Quotidien\"})]}),tabValue===0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Nutrition pr\\xE9-entra\\xEEnement\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(RestaurantMenu,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"3-4 heures avant l'effort\",secondary:`Repas complet de ${Math.round(results.dailyCalories*0.25)} kcal avec ${Math.round(results.macronutrients.carbs.grams*0.3)}g de glucides complexes, ${Math.round(results.macronutrients.protein.grams*0.2)}g de protéines maigres et hydratation.`})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Cake,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"60 minutes avant l'effort\",secondary:`Collation légère de ${Math.round(results.dailyCalories*0.1)} kcal avec ${Math.round(results.macronutrients.carbs.grams*0.1)}g de glucides simples et facilement digestibles.`})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(WaterDrop,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Hydratation\",secondary:\"400-600ml d'eau ou boisson isotonique l\\xE9g\\xE8re dans les 2 heures pr\\xE9c\\xE9dant l'effort.\"})]})]})]}),tabValue===1&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Nutrition pendant l'effort\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Cake,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Apport glucidique\",secondary:`${formData.trainingIntensity==='high'||formData.trainingIntensity==='very_high'?'60-90g':'30-60g'} de glucides par heure d'effort sous forme de gels, barres ou boissons.`})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(WaterDrop,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Hydratation pendant l'effort\",secondary:`500-1000ml par heure selon l'intensité et la température. Augmentez de 200ml par tranche de 5°C au-dessus de 25°C.`})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Science,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"\\xC9lectrolytes\",secondary:\"Int\\xE9grez 400-700mg de sodium par litre pour les efforts > 90 minutes ou par temps chaud.\"})]})]})]}),tabValue===2&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Nutrition post-entra\\xEEnement\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Timer,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Fen\\xEAtre anabolique (30 minutes)\",secondary:`Consommez ${Math.round(results.macronutrients.carbs.grams*0.25)}g de glucides et ${Math.round(results.macronutrients.protein.grams*0.25)}g de protéines dans les 30 minutes suivant l'effort.`})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Restaurant,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Repas complet (2 heures apr\\xE8s)\",secondary:`Repas équilibré de ${Math.round(results.dailyCalories*0.3)} kcal avec ${Math.round(results.macronutrients.carbs.grams*0.3)}g de glucides, ${Math.round(results.macronutrients.protein.grams*0.3)}g de protéines et des graisses saines.`})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(WaterDrop,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"R\\xE9hydratation\",secondary:\"150% du poids perdu pendant l'effort. Exemple: si vous avez perdu 1kg, buvez 1.5L d'eau avec \\xE9lectrolytes.\"})]})]})]}),tabValue===3&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Nutrition quotidienne\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DirectionsBike,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"P\\xE9riodisation nutritionnelle\",secondary:`Adaptez votre apport selon le type d'effort: ${Math.round(results.dailyCalories*1.1)} kcal les jours d'intensité, ${Math.round(results.dailyCalories*0.9)} kcal les jours de récupération.`})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(RestaurantMenu,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"R\\xE9partition des repas\",secondary:\"R\\xE9partissez vos macronutriments sur 4-6 repas par jour pour maintenir un niveau d'\\xE9nergie stable.\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(LocalDining,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Aliments \\xE0 privil\\xE9gier\",secondary:\"Glucides complexes (riz, p\\xE2tes compl\\xE8tes, patates douces), prot\\xE9ines maigres (poulet, poisson, l\\xE9gumineuses), graisses saines (avocat, huile d'olive, fruits \\xE0 coque).\"})]})]})]})]})})})]});};// Effet pour le suivi du temps de rendu\nuseEffect(()=>{// Mesure du temps de rendu initial\nconst renderTime=Date.now()-renderStartTime.current;// Envoi des métriques de performance au service de monitoring\nmonitoringService.trackComponentPerformance('NutritionCalculator',renderTime,{userId:userId||'anonymous'});// Réinitialisation du compteur d'interactions lors du montage du composant\ninteractionCount.current=0;// Suivi de la session\nconst sessionTracker=setInterval(()=>{// Envoyer périodiquement des métriques d'utilisation\nif(interactionCount.current>0){monitoringService.trackUserEngagement('nutrition_calculator',{interactionsSinceLastCheck:interactionCount.current,formComplexity:formComplexity.current,hasResults:results!==null});// Réinitialiser le compteur après l'envoi\ninteractionCount.current=0;}},30000);// Vérification toutes les 30 secondes\n// Nettoyage\nreturn()=>{clearInterval(sessionTracker);// Enregistrer les métriques de session complète\nmonitoringService.trackComponentUnmount('NutritionCalculator',{sessionDuration:Date.now()-renderStartTime.current,generatedResults:results!==null});};},[userId,results]);// Rendu principal du composant\nconst[activeTab,setActiveTab]=useState(0);const handleTabChange=(event,newValue)=>{setActiveTab(newValue);};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Calculateur nutritionnel\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",paragraph:true,children:\"Calculez vos besoins \\xE9nerg\\xE9tiques et nutritionnels personnalis\\xE9s en fonction de votre profil et de vos objectifs.\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},children:error}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Informations personnelles\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Poids (kg)\",name:\"weight\",type:\"number\",value:formData.weight,onChange:handleChange,error:!!formErrors.weight,helperText:formErrors.weight,InputProps:{startAdornment:/*#__PURE__*/_jsx(MonitorWeight,{color:\"action\",sx:{mr:1}})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Taille (cm)\",name:\"height\",type:\"number\",value:formData.height,onChange:handleChange,error:!!formErrors.height,helperText:formErrors.height,InputProps:{startAdornment:/*#__PURE__*/_jsx(Straighten,{color:\"action\",sx:{mr:1}})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\xC2ge\",name:\"age\",type:\"number\",value:formData.age,onChange:handleChange,error:!!formErrors.age,helperText:formErrors.age,InputProps:{startAdornment:/*#__PURE__*/_jsx(Accessibility,{color:\"action\",sx:{mr:1}})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"gender-label\",children:\"Genre\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"gender-label\",name:\"gender\",value:formData.gender,onChange:handleChange,label:\"Genre\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"male\",children:\"Homme\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"female\",children:\"Femme\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"activity-level-label\",children:\"Niveau d'activit\\xE9\"}),/*#__PURE__*/_jsx(Select,{labelId:\"activity-level-label\",name:\"activityLevel\",value:formData.activityLevel,onChange:handleChange,label:\"Niveau d'activit\\xE9\",children:activityLevels.map(level=>/*#__PURE__*/_jsx(MenuItem,{value:level.value,children:level.label},level.value))}),/*#__PURE__*/_jsx(FormHelperText,{children:\"En dehors de vos s\\xE9ances de cyclisme\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sx:{mt:2},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Objectifs et entra\\xEEnement\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"goals-label\",children:\"Objectif principal\"}),/*#__PURE__*/_jsx(Select,{labelId:\"goals-label\",name:\"goals\",value:formData.goals,onChange:handleChange,label:\"Objectif principal\",children:nutritionGoals.map(goal=>/*#__PURE__*/_jsx(MenuItem,{value:goal.value,children:goal.label},goal.value))})]})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,children:\"Dur\\xE9e moyenne d'entra\\xEEnement (minutes/jour)\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(DirectionsBike,{color:\"action\",sx:{mr:2}}),/*#__PURE__*/_jsx(Slider,{name:\"trainingDuration\",value:formData.trainingDuration,onChange:handleSliderChange,min:0,max:240,step:15,marks:[{value:0,label:'0'},{value:60,label:'60'},{value:120,label:'120'},{value:180,label:'180'},{value:240,label:'240'}],valueLabelDisplay:\"auto\",sx:{flex:1}})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Profil d'entra\\xEEnement cycliste\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Type d'entra\\xEEnement principal\"}),/*#__PURE__*/_jsx(Select,{name:\"trainingType\",value:formData.trainingType,onChange:handleChange,label:\"Type d'entra\\xEEnement principal\",children:trainingTypes.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type.value,children:type.label},type.value))}),/*#__PURE__*/_jsx(FormHelperText,{children:\"S\\xE9lectionnez votre type d'entra\\xEEnement le plus fr\\xE9quent\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Intensit\\xE9 moyenne\"}),/*#__PURE__*/_jsx(Select,{name:\"trainingIntensity\",value:formData.trainingIntensity,onChange:handleChange,label:\"Intensit\\xE9 moyenne\",children:trainingIntensities.map(intensity=>/*#__PURE__*/_jsx(MenuItem,{value:intensity.value,children:intensity.label},intensity.value))}),/*#__PURE__*/_jsx(FormHelperText,{children:\"Intensit\\xE9 moyenne de vos entra\\xEEnements\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Distance hebdomadaire (km)\",name:\"weeklyDistance\",type:\"number\",value:formData.weeklyDistance,onChange:handleChange,InputProps:{startAdornment:/*#__PURE__*/_jsx(DirectionsBike,{color:\"action\",sx:{mr:1}})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",sx:{mt:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",gutterBottom:true,children:\"Pr\\xE9paration pour un \\xE9v\\xE9nement sp\\xE9cifique?\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:formData.upcomingEvent?\"contained\":\"outlined\",size:\"small\",onClick:()=>setFormData({...formData,upcomingEvent:true}),children:\"Oui\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:!formData.upcomingEvent?\"contained\":\"outlined\",size:\"small\",onClick:()=>setFormData({...formData,upcomingEvent:false,eventType:'',eventDate:null}),children:\"Non\"})})]})]})}),formData.upcomingEvent&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Type d'\\xE9v\\xE9nement\"}),/*#__PURE__*/_jsx(Select,{name:\"eventType\",value:formData.eventType,onChange:handleChange,label:\"Type d'\\xE9v\\xE9nement\",children:eventTypes.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type.value,children:type.label},type.value))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Nombre de jours avant l'\\xE9v\\xE9nement\",name:\"eventDate\",type:\"number\",value:formData.eventDate,onChange:handleChange,InputProps:{startAdornment:/*#__PURE__*/_jsx(Event,{color:\"action\",sx:{mr:1}})}})})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sx:{mt:2},children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",size:\"large\",disabled:loading,startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):/*#__PURE__*/_jsx(Timeline,{}),children:loading?'Calcul en cours...':'Calculer mes besoins'})})]})})]}),results&&renderResults()]});};export default NutritionCalculator;","map":{"version":3,"names":["React","useState","useEffect","useRef","Grid","Paper","Typography","Box","TextField","Button","MenuItem","CircularProgress","Alert","Card","CardContent","Divider","FormControl","InputLabel","Select","Slider","FormHelperText","List","ListItem","ListItemText","ListItemIcon","Tabs","Tab","DirectionsBike","Straighten","MonitorWeight","Accessibility","Timeline","Speed","LocalFireDepartment","WaterDrop","Fastfood","EggAlt","Cake","Opacity","RestaurantMenu","Event","Science","Timer","Restaurant","LocalDining","nutritionService","monitoringService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NutritionCalculator","_ref","userId","formData","setFormData","weight","height","age","gender","activityLevel","goals","trainingDuration","trainingType","trainingIntensity","weeklyDistance","upcomingEvent","eventType","eventDate","loading","setLoading","error","setError","results","setResults","formErrors","setFormErrors","activityLevels","value","label","nutritionGoals","trainingTypes","trainingIntensities","eventTypes","renderStartTime","Date","now","interactionCount","formComplexity","calculationStartTime","handleChange","e","name","target","current","updateFormComplexity","handleSliderChange","event","newValue","filledFields","Object","values","filter","val","length","validateForm","errors","isValid","handleSubmit","preventDefault","trackUserInteraction","fieldsCount","keys","nutritionResults","calculateNutrition","calculationTime","trackApiPerformance","success","resultSize","JSON","stringify","err","message","errorType","errorMessage","renderResults","container","spacing","sx","mt","children","item","xs","variant","gutterBottom","paragraph","md","elevation","display","alignItems","mb","color","mr","fontWeight","dailyCalories","my","bmr","tdee","textAlign","fontSize","macronutrients","carbs","grams","percentage","protein","fat","hydration","base","training","total","tabValue","onChange","setTabValue","primary","secondary","Math","round","renderTime","trackComponentPerformance","sessionTracker","setInterval","trackUserEngagement","interactionsSinceLastCheck","hasResults","clearInterval","trackComponentUnmount","sessionDuration","generatedResults","activeTab","setActiveTab","handleTabChange","p","severity","onSubmit","sm","fullWidth","type","helperText","InputProps","startAdornment","id","labelId","map","level","goal","min","max","step","marks","valueLabelDisplay","flex","intensity","component","size","onClick","disabled","startIcon"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/nutrition/NutritionCalculator.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  TextField,\n  Button,\n  MenuItem,\n  CircularProgress,\n  Alert,\n  Card,\n  CardContent,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  Slider,\n  FormHelperText,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport {\n  DirectionsBike,\n  Straighten,\n  MonitorWeight,\n  Accessibility,\n  Timeline,\n  Speed,\n  LocalFireDepartment,\n  WaterDrop,\n  Fastfood,\n  EggAlt,\n  Cake,\n  Opacity,\n  RestaurantMenu,\n  Event,\n  Science,\n  Timer,\n  Restaurant,\n  LocalDining\n} from '@mui/icons-material';\nimport nutritionService from '../../services/nutritionService';\nimport monitoringService from '../../services/monitoringService';\n\n/**\n * Calculateur nutritionnel pour les cyclistes\n * Permet de calculer les besoins caloriques et en macronutriments en fonction du profil et des objectifs\n */\nconst NutritionCalculator = ({ userId }) => {\n  // État du formulaire\n  const [formData, setFormData] = useState({\n    weight: '',\n    height: '',\n    age: '',\n    gender: 'male',\n    activityLevel: 'moderatelyActive',\n    goals: 'performance',\n    trainingDuration: 60,\n    trainingType: 'endurance', // Type d'entraînement (endurance, intensité, etc.)\n    trainingIntensity: 'moderate', // Intensité de l'entraînement\n    weeklyDistance: 100, // Distance hebdomadaire en km\n    upcomingEvent: false, // Préparation pour un événement\n    eventType: '', // Type d'événement (course, granfondo, etc.)\n    eventDate: null // Date de l'événement\n  });\n\n  // États pour le traitement et les résultats\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [results, setResults] = useState(null);\n  const [formErrors, setFormErrors] = useState({});\n\n  // Niveaux d'activité\n  const activityLevels = [\n    { value: 'sedentary', label: 'Sédentaire (peu ou pas d\\'exercice)' },\n    { value: 'lightlyActive', label: 'Légèrement actif (exercice léger 1-3 jours/semaine)' },\n    { value: 'moderatelyActive', label: 'Modérément actif (exercice modéré 3-5 jours/semaine)' },\n    { value: 'veryActive', label: 'Très actif (exercice intense 6-7 jours/semaine)' },\n    { value: 'extremelyActive', label: 'Extrêmement actif (exercice intense quotidien ou athlète professionnel)' }\n  ];\n\n  // Objectifs nutritionnels\n  const nutritionGoals = [\n    { value: 'weightLoss', label: 'Perte de poids' },\n    { value: 'maintenance', label: 'Maintien du poids' },\n    { value: 'performance', label: 'Performance optimale' }\n  ];\n\n  // Types d'entraînement pour cyclistes\n  const trainingTypes = [\n    { value: 'endurance', label: 'Endurance (longue distance, intensité modérée)' },\n    { value: 'tempo', label: 'Tempo/Sweet Spot (intensité soutenue)' },\n    { value: 'threshold', label: 'Seuil (intervalles à haute intensité)' },\n    { value: 'vo2max', label: 'VO2max (intervalles très intenses)' },\n    { value: 'sprint', label: 'Sprint/Force (efforts explosifs)' },\n    { value: 'recovery', label: 'Récupération (intensité très faible)' }\n  ];\n\n  // Intensités d'entraînement\n  const trainingIntensities = [\n    { value: 'low', label: 'Faible (Zone 1-2: <75% FCM)' },\n    { value: 'moderate', label: 'Modérée (Zone 3: 75-85% FCM)' },\n    { value: 'high', label: 'Élevée (Zone 4: 85-95% FCM)' },\n    { value: 'very_high', label: 'Très élevée (Zone 5-6: >95% FCM)' }\n  ];\n\n  // Types d'événements\n  const eventTypes = [\n    { value: 'race', label: 'Course (compétition)' },\n    { value: 'granfondo', label: 'Cyclosportive/Gran Fondo' },\n    { value: 'century', label: 'Century Ride (100+ km)' },\n    { value: 'multi_day', label: 'Événement multi-jours' }\n  ];\n\n  // Références pour le suivi des performances\n  const renderStartTime = useRef(Date.now());\n  const interactionCount = useRef(0);\n  const formComplexity = useRef('simple');\n  const calculationStartTime = useRef(null);\n\n  // Gérer les changements de champ\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Incrémentation du compteur d'interactions\n    interactionCount.current += 1;\n    \n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Mise à jour de la complexité du formulaire\n    updateFormComplexity();\n    \n    // Effacer l'erreur correspondante\n    if (formErrors[name]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: null\n      });\n    }\n  };\n\n  // Gérer le changement de durée d'entraînement via le slider\n  const handleSliderChange = (event, newValue) => {\n    setFormData({\n      ...formData,\n      trainingDuration: newValue\n    });\n  };\n\n  // Évaluer la complexité du formulaire basée sur les champs remplis\n  const updateFormComplexity = () => {\n    // Compter le nombre de champs remplis\n    const filledFields = Object.values(formData).filter(val => \n      val !== '' && val !== null && val !== false).length;\n    \n    if (filledFields >= 10 || formData.upcomingEvent) {\n      formComplexity.current = 'complete';\n    } else if (filledFields >= 6) {\n      formComplexity.current = 'advanced';\n    } else {\n      formComplexity.current = 'simple';\n    }\n  };\n\n  // Validation du formulaire\n  const validateForm = () => {\n    let errors = {};\n    let isValid = true;\n\n    if (!formData.weight || formData.weight <= 0) {\n      errors.weight = 'Veuillez entrer un poids valide';\n      isValid = false;\n    }\n\n    if (!formData.height || formData.height <= 0) {\n      errors.height = 'Veuillez entrer une taille valide';\n      isValid = false;\n    }\n\n    if (!formData.age || formData.age <= 0 || formData.age > 120) {\n      errors.age = 'Veuillez entrer un âge valide';\n      isValid = false;\n    }\n\n    setFormErrors(errors);\n    return isValid;\n  };\n\n  // Soumission du formulaire\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Enregistrement des métriques d'interaction\n    monitoringService.trackUserInteraction('nutrition_calculator', 'submit', {\n      formComplexity: formComplexity.current,\n      interactionCount: interactionCount.current,\n      fieldsCount: Object.keys(formData).length\n    });\n    \n    const errors = validateForm();\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    calculationStartTime.current = Date.now();\n    \n    try {\n      // Envoi des données au service de nutrition\n      const nutritionResults = await nutritionService.calculateNutrition({\n        ...formData,\n        userId\n      });\n      \n      setResults(nutritionResults);\n      \n      // Suivi des performances de calcul\n      const calculationTime = Date.now() - calculationStartTime.current;\n      monitoringService.trackApiPerformance('nutrition_calculation', calculationTime, {\n        success: true,\n        formComplexity: formComplexity.current,\n        resultSize: JSON.stringify(nutritionResults).length\n      });\n      \n    } catch (err) {\n      setError(err.message || 'Une erreur est survenue lors du calcul nutritionnel');\n      \n      // Suivi des erreurs\n      monitoringService.trackApiPerformance('nutrition_calculation', \n        Date.now() - calculationStartTime.current, {\n        success: false,\n        errorType: err.name,\n        errorMessage: err.message\n      });\n      \n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Rendu de la section de résultats\n  const renderResults = () => {\n    if (!results) return null;\n\n    return (\n      <Grid container spacing={3} sx={{ mt: 2 }}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            Vos besoins nutritionnels\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            Basés sur votre profil et vos objectifs, voici vos besoins nutritionnels quotidiens estimés.\n          </Typography>\n        </Grid>\n\n        {/* Carte des calories */}\n        <Grid item xs={12} md={6}>\n          <Card elevation={2}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <LocalFireDepartment color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Besoins caloriques</Typography>\n              </Box>\n              <Typography variant=\"h3\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>\n                {results.dailyCalories} kcal\n              </Typography>\n              <Divider sx={{ my: 2 }} />\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Métabolisme de base (BMR)</Typography>\n                  <Typography variant=\"h6\">{results.bmr} kcal</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Dépense énergétique totale</Typography>\n                  <Typography variant=\"h6\">{results.tdee} kcal</Typography>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Carte des macronutriments */}\n        <Grid item xs={12} md={6}>\n          <Card elevation={2}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Fastfood color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Macronutriments</Typography>\n              </Box>\n              <Grid container spacing={2}>\n                <Grid item xs={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Cake sx={{ color: '#4CAF50', fontSize: 40 }} />\n                    <Typography variant=\"h6\">{results.macronutrients.carbs.grams}g</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Glucides</Typography>\n                    <Typography variant=\"caption\">({results.macronutrients.carbs.percentage}%)</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <EggAlt sx={{ color: '#2196F3', fontSize: 40 }} />\n                    <Typography variant=\"h6\">{results.macronutrients.protein.grams}g</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Protéines</Typography>\n                    <Typography variant=\"caption\">({results.macronutrients.protein.percentage}%)</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Opacity sx={{ color: '#FF9800', fontSize: 40 }} />\n                    <Typography variant=\"h6\">{results.macronutrients.fat.grams}g</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Lipides</Typography>\n                    <Typography variant=\"caption\">({results.macronutrients.fat.percentage}%)</Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Carte d'hydratation */}\n        <Grid item xs={12}>\n          <Card elevation={2}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <WaterDrop color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Besoins en hydratation</Typography>\n              </Box>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Typography variant=\"h5\">{results.hydration.base}L</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Base quotidienne</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Typography variant=\"h5\">{results.hydration.training}L</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Pendant l'entraînement</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Typography variant=\"h5\">{results.hydration.total}L</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Total recommandé</Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Recommandations */}\n        <Grid item xs={12}>\n          <Card elevation={2}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Recommandations personnalisées\n              </Typography>\n              <Tabs \n                value={tabValue} \n                onChange={(event, newValue) => setTabValue(newValue)} \n                variant=\"fullWidth\" \n                sx={{ mb: 2 }}\n              >\n                <Tab label=\"Avant\" />\n                <Tab label=\"Pendant\" />\n                <Tab label=\"Après\" />\n                <Tab label=\"Quotidien\" />\n              </Tabs>\n              \n              {tabValue === 0 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition pré-entraînement\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <RestaurantMenu color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"3-4 heures avant l'effort\"\n                        secondary={`Repas complet de ${Math.round(results.dailyCalories * 0.25)} kcal avec ${Math.round(results.macronutrients.carbs.grams * 0.3)}g de glucides complexes, ${Math.round(results.macronutrients.protein.grams * 0.2)}g de protéines maigres et hydratation.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Cake color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"60 minutes avant l'effort\"\n                        secondary={`Collation légère de ${Math.round(results.dailyCalories * 0.1)} kcal avec ${Math.round(results.macronutrients.carbs.grams * 0.1)}g de glucides simples et facilement digestibles.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <WaterDrop color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Hydratation\"\n                        secondary=\"400-600ml d'eau ou boisson isotonique légère dans les 2 heures précédant l'effort.\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n              \n              {tabValue === 1 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition pendant l'effort\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Cake color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Apport glucidique\"\n                        secondary={`${formData.trainingIntensity === 'high' || formData.trainingIntensity === 'very_high' ? '60-90g' : '30-60g'} de glucides par heure d'effort sous forme de gels, barres ou boissons.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <WaterDrop color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Hydratation pendant l'effort\"\n                        secondary={`500-1000ml par heure selon l'intensité et la température. Augmentez de 200ml par tranche de 5°C au-dessus de 25°C.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Science color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Électrolytes\"\n                        secondary=\"Intégrez 400-700mg de sodium par litre pour les efforts > 90 minutes ou par temps chaud.\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n              \n              {tabValue === 2 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition post-entraînement\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Timer color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Fenêtre anabolique (30 minutes)\"\n                        secondary={`Consommez ${Math.round(results.macronutrients.carbs.grams * 0.25)}g de glucides et ${Math.round(results.macronutrients.protein.grams * 0.25)}g de protéines dans les 30 minutes suivant l'effort.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Restaurant color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Repas complet (2 heures après)\"\n                        secondary={`Repas équilibré de ${Math.round(results.dailyCalories * 0.3)} kcal avec ${Math.round(results.macronutrients.carbs.grams * 0.3)}g de glucides, ${Math.round(results.macronutrients.protein.grams * 0.3)}g de protéines et des graisses saines.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <WaterDrop color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Réhydratation\"\n                        secondary=\"150% du poids perdu pendant l'effort. Exemple: si vous avez perdu 1kg, buvez 1.5L d'eau avec électrolytes.\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n              \n              {tabValue === 3 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition quotidienne\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <DirectionsBike color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Périodisation nutritionnelle\"\n                        secondary={`Adaptez votre apport selon le type d'effort: ${Math.round(results.dailyCalories * 1.1)} kcal les jours d'intensité, ${Math.round(results.dailyCalories * 0.9)} kcal les jours de récupération.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <RestaurantMenu color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Répartition des repas\"\n                        secondary=\"Répartissez vos macronutriments sur 4-6 repas par jour pour maintenir un niveau d'énergie stable.\"\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <LocalDining color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Aliments à privilégier\"\n                        secondary=\"Glucides complexes (riz, pâtes complètes, patates douces), protéines maigres (poulet, poisson, légumineuses), graisses saines (avocat, huile d'olive, fruits à coque).\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  // Effet pour le suivi du temps de rendu\n  useEffect(() => {\n    // Mesure du temps de rendu initial\n    const renderTime = Date.now() - renderStartTime.current;\n    \n    // Envoi des métriques de performance au service de monitoring\n    monitoringService.trackComponentPerformance('NutritionCalculator', renderTime, {\n      userId: userId || 'anonymous'\n    });\n    \n    // Réinitialisation du compteur d'interactions lors du montage du composant\n    interactionCount.current = 0;\n    \n    // Suivi de la session\n    const sessionTracker = setInterval(() => {\n      // Envoyer périodiquement des métriques d'utilisation\n      if (interactionCount.current > 0) {\n        monitoringService.trackUserEngagement('nutrition_calculator', {\n          interactionsSinceLastCheck: interactionCount.current,\n          formComplexity: formComplexity.current,\n          hasResults: results !== null\n        });\n        \n        // Réinitialiser le compteur après l'envoi\n        interactionCount.current = 0;\n      }\n    }, 30000); // Vérification toutes les 30 secondes\n    \n    // Nettoyage\n    return () => {\n      clearInterval(sessionTracker);\n      // Enregistrer les métriques de session complète\n      monitoringService.trackComponentUnmount('NutritionCalculator', {\n        sessionDuration: Date.now() - renderStartTime.current,\n        generatedResults: results !== null\n      });\n    };\n  }, [userId, results]);\n\n  // Rendu principal du composant\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  return (\n    <Box>\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Calculateur nutritionnel\n        </Typography>\n        <Typography variant=\"body2\" paragraph>\n          Calculez vos besoins énergétiques et nutritionnels personnalisés en fonction de votre profil et de vos objectifs.\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            {/* Informations personnelles */}\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Informations personnelles\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Poids (kg)\"\n                name=\"weight\"\n                type=\"number\"\n                value={formData.weight}\n                onChange={handleChange}\n                error={!!formErrors.weight}\n                helperText={formErrors.weight}\n                InputProps={{\n                  startAdornment: <MonitorWeight color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Taille (cm)\"\n                name=\"height\"\n                type=\"number\"\n                value={formData.height}\n                onChange={handleChange}\n                error={!!formErrors.height}\n                helperText={formErrors.height}\n                InputProps={{\n                  startAdornment: <Straighten color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Âge\"\n                name=\"age\"\n                type=\"number\"\n                value={formData.age}\n                onChange={handleChange}\n                error={!!formErrors.age}\n                helperText={formErrors.age}\n                InputProps={{\n                  startAdornment: <Accessibility color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"gender-label\">Genre</InputLabel>\n                <Select\n                  labelId=\"gender-label\"\n                  name=\"gender\"\n                  value={formData.gender}\n                  onChange={handleChange}\n                  label=\"Genre\"\n                >\n                  <MenuItem value=\"male\">Homme</MenuItem>\n                  <MenuItem value=\"female\">Femme</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"activity-level-label\">Niveau d'activité</InputLabel>\n                <Select\n                  labelId=\"activity-level-label\"\n                  name=\"activityLevel\"\n                  value={formData.activityLevel}\n                  onChange={handleChange}\n                  label=\"Niveau d'activité\"\n                >\n                  {activityLevels.map((level) => (\n                    <MenuItem key={level.value} value={level.value}>\n                      {level.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>En dehors de vos séances de cyclisme</FormHelperText>\n              </FormControl>\n            </Grid>\n\n            {/* Objectifs et entraînement */}\n            <Grid item xs={12} sx={{ mt: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Objectifs et entraînement\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"goals-label\">Objectif principal</InputLabel>\n                <Select\n                  labelId=\"goals-label\"\n                  name=\"goals\"\n                  value={formData.goals}\n                  onChange={handleChange}\n                  label=\"Objectif principal\"\n                >\n                  {nutritionGoals.map((goal) => (\n                    <MenuItem key={goal.value} value={goal.value}>\n                      {goal.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <Typography gutterBottom>\n                Durée moyenne d'entraînement (minutes/jour)\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <DirectionsBike color=\"action\" sx={{ mr: 2 }} />\n                <Slider\n                  name=\"trainingDuration\"\n                  value={formData.trainingDuration}\n                  onChange={handleSliderChange}\n                  min={0}\n                  max={240}\n                  step={15}\n                  marks={[\n                    { value: 0, label: '0' },\n                    { value: 60, label: '60' },\n                    { value: 120, label: '120' },\n                    { value: 180, label: '180' },\n                    { value: 240, label: '240' }\n                  ]}\n                  valueLabelDisplay=\"auto\"\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Grid>\n\n            {/* Profil d'entraînement cycliste */}\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Profil d'entraînement cycliste\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <FormControl fullWidth>\n                <InputLabel>Type d'entraînement principal</InputLabel>\n                <Select\n                  name=\"trainingType\"\n                  value={formData.trainingType}\n                  onChange={handleChange}\n                  label=\"Type d'entraînement principal\"\n                >\n                  {trainingTypes.map((type) => (\n                    <MenuItem key={type.value} value={type.value}>\n                      {type.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>Sélectionnez votre type d'entraînement le plus fréquent</FormHelperText>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <FormControl fullWidth>\n                <InputLabel>Intensité moyenne</InputLabel>\n                <Select\n                  name=\"trainingIntensity\"\n                  value={formData.trainingIntensity}\n                  onChange={handleChange}\n                  label=\"Intensité moyenne\"\n                >\n                  {trainingIntensities.map((intensity) => (\n                    <MenuItem key={intensity.value} value={intensity.value}>\n                      {intensity.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>Intensité moyenne de vos entraînements</FormHelperText>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField\n                fullWidth\n                label=\"Distance hebdomadaire (km)\"\n                name=\"weeklyDistance\"\n                type=\"number\"\n                value={formData.weeklyDistance}\n                onChange={handleChange}\n                InputProps={{\n                  startAdornment: <DirectionsBike color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl component=\"fieldset\" sx={{ mt: 1 }}>\n                <Typography variant=\"body2\" gutterBottom>\n                  Préparation pour un événement spécifique?\n                </Typography>\n                <Grid container spacing={1}>\n                  <Grid item>\n                    <Button \n                      variant={formData.upcomingEvent ? \"contained\" : \"outlined\"} \n                      size=\"small\"\n                      onClick={() => setFormData({...formData, upcomingEvent: true})}\n                    >\n                      Oui\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button \n                      variant={!formData.upcomingEvent ? \"contained\" : \"outlined\"} \n                      size=\"small\"\n                      onClick={() => setFormData({...formData, upcomingEvent: false, eventType: '', eventDate: null})}\n                    >\n                      Non\n                    </Button>\n                  </Grid>\n                </Grid>\n              </FormControl>\n            </Grid>\n\n            {formData.upcomingEvent && (\n              <>\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth>\n                    <InputLabel>Type d'événement</InputLabel>\n                    <Select\n                      name=\"eventType\"\n                      value={formData.eventType}\n                      onChange={handleChange}\n                      label=\"Type d'événement\"\n                    >\n                      {eventTypes.map((type) => (\n                        <MenuItem key={type.value} value={type.value}>\n                          {type.label}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Nombre de jours avant l'événement\"\n                    name=\"eventDate\"\n                    type=\"number\"\n                    value={formData.eventDate}\n                    onChange={handleChange}\n                    InputProps={{\n                      startAdornment: <Event color=\"action\" sx={{ mr: 1 }} />,\n                    }}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid item xs={12} sx={{ mt: 2 }}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"large\"\n                disabled={loading}\n                startIcon={loading ? <CircularProgress size={24} /> : <Timeline />}\n              >\n                {loading ? 'Calcul en cours...' : 'Calculer mes besoins'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      {/* Affichage des résultats */}\n      {results && renderResults()}\n    </Box>\n  );\n};\n\nexport default NutritionCalculator;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OACEC,IAAI,CACJC,KAAK,CACLC,UAAU,CACVC,GAAG,CACHC,SAAS,CACTC,MAAM,CACNC,QAAQ,CACRC,gBAAgB,CAChBC,KAAK,CACLC,IAAI,CACJC,WAAW,CACXC,OAAO,CACPC,WAAW,CACXC,UAAU,CACVC,MAAM,CACNC,MAAM,CACNC,cAAc,CACdC,IAAI,CACJC,QAAQ,CACRC,YAAY,CACZC,YAAY,CACZC,IAAI,CACJC,GAAG,KACE,eAAe,CACtB,OACEC,cAAc,CACdC,UAAU,CACVC,aAAa,CACbC,aAAa,CACbC,QAAQ,CACRC,KAAK,CACLC,mBAAmB,CACnBC,SAAS,CACTC,QAAQ,CACRC,MAAM,CACNC,IAAI,CACJC,OAAO,CACPC,cAAc,CACdC,KAAK,CACLC,OAAO,CACPC,KAAK,CACLC,UAAU,CACVC,WAAW,KACN,qBAAqB,CAC5B,MAAO,CAAAC,gBAAgB,KAAM,iCAAiC,CAC9D,MAAO,CAAAC,iBAAiB,KAAM,kCAAkC,CAEhE;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAIA,KAAM,CAAAC,mBAAmB,CAAGC,IAAA,EAAgB,IAAf,CAAEC,MAAO,CAAC,CAAAD,IAAA,CACrC;AACA,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGxD,QAAQ,CAAC,CACvCyD,MAAM,CAAE,EAAE,CACVC,MAAM,CAAE,EAAE,CACVC,GAAG,CAAE,EAAE,CACPC,MAAM,CAAE,MAAM,CACdC,aAAa,CAAE,kBAAkB,CACjCC,KAAK,CAAE,aAAa,CACpBC,gBAAgB,CAAE,EAAE,CACpBC,YAAY,CAAE,WAAW,CAAE;AAC3BC,iBAAiB,CAAE,UAAU,CAAE;AAC/BC,cAAc,CAAE,GAAG,CAAE;AACrBC,aAAa,CAAE,KAAK,CAAE;AACtBC,SAAS,CAAE,EAAE,CAAE;AACfC,SAAS,CAAE,IAAK;AAClB,CAAC,CAAC,CAEF;AACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGvE,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACwE,KAAK,CAAEC,QAAQ,CAAC,CAAGzE,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAC0E,OAAO,CAAEC,UAAU,CAAC,CAAG3E,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC4E,UAAU,CAAEC,aAAa,CAAC,CAAG7E,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEhD;AACA,KAAM,CAAA8E,cAAc,CAAG,CACrB,CAAEC,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,qCAAsC,CAAC,CACpE,CAAED,KAAK,CAAE,eAAe,CAAEC,KAAK,CAAE,qDAAsD,CAAC,CACxF,CAAED,KAAK,CAAE,kBAAkB,CAAEC,KAAK,CAAE,sDAAuD,CAAC,CAC5F,CAAED,KAAK,CAAE,YAAY,CAAEC,KAAK,CAAE,iDAAkD,CAAC,CACjF,CAAED,KAAK,CAAE,iBAAiB,CAAEC,KAAK,CAAE,yEAA0E,CAAC,CAC/G,CAED;AACA,KAAM,CAAAC,cAAc,CAAG,CACrB,CAAEF,KAAK,CAAE,YAAY,CAAEC,KAAK,CAAE,gBAAiB,CAAC,CAChD,CAAED,KAAK,CAAE,aAAa,CAAEC,KAAK,CAAE,mBAAoB,CAAC,CACpD,CAAED,KAAK,CAAE,aAAa,CAAEC,KAAK,CAAE,sBAAuB,CAAC,CACxD,CAED;AACA,KAAM,CAAAE,aAAa,CAAG,CACpB,CAAEH,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,gDAAiD,CAAC,CAC/E,CAAED,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,uCAAwC,CAAC,CAClE,CAAED,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,uCAAwC,CAAC,CACtE,CAAED,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,oCAAqC,CAAC,CAChE,CAAED,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,kCAAmC,CAAC,CAC9D,CAAED,KAAK,CAAE,UAAU,CAAEC,KAAK,CAAE,sCAAuC,CAAC,CACrE,CAED;AACA,KAAM,CAAAG,mBAAmB,CAAG,CAC1B,CAAEJ,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,6BAA8B,CAAC,CACtD,CAAED,KAAK,CAAE,UAAU,CAAEC,KAAK,CAAE,8BAA+B,CAAC,CAC5D,CAAED,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,6BAA8B,CAAC,CACvD,CAAED,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,kCAAmC,CAAC,CAClE,CAED;AACA,KAAM,CAAAI,UAAU,CAAG,CACjB,CAAEL,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,sBAAuB,CAAC,CAChD,CAAED,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,0BAA2B,CAAC,CACzD,CAAED,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,wBAAyB,CAAC,CACrD,CAAED,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,uBAAwB,CAAC,CACvD,CAED;AACA,KAAM,CAAAK,eAAe,CAAGnF,MAAM,CAACoF,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAC1C,KAAM,CAAAC,gBAAgB,CAAGtF,MAAM,CAAC,CAAC,CAAC,CAClC,KAAM,CAAAuF,cAAc,CAAGvF,MAAM,CAAC,QAAQ,CAAC,CACvC,KAAM,CAAAwF,oBAAoB,CAAGxF,MAAM,CAAC,IAAI,CAAC,CAEzC;AACA,KAAM,CAAAyF,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEd,KAAM,CAAC,CAAGa,CAAC,CAACE,MAAM,CAEhC;AACAN,gBAAgB,CAACO,OAAO,EAAI,CAAC,CAE7BvC,WAAW,CAAC,CACV,GAAGD,QAAQ,CACX,CAACsC,IAAI,EAAGd,KACV,CAAC,CAAC,CAEF;AACAiB,oBAAoB,CAAC,CAAC,CAEtB;AACA,GAAIpB,UAAU,CAACiB,IAAI,CAAC,CAAE,CACpBhB,aAAa,CAAC,CACZ,GAAGD,UAAU,CACb,CAACiB,IAAI,EAAG,IACV,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,KAAM,CAAAI,kBAAkB,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CAC9C3C,WAAW,CAAC,CACV,GAAGD,QAAQ,CACXQ,gBAAgB,CAAEoC,QACpB,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAH,oBAAoB,CAAGA,CAAA,GAAM,CACjC;AACA,KAAM,CAAAI,YAAY,CAAGC,MAAM,CAACC,MAAM,CAAC/C,QAAQ,CAAC,CAACgD,MAAM,CAACC,GAAG,EACrDA,GAAG,GAAK,EAAE,EAAIA,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,KAAK,CAAC,CAACC,MAAM,CAErD,GAAIL,YAAY,EAAI,EAAE,EAAI7C,QAAQ,CAACY,aAAa,CAAE,CAChDsB,cAAc,CAACM,OAAO,CAAG,UAAU,CACrC,CAAC,IAAM,IAAIK,YAAY,EAAI,CAAC,CAAE,CAC5BX,cAAc,CAACM,OAAO,CAAG,UAAU,CACrC,CAAC,IAAM,CACLN,cAAc,CAACM,OAAO,CAAG,QAAQ,CACnC,CACF,CAAC,CAED;AACA,KAAM,CAAAW,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAAC,MAAM,CAAG,CAAC,CAAC,CACf,GAAI,CAAAC,OAAO,CAAG,IAAI,CAElB,GAAI,CAACrD,QAAQ,CAACE,MAAM,EAAIF,QAAQ,CAACE,MAAM,EAAI,CAAC,CAAE,CAC5CkD,MAAM,CAAClD,MAAM,CAAG,iCAAiC,CACjDmD,OAAO,CAAG,KAAK,CACjB,CAEA,GAAI,CAACrD,QAAQ,CAACG,MAAM,EAAIH,QAAQ,CAACG,MAAM,EAAI,CAAC,CAAE,CAC5CiD,MAAM,CAACjD,MAAM,CAAG,mCAAmC,CACnDkD,OAAO,CAAG,KAAK,CACjB,CAEA,GAAI,CAACrD,QAAQ,CAACI,GAAG,EAAIJ,QAAQ,CAACI,GAAG,EAAI,CAAC,EAAIJ,QAAQ,CAACI,GAAG,CAAG,GAAG,CAAE,CAC5DgD,MAAM,CAAChD,GAAG,CAAG,+BAA+B,CAC5CiD,OAAO,CAAG,KAAK,CACjB,CAEA/B,aAAa,CAAC8B,MAAM,CAAC,CACrB,MAAO,CAAAC,OAAO,CAChB,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAjB,CAAC,EAAK,CAChCA,CAAC,CAACkB,cAAc,CAAC,CAAC,CAElB;AACAjE,iBAAiB,CAACkE,oBAAoB,CAAC,sBAAsB,CAAE,QAAQ,CAAE,CACvEtB,cAAc,CAAEA,cAAc,CAACM,OAAO,CACtCP,gBAAgB,CAAEA,gBAAgB,CAACO,OAAO,CAC1CiB,WAAW,CAAEX,MAAM,CAACY,IAAI,CAAC1D,QAAQ,CAAC,CAACkD,MACrC,CAAC,CAAC,CAEF,KAAM,CAAAE,MAAM,CAAGD,YAAY,CAAC,CAAC,CAC7B,GAAIL,MAAM,CAACY,IAAI,CAACN,MAAM,CAAC,CAACF,MAAM,CAAG,CAAC,CAAE,CAClC5B,aAAa,CAAC8B,MAAM,CAAC,CACrB,OACF,CAEApC,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACdiB,oBAAoB,CAACK,OAAO,CAAGT,IAAI,CAACC,GAAG,CAAC,CAAC,CAEzC,GAAI,CACF;AACA,KAAM,CAAA2B,gBAAgB,CAAG,KAAM,CAAAtE,gBAAgB,CAACuE,kBAAkB,CAAC,CACjE,GAAG5D,QAAQ,CACXD,MACF,CAAC,CAAC,CAEFqB,UAAU,CAACuC,gBAAgB,CAAC,CAE5B;AACA,KAAM,CAAAE,eAAe,CAAG9B,IAAI,CAACC,GAAG,CAAC,CAAC,CAAGG,oBAAoB,CAACK,OAAO,CACjElD,iBAAiB,CAACwE,mBAAmB,CAAC,uBAAuB,CAAED,eAAe,CAAE,CAC9EE,OAAO,CAAE,IAAI,CACb7B,cAAc,CAAEA,cAAc,CAACM,OAAO,CACtCwB,UAAU,CAAEC,IAAI,CAACC,SAAS,CAACP,gBAAgB,CAAC,CAACT,MAC/C,CAAC,CAAC,CAEJ,CAAE,MAAOiB,GAAG,CAAE,CACZjD,QAAQ,CAACiD,GAAG,CAACC,OAAO,EAAI,qDAAqD,CAAC,CAE9E;AACA9E,iBAAiB,CAACwE,mBAAmB,CAAC,uBAAuB,CAC3D/B,IAAI,CAACC,GAAG,CAAC,CAAC,CAAGG,oBAAoB,CAACK,OAAO,CAAE,CAC3CuB,OAAO,CAAE,KAAK,CACdM,SAAS,CAAEF,GAAG,CAAC7B,IAAI,CACnBgC,YAAY,CAAEH,GAAG,CAACC,OACpB,CAAC,CAAC,CAEJ,CAAC,OAAS,CACRpD,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAuD,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAACpD,OAAO,CAAE,MAAO,KAAI,CAEzB,mBACEzB,KAAA,CAAC9C,IAAI,EAAC4H,SAAS,MAACC,OAAO,CAAE,CAAE,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eACxClF,KAAA,CAAC9C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAF,QAAA,eAChBpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAJ,QAAA,CAAC,2BAEtC,CAAY,CAAC,cACbpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACE,SAAS,MAAAL,QAAA,CAAC,oGAEtC,CAAY,CAAC,EACT,CAAC,cAGPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACI,EAAE,CAAE,CAAE,CAAAN,QAAA,cACvBpF,IAAA,CAACnC,IAAI,EAAC8H,SAAS,CAAE,CAAE,CAAAP,QAAA,cACjBlF,KAAA,CAACpC,WAAW,EAAAsH,QAAA,eACVlF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEU,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAV,QAAA,eACxDpF,IAAA,CAACf,mBAAmB,EAAC8G,KAAK,CAAC,SAAS,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cACtDhG,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,CAAC,oBAAkB,CAAY,CAAC,EACrD,CAAC,cACNlF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAACL,EAAE,CAAE,CAAEY,EAAE,CAAE,CAAC,CAAEG,UAAU,CAAE,MAAM,CAAEF,KAAK,CAAE,cAAe,CAAE,CAAAX,QAAA,EAC/EzD,OAAO,CAACuE,aAAa,CAAC,OACzB,EAAY,CAAC,cACblG,IAAA,CAACjC,OAAO,EAACmH,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC1BjG,KAAA,CAAC9C,IAAI,EAAC4H,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAG,QAAA,eACzBlF,KAAA,CAAC9C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,eACfpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,8BAAyB,CAAY,CAAC,cACzFlF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAACyE,GAAG,CAAC,OAAK,EAAY,CAAC,EACpD,CAAC,cACPlG,KAAA,CAAC9C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,eACfpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,qCAA0B,CAAY,CAAC,cAC1FlF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAAC0E,IAAI,CAAC,OAAK,EAAY,CAAC,EACrD,CAAC,EACH,CAAC,EACI,CAAC,CACV,CAAC,CACH,CAAC,cAGPrG,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACI,EAAE,CAAE,CAAE,CAAAN,QAAA,cACvBpF,IAAA,CAACnC,IAAI,EAAC8H,SAAS,CAAE,CAAE,CAAAP,QAAA,cACjBlF,KAAA,CAACpC,WAAW,EAAAsH,QAAA,eACVlF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEU,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAV,QAAA,eACxDpF,IAAA,CAACb,QAAQ,EAAC4G,KAAK,CAAC,SAAS,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC3ChG,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,CAAC,iBAAe,CAAY,CAAC,EAClD,CAAC,cACNlF,KAAA,CAAC9C,IAAI,EAAC4H,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAG,QAAA,eACzBpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,cACflF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEoB,SAAS,CAAE,QAAS,CAAE,CAAAlB,QAAA,eAC/BpF,IAAA,CAACX,IAAI,EAAC6F,EAAE,CAAE,CAAEa,KAAK,CAAE,SAAS,CAAEQ,QAAQ,CAAE,EAAG,CAAE,CAAE,CAAC,cAChDrG,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAAC6E,cAAc,CAACC,KAAK,CAACC,KAAK,CAAC,GAAC,EAAY,CAAC,cAC3E1G,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,UAAQ,CAAY,CAAC,cACxElF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,SAAS,CAAAH,QAAA,EAAC,GAAC,CAACzD,OAAO,CAAC6E,cAAc,CAACC,KAAK,CAACE,UAAU,CAAC,IAAE,EAAY,CAAC,EACpF,CAAC,CACF,CAAC,cACP3G,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,cACflF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEoB,SAAS,CAAE,QAAS,CAAE,CAAAlB,QAAA,eAC/BpF,IAAA,CAACZ,MAAM,EAAC8F,EAAE,CAAE,CAAEa,KAAK,CAAE,SAAS,CAAEQ,QAAQ,CAAE,EAAG,CAAE,CAAE,CAAC,cAClDrG,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAAC6E,cAAc,CAACI,OAAO,CAACF,KAAK,CAAC,GAAC,EAAY,CAAC,cAC7E1G,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,cAAS,CAAY,CAAC,cACzElF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,SAAS,CAAAH,QAAA,EAAC,GAAC,CAACzD,OAAO,CAAC6E,cAAc,CAACI,OAAO,CAACD,UAAU,CAAC,IAAE,EAAY,CAAC,EACtF,CAAC,CACF,CAAC,cACP3G,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,cACflF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEoB,SAAS,CAAE,QAAS,CAAE,CAAAlB,QAAA,eAC/BpF,IAAA,CAACV,OAAO,EAAC4F,EAAE,CAAE,CAAEa,KAAK,CAAE,SAAS,CAAEQ,QAAQ,CAAE,EAAG,CAAE,CAAE,CAAC,cACnDrG,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAAC6E,cAAc,CAACK,GAAG,CAACH,KAAK,CAAC,GAAC,EAAY,CAAC,cACzE1G,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,SAAO,CAAY,CAAC,cACvElF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,SAAS,CAAAH,QAAA,EAAC,GAAC,CAACzD,OAAO,CAAC6E,cAAc,CAACK,GAAG,CAACF,UAAU,CAAC,IAAE,EAAY,CAAC,EAClF,CAAC,CACF,CAAC,EACH,CAAC,EACI,CAAC,CACV,CAAC,CACH,CAAC,cAGP3G,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAF,QAAA,cAChBpF,IAAA,CAACnC,IAAI,EAAC8H,SAAS,CAAE,CAAE,CAAAP,QAAA,cACjBlF,KAAA,CAACpC,WAAW,EAAAsH,QAAA,eACVlF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEU,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAV,QAAA,eACxDpF,IAAA,CAACd,SAAS,EAAC6G,KAAK,CAAC,SAAS,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC5ChG,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,CAAC,wBAAsB,CAAY,CAAC,EACzD,CAAC,cACNlF,KAAA,CAAC9C,IAAI,EAAC4H,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAG,QAAA,eACzBpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACI,EAAE,CAAE,CAAE,CAAAN,QAAA,cACvBlF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEoB,SAAS,CAAE,QAAS,CAAE,CAAAlB,QAAA,eAC/BlF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAACmF,SAAS,CAACC,IAAI,CAAC,GAAC,EAAY,CAAC,cAC/D/G,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,kBAAgB,CAAY,CAAC,EAC7E,CAAC,CACF,CAAC,cACPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACI,EAAE,CAAE,CAAE,CAAAN,QAAA,cACvBlF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEoB,SAAS,CAAE,QAAS,CAAE,CAAAlB,QAAA,eAC/BlF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAACmF,SAAS,CAACE,QAAQ,CAAC,GAAC,EAAY,CAAC,cACnEhH,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,2BAAsB,CAAY,CAAC,EACnF,CAAC,CACF,CAAC,cACPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACI,EAAE,CAAE,CAAE,CAAAN,QAAA,cACvBlF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEoB,SAAS,CAAE,QAAS,CAAE,CAAAlB,QAAA,eAC/BlF,KAAA,CAAC5C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAAAH,QAAA,EAAEzD,OAAO,CAACmF,SAAS,CAACG,KAAK,CAAC,GAAC,EAAY,CAAC,cAChEjH,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,gBAAgB,CAAAX,QAAA,CAAC,qBAAgB,CAAY,CAAC,EAC7E,CAAC,CACF,CAAC,EACH,CAAC,EACI,CAAC,CACV,CAAC,CACH,CAAC,cAGPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAF,QAAA,cAChBpF,IAAA,CAACnC,IAAI,EAAC8H,SAAS,CAAE,CAAE,CAAAP,QAAA,cACjBlF,KAAA,CAACpC,WAAW,EAAAsH,QAAA,eACVpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAJ,QAAA,CAAC,mCAEtC,CAAY,CAAC,cACblF,KAAA,CAACzB,IAAI,EACHuD,KAAK,CAAEkF,QAAS,CAChBC,QAAQ,CAAEA,CAAChE,KAAK,CAAEC,QAAQ,GAAKgE,WAAW,CAAChE,QAAQ,CAAE,CACrDmC,OAAO,CAAC,WAAW,CACnBL,EAAE,CAAE,CAAEY,EAAE,CAAE,CAAE,CAAE,CAAAV,QAAA,eAEdpF,IAAA,CAACtB,GAAG,EAACuD,KAAK,CAAC,OAAO,CAAE,CAAC,cACrBjC,IAAA,CAACtB,GAAG,EAACuD,KAAK,CAAC,SAAS,CAAE,CAAC,cACvBjC,IAAA,CAACtB,GAAG,EAACuD,KAAK,CAAC,UAAO,CAAE,CAAC,cACrBjC,IAAA,CAACtB,GAAG,EAACuD,KAAK,CAAC,WAAW,CAAE,CAAC,EACrB,CAAC,CAENiF,QAAQ,GAAK,CAAC,eACbhH,KAAA,CAAC3C,GAAG,EAAA6H,QAAA,eACFpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAJ,QAAA,CAAC,kCAE7C,CAAY,CAAC,cACblF,KAAA,CAAC7B,IAAI,EAAA+G,QAAA,eACHlF,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACT,cAAc,EAACwG,KAAK,CAAC,SAAS,CAAE,CAAC,CACtB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,2BAA2B,CACnCC,SAAS,CAAE,oBAAoBC,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAACuE,aAAa,CAAG,IAAI,CAAC,cAAcqB,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAAC6E,cAAc,CAACC,KAAK,CAACC,KAAK,CAAG,GAAG,CAAC,4BAA4Ba,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAAC6E,cAAc,CAACI,OAAO,CAACF,KAAK,CAAG,GAAG,CAAC,wCAAyC,CACrQ,CAAC,EACM,CAAC,cACXxG,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACX,IAAI,EAAC0G,KAAK,CAAC,SAAS,CAAE,CAAC,CACZ,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,2BAA2B,CACnCC,SAAS,CAAE,uBAAuBC,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAACuE,aAAa,CAAG,GAAG,CAAC,cAAcqB,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAAC6E,cAAc,CAACC,KAAK,CAACC,KAAK,CAAG,GAAG,CAAC,kDAAmD,CAC/L,CAAC,EACM,CAAC,cACXxG,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACd,SAAS,EAAC6G,KAAK,CAAC,SAAS,CAAE,CAAC,CACjB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,aAAa,CACrBC,SAAS,CAAC,gGAAoF,CAC/F,CAAC,EACM,CAAC,EACP,CAAC,EACJ,CACN,CAEAJ,QAAQ,GAAK,CAAC,eACbhH,KAAA,CAAC3C,GAAG,EAAA6H,QAAA,eACFpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAJ,QAAA,CAAC,4BAE7C,CAAY,CAAC,cACblF,KAAA,CAAC7B,IAAI,EAAA+G,QAAA,eACHlF,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACX,IAAI,EAAC0G,KAAK,CAAC,SAAS,CAAE,CAAC,CACZ,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,mBAAmB,CAC3BC,SAAS,CAAE,GAAG9G,QAAQ,CAACU,iBAAiB,GAAK,MAAM,EAAIV,QAAQ,CAACU,iBAAiB,GAAK,WAAW,CAAG,QAAQ,CAAG,QAAQ,yEAA0E,CAClM,CAAC,EACM,CAAC,cACXhB,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACd,SAAS,EAAC6G,KAAK,CAAC,SAAS,CAAE,CAAC,CACjB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,8BAA8B,CACtCC,SAAS,CAAE,oHAAqH,CACjI,CAAC,EACM,CAAC,cACXpH,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACP,OAAO,EAACsG,KAAK,CAAC,SAAS,CAAE,CAAC,CACf,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,iBAAc,CACtBC,SAAS,CAAC,6FAA0F,CACrG,CAAC,EACM,CAAC,EACP,CAAC,EACJ,CACN,CAEAJ,QAAQ,GAAK,CAAC,eACbhH,KAAA,CAAC3C,GAAG,EAAA6H,QAAA,eACFpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAJ,QAAA,CAAC,gCAE7C,CAAY,CAAC,cACblF,KAAA,CAAC7B,IAAI,EAAA+G,QAAA,eACHlF,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACN,KAAK,EAACqG,KAAK,CAAC,SAAS,CAAE,CAAC,CACb,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,oCAAiC,CACzCC,SAAS,CAAE,aAAaC,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAAC6E,cAAc,CAACC,KAAK,CAACC,KAAK,CAAG,IAAI,CAAC,oBAAoBa,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAAC6E,cAAc,CAACI,OAAO,CAACF,KAAK,CAAG,IAAI,CAAC,sDAAuD,CAChN,CAAC,EACM,CAAC,cACXxG,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACL,UAAU,EAACoG,KAAK,CAAC,SAAS,CAAE,CAAC,CAClB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,mCAAgC,CACxCC,SAAS,CAAE,sBAAsBC,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAACuE,aAAa,CAAG,GAAG,CAAC,cAAcqB,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAAC6E,cAAc,CAACC,KAAK,CAACC,KAAK,CAAG,GAAG,CAAC,kBAAkBa,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAAC6E,cAAc,CAACI,OAAO,CAACF,KAAK,CAAG,GAAG,CAAC,wCAAyC,CAC5P,CAAC,EACM,CAAC,cACXxG,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACd,SAAS,EAAC6G,KAAK,CAAC,SAAS,CAAE,CAAC,CACjB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,kBAAe,CACvBC,SAAS,CAAC,+GAA4G,CACvH,CAAC,EACM,CAAC,EACP,CAAC,EACJ,CACN,CAEAJ,QAAQ,GAAK,CAAC,eACbhH,KAAA,CAAC3C,GAAG,EAAA6H,QAAA,eACFpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAJ,QAAA,CAAC,uBAE7C,CAAY,CAAC,cACblF,KAAA,CAAC7B,IAAI,EAAA+G,QAAA,eACHlF,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACrB,cAAc,EAACoH,KAAK,CAAC,SAAS,CAAE,CAAC,CACtB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,iCAA8B,CACtCC,SAAS,CAAE,gDAAgDC,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAACuE,aAAa,CAAG,GAAG,CAAC,gCAAgCqB,IAAI,CAACC,KAAK,CAAC7F,OAAO,CAACuE,aAAa,CAAG,GAAG,CAAC,kCAAmC,CAC7M,CAAC,EACM,CAAC,cACXhG,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACT,cAAc,EAACwG,KAAK,CAAC,SAAS,CAAE,CAAC,CACtB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,0BAAuB,CAC/BC,SAAS,CAAC,yGAAmG,CAC9G,CAAC,EACM,CAAC,cACXpH,KAAA,CAAC5B,QAAQ,EAAA8G,QAAA,eACPpF,IAAA,CAACxB,YAAY,EAAA4G,QAAA,cACXpF,IAAA,CAACJ,WAAW,EAACmG,KAAK,CAAC,SAAS,CAAE,CAAC,CACnB,CAAC,cACf/F,IAAA,CAACzB,YAAY,EACX8I,OAAO,CAAC,8BAAwB,CAChCC,SAAS,CAAC,uLAAwK,CACnL,CAAC,EACM,CAAC,EACP,CAAC,EACJ,CACN,EACU,CAAC,CACV,CAAC,CACH,CAAC,EACH,CAAC,CAEX,CAAC,CAED;AACApK,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAuK,UAAU,CAAGlF,IAAI,CAACC,GAAG,CAAC,CAAC,CAAGF,eAAe,CAACU,OAAO,CAEvD;AACAlD,iBAAiB,CAAC4H,yBAAyB,CAAC,qBAAqB,CAAED,UAAU,CAAE,CAC7ElH,MAAM,CAAEA,MAAM,EAAI,WACpB,CAAC,CAAC,CAEF;AACAkC,gBAAgB,CAACO,OAAO,CAAG,CAAC,CAE5B;AACA,KAAM,CAAA2E,cAAc,CAAGC,WAAW,CAAC,IAAM,CACvC;AACA,GAAInF,gBAAgB,CAACO,OAAO,CAAG,CAAC,CAAE,CAChClD,iBAAiB,CAAC+H,mBAAmB,CAAC,sBAAsB,CAAE,CAC5DC,0BAA0B,CAAErF,gBAAgB,CAACO,OAAO,CACpDN,cAAc,CAAEA,cAAc,CAACM,OAAO,CACtC+E,UAAU,CAAEpG,OAAO,GAAK,IAC1B,CAAC,CAAC,CAEF;AACAc,gBAAgB,CAACO,OAAO,CAAG,CAAC,CAC9B,CACF,CAAC,CAAE,KAAK,CAAC,CAAE;AAEX;AACA,MAAO,IAAM,CACXgF,aAAa,CAACL,cAAc,CAAC,CAC7B;AACA7H,iBAAiB,CAACmI,qBAAqB,CAAC,qBAAqB,CAAE,CAC7DC,eAAe,CAAE3F,IAAI,CAACC,GAAG,CAAC,CAAC,CAAGF,eAAe,CAACU,OAAO,CACrDmF,gBAAgB,CAAExG,OAAO,GAAK,IAChC,CAAC,CAAC,CACJ,CAAC,CACH,CAAC,CAAE,CAACpB,MAAM,CAAEoB,OAAO,CAAC,CAAC,CAErB;AACA,KAAM,CAACyG,SAAS,CAAEC,YAAY,CAAC,CAAGpL,QAAQ,CAAC,CAAC,CAAC,CAE7C,KAAM,CAAAqL,eAAe,CAAGA,CAACnF,KAAK,CAAEC,QAAQ,GAAK,CAC3CiF,YAAY,CAACjF,QAAQ,CAAC,CACxB,CAAC,CAED,mBACElD,KAAA,CAAC3C,GAAG,EAAA6H,QAAA,eACFlF,KAAA,CAAC7C,KAAK,EAAC6H,EAAE,CAAE,CAAEqD,CAAC,CAAE,CAAC,CAAEzC,EAAE,CAAE,CAAE,CAAE,CAAAV,QAAA,eACzBpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAJ,QAAA,CAAC,0BAEtC,CAAY,CAAC,cACbpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACE,SAAS,MAAAL,QAAA,CAAC,4HAEtC,CAAY,CAAC,CAEZ3D,KAAK,eACJzB,IAAA,CAACpC,KAAK,EAAC4K,QAAQ,CAAC,OAAO,CAACtD,EAAE,CAAE,CAAEY,EAAE,CAAE,CAAE,CAAE,CAAAV,QAAA,CACnC3D,KAAK,CACD,CACR,cAEDzB,IAAA,SAAMyI,QAAQ,CAAE3E,YAAa,CAAAsB,QAAA,cAC3BlF,KAAA,CAAC9C,IAAI,EAAC4H,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAG,QAAA,eAEzBpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAF,QAAA,cAChBpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAJ,QAAA,CAAC,2BAEtC,CAAY,CAAC,CACT,CAAC,cAEPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBpF,IAAA,CAACxC,SAAS,EACRmL,SAAS,MACT1G,KAAK,CAAC,YAAY,CAClBa,IAAI,CAAC,QAAQ,CACb8F,IAAI,CAAC,QAAQ,CACb5G,KAAK,CAAExB,QAAQ,CAACE,MAAO,CACvByG,QAAQ,CAAEvE,YAAa,CACvBnB,KAAK,CAAE,CAAC,CAACI,UAAU,CAACnB,MAAO,CAC3BmI,UAAU,CAAEhH,UAAU,CAACnB,MAAO,CAC9BoI,UAAU,CAAE,CACVC,cAAc,cAAE/I,IAAA,CAACnB,aAAa,EAACkH,KAAK,CAAC,QAAQ,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CAChE,CAAE,CACH,CAAC,CACE,CAAC,cAEPhG,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBpF,IAAA,CAACxC,SAAS,EACRmL,SAAS,MACT1G,KAAK,CAAC,aAAa,CACnBa,IAAI,CAAC,QAAQ,CACb8F,IAAI,CAAC,QAAQ,CACb5G,KAAK,CAAExB,QAAQ,CAACG,MAAO,CACvBwG,QAAQ,CAAEvE,YAAa,CACvBnB,KAAK,CAAE,CAAC,CAACI,UAAU,CAAClB,MAAO,CAC3BkI,UAAU,CAAEhH,UAAU,CAAClB,MAAO,CAC9BmI,UAAU,CAAE,CACVC,cAAc,cAAE/I,IAAA,CAACpB,UAAU,EAACmH,KAAK,CAAC,QAAQ,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CAC7D,CAAE,CACH,CAAC,CACE,CAAC,cAEPhG,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBpF,IAAA,CAACxC,SAAS,EACRmL,SAAS,MACT1G,KAAK,CAAC,QAAK,CACXa,IAAI,CAAC,KAAK,CACV8F,IAAI,CAAC,QAAQ,CACb5G,KAAK,CAAExB,QAAQ,CAACI,GAAI,CACpBuG,QAAQ,CAAEvE,YAAa,CACvBnB,KAAK,CAAE,CAAC,CAACI,UAAU,CAACjB,GAAI,CACxBiI,UAAU,CAAEhH,UAAU,CAACjB,GAAI,CAC3BkI,UAAU,CAAE,CACVC,cAAc,cAAE/I,IAAA,CAAClB,aAAa,EAACiH,KAAK,CAAC,QAAQ,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CAChE,CAAE,CACH,CAAC,CACE,CAAC,cAEPhG,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBlF,KAAA,CAAClC,WAAW,EAAC2K,SAAS,MAAAvD,QAAA,eACpBpF,IAAA,CAAC/B,UAAU,EAAC+K,EAAE,CAAC,cAAc,CAAA5D,QAAA,CAAC,OAAK,CAAY,CAAC,cAChDlF,KAAA,CAAChC,MAAM,EACL+K,OAAO,CAAC,cAAc,CACtBnG,IAAI,CAAC,QAAQ,CACbd,KAAK,CAAExB,QAAQ,CAACK,MAAO,CACvBsG,QAAQ,CAAEvE,YAAa,CACvBX,KAAK,CAAC,OAAO,CAAAmD,QAAA,eAEbpF,IAAA,CAACtC,QAAQ,EAACsE,KAAK,CAAC,MAAM,CAAAoD,QAAA,CAAC,OAAK,CAAU,CAAC,cACvCpF,IAAA,CAACtC,QAAQ,EAACsE,KAAK,CAAC,QAAQ,CAAAoD,QAAA,CAAC,OAAK,CAAU,CAAC,EACnC,CAAC,EACE,CAAC,CACV,CAAC,cAEPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBlF,KAAA,CAAClC,WAAW,EAAC2K,SAAS,MAAAvD,QAAA,eACpBpF,IAAA,CAAC/B,UAAU,EAAC+K,EAAE,CAAC,sBAAsB,CAAA5D,QAAA,CAAC,sBAAiB,CAAY,CAAC,cACpEpF,IAAA,CAAC9B,MAAM,EACL+K,OAAO,CAAC,sBAAsB,CAC9BnG,IAAI,CAAC,eAAe,CACpBd,KAAK,CAAExB,QAAQ,CAACM,aAAc,CAC9BqG,QAAQ,CAAEvE,YAAa,CACvBX,KAAK,CAAC,sBAAmB,CAAAmD,QAAA,CAExBrD,cAAc,CAACmH,GAAG,CAAEC,KAAK,eACxBnJ,IAAA,CAACtC,QAAQ,EAAmBsE,KAAK,CAAEmH,KAAK,CAACnH,KAAM,CAAAoD,QAAA,CAC5C+D,KAAK,CAAClH,KAAK,EADCkH,KAAK,CAACnH,KAEX,CACX,CAAC,CACI,CAAC,cACThC,IAAA,CAAC5B,cAAc,EAAAgH,QAAA,CAAC,yCAAoC,CAAgB,CAAC,EAC1D,CAAC,CACV,CAAC,cAGPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACJ,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,cAC/BpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAJ,QAAA,CAAC,8BAEtC,CAAY,CAAC,CACT,CAAC,cAEPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBlF,KAAA,CAAClC,WAAW,EAAC2K,SAAS,MAAAvD,QAAA,eACpBpF,IAAA,CAAC/B,UAAU,EAAC+K,EAAE,CAAC,aAAa,CAAA5D,QAAA,CAAC,oBAAkB,CAAY,CAAC,cAC5DpF,IAAA,CAAC9B,MAAM,EACL+K,OAAO,CAAC,aAAa,CACrBnG,IAAI,CAAC,OAAO,CACZd,KAAK,CAAExB,QAAQ,CAACO,KAAM,CACtBoG,QAAQ,CAAEvE,YAAa,CACvBX,KAAK,CAAC,oBAAoB,CAAAmD,QAAA,CAEzBlD,cAAc,CAACgH,GAAG,CAAEE,IAAI,eACvBpJ,IAAA,CAACtC,QAAQ,EAAkBsE,KAAK,CAAEoH,IAAI,CAACpH,KAAM,CAAAoD,QAAA,CAC1CgE,IAAI,CAACnH,KAAK,EADEmH,IAAI,CAACpH,KAEV,CACX,CAAC,CACI,CAAC,EACE,CAAC,CACV,CAAC,cAEP9B,KAAA,CAAC9C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,eACvBpF,IAAA,CAAC1C,UAAU,EAACkI,YAAY,MAAAJ,QAAA,CAAC,mDAEzB,CAAY,CAAC,cACblF,KAAA,CAAC3C,GAAG,EAAC2H,EAAE,CAAE,CAAEU,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAT,QAAA,eACjDpF,IAAA,CAACrB,cAAc,EAACoH,KAAK,CAAC,QAAQ,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAChDhG,IAAA,CAAC7B,MAAM,EACL2E,IAAI,CAAC,kBAAkB,CACvBd,KAAK,CAAExB,QAAQ,CAACQ,gBAAiB,CACjCmG,QAAQ,CAAEjE,kBAAmB,CAC7BmG,GAAG,CAAE,CAAE,CACPC,GAAG,CAAE,GAAI,CACTC,IAAI,CAAE,EAAG,CACTC,KAAK,CAAE,CACL,CAAExH,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,GAAI,CAAC,CACxB,CAAED,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC1B,CAAED,KAAK,CAAE,GAAG,CAAEC,KAAK,CAAE,KAAM,CAAC,CAC5B,CAAED,KAAK,CAAE,GAAG,CAAEC,KAAK,CAAE,KAAM,CAAC,CAC5B,CAAED,KAAK,CAAE,GAAG,CAAEC,KAAK,CAAE,KAAM,CAAC,CAC5B,CACFwH,iBAAiB,CAAC,MAAM,CACxBvE,EAAE,CAAE,CAAEwE,IAAI,CAAE,CAAE,CAAE,CACjB,CAAC,EACC,CAAC,EACF,CAAC,cAGP1J,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAF,QAAA,cAChBpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAJ,QAAA,CAAC,mCAEtC,CAAY,CAAC,CACT,CAAC,cAEPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAChD,EAAE,CAAE,CAAE,CAAAN,QAAA,cAC9BlF,KAAA,CAAClC,WAAW,EAAC2K,SAAS,MAAAvD,QAAA,eACpBpF,IAAA,CAAC/B,UAAU,EAAAmH,QAAA,CAAC,kCAA6B,CAAY,CAAC,cACtDpF,IAAA,CAAC9B,MAAM,EACL4E,IAAI,CAAC,cAAc,CACnBd,KAAK,CAAExB,QAAQ,CAACS,YAAa,CAC7BkG,QAAQ,CAAEvE,YAAa,CACvBX,KAAK,CAAC,kCAA+B,CAAAmD,QAAA,CAEpCjD,aAAa,CAAC+G,GAAG,CAAEN,IAAI,eACtB5I,IAAA,CAACtC,QAAQ,EAAkBsE,KAAK,CAAE4G,IAAI,CAAC5G,KAAM,CAAAoD,QAAA,CAC1CwD,IAAI,CAAC3G,KAAK,EADE2G,IAAI,CAAC5G,KAEV,CACX,CAAC,CACI,CAAC,cACThC,IAAA,CAAC5B,cAAc,EAAAgH,QAAA,CAAC,kEAAuD,CAAgB,CAAC,EAC7E,CAAC,CACV,CAAC,cAEPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAChD,EAAE,CAAE,CAAE,CAAAN,QAAA,cAC9BlF,KAAA,CAAClC,WAAW,EAAC2K,SAAS,MAAAvD,QAAA,eACpBpF,IAAA,CAAC/B,UAAU,EAAAmH,QAAA,CAAC,sBAAiB,CAAY,CAAC,cAC1CpF,IAAA,CAAC9B,MAAM,EACL4E,IAAI,CAAC,mBAAmB,CACxBd,KAAK,CAAExB,QAAQ,CAACU,iBAAkB,CAClCiG,QAAQ,CAAEvE,YAAa,CACvBX,KAAK,CAAC,sBAAmB,CAAAmD,QAAA,CAExBhD,mBAAmB,CAAC8G,GAAG,CAAES,SAAS,eACjC3J,IAAA,CAACtC,QAAQ,EAAuBsE,KAAK,CAAE2H,SAAS,CAAC3H,KAAM,CAAAoD,QAAA,CACpDuE,SAAS,CAAC1H,KAAK,EADH0H,SAAS,CAAC3H,KAEf,CACX,CAAC,CACI,CAAC,cACThC,IAAA,CAAC5B,cAAc,EAAAgH,QAAA,CAAC,8CAAsC,CAAgB,CAAC,EAC5D,CAAC,CACV,CAAC,cAEPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAChD,EAAE,CAAE,CAAE,CAAAN,QAAA,cAC9BpF,IAAA,CAACxC,SAAS,EACRmL,SAAS,MACT1G,KAAK,CAAC,4BAA4B,CAClCa,IAAI,CAAC,gBAAgB,CACrB8F,IAAI,CAAC,QAAQ,CACb5G,KAAK,CAAExB,QAAQ,CAACW,cAAe,CAC/BgG,QAAQ,CAAEvE,YAAa,CACvBkG,UAAU,CAAE,CACVC,cAAc,cAAE/I,IAAA,CAACrB,cAAc,EAACoH,KAAK,CAAC,QAAQ,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CACjE,CAAE,CACH,CAAC,CACE,CAAC,cAEPhG,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBlF,KAAA,CAAClC,WAAW,EAAC4L,SAAS,CAAC,UAAU,CAAC1E,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eAC9CpF,IAAA,CAAC1C,UAAU,EAACiI,OAAO,CAAC,OAAO,CAACC,YAAY,MAAAJ,QAAA,CAAC,uDAEzC,CAAY,CAAC,cACblF,KAAA,CAAC9C,IAAI,EAAC4H,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAG,QAAA,eACzBpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAAAD,QAAA,cACRpF,IAAA,CAACvC,MAAM,EACL8H,OAAO,CAAE/E,QAAQ,CAACY,aAAa,CAAG,WAAW,CAAG,UAAW,CAC3DyI,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMrJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEY,aAAa,CAAE,IAAI,CAAC,CAAE,CAAAgE,QAAA,CAChE,KAED,CAAQ,CAAC,CACL,CAAC,cACPpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAAAD,QAAA,cACRpF,IAAA,CAACvC,MAAM,EACL8H,OAAO,CAAE,CAAC/E,QAAQ,CAACY,aAAa,CAAG,WAAW,CAAG,UAAW,CAC5DyI,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMrJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEY,aAAa,CAAE,KAAK,CAAEC,SAAS,CAAE,EAAE,CAAEC,SAAS,CAAE,IAAI,CAAC,CAAE,CAAA8D,QAAA,CACjG,KAED,CAAQ,CAAC,CACL,CAAC,EACH,CAAC,EACI,CAAC,CACV,CAAC,CAEN5E,QAAQ,CAACY,aAAa,eACrBlB,KAAA,CAAAE,SAAA,EAAAgF,QAAA,eACEpF,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBlF,KAAA,CAAClC,WAAW,EAAC2K,SAAS,MAAAvD,QAAA,eACpBpF,IAAA,CAAC/B,UAAU,EAAAmH,QAAA,CAAC,wBAAgB,CAAY,CAAC,cACzCpF,IAAA,CAAC9B,MAAM,EACL4E,IAAI,CAAC,WAAW,CAChBd,KAAK,CAAExB,QAAQ,CAACa,SAAU,CAC1B8F,QAAQ,CAAEvE,YAAa,CACvBX,KAAK,CAAC,wBAAkB,CAAAmD,QAAA,CAEvB/C,UAAU,CAAC6G,GAAG,CAAEN,IAAI,eACnB5I,IAAA,CAACtC,QAAQ,EAAkBsE,KAAK,CAAE4G,IAAI,CAAC5G,KAAM,CAAAoD,QAAA,CAC1CwD,IAAI,CAAC3G,KAAK,EADE2G,IAAI,CAAC5G,KAEV,CACX,CAAC,CACI,CAAC,EACE,CAAC,CACV,CAAC,cACPhC,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACoD,EAAE,CAAE,CAAE,CAAAtD,QAAA,cACvBpF,IAAA,CAACxC,SAAS,EACRmL,SAAS,MACT1G,KAAK,CAAC,yCAAmC,CACzCa,IAAI,CAAC,WAAW,CAChB8F,IAAI,CAAC,QAAQ,CACb5G,KAAK,CAAExB,QAAQ,CAACc,SAAU,CAC1B6F,QAAQ,CAAEvE,YAAa,CACvBkG,UAAU,CAAE,CACVC,cAAc,cAAE/I,IAAA,CAACR,KAAK,EAACuG,KAAK,CAAC,QAAQ,CAACb,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAE,CAAE,CAAE,CACxD,CAAE,CACH,CAAC,CACE,CAAC,EACP,CACH,cAEDhG,IAAA,CAAC5C,IAAI,EAACiI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACJ,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,cAC/BpF,IAAA,CAACvC,MAAM,EACLmL,IAAI,CAAC,QAAQ,CACbrD,OAAO,CAAC,WAAW,CACnBsE,IAAI,CAAC,OAAO,CACZE,QAAQ,CAAExI,OAAQ,CAClByI,SAAS,CAAEzI,OAAO,cAAGvB,IAAA,CAACrC,gBAAgB,EAACkM,IAAI,CAAE,EAAG,CAAE,CAAC,cAAG7J,IAAA,CAACjB,QAAQ,GAAE,CAAE,CAAAqG,QAAA,CAElE7D,OAAO,CAAG,oBAAoB,CAAG,sBAAsB,CAClD,CAAC,CACL,CAAC,EACH,CAAC,CACH,CAAC,EACF,CAAC,CAGPI,OAAO,EAAIoD,aAAa,CAAC,CAAC,EACxB,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1E,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}