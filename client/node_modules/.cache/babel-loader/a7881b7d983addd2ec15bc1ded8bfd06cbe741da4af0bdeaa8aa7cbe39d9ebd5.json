{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Grid,Paper,Typography,Box,Divider,CircularProgress,Button,Card,CardContent,LinearProgress,IconButton,Tooltip,Alert}from'@mui/material';import{DirectionsBike,Restaurant,LocalDrink,Timeline,Info,CalendarToday,TrendingUp,TrendingDown,Speed,MonitorWeight,Add,Refresh}from'@mui/icons-material';import{Line,Doughnut,Bar}from'react-chartjs-2';import{Chart as ChartJS,registerables}from'chart.js';import nutritionService from'../../services/nutritionService';// Enregistrer les composants Chart.js\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(...registerables);/**\n * Tableau de bord de nutrition pour afficher les métriques principales\n * et l'historique nutritionnel du cycliste\n */const NutritionDashboard=_ref=>{var _dashboardData$dailyI,_dashboardData$metric,_dashboardData$goals,_dashboardData$dailyI2,_dashboardData$dailyI3,_dashboardData$dailyI4,_dashboardData$dailyI5,_dashboardData$metric2,_dashboardData$dailyI6,_dashboardData$metric3,_dashboardData$metric4,_dashboardData$metric5,_dashboardData$dailyI7,_dashboardData$dailyI8,_dashboardData$dailyI9;let{nutritionData,userId,onRefresh}=_ref;const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[dashboardData,setDashboardData]=useState(null);const[dateRange,setDateRange]=useState('week');// week, month, year\n// Utiliser les données passées en props ou les récupérer si non disponibles\nuseEffect(()=>{if(nutritionData){setDashboardData(nutritionData);}else{fetchDashboardData();}},[nutritionData,userId]);// Récupérer les données de tableau de bord si nécessaire\nconst fetchDashboardData=async()=>{if(!userId)return;try{setLoading(true);setError(null);const data=await nutritionService.getUserNutritionData(userId);// Valider les structures de données essentielles\nif(!data||typeof data!=='object'){throw new Error('Format de données invalide');}// S'assurer que les structures de données nécessaires existent\nif(!data.dailyIntake)data.dailyIntake={calories:0,carbs:0,protein:0,fat:0,hydration:0};if(!data.metrics)data.metrics={weight:70,height:175,bodyFat:15,basalMetabolicRate:1600};if(!data.goals)data.goals={type:'performance',weeklyCalories:0};if(!data.activityLog)data.activityLog=[];setDashboardData(data);}catch(err){console.error('Erreur lors de la récupération des données du tableau de bord:',err);setError('Impossible de charger les données du tableau de bord.');}finally{setLoading(false);}};// Rafraîchir manuellement les données\nconst handleRefresh=()=>{fetchDashboardData();if(onRefresh)onRefresh();};// Changer la plage de dates pour les graphiques\nconst handleDateRangeChange=range=>{setDateRange(range);};// Formatter les données de macronutriments pour le graphique en anneau\nconst getMacroData=()=>{if(!dashboardData||!dashboardData.dailyIntake){return{labels:['Glucides','Protéines','Lipides'],datasets:[{data:[60,20,20],// Valeurs par défaut\nbackgroundColor:['#4CAF50','#2196F3','#FF9800'],borderWidth:1}]};}const{carbs=0,protein=0,fat=0}=dashboardData.dailyIntake;const totalGrams=carbs+protein+fat;if(totalGrams===0){return{labels:['Glucides','Protéines','Lipides'],datasets:[{data:[60,20,20],// Valeurs par défaut\nbackgroundColor:['#4CAF50','#2196F3','#FF9800'],borderWidth:1}]};}return{labels:['Glucides','Protéines','Lipides'],datasets:[{data:[Math.round(carbs/totalGrams*100),Math.round(protein/totalGrams*100),Math.round(fat/totalGrams*100)],backgroundColor:['#4CAF50','#2196F3','#FF9800'],borderWidth:1}]};};// Options pour le graphique en anneau\nconst macroChartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'bottom',labels:{boxWidth:12,padding:15}},tooltip:{callbacks:{label:function(context){return`${context.label}: ${context.raw}%`;}}}},cutout:'70%'};// Formatter les données de calories pour le graphique en ligne\nconst getCalorieData=()=>{if(!dashboardData||!dashboardData.activityLog||!dashboardData.activityLog.length){return{labels:Array.from({length:7},(_,i)=>{const date=new Date();date.setDate(date.getDate()-6+i);return date.toLocaleDateString(undefined,{month:'short',day:'numeric'});}),datasets:[{label:'Calories consommées',data:Array(7).fill(0),borderColor:'#4CAF50',backgroundColor:'rgba(76, 175, 80, 0.1)',tension:0.4,fill:true},{label:'Calories dépensées',data:Array(7).fill(0),borderColor:'#f44336',backgroundColor:'rgba(244, 67, 54, 0.1)',tension:0.4,fill:true}]};}// Prendre les 7 derniers jours pour la semaine, 30 pour le mois, etc.\nconst limit=dateRange==='week'?7:dateRange==='month'?30:365;// Trier les entrées par date et limiter au nombre requis\nconst sortedEntries=[...dashboardData.activityLog].sort((a,b)=>new Date(a.date)-new Date(b.date)).slice(-limit);// Si le nombre d'entrées est inférieur à la limite, ajouter des entrées vides pour compléter\nconst labels=[];const consumedData=[];const burnedData=[];const today=new Date();for(let i=0;i<limit;i++){const date=new Date();date.setDate(today.getDate()-(limit-1)+i);const dateString=date.toISOString().split('T')[0];const entry=sortedEntries.find(e=>e.date===dateString);labels.push(date.toLocaleDateString(undefined,{month:'short',day:'numeric'}));consumedData.push(entry?entry.calories.consumed:null);burnedData.push(entry?entry.calories.burned:null);}return{labels:labels,datasets:[{label:'Calories consommées',data:consumedData,borderColor:'#4CAF50',backgroundColor:'rgba(76, 175, 80, 0.1)',tension:0.4,fill:true},{label:'Calories dépensées',data:burnedData,borderColor:'#f44336',backgroundColor:'rgba(244, 67, 54, 0.1)',tension:0.4,fill:true}]};};// Options pour le graphique en ligne\nconst calorieChartOptions={responsive:true,maintainAspectRatio:false,scales:{y:{beginAtZero:false,title:{display:true,text:'Calories'}},x:{grid:{display:false}}},plugins:{legend:{position:'top'},tooltip:{mode:'index',intersect:false}}};// Formatter les données d'hydratation pour le graphique en barre\nconst getHydrationData=()=>{if(!dashboardData||!dashboardData.activityLog||!dashboardData.activityLog.length){return{labels:Array.from({length:7},(_,i)=>{const date=new Date();date.setDate(date.getDate()-6+i);return date.toLocaleDateString(undefined,{month:'short',day:'numeric'});}),datasets:[{label:'Hydratation (litres)',data:Array(7).fill(0),backgroundColor:'#2196F3',borderColor:'#1976D2',borderWidth:1}]};}// Prendre les 7 derniers jours pour la semaine, 30 pour le mois, etc.\nconst limit=dateRange==='week'?7:dateRange==='month'?30:365;// Générer les données d'hydratation avec la même logique que pour les calories\nconst labels=[];const hydrationData=[];const today=new Date();for(let i=0;i<limit;i++){const date=new Date();date.setDate(today.getDate()-(limit-1)+i);const dateString=date.toISOString().split('T')[0];const entry=dashboardData.activityLog.find(e=>e.date===dateString);labels.push(date.toLocaleDateString(undefined,{month:'short',day:'numeric'}));hydrationData.push(entry?entry.hydration:null);}return{labels:labels,datasets:[{label:'Hydratation (litres)',data:hydrationData,backgroundColor:'#2196F3',borderColor:'#1976D2',borderWidth:1}]};};// Options pour le graphique en barre\nconst hydrationChartOptions={responsive:true,maintainAspectRatio:false,scales:{y:{beginAtZero:true,title:{display:true,text:'Litres'}},x:{grid:{display:false}}},plugins:{legend:{display:false}}};// Calculer le pourcentage d'avancement vers l'objectif calorique\nconst getCalorieProgress=()=>{if(!dashboardData||!dashboardData.dailyIntake||!dashboardData.goals){return 0;}// Valeur par défaut si les données sont manquantes\nconst currentCalories=dashboardData.dailyIntake.calories||0;let targetCalories=2000;// Valeur par défaut\n// Calculer la cible calorique en fonction de l'objectif\nif(dashboardData.metrics&&dashboardData.metrics.basalMetabolicRate){const bmr=dashboardData.metrics.basalMetabolicRate;if(dashboardData.goals.type==='weight-loss'){targetCalories=Math.round(bmr*0.85);}else if(dashboardData.goals.type==='performance'){targetCalories=Math.round(bmr*1.1);}else{targetCalories=bmr;}}if(targetCalories===0)return 0;return Math.min(100,Math.round(currentCalories/targetCalories*100));};// Obtenir la valeur de protéines en g/kg de poids corporel\nconst getProteinPerKg=()=>{if(!dashboardData||!dashboardData.dailyIntake||!dashboardData.metrics){return 0;}const protein=dashboardData.dailyIntake.protein||0;const weight=dashboardData.metrics.weight||70;if(weight===0)return 0;return Math.round(protein/weight*10)/10;};// Calculer le pourcentage d'hydratation par rapport à l'objectif\nconst getHydrationProgress=()=>{if(!dashboardData||!dashboardData.dailyIntake||!dashboardData.metrics){return 0;}const hydration=dashboardData.dailyIntake.hydration||0;const weight=dashboardData.metrics.weight||70;// Recommandation d'hydratation: 35ml par kg de poids corporel\nconst targetHydration=weight*0.035;if(targetHydration===0)return 0;return Math.min(100,Math.round(hydration/targetHydration*100));};// Calculer l'Indice de Masse Corporelle (IMC)\nconst calculateBMI=()=>{if(!dashboardData||!dashboardData.metrics){return 0;}const weight=dashboardData.metrics.weight||70;const height=dashboardData.metrics.height||175;if(height===0)return 0;// IMC = poids (kg) / taille² (m)\nreturn Math.round(weight/Math.pow(height/100,2)*10)/10;};// Rendu du composant\nif(loading){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',my:4},children:/*#__PURE__*/_jsx(CircularProgress,{})});}if(error){return/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},action:/*#__PURE__*/_jsx(Button,{color:\"inherit\",size:\"small\",onClick:handleRefresh,children:\"R\\xE9essayer\"}),children:error});}if(!dashboardData){return/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:3},children:\"Aucune donn\\xE9e nutritionnelle disponible. Commencez \\xE0 enregistrer vos repas pour voir les statistiques.\"});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-end',mb:2},children:/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(Refresh,{}),size:\"small\",onClick:handleRefresh,children:\"Actualiser\"})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:4},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(Restaurant,{sx:{color:'#4CAF50',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Calories\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{my:1},children:((_dashboardData$dailyI=dashboardData.dailyIntake)===null||_dashboardData$dailyI===void 0?void 0:_dashboardData$dailyI.calories)||0}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Objectif: \",Math.round(((_dashboardData$metric=dashboardData.metrics)===null||_dashboardData$metric===void 0?void 0:_dashboardData$metric.basalMetabolicRate)*(((_dashboardData$goals=dashboardData.goals)===null||_dashboardData$goals===void 0?void 0:_dashboardData$goals.type)==='weight-loss'?0.85:1.1))||0,\" kcal\"]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getCalorieProgress(),sx:{mt:1,mb:0.5,height:8,borderRadius:4}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[getCalorieProgress(),\"% de l'objectif\"]}),dashboardData.activityLog&&dashboardData.activityLog.length>0&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",sx:{display:'flex',alignItems:'center'},children:dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance>0?/*#__PURE__*/_jsxs(_Fragment,{children:[\"+\",dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance,\" \",/*#__PURE__*/_jsx(TrendingUp,{fontSize:\"small\",color:\"success\",sx:{ml:0.5}})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance,\" \",/*#__PURE__*/_jsx(TrendingDown,{fontSize:\"small\",color:\"error\",sx:{ml:0.5}})]})})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(Speed,{sx:{color:'#2196F3',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Prot\\xE9ines\"})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{my:1},children:[((_dashboardData$dailyI2=dashboardData.dailyIntake)===null||_dashboardData$dailyI2===void 0?void 0:_dashboardData$dailyI2.protein)||0,\"g\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[Math.round((((_dashboardData$dailyI3=dashboardData.dailyIntake)===null||_dashboardData$dailyI3===void 0?void 0:_dashboardData$dailyI3.protein)||0)/((_dashboardData$dailyI4=dashboardData.dailyIntake)===null||_dashboardData$dailyI4===void 0?void 0:_dashboardData$dailyI4.calories)*400)||0,\" kcal\"]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:Math.min(100,(((_dashboardData$dailyI5=dashboardData.dailyIntake)===null||_dashboardData$dailyI5===void 0?void 0:_dashboardData$dailyI5.protein)||0)/((((_dashboardData$metric2=dashboardData.metrics)===null||_dashboardData$metric2===void 0?void 0:_dashboardData$metric2.weight)||70)*1.6)*100),sx:{mt:1,mb:0.5,height:8,borderRadius:4,'& .MuiLinearProgress-bar':{backgroundColor:'#2196F3'}}}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[getProteinPerKg(),\"g/kg (recommand\\xE9: 1.6-2.0g/kg)\"]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(LocalDrink,{sx:{color:'#03A9F4',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Hydratation\"})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{my:1},children:[((_dashboardData$dailyI6=dashboardData.dailyIntake)===null||_dashboardData$dailyI6===void 0?void 0:_dashboardData$dailyI6.hydration)||0,\"L\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Objectif: \",Math.round((((_dashboardData$metric3=dashboardData.metrics)===null||_dashboardData$metric3===void 0?void 0:_dashboardData$metric3.weight)||70)*0.035*100)/100,\"L\"]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getHydrationProgress(),sx:{mt:1,mb:0.5,height:8,borderRadius:4,'& .MuiLinearProgress-bar':{backgroundColor:'#03A9F4'}}}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[getHydrationProgress(),\"% de l'objectif\"]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(MonitorWeight,{sx:{color:'#9C27B0',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Poids\"})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{my:1},children:[((_dashboardData$metric4=dashboardData.metrics)===null||_dashboardData$metric4===void 0?void 0:_dashboardData$metric4.weight)||0,\"kg\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"IMC: \",calculateBMI()]}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',mt:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",sx:{display:'flex',alignItems:'center'},children:[\"Masse grasse: \",((_dashboardData$metric5=dashboardData.metrics)===null||_dashboardData$metric5===void 0?void 0:_dashboardData$metric5.bodyFat)||0,\"%\"]})})]})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Historique calorique\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:dateRange==='week'?'contained':'outlined',onClick:()=>handleDateRangeChange('week'),sx:{mr:1},children:\"Semaine\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:dateRange==='month'?'contained':'outlined',onClick:()=>handleDateRangeChange('month'),sx:{mr:1},children:\"Mois\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:dateRange==='year'?'contained':'outlined',onClick:()=>handleDateRangeChange('year'),children:\"Ann\\xE9e\"})]})]}),/*#__PURE__*/_jsx(Box,{sx:{height:300},children:/*#__PURE__*/_jsx(Line,{data:getCalorieData(),options:calorieChartOptions})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"R\\xE9partition des macros\"}),/*#__PURE__*/_jsx(Box,{sx:{height:300,display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(Doughnut,{data:getMacroData(),options:macroChartOptions})}),/*#__PURE__*/_jsx(Box,{sx:{mt:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",color:\"text.secondary\",children:\"Glucides\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",align:\"center\",children:[((_dashboardData$dailyI7=dashboardData.dailyIntake)===null||_dashboardData$dailyI7===void 0?void 0:_dashboardData$dailyI7.carbs)||0,\"g\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",color:\"text.secondary\",children:\"Prot\\xE9ines\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",align:\"center\",children:[((_dashboardData$dailyI8=dashboardData.dailyIntake)===null||_dashboardData$dailyI8===void 0?void 0:_dashboardData$dailyI8.protein)||0,\"g\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",color:\"text.secondary\",children:\"Lipides\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",align:\"center\",children:[((_dashboardData$dailyI9=dashboardData.dailyIntake)===null||_dashboardData$dailyI9===void 0?void 0:_dashboardData$dailyI9.fat)||0,\"g\"]})]})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Historique d'hydratation\"}),/*#__PURE__*/_jsx(Box,{sx:{height:250},children:/*#__PURE__*/_jsx(Bar,{data:getHydrationData(),options:hydrationChartOptions})})]})})]}),dashboardData.activityLog&&dashboardData.activityLog.length>0?/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,mt:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Derni\\xE8res notes\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:dashboardData.activityLog.slice(-3).reverse().map((log,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:[/*#__PURE__*/_jsx(CalendarToday,{fontSize:\"small\",sx:{mr:0.5,verticalAlign:'middle'}}),new Date(log.date).toLocaleDateString()]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",color:log.calories.balance>0?'success.main':'error.main',children:[log.calories.balance>0?'+':'',log.calories.balance,\" kcal\"]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:log.notes||'Aucune note'})]})})},index))})]}):/*#__PURE__*/_jsx(Box,{sx:{mt:3,textAlign:'center'},children:/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{display:'inline-flex',textAlign:'left'},children:\"Aucun historique d'activit\\xE9 disponible. Commencez \\xE0 enregistrer vos repas et activit\\xE9s.\"})})]});};export default NutritionDashboard;","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","Box","Divider","CircularProgress","Button","Card","CardContent","LinearProgress","IconButton","Tooltip","Alert","DirectionsBike","Restaurant","LocalDrink","Timeline","Info","CalendarToday","TrendingUp","TrendingDown","Speed","MonitorWeight","Add","Refresh","Line","Doughnut","Bar","Chart","ChartJS","registerables","nutritionService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","NutritionDashboard","_ref","_dashboardData$dailyI","_dashboardData$metric","_dashboardData$goals","_dashboardData$dailyI2","_dashboardData$dailyI3","_dashboardData$dailyI4","_dashboardData$dailyI5","_dashboardData$metric2","_dashboardData$dailyI6","_dashboardData$metric3","_dashboardData$metric4","_dashboardData$metric5","_dashboardData$dailyI7","_dashboardData$dailyI8","_dashboardData$dailyI9","nutritionData","userId","onRefresh","loading","setLoading","error","setError","dashboardData","setDashboardData","dateRange","setDateRange","fetchDashboardData","data","getUserNutritionData","Error","dailyIntake","calories","carbs","protein","fat","hydration","metrics","weight","height","bodyFat","basalMetabolicRate","goals","type","weeklyCalories","activityLog","err","console","handleRefresh","handleDateRangeChange","range","getMacroData","labels","datasets","backgroundColor","borderWidth","totalGrams","Math","round","macroChartOptions","responsive","maintainAspectRatio","plugins","legend","position","boxWidth","padding","tooltip","callbacks","label","context","raw","cutout","getCalorieData","length","Array","from","_","i","date","Date","setDate","getDate","toLocaleDateString","undefined","month","day","fill","borderColor","tension","limit","sortedEntries","sort","a","b","slice","consumedData","burnedData","today","dateString","toISOString","split","entry","find","e","push","consumed","burned","calorieChartOptions","scales","y","beginAtZero","title","display","text","x","grid","mode","intersect","getHydrationData","hydrationData","hydrationChartOptions","getCalorieProgress","currentCalories","targetCalories","bmr","min","getProteinPerKg","getHydrationProgress","targetHydration","calculateBMI","pow","sx","justifyContent","my","children","severity","mb","action","color","size","onClick","startIcon","container","spacing","item","xs","sm","md","elevation","p","alignItems","mr","variant","value","mt","borderRadius","balance","fontSize","ml","options","align","reverse","map","log","index","verticalAlign","notes","textAlign"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/nutrition/NutritionDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Grid, \n  Paper, \n  Typography, \n  Box, \n  Divider, \n  CircularProgress, \n  Button, \n  Card, \n  CardContent, \n  LinearProgress,\n  IconButton,\n  Tooltip,\n  Alert\n} from '@mui/material';\nimport { \n  DirectionsBike, \n  Restaurant, \n  LocalDrink, \n  Timeline, \n  Info, \n  CalendarToday,\n  TrendingUp,\n  TrendingDown,\n  Speed,\n  MonitorWeight,\n  Add,\n  Refresh\n} from '@mui/icons-material';\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, registerables } from 'chart.js';\nimport nutritionService from '../../services/nutritionService';\n\n// Enregistrer les composants Chart.js\nChartJS.register(...registerables);\n\n/**\n * Tableau de bord de nutrition pour afficher les métriques principales\n * et l'historique nutritionnel du cycliste\n */\nconst NutritionDashboard = ({ nutritionData, userId, onRefresh }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [dateRange, setDateRange] = useState('week'); // week, month, year\n\n  // Utiliser les données passées en props ou les récupérer si non disponibles\n  useEffect(() => {\n    if (nutritionData) {\n      setDashboardData(nutritionData);\n    } else {\n      fetchDashboardData();\n    }\n  }, [nutritionData, userId]);\n\n  // Récupérer les données de tableau de bord si nécessaire\n  const fetchDashboardData = async () => {\n    if (!userId) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await nutritionService.getUserNutritionData(userId);\n      \n      // Valider les structures de données essentielles\n      if (!data || typeof data !== 'object') {\n        throw new Error('Format de données invalide');\n      }\n      \n      // S'assurer que les structures de données nécessaires existent\n      if (!data.dailyIntake) data.dailyIntake = { calories: 0, carbs: 0, protein: 0, fat: 0, hydration: 0 };\n      if (!data.metrics) data.metrics = { weight: 70, height: 175, bodyFat: 15, basalMetabolicRate: 1600 };\n      if (!data.goals) data.goals = { type: 'performance', weeklyCalories: 0 };\n      if (!data.activityLog) data.activityLog = [];\n      \n      setDashboardData(data);\n    } catch (err) {\n      console.error('Erreur lors de la récupération des données du tableau de bord:', err);\n      setError('Impossible de charger les données du tableau de bord.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Rafraîchir manuellement les données\n  const handleRefresh = () => {\n    fetchDashboardData();\n    if (onRefresh) onRefresh();\n  };\n\n  // Changer la plage de dates pour les graphiques\n  const handleDateRangeChange = (range) => {\n    setDateRange(range);\n  };\n\n  // Formatter les données de macronutriments pour le graphique en anneau\n  const getMacroData = () => {\n    if (!dashboardData || !dashboardData.dailyIntake) {\n      return {\n        labels: ['Glucides', 'Protéines', 'Lipides'],\n        datasets: [{\n          data: [60, 20, 20], // Valeurs par défaut\n          backgroundColor: ['#4CAF50', '#2196F3', '#FF9800'],\n          borderWidth: 1\n        }]\n      };\n    }\n\n    const { carbs = 0, protein = 0, fat = 0 } = dashboardData.dailyIntake;\n    const totalGrams = carbs + protein + fat;\n    \n    if (totalGrams === 0) {\n      return {\n        labels: ['Glucides', 'Protéines', 'Lipides'],\n        datasets: [{\n          data: [60, 20, 20], // Valeurs par défaut\n          backgroundColor: ['#4CAF50', '#2196F3', '#FF9800'],\n          borderWidth: 1\n        }]\n      };\n    }\n    \n    return {\n      labels: ['Glucides', 'Protéines', 'Lipides'],\n      datasets: [{\n        data: [\n          Math.round((carbs / totalGrams) * 100),\n          Math.round((protein / totalGrams) * 100),\n          Math.round((fat / totalGrams) * 100)\n        ],\n        backgroundColor: ['#4CAF50', '#2196F3', '#FF9800'],\n        borderWidth: 1\n      }]\n    };\n  };\n\n  // Options pour le graphique en anneau\n  const macroChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          boxWidth: 12,\n          padding: 15\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `${context.label}: ${context.raw}%`;\n          }\n        }\n      }\n    },\n    cutout: '70%'\n  };\n\n  // Formatter les données de calories pour le graphique en ligne\n  const getCalorieData = () => {\n    if (!dashboardData || !dashboardData.activityLog || !dashboardData.activityLog.length) {\n      return {\n        labels: Array.from({ length: 7 }, (_, i) => {\n          const date = new Date();\n          date.setDate(date.getDate() - 6 + i);\n          return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\n        }),\n        datasets: [\n          {\n            label: 'Calories consommées',\n            data: Array(7).fill(0),\n            borderColor: '#4CAF50',\n            backgroundColor: 'rgba(76, 175, 80, 0.1)',\n            tension: 0.4,\n            fill: true\n          },\n          {\n            label: 'Calories dépensées',\n            data: Array(7).fill(0),\n            borderColor: '#f44336',\n            backgroundColor: 'rgba(244, 67, 54, 0.1)',\n            tension: 0.4,\n            fill: true\n          }\n        ]\n      };\n    }\n\n    // Prendre les 7 derniers jours pour la semaine, 30 pour le mois, etc.\n    const limit = dateRange === 'week' ? 7 : (dateRange === 'month' ? 30 : 365);\n    \n    // Trier les entrées par date et limiter au nombre requis\n    const sortedEntries = [...dashboardData.activityLog]\n      .sort((a, b) => new Date(a.date) - new Date(b.date))\n      .slice(-limit);\n\n    // Si le nombre d'entrées est inférieur à la limite, ajouter des entrées vides pour compléter\n    const labels = [];\n    const consumedData = [];\n    const burnedData = [];\n    \n    const today = new Date();\n    \n    for (let i = 0; i < limit; i++) {\n      const date = new Date();\n      date.setDate(today.getDate() - (limit - 1) + i);\n      const dateString = date.toISOString().split('T')[0];\n      \n      const entry = sortedEntries.find(e => e.date === dateString);\n      \n      labels.push(date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' }));\n      consumedData.push(entry ? entry.calories.consumed : null);\n      burnedData.push(entry ? entry.calories.burned : null);\n    }\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Calories consommées',\n          data: consumedData,\n          borderColor: '#4CAF50',\n          backgroundColor: 'rgba(76, 175, 80, 0.1)',\n          tension: 0.4,\n          fill: true\n        },\n        {\n          label: 'Calories dépensées',\n          data: burnedData,\n          borderColor: '#f44336',\n          backgroundColor: 'rgba(244, 67, 54, 0.1)',\n          tension: 0.4,\n          fill: true\n        }\n      ]\n    };\n  };\n\n  // Options pour le graphique en ligne\n  const calorieChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: 'Calories'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  // Formatter les données d'hydratation pour le graphique en barre\n  const getHydrationData = () => {\n    if (!dashboardData || !dashboardData.activityLog || !dashboardData.activityLog.length) {\n      return {\n        labels: Array.from({ length: 7 }, (_, i) => {\n          const date = new Date();\n          date.setDate(date.getDate() - 6 + i);\n          return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\n        }),\n        datasets: [\n          {\n            label: 'Hydratation (litres)',\n            data: Array(7).fill(0),\n            backgroundColor: '#2196F3',\n            borderColor: '#1976D2',\n            borderWidth: 1\n          }\n        ]\n      };\n    }\n\n    // Prendre les 7 derniers jours pour la semaine, 30 pour le mois, etc.\n    const limit = dateRange === 'week' ? 7 : (dateRange === 'month' ? 30 : 365);\n    \n    // Générer les données d'hydratation avec la même logique que pour les calories\n    const labels = [];\n    const hydrationData = [];\n    \n    const today = new Date();\n    \n    for (let i = 0; i < limit; i++) {\n      const date = new Date();\n      date.setDate(today.getDate() - (limit - 1) + i);\n      const dateString = date.toISOString().split('T')[0];\n      \n      const entry = dashboardData.activityLog.find(e => e.date === dateString);\n      \n      labels.push(date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' }));\n      hydrationData.push(entry ? entry.hydration : null);\n    }\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Hydratation (litres)',\n          data: hydrationData,\n          backgroundColor: '#2196F3',\n          borderColor: '#1976D2',\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n\n  // Options pour le graphique en barre\n  const hydrationChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Litres'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  };\n\n  // Calculer le pourcentage d'avancement vers l'objectif calorique\n  const getCalorieProgress = () => {\n    if (!dashboardData || !dashboardData.dailyIntake || !dashboardData.goals) {\n      return 0;\n    }\n\n    // Valeur par défaut si les données sont manquantes\n    const currentCalories = dashboardData.dailyIntake.calories || 0;\n    \n    let targetCalories = 2000; // Valeur par défaut\n    \n    // Calculer la cible calorique en fonction de l'objectif\n    if (dashboardData.metrics && dashboardData.metrics.basalMetabolicRate) {\n      const bmr = dashboardData.metrics.basalMetabolicRate;\n      if (dashboardData.goals.type === 'weight-loss') {\n        targetCalories = Math.round(bmr * 0.85);\n      } else if (dashboardData.goals.type === 'performance') {\n        targetCalories = Math.round(bmr * 1.1);\n      } else {\n        targetCalories = bmr;\n      }\n    }\n\n    if (targetCalories === 0) return 0;\n    \n    return Math.min(100, Math.round((currentCalories / targetCalories) * 100));\n  };\n\n  // Obtenir la valeur de protéines en g/kg de poids corporel\n  const getProteinPerKg = () => {\n    if (!dashboardData || !dashboardData.dailyIntake || !dashboardData.metrics) {\n      return 0;\n    }\n    \n    const protein = dashboardData.dailyIntake.protein || 0;\n    const weight = dashboardData.metrics.weight || 70;\n    \n    if (weight === 0) return 0;\n    \n    return Math.round((protein / weight) * 10) / 10;\n  };\n\n  // Calculer le pourcentage d'hydratation par rapport à l'objectif\n  const getHydrationProgress = () => {\n    if (!dashboardData || !dashboardData.dailyIntake || !dashboardData.metrics) {\n      return 0;\n    }\n    \n    const hydration = dashboardData.dailyIntake.hydration || 0;\n    const weight = dashboardData.metrics.weight || 70;\n    \n    // Recommandation d'hydratation: 35ml par kg de poids corporel\n    const targetHydration = (weight * 0.035);\n    \n    if (targetHydration === 0) return 0;\n    \n    return Math.min(100, Math.round((hydration / targetHydration) * 100));\n  };\n\n  // Calculer l'Indice de Masse Corporelle (IMC)\n  const calculateBMI = () => {\n    if (!dashboardData || !dashboardData.metrics) {\n      return 0;\n    }\n    \n    const weight = dashboardData.metrics.weight || 70;\n    const height = dashboardData.metrics.height || 175;\n    \n    if (height === 0) return 0;\n    \n    // IMC = poids (kg) / taille² (m)\n    return Math.round((weight / Math.pow(height / 100, 2)) * 10) / 10;\n  };\n\n  // Rendu du composant\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert \n        severity=\"error\" \n        sx={{ mb: 3 }}\n        action={\n          <Button color=\"inherit\" size=\"small\" onClick={handleRefresh}>\n            Réessayer\n          </Button>\n        }\n      >\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!dashboardData) {\n    return (\n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Aucune donnée nutritionnelle disponible. Commencez à enregistrer vos repas pour voir les statistiques.\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n        <Button \n          startIcon={<Refresh />} \n          size=\"small\" \n          onClick={handleRefresh}\n        >\n          Actualiser\n        </Button>\n      </Box>\n      \n      {/* Cartes métriques */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        {/* Carte calories */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Restaurant sx={{ color: '#4CAF50', mr: 1 }} />\n              <Typography variant=\"h6\">Calories</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.dailyIntake?.calories || 0}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Objectif: {Math.round(dashboardData.metrics?.basalMetabolicRate * (dashboardData.goals?.type === 'weight-loss' ? 0.85 : 1.1)) || 0} kcal\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={getCalorieProgress()} \n              sx={{ mt: 1, mb: 0.5, height: 8, borderRadius: 4 }}\n            />\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {getCalorieProgress()}% de l'objectif\n              </Typography>\n              {dashboardData.activityLog && dashboardData.activityLog.length > 0 && (\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center' }}>\n                  {dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance > 0 ? (\n                    <>+{dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance} <TrendingUp fontSize=\"small\" color=\"success\" sx={{ ml: 0.5 }} /></>\n                  ) : (\n                    <>{dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance} <TrendingDown fontSize=\"small\" color=\"error\" sx={{ ml: 0.5 }} /></>\n                  )}\n                </Typography>\n              )}\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Carte protéines */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Speed sx={{ color: '#2196F3', mr: 1 }} />\n              <Typography variant=\"h6\">Protéines</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.dailyIntake?.protein || 0}g\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {Math.round(((dashboardData.dailyIntake?.protein || 0) / dashboardData.dailyIntake?.calories) * 400) || 0} kcal\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={Math.min(100, ((dashboardData.dailyIntake?.protein || 0) / ((dashboardData.metrics?.weight || 70) * 1.6)) * 100)} \n              sx={{ mt: 1, mb: 0.5, height: 8, borderRadius: 4, '& .MuiLinearProgress-bar': { backgroundColor: '#2196F3' } }}\n            />\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {getProteinPerKg()}g/kg (recommandé: 1.6-2.0g/kg)\n            </Typography>\n          </Paper>\n        </Grid>\n\n        {/* Carte hydratation */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <LocalDrink sx={{ color: '#03A9F4', mr: 1 }} />\n              <Typography variant=\"h6\">Hydratation</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.dailyIntake?.hydration || 0}L\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Objectif: {Math.round((dashboardData.metrics?.weight || 70) * 0.035 * 100) / 100}L\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={getHydrationProgress()} \n              sx={{ mt: 1, mb: 0.5, height: 8, borderRadius: 4, '& .MuiLinearProgress-bar': { backgroundColor: '#03A9F4' } }}\n            />\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {getHydrationProgress()}% de l'objectif\n            </Typography>\n          </Paper>\n        </Grid>\n\n        {/* Carte poids */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <MonitorWeight sx={{ color: '#9C27B0', mr: 1 }} />\n              <Typography variant=\"h6\">Poids</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.metrics?.weight || 0}kg\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              IMC: {calculateBMI()}\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center' }}>\n                Masse grasse: {dashboardData.metrics?.bodyFat || 0}%\n              </Typography>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Graphiques */}\n      <Grid container spacing={3}>\n        {/* Graphique des calories */}\n        <Grid item xs={12} md={8}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Historique calorique</Typography>\n              <Box>\n                <Button \n                  size=\"small\" \n                  variant={dateRange === 'week' ? 'contained' : 'outlined'} \n                  onClick={() => handleDateRangeChange('week')}\n                  sx={{ mr: 1 }}\n                >\n                  Semaine\n                </Button>\n                <Button \n                  size=\"small\" \n                  variant={dateRange === 'month' ? 'contained' : 'outlined'} \n                  onClick={() => handleDateRangeChange('month')}\n                  sx={{ mr: 1 }}\n                >\n                  Mois\n                </Button>\n                <Button \n                  size=\"small\" \n                  variant={dateRange === 'year' ? 'contained' : 'outlined'} \n                  onClick={() => handleDateRangeChange('year')}\n                >\n                  Année\n                </Button>\n              </Box>\n            </Box>\n            <Box sx={{ height: 300 }}>\n              <Line data={getCalorieData()} options={calorieChartOptions} />\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Graphique des macronutriments */}\n        <Grid item xs={12} md={4}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>Répartition des macros</Typography>\n            <Box sx={{ height: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Doughnut data={getMacroData()} options={macroChartOptions} />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={4}>\n                  <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">Glucides</Typography>\n                  <Typography variant=\"h6\" align=\"center\">{dashboardData.dailyIntake?.carbs || 0}g</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">Protéines</Typography>\n                  <Typography variant=\"h6\" align=\"center\">{dashboardData.dailyIntake?.protein || 0}g</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">Lipides</Typography>\n                  <Typography variant=\"h6\" align=\"center\">{dashboardData.dailyIntake?.fat || 0}g</Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Graphique d'hydratation */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>Historique d'hydratation</Typography>\n            <Box sx={{ height: 250 }}>\n              <Bar data={getHydrationData()} options={hydrationChartOptions} />\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Dernières notes */}\n      {dashboardData.activityLog && dashboardData.activityLog.length > 0 ? (\n        <Paper elevation={2} sx={{ p: 2, mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>Dernières notes</Typography>\n          <Grid container spacing={2}>\n            {dashboardData.activityLog.slice(-3).reverse().map((log, index) => (\n              <Grid item xs={12} md={4} key={index}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                        <CalendarToday fontSize=\"small\" sx={{ mr: 0.5, verticalAlign: 'middle' }} />\n                        {new Date(log.date).toLocaleDateString()}\n                      </Typography>\n                      <Typography \n                        variant=\"subtitle2\" \n                        color={log.calories.balance > 0 ? 'success.main' : 'error.main'}\n                      >\n                        {log.calories.balance > 0 ? '+' : ''}{log.calories.balance} kcal\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"body2\">{log.notes || 'Aucune note'}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      ) : (\n        <Box sx={{ mt: 3, textAlign: 'center' }}>\n          <Alert severity=\"info\" sx={{ display: 'inline-flex', textAlign: 'left' }}>\n            Aucun historique d'activité disponible. Commencez à enregistrer vos repas et activités.\n          </Alert>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default NutritionDashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,IAAI,CACJC,KAAK,CACLC,UAAU,CACVC,GAAG,CACHC,OAAO,CACPC,gBAAgB,CAChBC,MAAM,CACNC,IAAI,CACJC,WAAW,CACXC,cAAc,CACdC,UAAU,CACVC,OAAO,CACPC,KAAK,KACA,eAAe,CACtB,OACEC,cAAc,CACdC,UAAU,CACVC,UAAU,CACVC,QAAQ,CACRC,IAAI,CACJC,aAAa,CACbC,UAAU,CACVC,YAAY,CACZC,KAAK,CACLC,aAAa,CACbC,GAAG,CACHC,OAAO,KACF,qBAAqB,CAC5B,OAASC,IAAI,CAAEC,QAAQ,CAAEC,GAAG,KAAQ,iBAAiB,CACrD,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,aAAa,KAAQ,UAAU,CAC1D,MAAO,CAAAC,gBAAgB,KAAM,iCAAiC,CAE9D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACAR,OAAO,CAACS,QAAQ,CAAC,GAAGR,aAAa,CAAC,CAElC;AACA;AACA;AACA,GACA,KAAM,CAAAS,kBAAkB,CAAGC,IAAA,EAA0C,KAAAC,qBAAA,CAAAC,qBAAA,CAAAC,oBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,IAAzC,CAAEC,aAAa,CAAEC,MAAM,CAAEC,SAAU,CAAC,CAAAlB,IAAA,CAC9D,KAAM,CAACmB,OAAO,CAAEC,UAAU,CAAC,CAAG9D,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC+D,KAAK,CAAEC,QAAQ,CAAC,CAAGhE,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACiE,aAAa,CAAEC,gBAAgB,CAAC,CAAGlE,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACmE,SAAS,CAAEC,YAAY,CAAC,CAAGpE,QAAQ,CAAC,MAAM,CAAC,CAAE;AAEpD;AACAC,SAAS,CAAC,IAAM,CACd,GAAIyD,aAAa,CAAE,CACjBQ,gBAAgB,CAACR,aAAa,CAAC,CACjC,CAAC,IAAM,CACLW,kBAAkB,CAAC,CAAC,CACtB,CACF,CAAC,CAAE,CAACX,aAAa,CAAEC,MAAM,CAAC,CAAC,CAE3B;AACA,KAAM,CAAAU,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CAACV,MAAM,CAAE,OAEb,GAAI,CACFG,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAArC,gBAAgB,CAACsC,oBAAoB,CAACZ,MAAM,CAAC,CAEhE;AACA,GAAI,CAACW,IAAI,EAAI,MAAO,CAAAA,IAAI,GAAK,QAAQ,CAAE,CACrC,KAAM,IAAI,CAAAE,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CAEA;AACA,GAAI,CAACF,IAAI,CAACG,WAAW,CAAEH,IAAI,CAACG,WAAW,CAAG,CAAEC,QAAQ,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,OAAO,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAC,CAAEC,SAAS,CAAE,CAAE,CAAC,CACrG,GAAI,CAACR,IAAI,CAACS,OAAO,CAAET,IAAI,CAACS,OAAO,CAAG,CAAEC,MAAM,CAAE,EAAE,CAAEC,MAAM,CAAE,GAAG,CAAEC,OAAO,CAAE,EAAE,CAAEC,kBAAkB,CAAE,IAAK,CAAC,CACpG,GAAI,CAACb,IAAI,CAACc,KAAK,CAAEd,IAAI,CAACc,KAAK,CAAG,CAAEC,IAAI,CAAE,aAAa,CAAEC,cAAc,CAAE,CAAE,CAAC,CACxE,GAAI,CAAChB,IAAI,CAACiB,WAAW,CAAEjB,IAAI,CAACiB,WAAW,CAAG,EAAE,CAE5CrB,gBAAgB,CAACI,IAAI,CAAC,CACxB,CAAE,MAAOkB,GAAG,CAAE,CACZC,OAAO,CAAC1B,KAAK,CAAC,gEAAgE,CAAEyB,GAAG,CAAC,CACpFxB,QAAQ,CAAC,uDAAuD,CAAC,CACnE,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAA4B,aAAa,CAAGA,CAAA,GAAM,CAC1BrB,kBAAkB,CAAC,CAAC,CACpB,GAAIT,SAAS,CAAEA,SAAS,CAAC,CAAC,CAC5B,CAAC,CAED;AACA,KAAM,CAAA+B,qBAAqB,CAAIC,KAAK,EAAK,CACvCxB,YAAY,CAACwB,KAAK,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAC5B,aAAa,EAAI,CAACA,aAAa,CAACQ,WAAW,CAAE,CAChD,MAAO,CACLqB,MAAM,CAAE,CAAC,UAAU,CAAE,WAAW,CAAE,SAAS,CAAC,CAC5CC,QAAQ,CAAE,CAAC,CACTzB,IAAI,CAAE,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAE;AACpB0B,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAC,CAClDC,WAAW,CAAE,CACf,CAAC,CACH,CAAC,CACH,CAEA,KAAM,CAAEtB,KAAK,CAAG,CAAC,CAAEC,OAAO,CAAG,CAAC,CAAEC,GAAG,CAAG,CAAE,CAAC,CAAGZ,aAAa,CAACQ,WAAW,CACrE,KAAM,CAAAyB,UAAU,CAAGvB,KAAK,CAAGC,OAAO,CAAGC,GAAG,CAExC,GAAIqB,UAAU,GAAK,CAAC,CAAE,CACpB,MAAO,CACLJ,MAAM,CAAE,CAAC,UAAU,CAAE,WAAW,CAAE,SAAS,CAAC,CAC5CC,QAAQ,CAAE,CAAC,CACTzB,IAAI,CAAE,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAE;AACpB0B,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAC,CAClDC,WAAW,CAAE,CACf,CAAC,CACH,CAAC,CACH,CAEA,MAAO,CACLH,MAAM,CAAE,CAAC,UAAU,CAAE,WAAW,CAAE,SAAS,CAAC,CAC5CC,QAAQ,CAAE,CAAC,CACTzB,IAAI,CAAE,CACJ6B,IAAI,CAACC,KAAK,CAAEzB,KAAK,CAAGuB,UAAU,CAAI,GAAG,CAAC,CACtCC,IAAI,CAACC,KAAK,CAAExB,OAAO,CAAGsB,UAAU,CAAI,GAAG,CAAC,CACxCC,IAAI,CAACC,KAAK,CAAEvB,GAAG,CAAGqB,UAAU,CAAI,GAAG,CAAC,CACrC,CACDF,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAC,CAClDC,WAAW,CAAE,CACf,CAAC,CACH,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAI,iBAAiB,CAAG,CACxBC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAC1BC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,QAAQ,CAAE,QAAQ,CAClBZ,MAAM,CAAE,CACNa,QAAQ,CAAE,EAAE,CACZC,OAAO,CAAE,EACX,CACF,CAAC,CACDC,OAAO,CAAE,CACPC,SAAS,CAAE,CACTC,KAAK,CAAE,QAAAA,CAASC,OAAO,CAAE,CACvB,MAAO,GAAGA,OAAO,CAACD,KAAK,KAAKC,OAAO,CAACC,GAAG,GAAG,CAC5C,CACF,CACF,CACF,CAAC,CACDC,MAAM,CAAE,KACV,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAAClD,aAAa,EAAI,CAACA,aAAa,CAACsB,WAAW,EAAI,CAACtB,aAAa,CAACsB,WAAW,CAAC6B,MAAM,CAAE,CACrF,MAAO,CACLtB,MAAM,CAAEuB,KAAK,CAACC,IAAI,CAAC,CAAEF,MAAM,CAAE,CAAE,CAAC,CAAE,CAACG,CAAC,CAAEC,CAAC,GAAK,CAC1C,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAGJ,CAAC,CAAC,CACpC,MAAO,CAAAC,IAAI,CAACI,kBAAkB,CAACC,SAAS,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CAC/E,CAAC,CAAC,CACFjC,QAAQ,CAAE,CACR,CACEgB,KAAK,CAAE,qBAAqB,CAC5BzC,IAAI,CAAE+C,KAAK,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC,CAAC,CAAC,CACtBC,WAAW,CAAE,SAAS,CACtBlC,eAAe,CAAE,wBAAwB,CACzCmC,OAAO,CAAE,GAAG,CACZF,IAAI,CAAE,IACR,CAAC,CACD,CACElB,KAAK,CAAE,oBAAoB,CAC3BzC,IAAI,CAAE+C,KAAK,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC,CAAC,CAAC,CACtBC,WAAW,CAAE,SAAS,CACtBlC,eAAe,CAAE,wBAAwB,CACzCmC,OAAO,CAAE,GAAG,CACZF,IAAI,CAAE,IACR,CAAC,CAEL,CAAC,CACH,CAEA;AACA,KAAM,CAAAG,KAAK,CAAGjE,SAAS,GAAK,MAAM,CAAG,CAAC,CAAIA,SAAS,GAAK,OAAO,CAAG,EAAE,CAAG,GAAI,CAE3E;AACA,KAAM,CAAAkE,aAAa,CAAG,CAAC,GAAGpE,aAAa,CAACsB,WAAW,CAAC,CACjD+C,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAI,CAAAd,IAAI,CAACa,CAAC,CAACd,IAAI,CAAC,CAAG,GAAI,CAAAC,IAAI,CAACc,CAAC,CAACf,IAAI,CAAC,CAAC,CACnDgB,KAAK,CAAC,CAACL,KAAK,CAAC,CAEhB;AACA,KAAM,CAAAtC,MAAM,CAAG,EAAE,CACjB,KAAM,CAAA4C,YAAY,CAAG,EAAE,CACvB,KAAM,CAAAC,UAAU,CAAG,EAAE,CAErB,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAExB,IAAK,GAAI,CAAAF,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGY,KAAK,CAAEZ,CAAC,EAAE,CAAE,CAC9B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvBD,IAAI,CAACE,OAAO,CAACiB,KAAK,CAAChB,OAAO,CAAC,CAAC,EAAIQ,KAAK,CAAG,CAAC,CAAC,CAAGZ,CAAC,CAAC,CAC/C,KAAM,CAAAqB,UAAU,CAAGpB,IAAI,CAACqB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAEnD,KAAM,CAAAC,KAAK,CAAGX,aAAa,CAACY,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACzB,IAAI,GAAKoB,UAAU,CAAC,CAE5D/C,MAAM,CAACqD,IAAI,CAAC1B,IAAI,CAACI,kBAAkB,CAACC,SAAS,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CAAC,CACnFU,YAAY,CAACS,IAAI,CAACH,KAAK,CAAGA,KAAK,CAACtE,QAAQ,CAAC0E,QAAQ,CAAG,IAAI,CAAC,CACzDT,UAAU,CAACQ,IAAI,CAACH,KAAK,CAAGA,KAAK,CAACtE,QAAQ,CAAC2E,MAAM,CAAG,IAAI,CAAC,CACvD,CAEA,MAAO,CACLvD,MAAM,CAAEA,MAAM,CACdC,QAAQ,CAAE,CACR,CACEgB,KAAK,CAAE,qBAAqB,CAC5BzC,IAAI,CAAEoE,YAAY,CAClBR,WAAW,CAAE,SAAS,CACtBlC,eAAe,CAAE,wBAAwB,CACzCmC,OAAO,CAAE,GAAG,CACZF,IAAI,CAAE,IACR,CAAC,CACD,CACElB,KAAK,CAAE,oBAAoB,CAC3BzC,IAAI,CAAEqE,UAAU,CAChBT,WAAW,CAAE,SAAS,CACtBlC,eAAe,CAAE,wBAAwB,CACzCmC,OAAO,CAAE,GAAG,CACZF,IAAI,CAAE,IACR,CAAC,CAEL,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAqB,mBAAmB,CAAG,CAC1BhD,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAC1BgD,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,WAAW,CAAE,KAAK,CAClBC,KAAK,CAAE,CACLC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,UACR,CACF,CAAC,CACDC,CAAC,CAAE,CACDC,IAAI,CAAE,CACJH,OAAO,CAAE,KACX,CACF,CACF,CAAC,CACDnD,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,QAAQ,CAAE,KACZ,CAAC,CACDG,OAAO,CAAE,CACPkD,IAAI,CAAE,OAAO,CACbC,SAAS,CAAE,KACb,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAI,CAAChG,aAAa,EAAI,CAACA,aAAa,CAACsB,WAAW,EAAI,CAACtB,aAAa,CAACsB,WAAW,CAAC6B,MAAM,CAAE,CACrF,MAAO,CACLtB,MAAM,CAAEuB,KAAK,CAACC,IAAI,CAAC,CAAEF,MAAM,CAAE,CAAE,CAAC,CAAE,CAACG,CAAC,CAAEC,CAAC,GAAK,CAC1C,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAGJ,CAAC,CAAC,CACpC,MAAO,CAAAC,IAAI,CAACI,kBAAkB,CAACC,SAAS,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CAC/E,CAAC,CAAC,CACFjC,QAAQ,CAAE,CACR,CACEgB,KAAK,CAAE,sBAAsB,CAC7BzC,IAAI,CAAE+C,KAAK,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC,CAAC,CAAC,CACtBjC,eAAe,CAAE,SAAS,CAC1BkC,WAAW,CAAE,SAAS,CACtBjC,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CACH,CAEA;AACA,KAAM,CAAAmC,KAAK,CAAGjE,SAAS,GAAK,MAAM,CAAG,CAAC,CAAIA,SAAS,GAAK,OAAO,CAAG,EAAE,CAAG,GAAI,CAE3E;AACA,KAAM,CAAA2B,MAAM,CAAG,EAAE,CACjB,KAAM,CAAAoE,aAAa,CAAG,EAAE,CAExB,KAAM,CAAAtB,KAAK,CAAG,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAExB,IAAK,GAAI,CAAAF,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGY,KAAK,CAAEZ,CAAC,EAAE,CAAE,CAC9B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvBD,IAAI,CAACE,OAAO,CAACiB,KAAK,CAAChB,OAAO,CAAC,CAAC,EAAIQ,KAAK,CAAG,CAAC,CAAC,CAAGZ,CAAC,CAAC,CAC/C,KAAM,CAAAqB,UAAU,CAAGpB,IAAI,CAACqB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAEnD,KAAM,CAAAC,KAAK,CAAG/E,aAAa,CAACsB,WAAW,CAAC0D,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACzB,IAAI,GAAKoB,UAAU,CAAC,CAExE/C,MAAM,CAACqD,IAAI,CAAC1B,IAAI,CAACI,kBAAkB,CAACC,SAAS,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CAAC,CACnFkC,aAAa,CAACf,IAAI,CAACH,KAAK,CAAGA,KAAK,CAAClE,SAAS,CAAG,IAAI,CAAC,CACpD,CAEA,MAAO,CACLgB,MAAM,CAAEA,MAAM,CACdC,QAAQ,CAAE,CACR,CACEgB,KAAK,CAAE,sBAAsB,CAC7BzC,IAAI,CAAE4F,aAAa,CACnBlE,eAAe,CAAE,SAAS,CAC1BkC,WAAW,CAAE,SAAS,CACtBjC,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAkE,qBAAqB,CAAG,CAC5B7D,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAC1BgD,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,WAAW,CAAE,IAAI,CACjBC,KAAK,CAAE,CACLC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,QACR,CACF,CAAC,CACDC,CAAC,CAAE,CACDC,IAAI,CAAE,CACJH,OAAO,CAAE,KACX,CACF,CACF,CAAC,CACDnD,OAAO,CAAE,CACPC,MAAM,CAAE,CACNkD,OAAO,CAAE,KACX,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAS,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAI,CAACnG,aAAa,EAAI,CAACA,aAAa,CAACQ,WAAW,EAAI,CAACR,aAAa,CAACmB,KAAK,CAAE,CACxE,MAAO,EAAC,CACV,CAEA;AACA,KAAM,CAAAiF,eAAe,CAAGpG,aAAa,CAACQ,WAAW,CAACC,QAAQ,EAAI,CAAC,CAE/D,GAAI,CAAA4F,cAAc,CAAG,IAAI,CAAE;AAE3B;AACA,GAAIrG,aAAa,CAACc,OAAO,EAAId,aAAa,CAACc,OAAO,CAACI,kBAAkB,CAAE,CACrE,KAAM,CAAAoF,GAAG,CAAGtG,aAAa,CAACc,OAAO,CAACI,kBAAkB,CACpD,GAAIlB,aAAa,CAACmB,KAAK,CAACC,IAAI,GAAK,aAAa,CAAE,CAC9CiF,cAAc,CAAGnE,IAAI,CAACC,KAAK,CAACmE,GAAG,CAAG,IAAI,CAAC,CACzC,CAAC,IAAM,IAAItG,aAAa,CAACmB,KAAK,CAACC,IAAI,GAAK,aAAa,CAAE,CACrDiF,cAAc,CAAGnE,IAAI,CAACC,KAAK,CAACmE,GAAG,CAAG,GAAG,CAAC,CACxC,CAAC,IAAM,CACLD,cAAc,CAAGC,GAAG,CACtB,CACF,CAEA,GAAID,cAAc,GAAK,CAAC,CAAE,MAAO,EAAC,CAElC,MAAO,CAAAnE,IAAI,CAACqE,GAAG,CAAC,GAAG,CAAErE,IAAI,CAACC,KAAK,CAAEiE,eAAe,CAAGC,cAAc,CAAI,GAAG,CAAC,CAAC,CAC5E,CAAC,CAED;AACA,KAAM,CAAAG,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,CAACxG,aAAa,EAAI,CAACA,aAAa,CAACQ,WAAW,EAAI,CAACR,aAAa,CAACc,OAAO,CAAE,CAC1E,MAAO,EAAC,CACV,CAEA,KAAM,CAAAH,OAAO,CAAGX,aAAa,CAACQ,WAAW,CAACG,OAAO,EAAI,CAAC,CACtD,KAAM,CAAAI,MAAM,CAAGf,aAAa,CAACc,OAAO,CAACC,MAAM,EAAI,EAAE,CAEjD,GAAIA,MAAM,GAAK,CAAC,CAAE,MAAO,EAAC,CAE1B,MAAO,CAAAmB,IAAI,CAACC,KAAK,CAAExB,OAAO,CAAGI,MAAM,CAAI,EAAE,CAAC,CAAG,EAAE,CACjD,CAAC,CAED;AACA,KAAM,CAAA0F,oBAAoB,CAAGA,CAAA,GAAM,CACjC,GAAI,CAACzG,aAAa,EAAI,CAACA,aAAa,CAACQ,WAAW,EAAI,CAACR,aAAa,CAACc,OAAO,CAAE,CAC1E,MAAO,EAAC,CACV,CAEA,KAAM,CAAAD,SAAS,CAAGb,aAAa,CAACQ,WAAW,CAACK,SAAS,EAAI,CAAC,CAC1D,KAAM,CAAAE,MAAM,CAAGf,aAAa,CAACc,OAAO,CAACC,MAAM,EAAI,EAAE,CAEjD;AACA,KAAM,CAAA2F,eAAe,CAAI3F,MAAM,CAAG,KAAM,CAExC,GAAI2F,eAAe,GAAK,CAAC,CAAE,MAAO,EAAC,CAEnC,MAAO,CAAAxE,IAAI,CAACqE,GAAG,CAAC,GAAG,CAAErE,IAAI,CAACC,KAAK,CAAEtB,SAAS,CAAG6F,eAAe,CAAI,GAAG,CAAC,CAAC,CACvE,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAC3G,aAAa,EAAI,CAACA,aAAa,CAACc,OAAO,CAAE,CAC5C,MAAO,EAAC,CACV,CAEA,KAAM,CAAAC,MAAM,CAAGf,aAAa,CAACc,OAAO,CAACC,MAAM,EAAI,EAAE,CACjD,KAAM,CAAAC,MAAM,CAAGhB,aAAa,CAACc,OAAO,CAACE,MAAM,EAAI,GAAG,CAElD,GAAIA,MAAM,GAAK,CAAC,CAAE,MAAO,EAAC,CAE1B;AACA,MAAO,CAAAkB,IAAI,CAACC,KAAK,CAAEpB,MAAM,CAAGmB,IAAI,CAAC0E,GAAG,CAAC5F,MAAM,CAAG,GAAG,CAAE,CAAC,CAAC,CAAI,EAAE,CAAC,CAAG,EAAE,CACnE,CAAC,CAED;AACA,GAAIpB,OAAO,CAAE,CACX,mBACE1B,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEoB,cAAc,CAAE,QAAQ,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,cAC5D9I,IAAA,CAAC5B,gBAAgB,GAAE,CAAC,CACjB,CAAC,CAEV,CAEA,GAAIwD,KAAK,CAAE,CACT,mBACE5B,IAAA,CAACrB,KAAK,EACJoK,QAAQ,CAAC,OAAO,CAChBJ,EAAE,CAAE,CAAEK,EAAE,CAAE,CAAE,CAAE,CACdC,MAAM,cACJjJ,IAAA,CAAC3B,MAAM,EAAC6K,KAAK,CAAC,SAAS,CAACC,IAAI,CAAC,OAAO,CAACC,OAAO,CAAE7F,aAAc,CAAAuF,QAAA,CAAC,cAE7D,CAAQ,CACT,CAAAA,QAAA,CAEAlH,KAAK,CACD,CAAC,CAEZ,CAEA,GAAI,CAACE,aAAa,CAAE,CAClB,mBACE9B,IAAA,CAACrB,KAAK,EAACoK,QAAQ,CAAC,MAAM,CAACJ,EAAE,CAAE,CAAEK,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,CAAC,8GAEtC,CAAO,CAAC,CAEZ,CAEA,mBACE5I,KAAA,CAAChC,GAAG,EAAA4K,QAAA,eACF9I,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEoB,cAAc,CAAE,UAAU,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,cAC9D9I,IAAA,CAAC3B,MAAM,EACLgL,SAAS,cAAErJ,IAAA,CAACT,OAAO,GAAE,CAAE,CACvB4J,IAAI,CAAC,OAAO,CACZC,OAAO,CAAE7F,aAAc,CAAAuF,QAAA,CACxB,YAED,CAAQ,CAAC,CACN,CAAC,cAGN5I,KAAA,CAACnC,IAAI,EAACuL,SAAS,MAACC,OAAO,CAAE,CAAE,CAACZ,EAAE,CAAE,CAAEK,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eAExC9I,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAb,QAAA,cAC9B5I,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAC,CAAE/G,MAAM,CAAE,MAAO,CAAE,CAAAgG,QAAA,eAChD5I,KAAA,CAAChC,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEsC,UAAU,CAAE,QAAQ,CAAEd,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eACxD9I,IAAA,CAACnB,UAAU,EAAC8J,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAS,CAAEa,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC/C/J,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAAAlB,QAAA,CAAC,UAAQ,CAAY,CAAC,EAC3C,CAAC,cACN9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACrB,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,CACpC,EAAAtI,qBAAA,CAAAsB,aAAa,CAACQ,WAAW,UAAA9B,qBAAA,iBAAzBA,qBAAA,CAA2B+B,QAAQ,GAAI,CAAC,CAC/B,CAAC,cACbrC,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,EAAC,YACvC,CAAC9E,IAAI,CAACC,KAAK,CAAC,EAAAxD,qBAAA,CAAAqB,aAAa,CAACc,OAAO,UAAAnC,qBAAA,iBAArBA,qBAAA,CAAuBuC,kBAAkB,GAAI,EAAAtC,oBAAA,CAAAoB,aAAa,CAACmB,KAAK,UAAAvC,oBAAA,iBAAnBA,oBAAA,CAAqBwC,IAAI,IAAK,aAAa,CAAG,IAAI,CAAG,GAAG,CAAC,CAAC,EAAI,CAAC,CAAC,OACrI,EAAY,CAAC,cACblD,IAAA,CAACxB,cAAc,EACbwL,OAAO,CAAC,aAAa,CACrBC,KAAK,CAAEhC,kBAAkB,CAAC,CAAE,CAC5BU,EAAE,CAAE,CAAEuB,EAAE,CAAE,CAAC,CAAElB,EAAE,CAAE,GAAG,CAAElG,MAAM,CAAE,CAAC,CAAEqH,YAAY,CAAE,CAAE,CAAE,CACpD,CAAC,cACFjK,KAAA,CAAChC,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEoB,cAAc,CAAE,eAAe,CAAEkB,UAAU,CAAE,QAAS,CAAE,CAAAhB,QAAA,eAClF5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,SAAS,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,EACjDb,kBAAkB,CAAC,CAAC,CAAC,iBACxB,EAAY,CAAC,CACZnG,aAAa,CAACsB,WAAW,EAAItB,aAAa,CAACsB,WAAW,CAAC6B,MAAM,CAAG,CAAC,eAChEjF,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,SAAS,CAACd,KAAK,CAAC,gBAAgB,CAACP,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEsC,UAAU,CAAE,QAAS,CAAE,CAAAhB,QAAA,CAChGhH,aAAa,CAACsB,WAAW,CAACtB,aAAa,CAACsB,WAAW,CAAC6B,MAAM,CAAC,CAAC,CAAC,CAAC1C,QAAQ,CAAC6H,OAAO,CAAG,CAAC,cACjFlK,KAAA,CAAAE,SAAA,EAAA0I,QAAA,EAAE,GAAC,CAAChH,aAAa,CAACsB,WAAW,CAACtB,aAAa,CAACsB,WAAW,CAAC6B,MAAM,CAAC,CAAC,CAAC,CAAC1C,QAAQ,CAAC6H,OAAO,CAAC,GAAC,cAAApK,IAAA,CAACd,UAAU,EAACmL,QAAQ,CAAC,OAAO,CAACnB,KAAK,CAAC,SAAS,CAACP,EAAE,CAAE,CAAE2B,EAAE,CAAE,GAAI,CAAE,CAAE,CAAC,EAAE,CAAC,cAEvJpK,KAAA,CAAAE,SAAA,EAAA0I,QAAA,EAAGhH,aAAa,CAACsB,WAAW,CAACtB,aAAa,CAACsB,WAAW,CAAC6B,MAAM,CAAC,CAAC,CAAC,CAAC1C,QAAQ,CAAC6H,OAAO,CAAC,GAAC,cAAApK,IAAA,CAACb,YAAY,EAACkL,QAAQ,CAAC,OAAO,CAACnB,KAAK,CAAC,OAAO,CAACP,EAAE,CAAE,CAAE2B,EAAE,CAAE,GAAI,CAAE,CAAE,CAAC,EAAE,CACtJ,CACS,CACb,EACE,CAAC,EACD,CAAC,CACJ,CAAC,cAGPtK,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAb,QAAA,cAC9B5I,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAC,CAAE/G,MAAM,CAAE,MAAO,CAAE,CAAAgG,QAAA,eAChD5I,KAAA,CAAChC,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEsC,UAAU,CAAE,QAAQ,CAAEd,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eACxD9I,IAAA,CAACZ,KAAK,EAACuJ,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAS,CAAEa,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC1C/J,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAAAlB,QAAA,CAAC,cAAS,CAAY,CAAC,EAC5C,CAAC,cACN5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACrB,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,EACpC,EAAAnI,sBAAA,CAAAmB,aAAa,CAACQ,WAAW,UAAA3B,sBAAA,iBAAzBA,sBAAA,CAA2B8B,OAAO,GAAI,CAAC,CAAC,GAC3C,EAAY,CAAC,cACbvC,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,EAC/C9E,IAAI,CAACC,KAAK,CAAE,CAAC,EAAArD,sBAAA,CAAAkB,aAAa,CAACQ,WAAW,UAAA1B,sBAAA,iBAAzBA,sBAAA,CAA2B6B,OAAO,GAAI,CAAC,IAAA5B,sBAAA,CAAIiB,aAAa,CAACQ,WAAW,UAAAzB,sBAAA,iBAAzBA,sBAAA,CAA2B0B,QAAQ,EAAI,GAAG,CAAC,EAAI,CAAC,CAAC,OAC5G,EAAY,CAAC,cACbvC,IAAA,CAACxB,cAAc,EACbwL,OAAO,CAAC,aAAa,CACrBC,KAAK,CAAEjG,IAAI,CAACqE,GAAG,CAAC,GAAG,CAAG,CAAC,EAAAvH,sBAAA,CAAAgB,aAAa,CAACQ,WAAW,UAAAxB,sBAAA,iBAAzBA,sBAAA,CAA2B2B,OAAO,GAAI,CAAC,GAAK,CAAC,EAAA1B,sBAAA,CAAAe,aAAa,CAACc,OAAO,UAAA7B,sBAAA,iBAArBA,sBAAA,CAAuB8B,MAAM,GAAI,EAAE,EAAI,GAAG,CAAC,CAAI,GAAG,CAAE,CACxH8F,EAAE,CAAE,CAAEuB,EAAE,CAAE,CAAC,CAAElB,EAAE,CAAE,GAAG,CAAElG,MAAM,CAAE,CAAC,CAAEqH,YAAY,CAAE,CAAC,CAAE,0BAA0B,CAAE,CAAEtG,eAAe,CAAE,SAAU,CAAE,CAAE,CAChH,CAAC,cACF3D,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,SAAS,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,EACjDR,eAAe,CAAC,CAAC,CAAC,mCACrB,EAAY,CAAC,EACR,CAAC,CACJ,CAAC,cAGPtI,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAb,QAAA,cAC9B5I,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAC,CAAE/G,MAAM,CAAE,MAAO,CAAE,CAAAgG,QAAA,eAChD5I,KAAA,CAAChC,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEsC,UAAU,CAAE,QAAQ,CAAEd,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eACxD9I,IAAA,CAAClB,UAAU,EAAC6J,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAS,CAAEa,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC/C/J,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAAAlB,QAAA,CAAC,aAAW,CAAY,CAAC,EAC9C,CAAC,cACN5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACrB,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,EACpC,EAAA9H,sBAAA,CAAAc,aAAa,CAACQ,WAAW,UAAAtB,sBAAA,iBAAzBA,sBAAA,CAA2B2B,SAAS,GAAI,CAAC,CAAC,GAC7C,EAAY,CAAC,cACbzC,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,EAAC,YACvC,CAAC9E,IAAI,CAACC,KAAK,CAAC,CAAC,EAAAhD,sBAAA,CAAAa,aAAa,CAACc,OAAO,UAAA3B,sBAAA,iBAArBA,sBAAA,CAAuB4B,MAAM,GAAI,EAAE,EAAI,KAAK,CAAG,GAAG,CAAC,CAAG,GAAG,CAAC,GACnF,EAAY,CAAC,cACb7C,IAAA,CAACxB,cAAc,EACbwL,OAAO,CAAC,aAAa,CACrBC,KAAK,CAAE1B,oBAAoB,CAAC,CAAE,CAC9BI,EAAE,CAAE,CAAEuB,EAAE,CAAE,CAAC,CAAElB,EAAE,CAAE,GAAG,CAAElG,MAAM,CAAE,CAAC,CAAEqH,YAAY,CAAE,CAAC,CAAE,0BAA0B,CAAE,CAAEtG,eAAe,CAAE,SAAU,CAAE,CAAE,CAChH,CAAC,cACF3D,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,SAAS,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,EACjDP,oBAAoB,CAAC,CAAC,CAAC,iBAC1B,EAAY,CAAC,EACR,CAAC,CACJ,CAAC,cAGPvI,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAb,QAAA,cAC9B5I,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAC,CAAE/G,MAAM,CAAE,MAAO,CAAE,CAAAgG,QAAA,eAChD5I,KAAA,CAAChC,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEsC,UAAU,CAAE,QAAQ,CAAEd,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eACxD9I,IAAA,CAACX,aAAa,EAACsJ,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAS,CAAEa,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAClD/J,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAAAlB,QAAA,CAAC,OAAK,CAAY,CAAC,EACxC,CAAC,cACN5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACrB,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,EACpC,EAAA5H,sBAAA,CAAAY,aAAa,CAACc,OAAO,UAAA1B,sBAAA,iBAArBA,sBAAA,CAAuB2B,MAAM,GAAI,CAAC,CAAC,IACtC,EAAY,CAAC,cACb3C,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,EAAC,OAC5C,CAACL,YAAY,CAAC,CAAC,EACV,CAAC,cACbzI,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEsC,UAAU,CAAE,QAAQ,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAApB,QAAA,cACxD5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,SAAS,CAACd,KAAK,CAAC,gBAAgB,CAACP,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEsC,UAAU,CAAE,QAAS,CAAE,CAAAhB,QAAA,EAAC,gBACpF,CAAC,EAAA3H,sBAAA,CAAAW,aAAa,CAACc,OAAO,UAAAzB,sBAAA,iBAArBA,sBAAA,CAAuB4B,OAAO,GAAI,CAAC,CAAC,GACrD,EAAY,CAAC,CACV,CAAC,EACD,CAAC,CACJ,CAAC,EACH,CAAC,cAGP7C,KAAA,CAACnC,IAAI,EAACuL,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAT,QAAA,eAEzB9I,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAACE,EAAE,CAAE,CAAE,CAAAb,QAAA,cACvB5I,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAE,CAAE,CAAAf,QAAA,eAChC5I,KAAA,CAAChC,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEoB,cAAc,CAAE,eAAe,CAAEkB,UAAU,CAAE,QAAQ,CAAEd,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eACzF9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAAAlB,QAAA,CAAC,sBAAoB,CAAY,CAAC,cAC1D5I,KAAA,CAAChC,GAAG,EAAA4K,QAAA,eACF9I,IAAA,CAAC3B,MAAM,EACL8K,IAAI,CAAC,OAAO,CACZa,OAAO,CAAEhI,SAAS,GAAK,MAAM,CAAG,WAAW,CAAG,UAAW,CACzDoH,OAAO,CAAEA,CAAA,GAAM5F,qBAAqB,CAAC,MAAM,CAAE,CAC7CmF,EAAE,CAAE,CAAEoB,EAAE,CAAE,CAAE,CAAE,CAAAjB,QAAA,CACf,SAED,CAAQ,CAAC,cACT9I,IAAA,CAAC3B,MAAM,EACL8K,IAAI,CAAC,OAAO,CACZa,OAAO,CAAEhI,SAAS,GAAK,OAAO,CAAG,WAAW,CAAG,UAAW,CAC1DoH,OAAO,CAAEA,CAAA,GAAM5F,qBAAqB,CAAC,OAAO,CAAE,CAC9CmF,EAAE,CAAE,CAAEoB,EAAE,CAAE,CAAE,CAAE,CAAAjB,QAAA,CACf,MAED,CAAQ,CAAC,cACT9I,IAAA,CAAC3B,MAAM,EACL8K,IAAI,CAAC,OAAO,CACZa,OAAO,CAAEhI,SAAS,GAAK,MAAM,CAAG,WAAW,CAAG,UAAW,CACzDoH,OAAO,CAAEA,CAAA,GAAM5F,qBAAqB,CAAC,MAAM,CAAE,CAAAsF,QAAA,CAC9C,UAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cACN9I,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAE7F,MAAM,CAAE,GAAI,CAAE,CAAAgG,QAAA,cACvB9I,IAAA,CAACR,IAAI,EAAC2C,IAAI,CAAE6C,cAAc,CAAC,CAAE,CAACuF,OAAO,CAAEpD,mBAAoB,CAAE,CAAC,CAC3D,CAAC,EACD,CAAC,CACJ,CAAC,cAGPnH,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAACE,EAAE,CAAE,CAAE,CAAAb,QAAA,cACvB5I,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAC,CAAE/G,MAAM,CAAE,MAAO,CAAE,CAAAgG,QAAA,eAChD9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACrB,EAAE,CAAE,CAAEK,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,CAAC,2BAAsB,CAAY,CAAC,cAC3E9I,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAE7F,MAAM,CAAE,GAAG,CAAE0E,OAAO,CAAE,MAAM,CAAEoB,cAAc,CAAE,QAAQ,CAAEkB,UAAU,CAAE,QAAS,CAAE,CAAAhB,QAAA,cACxF9I,IAAA,CAACP,QAAQ,EAAC0C,IAAI,CAAEuB,YAAY,CAAC,CAAE,CAAC6G,OAAO,CAAErG,iBAAkB,CAAE,CAAC,CAC3D,CAAC,cACNlE,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAEuB,EAAE,CAAE,CAAE,CAAE,CAAApB,QAAA,cACjB5I,KAAA,CAACnC,IAAI,EAACuL,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAT,QAAA,eACzB5I,KAAA,CAACnC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAX,QAAA,eACf9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,QAAQ,CAACtB,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,CAAC,UAAQ,CAAY,CAAC,cACvF5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACQ,KAAK,CAAC,QAAQ,CAAA1B,QAAA,EAAE,EAAA1H,sBAAA,CAAAU,aAAa,CAACQ,WAAW,UAAAlB,sBAAA,iBAAzBA,sBAAA,CAA2BoB,KAAK,GAAI,CAAC,CAAC,GAAC,EAAY,CAAC,EACzF,CAAC,cACPtC,KAAA,CAACnC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAX,QAAA,eACf9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,QAAQ,CAACtB,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,CAAC,cAAS,CAAY,CAAC,cACxF5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACQ,KAAK,CAAC,QAAQ,CAAA1B,QAAA,EAAE,EAAAzH,sBAAA,CAAAS,aAAa,CAACQ,WAAW,UAAAjB,sBAAA,iBAAzBA,sBAAA,CAA2BoB,OAAO,GAAI,CAAC,CAAC,GAAC,EAAY,CAAC,EAC3F,CAAC,cACPvC,KAAA,CAACnC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAX,QAAA,eACf9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAACQ,KAAK,CAAC,QAAQ,CAACtB,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,CAAC,SAAO,CAAY,CAAC,cACtF5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACQ,KAAK,CAAC,QAAQ,CAAA1B,QAAA,EAAE,EAAAxH,sBAAA,CAAAQ,aAAa,CAACQ,WAAW,UAAAhB,sBAAA,iBAAzBA,sBAAA,CAA2BoB,GAAG,GAAI,CAAC,CAAC,GAAC,EAAY,CAAC,EACvF,CAAC,EACH,CAAC,CACJ,CAAC,EACD,CAAC,CACJ,CAAC,cAGP1C,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAX,QAAA,cAChB5I,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAE,CAAE,CAAAf,QAAA,eAChC9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACrB,EAAE,CAAE,CAAEK,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,CAAC,0BAAwB,CAAY,CAAC,cAC7E9I,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAE7F,MAAM,CAAE,GAAI,CAAE,CAAAgG,QAAA,cACvB9I,IAAA,CAACN,GAAG,EAACyC,IAAI,CAAE2F,gBAAgB,CAAC,CAAE,CAACyC,OAAO,CAAEvC,qBAAsB,CAAE,CAAC,CAC9D,CAAC,EACD,CAAC,CACJ,CAAC,EACH,CAAC,CAGNlG,aAAa,CAACsB,WAAW,EAAItB,aAAa,CAACsB,WAAW,CAAC6B,MAAM,CAAG,CAAC,cAChE/E,KAAA,CAAClC,KAAK,EAAC4L,SAAS,CAAE,CAAE,CAACjB,EAAE,CAAE,CAAEkB,CAAC,CAAE,CAAC,CAAEK,EAAE,CAAE,CAAE,CAAE,CAAApB,QAAA,eACvC9I,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,IAAI,CAACrB,EAAE,CAAE,CAAEK,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,CAAC,oBAAe,CAAY,CAAC,cACpE9I,IAAA,CAACjC,IAAI,EAACuL,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAT,QAAA,CACxBhH,aAAa,CAACsB,WAAW,CAACkD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACmE,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBAC5D5K,IAAA,CAACjC,IAAI,EAACyL,IAAI,MAACC,EAAE,CAAE,EAAG,CAACE,EAAE,CAAE,CAAE,CAAAb,QAAA,cACvB9I,IAAA,CAAC1B,IAAI,EAAC0L,OAAO,CAAC,UAAU,CAAAlB,QAAA,cACtB5I,KAAA,CAAC3B,WAAW,EAAAuK,QAAA,eACV5I,KAAA,CAAChC,GAAG,EAACyK,EAAE,CAAE,CAAEnB,OAAO,CAAE,MAAM,CAAEoB,cAAc,CAAE,eAAe,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eACnE5I,KAAA,CAACjC,UAAU,EAAC+L,OAAO,CAAC,WAAW,CAACd,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,eACpD9I,IAAA,CAACf,aAAa,EAACoL,QAAQ,CAAC,OAAO,CAAC1B,EAAE,CAAE,CAAEoB,EAAE,CAAE,GAAG,CAAEc,aAAa,CAAE,QAAS,CAAE,CAAE,CAAC,CAC3E,GAAI,CAAAtF,IAAI,CAACoF,GAAG,CAACrF,IAAI,CAAC,CAACI,kBAAkB,CAAC,CAAC,EAC9B,CAAC,cACbxF,KAAA,CAACjC,UAAU,EACT+L,OAAO,CAAC,WAAW,CACnBd,KAAK,CAAEyB,GAAG,CAACpI,QAAQ,CAAC6H,OAAO,CAAG,CAAC,CAAG,cAAc,CAAG,YAAa,CAAAtB,QAAA,EAE/D6B,GAAG,CAACpI,QAAQ,CAAC6H,OAAO,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAEO,GAAG,CAACpI,QAAQ,CAAC6H,OAAO,CAAC,OAC7D,EAAY,CAAC,EACV,CAAC,cACNpK,IAAA,CAAC/B,UAAU,EAAC+L,OAAO,CAAC,OAAO,CAAAlB,QAAA,CAAE6B,GAAG,CAACG,KAAK,EAAI,aAAa,CAAa,CAAC,EAC1D,CAAC,CACV,CAAC,EAjBsBF,KAkBzB,CACP,CAAC,CACE,CAAC,EACF,CAAC,cAER5K,IAAA,CAAC9B,GAAG,EAACyK,EAAE,CAAE,CAAEuB,EAAE,CAAE,CAAC,CAAEa,SAAS,CAAE,QAAS,CAAE,CAAAjC,QAAA,cACtC9I,IAAA,CAACrB,KAAK,EAACoK,QAAQ,CAAC,MAAM,CAACJ,EAAE,CAAE,CAAEnB,OAAO,CAAE,aAAa,CAAEuD,SAAS,CAAE,MAAO,CAAE,CAAAjC,QAAA,CAAC,kGAE1E,CAAO,CAAC,CACL,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxI,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}