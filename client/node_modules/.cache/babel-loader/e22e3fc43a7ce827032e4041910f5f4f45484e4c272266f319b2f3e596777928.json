{"ast":null,"code":"/**\n * deviceCapabilityDetector.js\n * Système avancé de détection des capacités de l'appareil\n * \n * Ce module fournit une détection précise des capacités matérielles et réseau\n * pour optimiser les performances des composants 3D et de l'interface utilisateur.\n */import{PERF_LEVELS}from'./PerformanceDetector';class DeviceCapabilityDetector{constructor(){this.capabilities={// Capacités GPU\ngpu:{webGLSupport:false,webGL2Support:false,renderer:null,vendor:null,estimatedMemory:0,maxTextureSize:0,maxCubemapSize:0,glExtensions:[],isMobileGPU:false},// CPU\ncpu:{cores:navigator.hardwareConcurrency||2,estimatedPerformance:'medium'},// Écran\nscreen:{resolution:{width:window.screen.width,height:window.screen.height},pixelRatio:window.devicePixelRatio||1,effectiveResolution:{width:Math.round(window.screen.width*(window.devicePixelRatio||1)),height:Math.round(window.screen.height*(window.devicePixelRatio||1))},isHighDensity:(window.devicePixelRatio||1)>1.5},// Réseau\nnetwork:{type:'unknown',effectiveType:'unknown',downlink:0,rtt:0,saveData:false},// Flags divers\nflags:{isMobile:false,isTablet:false,isLowEndDevice:false,hasBatteryConstraints:false,preferReducedMotion:false,isOffline:!navigator.onLine},// Niveau de performance global\nperformanceLevel:PERF_LEVELS.MEDIUM};this.benchmarkResults=null;this.detectionComplete=false;// Initialiser la détection\nthis.detect();}/**\n   * Récupère les capacités détectées\n   * @returns {Object} Objet contenant les capacités détectées\n   */getCapabilities(){if(!this.detectionComplete){console.warn('DeviceCapabilityDetector: getCapabilities appelé avant la fin de la détection');}return this.capabilities;}/**\n   * Lance la détection complète des capacités\n   * @returns {Promise<Object>} Promesse résolue avec les capacités détectées\n   */async detect(){try{// Détection simultanée des différentes capacités\nawait Promise.all([this.detectGPUCapabilities(),this.detectNetworkConditions(),this.detectAccessibilityPreferences(),this.detectDeviceType(),this.detectBatteryStatus()]);// Charger les résultats précédents s'ils existent\nthis.loadCachedResults();// Exécuter le benchmark seulement si nécessaire (pas de résultats ou plus de 24h)\nconst needsBenchmark=!this.benchmarkResults||Date.now()-this.benchmarkResults.timestamp>24*60*60*1000;if(needsBenchmark){this.benchmarkResults=await this.runLightBenchmark();this.cacheBenchmarkResults();}// Finaliser la détection\nthis.finalizeDetection();this.detectionComplete=true;console.log('DeviceCapabilityDetector: détection terminée',{performanceLevel:this.getPerformanceLevelName(this.capabilities.performanceLevel),isMobile:this.capabilities.flags.isMobile,gpuMemory:this.capabilities.gpu.estimatedMemory+'MB',cores:this.capabilities.cpu.cores});}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la détection',error);// En cas d'erreur, utiliser des valeurs par défaut conservatrices\nthis.applyDefaultValues();this.detectionComplete=true;}return this.capabilities;}/**\n   * Détecte les capacités GPU via WebGL\n   * @private\n   */async detectGPUCapabilities(){try{// Tester le support WebGL\nthis.capabilities.gpu.webGLSupport=this.isWebGLSupported();this.capabilities.gpu.webGL2Support=this.isWebGL2Supported();if(!this.capabilities.gpu.webGLSupport){console.warn('DeviceCapabilityDetector: WebGL non supporté');return;}// Créer un canvas temporaire\nconst canvas=document.createElement('canvas');const gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');if(!gl)return;// Récupérer les informations du renderer\nconst debugInfo=gl.getExtension('WEBGL_debug_renderer_info');if(debugInfo){this.capabilities.gpu.renderer=gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);this.capabilities.gpu.vendor=gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);}// Estimer la mémoire GPU\nconst gpuMemory=this.estimateGPUMemory(gl,this.capabilities.gpu.renderer);this.capabilities.gpu.estimatedMemory=gpuMemory;// Taille de texture maximale\nthis.capabilities.gpu.maxTextureSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);this.capabilities.gpu.maxCubemapSize=gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);// Extensions disponibles\nthis.capabilities.gpu.glExtensions=gl.getSupportedExtensions();// Détecter si c'est un GPU mobile\nthis.capabilities.gpu.isMobileGPU=this.isMobileGPU(this.capabilities.gpu.renderer);}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la détection GPU',error);}}/**\n   * Détecte les conditions réseau via Network Information API\n   * @private\n   */async detectNetworkConditions(){try{const connection=navigator.connection||navigator.mozConnection||navigator.webkitConnection;if(connection){this.capabilities.network.type=connection.type||'unknown';this.capabilities.network.effectiveType=connection.effectiveType||'unknown';this.capabilities.network.downlink=connection.downlink||0;this.capabilities.network.rtt=connection.rtt||0;this.capabilities.network.saveData=!!connection.saveData;// Écouter les changements de connexion\nconnection.addEventListener('change',()=>{this.capabilities.network.type=connection.type||'unknown';this.capabilities.network.effectiveType=connection.effectiveType||'unknown';this.capabilities.network.downlink=connection.downlink||0;this.capabilities.network.rtt=connection.rtt||0;this.capabilities.network.saveData=!!connection.saveData;});}}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la détection réseau',error);}}/**\n   * Détecte les préférences d'accessibilité\n   * @private\n   */async detectAccessibilityPreferences(){try{if(window.matchMedia){const motionQuery=window.matchMedia('(prefers-reduced-motion: reduce)');this.capabilities.flags.preferReducedMotion=motionQuery.matches;// Écouter les changements de préférence\nmotionQuery.addEventListener('change',e=>{this.capabilities.flags.preferReducedMotion=e.matches;});}}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la détection des préférences',error);}}/**\n   * Détecte le type d'appareil (mobile, tablette, desktop)\n   * @private\n   */async detectDeviceType(){try{// Détection via user agent\nconst userAgent=navigator.userAgent||navigator.vendor||window.opera||'';const mobileRegex=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i;const tabletRegex=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(ad|hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;this.capabilities.flags.isMobile=mobileRegex.test(userAgent);this.capabilities.flags.isTablet=tabletRegex.test(userAgent)&&!mobileRegex.test(userAgent);// Vérification supplémentaire basée sur la taille d'écran pour les tablettes\nif(!this.capabilities.flags.isTablet&&!this.capabilities.flags.isMobile){const minTabletWidth=600;const maxTabletWidth=1024;const screenWidth=window.screen.width;if(screenWidth>=minTabletWidth&&screenWidth<=maxTabletWidth){this.capabilities.flags.isTablet=true;}}// Détecter les appareils de faible puissance\nthis.capabilities.flags.isLowEndDevice=this.isLowEndDevice();}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la détection du type d\\'appareil',error);}}/**\n   * Détecte l'état de la batterie\n   * @private\n   */async detectBatteryStatus(){try{if(navigator.getBattery){const battery=await navigator.getBattery();this.capabilities.flags.hasBatteryConstraints=!battery.charging&&battery.level<0.3;// Écouter les changements de batterie\nbattery.addEventListener('levelchange',()=>{this.capabilities.flags.hasBatteryConstraints=!battery.charging&&battery.level<0.3;});battery.addEventListener('chargingchange',()=>{this.capabilities.flags.hasBatteryConstraints=!battery.charging&&battery.level<0.3;});}}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la détection de la batterie',error);}}/**\n   * Charge les résultats de benchmark depuis le localStorage\n   * @private\n   */loadCachedResults(){try{const cachedResults=localStorage.getItem('deviceBenchmarkResults');if(cachedResults){this.benchmarkResults=JSON.parse(cachedResults);}}catch(error){console.error('DeviceCapabilityDetector: erreur lors du chargement des résultats',error);}}/**\n   * Exécute un benchmark léger pour évaluer les performances\n   * @returns {Promise<Object>} Résultats du benchmark\n   * @private\n   */async runLightBenchmark(){console.log('DeviceCapabilityDetector: démarrage du benchmark léger');const results={timestamp:Date.now(),scores:{}};try{// Benchmark CPU (opérations mathématiques)\nconst cpuStartTime=performance.now();let sum=0;for(let i=0;i<1000000;i++){sum+=Math.sqrt(i)*Math.sin(i);}const cpuEndTime=performance.now();results.scores.cpu=1000/(cpuEndTime-cpuStartTime);// Benchmark DOM\nconst domStartTime=performance.now();const container=document.createElement('div');document.body.appendChild(container);for(let i=0;i<1000;i++){const el=document.createElement('div');el.textContent='test';el.style.backgroundColor=i%2===0?'red':'blue';container.appendChild(el);}container.scrollTop=100;document.body.removeChild(container);const domEndTime=performance.now();results.scores.dom=1000/(domEndTime-domStartTime);// Si WebGL disponible, benchmark GPU\nif(this.capabilities.gpu.webGLSupport){results.scores.gpu=await this.runWebGLBenchmark();}else{results.scores.gpu=0;}// Calcul du score global\nresults.scores.overall=results.scores.cpu*0.3+results.scores.dom*0.3+results.scores.gpu*0.4;console.log('DeviceCapabilityDetector: benchmark terminé',results.scores);}catch(error){console.error('DeviceCapabilityDetector: erreur lors du benchmark',error);results.scores={cpu:5,dom:5,gpu:5,overall:5};}return results;}/**\n   * Exécute un benchmark WebGL pour évaluer les performances GPU\n   * @returns {Promise<number>} Score du benchmark\n   * @private\n   */async runWebGLBenchmark(){return new Promise(resolve=>{try{const canvas=document.createElement('canvas');canvas.width=512;canvas.height=512;const gl=canvas.getContext('webgl');if(!gl){resolve(0);return;}// Vertex shader simple\nconst vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,`\n          attribute vec2 position;\n          void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n          }\n        `);gl.compileShader(vertexShader);// Fragment shader avec calculs intensifs\nconst fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,`\n          precision mediump float;\n          uniform float time;\n          \n          void main() {\n            vec2 uv = gl_FragCoord.xy / 512.0;\n            float x = uv.x * sin(time * 0.1) * 10.0;\n            float y = uv.y * cos(time * 0.1) * 10.0;\n            \n            for(int i = 0; i < 10; i++) {\n              x = sin(x * y + time * 0.1) * 0.5 + 0.5;\n              y = cos(x * y + time * 0.1) * 0.5 + 0.5;\n            }\n            \n            gl_FragColor = vec4(x, y, x * y, 1.0);\n          }\n        `);gl.compileShader(fragmentShader);// Créer le programme\nconst program=gl.createProgram();gl.attachShader(program,vertexShader);gl.attachShader(program,fragmentShader);gl.linkProgram(program);gl.useProgram(program);// Position attribute\nconst positionBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,positionBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),gl.STATIC_DRAW);const positionLocation=gl.getAttribLocation(program,'position');gl.enableVertexAttribArray(positionLocation);gl.vertexAttribPointer(positionLocation,2,gl.FLOAT,false,0,0);// Time uniform\nconst timeLocation=gl.getUniformLocation(program,'time');// Benchmark\nlet frames=0;const startTime=performance.now();const maxTime=1000;// 1 seconde de test\nconst render=()=>{gl.uniform1f(timeLocation,performance.now()*0.001);gl.drawArrays(gl.TRIANGLE_STRIP,0,4);frames++;const elapsedTime=performance.now()-startTime;if(elapsedTime<maxTime){requestAnimationFrame(render);}else{const fps=frames/(elapsedTime*0.001);// Normaliser le score sur une échelle de 0 à 10\nconst normalizedScore=Math.min(fps/30,10);resolve(normalizedScore);}};render();}catch(error){console.error('DeviceCapabilityDetector: erreur dans le benchmark WebGL',error);resolve(0);}});}/**\n   * Enregistre les résultats du benchmark dans localStorage\n   * @private\n   */cacheBenchmarkResults(){try{if(this.benchmarkResults){localStorage.setItem('deviceBenchmarkResults',JSON.stringify(this.benchmarkResults));}}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la mise en cache',error);}}/**\n   * Finalise la détection et calcule le niveau de performance global\n   * @private\n   */finalizeDetection(){try{var _this$benchmarkResult,_this$benchmarkResult2;// Déterminer le niveau de performance global\nlet performanceLevel=PERF_LEVELS.MEDIUM;if(this.capabilities.flags.isLowEndDevice||this.capabilities.gpu.estimatedMemory<512||((_this$benchmarkResult=this.benchmarkResults)===null||_this$benchmarkResult===void 0?void 0:_this$benchmarkResult.scores.overall)<3){performanceLevel=PERF_LEVELS.LOW;}else if(this.capabilities.gpu.estimatedMemory>=2048&&!this.capabilities.flags.isMobile&&this.capabilities.cpu.cores>=4&&((_this$benchmarkResult2=this.benchmarkResults)===null||_this$benchmarkResult2===void 0?void 0:_this$benchmarkResult2.scores.overall)>7){performanceLevel=PERF_LEVELS.HIGH;}// Ajuster en fonction des conditions réseau\nif(this.capabilities.network.effectiveType==='2g'||this.capabilities.network.effectiveType==='slow-2g'){performanceLevel=Math.max(PERF_LEVELS.ULTRA_LOW,performanceLevel-2);}else if(this.capabilities.network.effectiveType==='3g'){performanceLevel=Math.max(PERF_LEVELS.LOW,performanceLevel-1);}// Ajuster en fonction des préférences d'accessibilité\nif(this.capabilities.flags.preferReducedMotion){performanceLevel=Math.min(performanceLevel,PERF_LEVELS.MEDIUM);}// Ajuster en fonction des contraintes de batterie\nif(this.capabilities.flags.hasBatteryConstraints){performanceLevel=Math.max(PERF_LEVELS.LOW,performanceLevel-1);}this.capabilities.performanceLevel=performanceLevel;}catch(error){console.error('DeviceCapabilityDetector: erreur lors de la finalisation',error);this.capabilities.performanceLevel=PERF_LEVELS.MEDIUM;// Valeur par défaut\n}}/**\n   * Applique des valeurs par défaut conservatrices en cas d'erreur\n   * @private\n   */applyDefaultValues(){this.capabilities.gpu.estimatedMemory=512;this.capabilities.flags.isLowEndDevice=true;this.capabilities.performanceLevel=PERF_LEVELS.MEDIUM;}/**\n   * Vérifie si WebGL est supporté\n   * @returns {boolean} true si WebGL est supporté\n   * @private\n   */isWebGLSupported(){try{const canvas=document.createElement('canvas');return!!(window.WebGLRenderingContext&&(canvas.getContext('webgl')||canvas.getContext('experimental-webgl')));}catch(e){return false;}}/**\n   * Vérifie si WebGL2 est supporté\n   * @returns {boolean} true si WebGL2 est supporté\n   * @private\n   */isWebGL2Supported(){try{const canvas=document.createElement('canvas');return!!(window.WebGL2RenderingContext&&canvas.getContext('webgl2'));}catch(e){return false;}}/**\n   * Estime la mémoire GPU disponible\n   * @param {WebGLRenderingContext} gl Contexte WebGL\n   * @param {string} renderer Nom du renderer\n   * @returns {number} Mémoire estimée en MB\n   * @private\n   */estimateGPUMemory(gl,renderer){// Si l'API WEBGL_debug_renderer_info est disponible, on peut estimer la mémoire\n// en fonction du nom du renderer\nif(renderer){const rendererLower=renderer.toLowerCase();// GPUs mobiles\nif(rendererLower.includes('adreno')){if(rendererLower.includes('adreno 6'))return 2048;if(rendererLower.includes('adreno 5'))return 1024;return 512;}if(rendererLower.includes('mali')){if(rendererLower.includes('mali-g'))return 2048;return 1024;}if(rendererLower.includes('apple')){if(rendererLower.includes('a14')||rendererLower.includes('a15'))return 4096;if(rendererLower.includes('a12')||rendererLower.includes('a13'))return 3072;if(rendererLower.includes('a10')||rendererLower.includes('a11'))return 2048;return 1536;}// GPUs desktop\nif(rendererLower.includes('nvidia')||rendererLower.includes('geforce')){if(rendererLower.includes('rtx'))return 8192;if(rendererLower.includes('gtx 16')||rendererLower.includes('gtx 10'))return 6144;return 4096;}if(rendererLower.includes('amd')||rendererLower.includes('radeon')){if(rendererLower.includes('rx 6'))return 8192;if(rendererLower.includes('rx 5'))return 6144;return 4096;}if(rendererLower.includes('intel')){if(rendererLower.includes('iris'))return 2048;if(rendererLower.includes('uhd'))return 1536;return 1024;}}// Estimation basée sur la taille de texture maximale\nconst maxTextureSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);if(maxTextureSize>=16384)return 4096;if(maxTextureSize>=8192)return 2048;if(maxTextureSize>=4096)return 1024;return 512;}/**\n   * Détermine si c'est un GPU mobile\n   * @param {string} renderer Nom du renderer\n   * @returns {boolean} true si c'est un GPU mobile\n   * @private\n   */isMobileGPU(renderer){if(!renderer)return false;const rendererLower=renderer.toLowerCase();return rendererLower.includes('adreno')||rendererLower.includes('mali')||rendererLower.includes('sgx')||rendererLower.includes('apple')&&(rendererLower.includes('iphone')||rendererLower.includes('ipad'));}/**\n   * Détermine si c'est un appareil de faible puissance\n   * @returns {boolean} true si c'est un appareil de faible puissance\n   * @private\n   */isLowEndDevice(){// Check pour memory\nif('deviceMemory'in navigator){if(navigator.deviceMemory<2)return true;}// Check pour CPU\nif(navigator.hardwareConcurrency&&navigator.hardwareConcurrency<4){return true;}// Check pour GPU\nif(this.capabilities.gpu.estimatedMemory<512){return true;}return false;}/**\n   * Convertit le niveau de performance en nom lisible\n   * @param {number} level Niveau de performance\n   * @returns {string} Nom du niveau de performance\n   * @private\n   */getPerformanceLevelName(level){switch(level){case PERF_LEVELS.ULTRA_LOW:return'Ultra faible';case PERF_LEVELS.LOW:return'Faible';case PERF_LEVELS.MEDIUM:return'Moyen';case PERF_LEVELS.HIGH:return'Élevé';case PERF_LEVELS.ULTRA_HIGH:return'Ultra élevé';default:return'Moyen';}}}// Export d'une instance unique\nconst deviceCapabilityDetector=new DeviceCapabilityDetector();export default deviceCapabilityDetector;","map":{"version":3,"names":["PERF_LEVELS","DeviceCapabilityDetector","constructor","capabilities","gpu","webGLSupport","webGL2Support","renderer","vendor","estimatedMemory","maxTextureSize","maxCubemapSize","glExtensions","isMobileGPU","cpu","cores","navigator","hardwareConcurrency","estimatedPerformance","screen","resolution","width","window","height","pixelRatio","devicePixelRatio","effectiveResolution","Math","round","isHighDensity","network","type","effectiveType","downlink","rtt","saveData","flags","isMobile","isTablet","isLowEndDevice","hasBatteryConstraints","preferReducedMotion","isOffline","onLine","performanceLevel","MEDIUM","benchmarkResults","detectionComplete","detect","getCapabilities","console","warn","Promise","all","detectGPUCapabilities","detectNetworkConditions","detectAccessibilityPreferences","detectDeviceType","detectBatteryStatus","loadCachedResults","needsBenchmark","Date","now","timestamp","runLightBenchmark","cacheBenchmarkResults","finalizeDetection","log","getPerformanceLevelName","gpuMemory","error","applyDefaultValues","isWebGLSupported","isWebGL2Supported","canvas","document","createElement","gl","getContext","debugInfo","getExtension","getParameter","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","estimateGPUMemory","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","getSupportedExtensions","connection","mozConnection","webkitConnection","addEventListener","matchMedia","motionQuery","matches","e","userAgent","opera","mobileRegex","tabletRegex","test","minTabletWidth","maxTabletWidth","screenWidth","getBattery","battery","charging","level","cachedResults","localStorage","getItem","JSON","parse","results","scores","cpuStartTime","performance","sum","i","sqrt","sin","cpuEndTime","domStartTime","container","body","appendChild","el","textContent","style","backgroundColor","scrollTop","removeChild","domEndTime","dom","runWebGLBenchmark","overall","resolve","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","useProgram","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","positionLocation","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","timeLocation","getUniformLocation","frames","startTime","maxTime","render","uniform1f","drawArrays","TRIANGLE_STRIP","elapsedTime","requestAnimationFrame","fps","normalizedScore","min","setItem","stringify","_this$benchmarkResult","_this$benchmarkResult2","LOW","HIGH","max","ULTRA_LOW","WebGLRenderingContext","WebGL2RenderingContext","rendererLower","toLowerCase","includes","deviceMemory","ULTRA_HIGH","deviceCapabilityDetector"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/utils/deviceCapabilityDetector.js"],"sourcesContent":["/**\n * deviceCapabilityDetector.js\n * Système avancé de détection des capacités de l'appareil\n * \n * Ce module fournit une détection précise des capacités matérielles et réseau\n * pour optimiser les performances des composants 3D et de l'interface utilisateur.\n */\n\nimport { PERF_LEVELS } from './PerformanceDetector';\n\nclass DeviceCapabilityDetector {\n  constructor() {\n    this.capabilities = {\n      // Capacités GPU\n      gpu: {\n        webGLSupport: false,\n        webGL2Support: false,\n        renderer: null,\n        vendor: null,\n        estimatedMemory: 0,\n        maxTextureSize: 0,\n        maxCubemapSize: 0,\n        glExtensions: [],\n        isMobileGPU: false\n      },\n      // CPU\n      cpu: {\n        cores: navigator.hardwareConcurrency || 2,\n        estimatedPerformance: 'medium'\n      },\n      // Écran\n      screen: {\n        resolution: { width: window.screen.width, height: window.screen.height },\n        pixelRatio: window.devicePixelRatio || 1,\n        effectiveResolution: {\n          width: Math.round(window.screen.width * (window.devicePixelRatio || 1)),\n          height: Math.round(window.screen.height * (window.devicePixelRatio || 1))\n        },\n        isHighDensity: (window.devicePixelRatio || 1) > 1.5\n      },\n      // Réseau\n      network: {\n        type: 'unknown',\n        effectiveType: 'unknown',\n        downlink: 0,\n        rtt: 0,\n        saveData: false\n      },\n      // Flags divers\n      flags: {\n        isMobile: false,\n        isTablet: false,\n        isLowEndDevice: false,\n        hasBatteryConstraints: false,\n        preferReducedMotion: false,\n        isOffline: !navigator.onLine\n      },\n      // Niveau de performance global\n      performanceLevel: PERF_LEVELS.MEDIUM\n    };\n    \n    this.benchmarkResults = null;\n    this.detectionComplete = false;\n    \n    // Initialiser la détection\n    this.detect();\n  }\n  \n  /**\n   * Récupère les capacités détectées\n   * @returns {Object} Objet contenant les capacités détectées\n   */\n  getCapabilities() {\n    if (!this.detectionComplete) {\n      console.warn('DeviceCapabilityDetector: getCapabilities appelé avant la fin de la détection');\n    }\n    return this.capabilities;\n  }\n  \n  /**\n   * Lance la détection complète des capacités\n   * @returns {Promise<Object>} Promesse résolue avec les capacités détectées\n   */\n  async detect() {\n    try {\n      // Détection simultanée des différentes capacités\n      await Promise.all([\n        this.detectGPUCapabilities(),\n        this.detectNetworkConditions(),\n        this.detectAccessibilityPreferences(),\n        this.detectDeviceType(),\n        this.detectBatteryStatus()\n      ]);\n      \n      // Charger les résultats précédents s'ils existent\n      this.loadCachedResults();\n      \n      // Exécuter le benchmark seulement si nécessaire (pas de résultats ou plus de 24h)\n      const needsBenchmark = !this.benchmarkResults || \n        (Date.now() - this.benchmarkResults.timestamp > 24 * 60 * 60 * 1000);\n        \n      if (needsBenchmark) {\n        this.benchmarkResults = await this.runLightBenchmark();\n        this.cacheBenchmarkResults();\n      }\n      \n      // Finaliser la détection\n      this.finalizeDetection();\n      this.detectionComplete = true;\n      \n      console.log('DeviceCapabilityDetector: détection terminée', {\n        performanceLevel: this.getPerformanceLevelName(this.capabilities.performanceLevel),\n        isMobile: this.capabilities.flags.isMobile,\n        gpuMemory: this.capabilities.gpu.estimatedMemory + 'MB',\n        cores: this.capabilities.cpu.cores\n      });\n      \n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la détection', error);\n      // En cas d'erreur, utiliser des valeurs par défaut conservatrices\n      this.applyDefaultValues();\n      this.detectionComplete = true;\n    }\n    \n    return this.capabilities;\n  }\n  \n  /**\n   * Détecte les capacités GPU via WebGL\n   * @private\n   */\n  async detectGPUCapabilities() {\n    try {\n      // Tester le support WebGL\n      this.capabilities.gpu.webGLSupport = this.isWebGLSupported();\n      this.capabilities.gpu.webGL2Support = this.isWebGL2Supported();\n      \n      if (!this.capabilities.gpu.webGLSupport) {\n        console.warn('DeviceCapabilityDetector: WebGL non supporté');\n        return;\n      }\n      \n      // Créer un canvas temporaire\n      const canvas = document.createElement('canvas');\n      const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n      \n      if (!gl) return;\n      \n      // Récupérer les informations du renderer\n      const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n      if (debugInfo) {\n        this.capabilities.gpu.renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\n        this.capabilities.gpu.vendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\n      }\n      \n      // Estimer la mémoire GPU\n      const gpuMemory = this.estimateGPUMemory(gl, this.capabilities.gpu.renderer);\n      this.capabilities.gpu.estimatedMemory = gpuMemory;\n      \n      // Taille de texture maximale\n      this.capabilities.gpu.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      this.capabilities.gpu.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      \n      // Extensions disponibles\n      this.capabilities.gpu.glExtensions = gl.getSupportedExtensions();\n      \n      // Détecter si c'est un GPU mobile\n      this.capabilities.gpu.isMobileGPU = this.isMobileGPU(this.capabilities.gpu.renderer);\n      \n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la détection GPU', error);\n    }\n  }\n  \n  /**\n   * Détecte les conditions réseau via Network Information API\n   * @private\n   */\n  async detectNetworkConditions() {\n    try {\n      const connection = navigator.connection || \n                         navigator.mozConnection || \n                         navigator.webkitConnection;\n                         \n      if (connection) {\n        this.capabilities.network.type = connection.type || 'unknown';\n        this.capabilities.network.effectiveType = connection.effectiveType || 'unknown';\n        this.capabilities.network.downlink = connection.downlink || 0;\n        this.capabilities.network.rtt = connection.rtt || 0;\n        this.capabilities.network.saveData = !!connection.saveData;\n        \n        // Écouter les changements de connexion\n        connection.addEventListener('change', () => {\n          this.capabilities.network.type = connection.type || 'unknown';\n          this.capabilities.network.effectiveType = connection.effectiveType || 'unknown';\n          this.capabilities.network.downlink = connection.downlink || 0;\n          this.capabilities.network.rtt = connection.rtt || 0;\n          this.capabilities.network.saveData = !!connection.saveData;\n        });\n      }\n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la détection réseau', error);\n    }\n  }\n  \n  /**\n   * Détecte les préférences d'accessibilité\n   * @private\n   */\n  async detectAccessibilityPreferences() {\n    try {\n      if (window.matchMedia) {\n        const motionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n        this.capabilities.flags.preferReducedMotion = motionQuery.matches;\n        \n        // Écouter les changements de préférence\n        motionQuery.addEventListener('change', (e) => {\n          this.capabilities.flags.preferReducedMotion = e.matches;\n        });\n      }\n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la détection des préférences', error);\n    }\n  }\n  \n  /**\n   * Détecte le type d'appareil (mobile, tablette, desktop)\n   * @private\n   */\n  async detectDeviceType() {\n    try {\n      // Détection via user agent\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera || '';\n      const mobileRegex = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i;\n      const tabletRegex = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(ad|hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n      \n      this.capabilities.flags.isMobile = mobileRegex.test(userAgent);\n      this.capabilities.flags.isTablet = tabletRegex.test(userAgent) && !mobileRegex.test(userAgent);\n      \n      // Vérification supplémentaire basée sur la taille d'écran pour les tablettes\n      if (!this.capabilities.flags.isTablet && !this.capabilities.flags.isMobile) {\n        const minTabletWidth = 600;\n        const maxTabletWidth = 1024;\n        const screenWidth = window.screen.width;\n        \n        if (screenWidth >= minTabletWidth && screenWidth <= maxTabletWidth) {\n          this.capabilities.flags.isTablet = true;\n        }\n      }\n      \n      // Détecter les appareils de faible puissance\n      this.capabilities.flags.isLowEndDevice = this.isLowEndDevice();\n      \n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la détection du type d\\'appareil', error);\n    }\n  }\n  \n  /**\n   * Détecte l'état de la batterie\n   * @private\n   */\n  async detectBatteryStatus() {\n    try {\n      if (navigator.getBattery) {\n        const battery = await navigator.getBattery();\n        \n        this.capabilities.flags.hasBatteryConstraints = \n          !battery.charging && battery.level < 0.3;\n          \n        // Écouter les changements de batterie\n        battery.addEventListener('levelchange', () => {\n          this.capabilities.flags.hasBatteryConstraints = \n            !battery.charging && battery.level < 0.3;\n        });\n        \n        battery.addEventListener('chargingchange', () => {\n          this.capabilities.flags.hasBatteryConstraints = \n            !battery.charging && battery.level < 0.3;\n        });\n      }\n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la détection de la batterie', error);\n    }\n  }\n  \n  /**\n   * Charge les résultats de benchmark depuis le localStorage\n   * @private\n   */\n  loadCachedResults() {\n    try {\n      const cachedResults = localStorage.getItem('deviceBenchmarkResults');\n      if (cachedResults) {\n        this.benchmarkResults = JSON.parse(cachedResults);\n      }\n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors du chargement des résultats', error);\n    }\n  }\n  \n  /**\n   * Exécute un benchmark léger pour évaluer les performances\n   * @returns {Promise<Object>} Résultats du benchmark\n   * @private\n   */\n  async runLightBenchmark() {\n    console.log('DeviceCapabilityDetector: démarrage du benchmark léger');\n    \n    const results = {\n      timestamp: Date.now(),\n      scores: {}\n    };\n    \n    try {\n      // Benchmark CPU (opérations mathématiques)\n      const cpuStartTime = performance.now();\n      let sum = 0;\n      for (let i = 0; i < 1000000; i++) {\n        sum += Math.sqrt(i) * Math.sin(i);\n      }\n      const cpuEndTime = performance.now();\n      results.scores.cpu = 1000 / (cpuEndTime - cpuStartTime);\n      \n      // Benchmark DOM\n      const domStartTime = performance.now();\n      const container = document.createElement('div');\n      document.body.appendChild(container);\n      for (let i = 0; i < 1000; i++) {\n        const el = document.createElement('div');\n        el.textContent = 'test';\n        el.style.backgroundColor = i % 2 === 0 ? 'red' : 'blue';\n        container.appendChild(el);\n      }\n      container.scrollTop = 100;\n      document.body.removeChild(container);\n      const domEndTime = performance.now();\n      results.scores.dom = 1000 / (domEndTime - domStartTime);\n      \n      // Si WebGL disponible, benchmark GPU\n      if (this.capabilities.gpu.webGLSupport) {\n        results.scores.gpu = await this.runWebGLBenchmark();\n      } else {\n        results.scores.gpu = 0;\n      }\n      \n      // Calcul du score global\n      results.scores.overall = (results.scores.cpu * 0.3 + \n                               results.scores.dom * 0.3 + \n                               results.scores.gpu * 0.4);\n      \n      console.log('DeviceCapabilityDetector: benchmark terminé', results.scores);\n      \n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors du benchmark', error);\n      results.scores = {\n        cpu: 5,\n        dom: 5,\n        gpu: 5,\n        overall: 5\n      };\n    }\n    \n    return results;\n  }\n  \n  /**\n   * Exécute un benchmark WebGL pour évaluer les performances GPU\n   * @returns {Promise<number>} Score du benchmark\n   * @private\n   */\n  async runWebGLBenchmark() {\n    return new Promise((resolve) => {\n      try {\n        const canvas = document.createElement('canvas');\n        canvas.width = 512;\n        canvas.height = 512;\n        const gl = canvas.getContext('webgl');\n        \n        if (!gl) {\n          resolve(0);\n          return;\n        }\n        \n        // Vertex shader simple\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, `\n          attribute vec2 position;\n          void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n          }\n        `);\n        gl.compileShader(vertexShader);\n        \n        // Fragment shader avec calculs intensifs\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, `\n          precision mediump float;\n          uniform float time;\n          \n          void main() {\n            vec2 uv = gl_FragCoord.xy / 512.0;\n            float x = uv.x * sin(time * 0.1) * 10.0;\n            float y = uv.y * cos(time * 0.1) * 10.0;\n            \n            for(int i = 0; i < 10; i++) {\n              x = sin(x * y + time * 0.1) * 0.5 + 0.5;\n              y = cos(x * y + time * 0.1) * 0.5 + 0.5;\n            }\n            \n            gl_FragColor = vec4(x, y, x * y, 1.0);\n          }\n        `);\n        gl.compileShader(fragmentShader);\n        \n        // Créer le programme\n        const program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        gl.useProgram(program);\n        \n        // Position attribute\n        const positionBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n          -1, -1,\n           1, -1,\n          -1,  1,\n           1,  1\n        ]), gl.STATIC_DRAW);\n        \n        const positionLocation = gl.getAttribLocation(program, 'position');\n        gl.enableVertexAttribArray(positionLocation);\n        gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n        \n        // Time uniform\n        const timeLocation = gl.getUniformLocation(program, 'time');\n        \n        // Benchmark\n        let frames = 0;\n        const startTime = performance.now();\n        const maxTime = 1000; // 1 seconde de test\n        \n        const render = () => {\n          gl.uniform1f(timeLocation, performance.now() * 0.001);\n          gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n          frames++;\n          \n          const elapsedTime = performance.now() - startTime;\n          if (elapsedTime < maxTime) {\n            requestAnimationFrame(render);\n          } else {\n            const fps = frames / (elapsedTime * 0.001);\n            // Normaliser le score sur une échelle de 0 à 10\n            const normalizedScore = Math.min(fps / 30, 10);\n            resolve(normalizedScore);\n          }\n        };\n        \n        render();\n        \n      } catch (error) {\n        console.error('DeviceCapabilityDetector: erreur dans le benchmark WebGL', error);\n        resolve(0);\n      }\n    });\n  }\n  \n  /**\n   * Enregistre les résultats du benchmark dans localStorage\n   * @private\n   */\n  cacheBenchmarkResults() {\n    try {\n      if (this.benchmarkResults) {\n        localStorage.setItem('deviceBenchmarkResults', \n          JSON.stringify(this.benchmarkResults));\n      }\n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la mise en cache', error);\n    }\n  }\n  \n  /**\n   * Finalise la détection et calcule le niveau de performance global\n   * @private\n   */\n  finalizeDetection() {\n    try {\n      // Déterminer le niveau de performance global\n      let performanceLevel = PERF_LEVELS.MEDIUM;\n      \n      if (this.capabilities.flags.isLowEndDevice || \n          this.capabilities.gpu.estimatedMemory < 512 ||\n          this.benchmarkResults?.scores.overall < 3) {\n        performanceLevel = PERF_LEVELS.LOW;\n      } else if (this.capabilities.gpu.estimatedMemory >= 2048 && \n                !this.capabilities.flags.isMobile &&\n                this.capabilities.cpu.cores >= 4 &&\n                this.benchmarkResults?.scores.overall > 7) {\n        performanceLevel = PERF_LEVELS.HIGH;\n      }\n      \n      // Ajuster en fonction des conditions réseau\n      if (this.capabilities.network.effectiveType === '2g' || \n          this.capabilities.network.effectiveType === 'slow-2g') {\n        performanceLevel = Math.max(PERF_LEVELS.ULTRA_LOW, performanceLevel - 2);\n      } else if (this.capabilities.network.effectiveType === '3g') {\n        performanceLevel = Math.max(PERF_LEVELS.LOW, performanceLevel - 1);\n      }\n      \n      // Ajuster en fonction des préférences d'accessibilité\n      if (this.capabilities.flags.preferReducedMotion) {\n        performanceLevel = Math.min(performanceLevel, PERF_LEVELS.MEDIUM);\n      }\n      \n      // Ajuster en fonction des contraintes de batterie\n      if (this.capabilities.flags.hasBatteryConstraints) {\n        performanceLevel = Math.max(PERF_LEVELS.LOW, performanceLevel - 1);\n      }\n      \n      this.capabilities.performanceLevel = performanceLevel;\n      \n    } catch (error) {\n      console.error('DeviceCapabilityDetector: erreur lors de la finalisation', error);\n      this.capabilities.performanceLevel = PERF_LEVELS.MEDIUM; // Valeur par défaut\n    }\n  }\n  \n  /**\n   * Applique des valeurs par défaut conservatrices en cas d'erreur\n   * @private\n   */\n  applyDefaultValues() {\n    this.capabilities.gpu.estimatedMemory = 512;\n    this.capabilities.flags.isLowEndDevice = true;\n    this.capabilities.performanceLevel = PERF_LEVELS.MEDIUM;\n  }\n  \n  /**\n   * Vérifie si WebGL est supporté\n   * @returns {boolean} true si WebGL est supporté\n   * @private\n   */\n  isWebGLSupported() {\n    try {\n      const canvas = document.createElement('canvas');\n      return !!(window.WebGLRenderingContext && \n        (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n    } catch (e) {\n      return false;\n    }\n  }\n  \n  /**\n   * Vérifie si WebGL2 est supporté\n   * @returns {boolean} true si WebGL2 est supporté\n   * @private\n   */\n  isWebGL2Supported() {\n    try {\n      const canvas = document.createElement('canvas');\n      return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n    } catch (e) {\n      return false;\n    }\n  }\n  \n  /**\n   * Estime la mémoire GPU disponible\n   * @param {WebGLRenderingContext} gl Contexte WebGL\n   * @param {string} renderer Nom du renderer\n   * @returns {number} Mémoire estimée en MB\n   * @private\n   */\n  estimateGPUMemory(gl, renderer) {\n    // Si l'API WEBGL_debug_renderer_info est disponible, on peut estimer la mémoire\n    // en fonction du nom du renderer\n    if (renderer) {\n      const rendererLower = renderer.toLowerCase();\n      \n      // GPUs mobiles\n      if (rendererLower.includes('adreno')) {\n        if (rendererLower.includes('adreno 6')) return 2048;\n        if (rendererLower.includes('adreno 5')) return 1024;\n        return 512;\n      }\n      \n      if (rendererLower.includes('mali')) {\n        if (rendererLower.includes('mali-g')) return 2048;\n        return 1024;\n      }\n      \n      if (rendererLower.includes('apple')) {\n        if (rendererLower.includes('a14') || rendererLower.includes('a15')) return 4096;\n        if (rendererLower.includes('a12') || rendererLower.includes('a13')) return 3072;\n        if (rendererLower.includes('a10') || rendererLower.includes('a11')) return 2048;\n        return 1536;\n      }\n      \n      // GPUs desktop\n      if (rendererLower.includes('nvidia') || rendererLower.includes('geforce')) {\n        if (rendererLower.includes('rtx')) return 8192;\n        if (rendererLower.includes('gtx 16') || rendererLower.includes('gtx 10')) return 6144;\n        return 4096;\n      }\n      \n      if (rendererLower.includes('amd') || rendererLower.includes('radeon')) {\n        if (rendererLower.includes('rx 6')) return 8192;\n        if (rendererLower.includes('rx 5')) return 6144;\n        return 4096;\n      }\n      \n      if (rendererLower.includes('intel')) {\n        if (rendererLower.includes('iris')) return 2048;\n        if (rendererLower.includes('uhd')) return 1536;\n        return 1024;\n      }\n    }\n    \n    // Estimation basée sur la taille de texture maximale\n    const maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    if (maxTextureSize >= 16384) return 4096;\n    if (maxTextureSize >= 8192) return 2048;\n    if (maxTextureSize >= 4096) return 1024;\n    return 512;\n  }\n  \n  /**\n   * Détermine si c'est un GPU mobile\n   * @param {string} renderer Nom du renderer\n   * @returns {boolean} true si c'est un GPU mobile\n   * @private\n   */\n  isMobileGPU(renderer) {\n    if (!renderer) return false;\n    \n    const rendererLower = renderer.toLowerCase();\n    return rendererLower.includes('adreno') || \n           rendererLower.includes('mali') || \n           rendererLower.includes('sgx') ||\n           rendererLower.includes('apple') && (\n             rendererLower.includes('iphone') || \n             rendererLower.includes('ipad')\n           );\n  }\n  \n  /**\n   * Détermine si c'est un appareil de faible puissance\n   * @returns {boolean} true si c'est un appareil de faible puissance\n   * @private\n   */\n  isLowEndDevice() {\n    // Check pour memory\n    if ('deviceMemory' in navigator) {\n      if (navigator.deviceMemory < 2) return true;\n    }\n    \n    // Check pour CPU\n    if (navigator.hardwareConcurrency && navigator.hardwareConcurrency < 4) {\n      return true;\n    }\n    \n    // Check pour GPU\n    if (this.capabilities.gpu.estimatedMemory < 512) {\n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Convertit le niveau de performance en nom lisible\n   * @param {number} level Niveau de performance\n   * @returns {string} Nom du niveau de performance\n   * @private\n   */\n  getPerformanceLevelName(level) {\n    switch (level) {\n      case PERF_LEVELS.ULTRA_LOW: return 'Ultra faible';\n      case PERF_LEVELS.LOW: return 'Faible';\n      case PERF_LEVELS.MEDIUM: return 'Moyen';\n      case PERF_LEVELS.HIGH: return 'Élevé';\n      case PERF_LEVELS.ULTRA_HIGH: return 'Ultra élevé';\n      default: return 'Moyen';\n    }\n  }\n}\n\n// Export d'une instance unique\nconst deviceCapabilityDetector = new DeviceCapabilityDetector();\nexport default deviceCapabilityDetector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}