{"ast":null,"code":"// Weather Service\nimport axios from'axios';// OpenWeatherMap API key\nconst WEATHER_API_KEY=process.env.REACT_APP_OPENWEATHER_API_KEY||'your-api-key-placeholder';const BASE_URL='https://api.openweathermap.org/data/2.5';/**\n * Weather Service to fetch and process weather data\n */class WeatherService{/**\n   * Fetches current weather for a specific location\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Object>} Weather data\n   */async getCurrentWeather(lat,lng){let lang=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'en';try{const response=await axios.get(`${BASE_URL}/weather`,{params:{lat,lon:lng,appid:WEATHER_API_KEY,units:'metric',lang}});return response.data;}catch(error){console.error('Error fetching current weather:',error);throw error;}}/**\n   * Fetches 5-day weather forecast for a specific location\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Object>} Forecast data\n   */async getForecast(lat,lng){let lang=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'en';try{const response=await axios.get(`${BASE_URL}/forecast`,{params:{lat,lon:lng,appid:WEATHER_API_KEY,units:'metric',lang}});return response.data;}catch(error){console.error('Error fetching forecast:',error);throw error;}}/**\n   * Gets weather data for multiple points along a route\n   * @param {Array<{lat: number, lng: number}>} routePoints - Array of route coordinates\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Array<Object>>} Array of weather data for each point\n   */async getRouteWeather(routePoints){let lang=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'en';try{// Take a sample of points to avoid too many API calls\nconst sampleSize=Math.min(10,routePoints.length);const step=Math.max(1,Math.floor(routePoints.length/sampleSize));const sampledPoints=[];for(let i=0;i<routePoints.length;i+=step){sampledPoints.push(routePoints[i]);}// Add the last point if it's not already included\nif(routePoints.length>0&&sampledPoints[sampledPoints.length-1]!==routePoints[routePoints.length-1]){sampledPoints.push(routePoints[routePoints.length-1]);}// Get weather for each point\nconst weatherPromises=sampledPoints.map(point=>this.getCurrentWeather(point.lat,point.lng,lang));return await Promise.all(weatherPromises);}catch(error){console.error('Error fetching route weather:',error);throw error;}}/**\n   * Determines the cycling condition severity based on weather data\n   * @param {Object} weatherData - Weather data for a specific location\n   * @returns {string} Severity level: 'good', 'moderate', 'difficult', or 'dangerous'\n   */getCyclingConditionSeverity(weatherData){if(!weatherData)return'moderate';const{weather,main,wind,rain,snow}=weatherData;// Check for dangerous conditions first\nif(weather&&weather.some(w=>['Thunderstorm','Hurricane','Tornado'].includes(w.main))||wind&&wind.speed>30||main&&main.temp>35||main&&main.temp<-5||rain&&rain['1h']>10||snow&&snow['1h']>5){return'dangerous';}// Check for difficult conditions\nif(weather&&weather.some(w=>['Rain','Snow','Fog'].includes(w.main))||wind&&wind.speed>20||main&&(main.temp>30||main.temp<0)||rain&&rain['1h']>5||snow&&snow['1h']>2){return'difficult';}// Check for moderate conditions\nif(weather&&weather.some(w=>['Clouds','Drizzle','Mist'].includes(w.main))||wind&&wind.speed>10||main&&(main.temp>25||main.temp<5)||rain&&rain['1h']>1||main&&main.humidity>80){return'moderate';}// Default to good conditions\nreturn'good';}/**\n   * Provides equipment recommendations based on weather conditions\n   * @param {Object} weatherData - Weather data for a specific location\n   * @returns {Object} Recommendations categorized by type\n   */getEquipmentRecommendations(weatherData){var _weather$;if(!weatherData)return{clothing:[],accessories:[],bike:[],nutrition:[],safety:[]};const{weather,main,wind,rain,snow}=weatherData;const condition=(weather===null||weather===void 0?void 0:(_weather$=weather[0])===null||_weather$===void 0?void 0:_weather$.main)||'';const temp=(main===null||main===void 0?void 0:main.temp)||20;const windSpeed=(wind===null||wind===void 0?void 0:wind.speed)||0;const isRaining=rain&&rain['1h']>0;const isSnowing=snow&&snow['1h']>0;const recommendations={clothing:[],accessories:[],bike:[],nutrition:[],safety:[]};// Clothing recommendations based on temperature\nif(temp<5){recommendations.clothing.push('winterJacket','thermalBase','winterGloves','thermalTights');recommendations.accessories.push('winterCap','earWarmers','neckWarmer');}else if(temp<10){recommendations.clothing.push('longSleeveJersey','armWarmers','legWarmers','lightGloves');recommendations.accessories.push('windproofCap');}else if(temp<15){recommendations.clothing.push('longSleeveJersey','armWarmers','kneeWarmers');}else if(temp<20){recommendations.clothing.push('shortSleeveJersey','lightArmWarmers');}else if(temp<25){recommendations.clothing.push('shortSleeveJersey','lightweightSocks');}else if(temp<30){recommendations.clothing.push('lightweightJersey','lightweightSocks');recommendations.accessories.push('sunCap');}else{recommendations.clothing.push('lightweightJersey','lightweightSocks');recommendations.accessories.push('sunCap');recommendations.nutrition.push('extraHydration');}// Recommendations based on wind conditions\nif(windSpeed>25){recommendations.clothing.push('windproofJacket');recommendations.accessories.push('aeroHelmet');recommendations.bike.push('lowProfile');}else if(windSpeed>15){recommendations.clothing.push('windbreaker');}// Recommendations based on precipitation\nif(isRaining){recommendations.clothing.push('waterproofJacket','waterproofGloves');recommendations.accessories.push('capWithVisor');recommendations.bike.push('fenders','wetTires');recommendations.safety.push('extraLights');}if(isSnowing){recommendations.clothing.push('waterproofJacket','waterproofGloves','waterproofShoes');recommendations.bike.push('winterTires');recommendations.safety.push('extraLights','highVisibilityVest');}// Recommendations based on specific weather conditions\nswitch(condition){case'Thunderstorm':recommendations.safety.push('seekShelter','avoidOpenAreas','alternatePlan');break;case'Fog':case'Mist':recommendations.safety.push('extraLights','highVisibilityVest','slowSpeed');break;case'Clear':recommendations.accessories.push('sunglasses','sunscreen');if(temp>25)recommendations.nutrition.push('extraHydration','electrolyteSupplements');break;default:break;}// Always recommend these items\nrecommendations.safety.push('helmet','mobilePhone');recommendations.bike.push('spareTube','tirePump');recommendations.nutrition.push('water');return recommendations;}}export const weatherService=new WeatherService();","map":{"version":3,"names":["axios","WEATHER_API_KEY","process","env","REACT_APP_OPENWEATHER_API_KEY","BASE_URL","WeatherService","getCurrentWeather","lat","lng","lang","arguments","length","undefined","response","get","params","lon","appid","units","data","error","console","getForecast","getRouteWeather","routePoints","sampleSize","Math","min","step","max","floor","sampledPoints","i","push","weatherPromises","map","point","Promise","all","getCyclingConditionSeverity","weatherData","weather","main","wind","rain","snow","some","w","includes","speed","temp","humidity","getEquipmentRecommendations","_weather$","clothing","accessories","bike","nutrition","safety","condition","windSpeed","isRaining","isSnowing","recommendations","weatherService"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/services/weather.service.js"],"sourcesContent":["// Weather Service\nimport axios from 'axios';\n\n// OpenWeatherMap API key\nconst WEATHER_API_KEY = process.env.REACT_APP_OPENWEATHER_API_KEY || 'your-api-key-placeholder';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\n/**\n * Weather Service to fetch and process weather data\n */\nclass WeatherService {\n  /**\n   * Fetches current weather for a specific location\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Object>} Weather data\n   */\n  async getCurrentWeather(lat, lng, lang = 'en') {\n    try {\n      const response = await axios.get(`${BASE_URL}/weather`, {\n        params: {\n          lat,\n          lon: lng,\n          appid: WEATHER_API_KEY,\n          units: 'metric',\n          lang\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching current weather:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches 5-day weather forecast for a specific location\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Object>} Forecast data\n   */\n  async getForecast(lat, lng, lang = 'en') {\n    try {\n      const response = await axios.get(`${BASE_URL}/forecast`, {\n        params: {\n          lat,\n          lon: lng,\n          appid: WEATHER_API_KEY,\n          units: 'metric',\n          lang\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching forecast:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets weather data for multiple points along a route\n   * @param {Array<{lat: number, lng: number}>} routePoints - Array of route coordinates\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Array<Object>>} Array of weather data for each point\n   */\n  async getRouteWeather(routePoints, lang = 'en') {\n    try {\n      // Take a sample of points to avoid too many API calls\n      const sampleSize = Math.min(10, routePoints.length);\n      const step = Math.max(1, Math.floor(routePoints.length / sampleSize));\n      const sampledPoints = [];\n      \n      for (let i = 0; i < routePoints.length; i += step) {\n        sampledPoints.push(routePoints[i]);\n      }\n      \n      // Add the last point if it's not already included\n      if (routePoints.length > 0 && \n          sampledPoints[sampledPoints.length - 1] !== routePoints[routePoints.length - 1]) {\n        sampledPoints.push(routePoints[routePoints.length - 1]);\n      }\n      \n      // Get weather for each point\n      const weatherPromises = sampledPoints.map(point => \n        this.getCurrentWeather(point.lat, point.lng, lang)\n      );\n      \n      return await Promise.all(weatherPromises);\n    } catch (error) {\n      console.error('Error fetching route weather:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Determines the cycling condition severity based on weather data\n   * @param {Object} weatherData - Weather data for a specific location\n   * @returns {string} Severity level: 'good', 'moderate', 'difficult', or 'dangerous'\n   */\n  getCyclingConditionSeverity(weatherData) {\n    if (!weatherData) return 'moderate';\n    \n    const { weather, main, wind, rain, snow } = weatherData;\n    \n    // Check for dangerous conditions first\n    if (\n      (weather && weather.some(w => ['Thunderstorm', 'Hurricane', 'Tornado'].includes(w.main))) ||\n      (wind && wind.speed > 30) ||\n      (main && main.temp > 35) ||\n      (main && main.temp < -5) ||\n      (rain && rain['1h'] > 10) ||\n      (snow && snow['1h'] > 5)\n    ) {\n      return 'dangerous';\n    }\n    \n    // Check for difficult conditions\n    if (\n      (weather && weather.some(w => ['Rain', 'Snow', 'Fog'].includes(w.main))) ||\n      (wind && wind.speed > 20) ||\n      (main && (main.temp > 30 || main.temp < 0)) ||\n      (rain && rain['1h'] > 5) ||\n      (snow && snow['1h'] > 2)\n    ) {\n      return 'difficult';\n    }\n    \n    // Check for moderate conditions\n    if (\n      (weather && weather.some(w => ['Clouds', 'Drizzle', 'Mist'].includes(w.main))) ||\n      (wind && wind.speed > 10) ||\n      (main && (main.temp > 25 || main.temp < 5)) ||\n      (rain && rain['1h'] > 1) ||\n      (main && main.humidity > 80)\n    ) {\n      return 'moderate';\n    }\n    \n    // Default to good conditions\n    return 'good';\n  }\n  \n  /**\n   * Provides equipment recommendations based on weather conditions\n   * @param {Object} weatherData - Weather data for a specific location\n   * @returns {Object} Recommendations categorized by type\n   */\n  getEquipmentRecommendations(weatherData) {\n    if (!weatherData) return {\n      clothing: [],\n      accessories: [],\n      bike: [],\n      nutrition: [],\n      safety: []\n    };\n    \n    const { weather, main, wind, rain, snow } = weatherData;\n    const condition = weather?.[0]?.main || '';\n    const temp = main?.temp || 20;\n    const windSpeed = wind?.speed || 0;\n    const isRaining = rain && rain['1h'] > 0;\n    const isSnowing = snow && snow['1h'] > 0;\n    \n    const recommendations = {\n      clothing: [],\n      accessories: [],\n      bike: [],\n      nutrition: [],\n      safety: []\n    };\n    \n    // Clothing recommendations based on temperature\n    if (temp < 5) {\n      recommendations.clothing.push('winterJacket', 'thermalBase', 'winterGloves', 'thermalTights');\n      recommendations.accessories.push('winterCap', 'earWarmers', 'neckWarmer');\n    } else if (temp < 10) {\n      recommendations.clothing.push('longSleeveJersey', 'armWarmers', 'legWarmers', 'lightGloves');\n      recommendations.accessories.push('windproofCap');\n    } else if (temp < 15) {\n      recommendations.clothing.push('longSleeveJersey', 'armWarmers', 'kneeWarmers');\n    } else if (temp < 20) {\n      recommendations.clothing.push('shortSleeveJersey', 'lightArmWarmers');\n    } else if (temp < 25) {\n      recommendations.clothing.push('shortSleeveJersey', 'lightweightSocks');\n    } else if (temp < 30) {\n      recommendations.clothing.push('lightweightJersey', 'lightweightSocks');\n      recommendations.accessories.push('sunCap');\n    } else {\n      recommendations.clothing.push('lightweightJersey', 'lightweightSocks');\n      recommendations.accessories.push('sunCap');\n      recommendations.nutrition.push('extraHydration');\n    }\n    \n    // Recommendations based on wind conditions\n    if (windSpeed > 25) {\n      recommendations.clothing.push('windproofJacket');\n      recommendations.accessories.push('aeroHelmet');\n      recommendations.bike.push('lowProfile');\n    } else if (windSpeed > 15) {\n      recommendations.clothing.push('windbreaker');\n    }\n    \n    // Recommendations based on precipitation\n    if (isRaining) {\n      recommendations.clothing.push('waterproofJacket', 'waterproofGloves');\n      recommendations.accessories.push('capWithVisor');\n      recommendations.bike.push('fenders', 'wetTires');\n      recommendations.safety.push('extraLights');\n    }\n    \n    if (isSnowing) {\n      recommendations.clothing.push('waterproofJacket', 'waterproofGloves', 'waterproofShoes');\n      recommendations.bike.push('winterTires');\n      recommendations.safety.push('extraLights', 'highVisibilityVest');\n    }\n    \n    // Recommendations based on specific weather conditions\n    switch(condition) {\n      case 'Thunderstorm':\n        recommendations.safety.push('seekShelter', 'avoidOpenAreas', 'alternatePlan');\n        break;\n      case 'Fog':\n      case 'Mist':\n        recommendations.safety.push('extraLights', 'highVisibilityVest', 'slowSpeed');\n        break;\n      case 'Clear':\n        recommendations.accessories.push('sunglasses', 'sunscreen');\n        if (temp > 25) recommendations.nutrition.push('extraHydration', 'electrolyteSupplements');\n        break;\n      default:\n        break;\n    }\n    \n    // Always recommend these items\n    recommendations.safety.push('helmet', 'mobilePhone');\n    recommendations.bike.push('spareTube', 'tirePump');\n    recommendations.nutrition.push('water');\n    \n    return recommendations;\n  }\n}\n\nexport const weatherService = new WeatherService();\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,eAAe,CAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B,EAAI,0BAA0B,CAC/F,KAAM,CAAAC,QAAQ,CAAG,yCAAyC,CAE1D;AACA;AACA,GACA,KAAM,CAAAC,cAAe,CACnB;AACF;AACA;AACA;AACA;AACA;AACA,KACE,KAAM,CAAAC,iBAAiBA,CAACC,GAAG,CAAEC,GAAG,CAAe,IAAb,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC3C,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,GAAGV,QAAQ,UAAU,CAAE,CACtDW,MAAM,CAAE,CACNR,GAAG,CACHS,GAAG,CAAER,GAAG,CACRS,KAAK,CAAEjB,eAAe,CACtBkB,KAAK,CAAE,QAAQ,CACfT,IACF,CACF,CAAC,CAAC,CACF,MAAO,CAAAI,QAAQ,CAACM,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AACF;AACA;AACA;AACA;AACA;AACA,KACE,KAAM,CAAAE,WAAWA,CAACf,GAAG,CAAEC,GAAG,CAAe,IAAb,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACrC,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,GAAGV,QAAQ,WAAW,CAAE,CACvDW,MAAM,CAAE,CACNR,GAAG,CACHS,GAAG,CAAER,GAAG,CACRS,KAAK,CAAEjB,eAAe,CACtBkB,KAAK,CAAE,QAAQ,CACfT,IACF,CACF,CAAC,CAAC,CACF,MAAO,CAAAI,QAAQ,CAACM,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AACF;AACA;AACA;AACA;AACA,KACE,KAAM,CAAAG,eAAeA,CAACC,WAAW,CAAe,IAAb,CAAAf,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC5C,GAAI,CACF;AACA,KAAM,CAAAe,UAAU,CAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,CAAEH,WAAW,CAACb,MAAM,CAAC,CACnD,KAAM,CAAAiB,IAAI,CAAGF,IAAI,CAACG,GAAG,CAAC,CAAC,CAAEH,IAAI,CAACI,KAAK,CAACN,WAAW,CAACb,MAAM,CAAGc,UAAU,CAAC,CAAC,CACrE,KAAM,CAAAM,aAAa,CAAG,EAAE,CAExB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGR,WAAW,CAACb,MAAM,CAAEqB,CAAC,EAAIJ,IAAI,CAAE,CACjDG,aAAa,CAACE,IAAI,CAACT,WAAW,CAACQ,CAAC,CAAC,CAAC,CACpC,CAEA;AACA,GAAIR,WAAW,CAACb,MAAM,CAAG,CAAC,EACtBoB,aAAa,CAACA,aAAa,CAACpB,MAAM,CAAG,CAAC,CAAC,GAAKa,WAAW,CAACA,WAAW,CAACb,MAAM,CAAG,CAAC,CAAC,CAAE,CACnFoB,aAAa,CAACE,IAAI,CAACT,WAAW,CAACA,WAAW,CAACb,MAAM,CAAG,CAAC,CAAC,CAAC,CACzD,CAEA;AACA,KAAM,CAAAuB,eAAe,CAAGH,aAAa,CAACI,GAAG,CAACC,KAAK,EAC7C,IAAI,CAAC9B,iBAAiB,CAAC8B,KAAK,CAAC7B,GAAG,CAAE6B,KAAK,CAAC5B,GAAG,CAAEC,IAAI,CACnD,CAAC,CAED,MAAO,MAAM,CAAA4B,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC,CAC3C,CAAE,MAAOd,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AACF;AACA;AACA;AACA,KACEmB,2BAA2BA,CAACC,WAAW,CAAE,CACvC,GAAI,CAACA,WAAW,CAAE,MAAO,UAAU,CAEnC,KAAM,CAAEC,OAAO,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAGL,WAAW,CAEvD;AACA,GACGC,OAAO,EAAIA,OAAO,CAACK,IAAI,CAACC,CAAC,EAAI,CAAC,cAAc,CAAE,WAAW,CAAE,SAAS,CAAC,CAACC,QAAQ,CAACD,CAAC,CAACL,IAAI,CAAC,CAAC,EACvFC,IAAI,EAAIA,IAAI,CAACM,KAAK,CAAG,EAAG,EACxBP,IAAI,EAAIA,IAAI,CAACQ,IAAI,CAAG,EAAG,EACvBR,IAAI,EAAIA,IAAI,CAACQ,IAAI,CAAG,CAAC,CAAE,EACvBN,IAAI,EAAIA,IAAI,CAAC,IAAI,CAAC,CAAG,EAAG,EACxBC,IAAI,EAAIA,IAAI,CAAC,IAAI,CAAC,CAAG,CAAE,CACxB,CACA,MAAO,WAAW,CACpB,CAEA;AACA,GACGJ,OAAO,EAAIA,OAAO,CAACK,IAAI,CAACC,CAAC,EAAI,CAAC,MAAM,CAAE,MAAM,CAAE,KAAK,CAAC,CAACC,QAAQ,CAACD,CAAC,CAACL,IAAI,CAAC,CAAC,EACtEC,IAAI,EAAIA,IAAI,CAACM,KAAK,CAAG,EAAG,EACxBP,IAAI,GAAKA,IAAI,CAACQ,IAAI,CAAG,EAAE,EAAIR,IAAI,CAACQ,IAAI,CAAG,CAAC,CAAE,EAC1CN,IAAI,EAAIA,IAAI,CAAC,IAAI,CAAC,CAAG,CAAE,EACvBC,IAAI,EAAIA,IAAI,CAAC,IAAI,CAAC,CAAG,CAAE,CACxB,CACA,MAAO,WAAW,CACpB,CAEA;AACA,GACGJ,OAAO,EAAIA,OAAO,CAACK,IAAI,CAACC,CAAC,EAAI,CAAC,QAAQ,CAAE,SAAS,CAAE,MAAM,CAAC,CAACC,QAAQ,CAACD,CAAC,CAACL,IAAI,CAAC,CAAC,EAC5EC,IAAI,EAAIA,IAAI,CAACM,KAAK,CAAG,EAAG,EACxBP,IAAI,GAAKA,IAAI,CAACQ,IAAI,CAAG,EAAE,EAAIR,IAAI,CAACQ,IAAI,CAAG,CAAC,CAAE,EAC1CN,IAAI,EAAIA,IAAI,CAAC,IAAI,CAAC,CAAG,CAAE,EACvBF,IAAI,EAAIA,IAAI,CAACS,QAAQ,CAAG,EAAG,CAC5B,CACA,MAAO,UAAU,CACnB,CAEA;AACA,MAAO,MAAM,CACf,CAEA;AACF;AACA;AACA;AACA,KACEC,2BAA2BA,CAACZ,WAAW,CAAE,KAAAa,SAAA,CACvC,GAAI,CAACb,WAAW,CAAE,MAAO,CACvBc,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,EAAE,CACfC,IAAI,CAAE,EAAE,CACRC,SAAS,CAAE,EAAE,CACbC,MAAM,CAAE,EACV,CAAC,CAED,KAAM,CAAEjB,OAAO,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAGL,WAAW,CACvD,KAAM,CAAAmB,SAAS,CAAG,CAAAlB,OAAO,SAAPA,OAAO,kBAAAY,SAAA,CAAPZ,OAAO,CAAG,CAAC,CAAC,UAAAY,SAAA,iBAAZA,SAAA,CAAcX,IAAI,GAAI,EAAE,CAC1C,KAAM,CAAAQ,IAAI,CAAG,CAAAR,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEQ,IAAI,GAAI,EAAE,CAC7B,KAAM,CAAAU,SAAS,CAAG,CAAAjB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,KAAK,GAAI,CAAC,CAClC,KAAM,CAAAY,SAAS,CAAGjB,IAAI,EAAIA,IAAI,CAAC,IAAI,CAAC,CAAG,CAAC,CACxC,KAAM,CAAAkB,SAAS,CAAGjB,IAAI,EAAIA,IAAI,CAAC,IAAI,CAAC,CAAG,CAAC,CAExC,KAAM,CAAAkB,eAAe,CAAG,CACtBT,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,EAAE,CACfC,IAAI,CAAE,EAAE,CACRC,SAAS,CAAE,EAAE,CACbC,MAAM,CAAE,EACV,CAAC,CAED;AACA,GAAIR,IAAI,CAAG,CAAC,CAAE,CACZa,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,cAAc,CAAE,aAAa,CAAE,cAAc,CAAE,eAAe,CAAC,CAC7F8B,eAAe,CAACR,WAAW,CAACtB,IAAI,CAAC,WAAW,CAAE,YAAY,CAAE,YAAY,CAAC,CAC3E,CAAC,IAAM,IAAIiB,IAAI,CAAG,EAAE,CAAE,CACpBa,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,kBAAkB,CAAE,YAAY,CAAE,YAAY,CAAE,aAAa,CAAC,CAC5F8B,eAAe,CAACR,WAAW,CAACtB,IAAI,CAAC,cAAc,CAAC,CAClD,CAAC,IAAM,IAAIiB,IAAI,CAAG,EAAE,CAAE,CACpBa,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,kBAAkB,CAAE,YAAY,CAAE,aAAa,CAAC,CAChF,CAAC,IAAM,IAAIiB,IAAI,CAAG,EAAE,CAAE,CACpBa,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,mBAAmB,CAAE,iBAAiB,CAAC,CACvE,CAAC,IAAM,IAAIiB,IAAI,CAAG,EAAE,CAAE,CACpBa,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,mBAAmB,CAAE,kBAAkB,CAAC,CACxE,CAAC,IAAM,IAAIiB,IAAI,CAAG,EAAE,CAAE,CACpBa,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,mBAAmB,CAAE,kBAAkB,CAAC,CACtE8B,eAAe,CAACR,WAAW,CAACtB,IAAI,CAAC,QAAQ,CAAC,CAC5C,CAAC,IAAM,CACL8B,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,mBAAmB,CAAE,kBAAkB,CAAC,CACtE8B,eAAe,CAACR,WAAW,CAACtB,IAAI,CAAC,QAAQ,CAAC,CAC1C8B,eAAe,CAACN,SAAS,CAACxB,IAAI,CAAC,gBAAgB,CAAC,CAClD,CAEA;AACA,GAAI2B,SAAS,CAAG,EAAE,CAAE,CAClBG,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,iBAAiB,CAAC,CAChD8B,eAAe,CAACR,WAAW,CAACtB,IAAI,CAAC,YAAY,CAAC,CAC9C8B,eAAe,CAACP,IAAI,CAACvB,IAAI,CAAC,YAAY,CAAC,CACzC,CAAC,IAAM,IAAI2B,SAAS,CAAG,EAAE,CAAE,CACzBG,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,aAAa,CAAC,CAC9C,CAEA;AACA,GAAI4B,SAAS,CAAE,CACbE,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,kBAAkB,CAAE,kBAAkB,CAAC,CACrE8B,eAAe,CAACR,WAAW,CAACtB,IAAI,CAAC,cAAc,CAAC,CAChD8B,eAAe,CAACP,IAAI,CAACvB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAC,CAChD8B,eAAe,CAACL,MAAM,CAACzB,IAAI,CAAC,aAAa,CAAC,CAC5C,CAEA,GAAI6B,SAAS,CAAE,CACbC,eAAe,CAACT,QAAQ,CAACrB,IAAI,CAAC,kBAAkB,CAAE,kBAAkB,CAAE,iBAAiB,CAAC,CACxF8B,eAAe,CAACP,IAAI,CAACvB,IAAI,CAAC,aAAa,CAAC,CACxC8B,eAAe,CAACL,MAAM,CAACzB,IAAI,CAAC,aAAa,CAAE,oBAAoB,CAAC,CAClE,CAEA;AACA,OAAO0B,SAAS,EACd,IAAK,cAAc,CACjBI,eAAe,CAACL,MAAM,CAACzB,IAAI,CAAC,aAAa,CAAE,gBAAgB,CAAE,eAAe,CAAC,CAC7E,MACF,IAAK,KAAK,CACV,IAAK,MAAM,CACT8B,eAAe,CAACL,MAAM,CAACzB,IAAI,CAAC,aAAa,CAAE,oBAAoB,CAAE,WAAW,CAAC,CAC7E,MACF,IAAK,OAAO,CACV8B,eAAe,CAACR,WAAW,CAACtB,IAAI,CAAC,YAAY,CAAE,WAAW,CAAC,CAC3D,GAAIiB,IAAI,CAAG,EAAE,CAAEa,eAAe,CAACN,SAAS,CAACxB,IAAI,CAAC,gBAAgB,CAAE,wBAAwB,CAAC,CACzF,MACF,QACE,MACJ,CAEA;AACA8B,eAAe,CAACL,MAAM,CAACzB,IAAI,CAAC,QAAQ,CAAE,aAAa,CAAC,CACpD8B,eAAe,CAACP,IAAI,CAACvB,IAAI,CAAC,WAAW,CAAE,UAAU,CAAC,CAClD8B,eAAe,CAACN,SAAS,CAACxB,IAAI,CAAC,OAAO,CAAC,CAEvC,MAAO,CAAA8B,eAAe,CACxB,CACF,CAEA,MAAO,MAAM,CAAAC,cAAc,CAAG,GAAI,CAAA3D,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}