{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer}from'recharts';import{useNotification}from'../common/NotificationSystem';import FTPService from'../../services/FTPEstimationService';/**\n * HIITTemplates component displays and allows customization of HIIT workout templates\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HIITTemplates=_ref=>{let{userProfile,onSaveWorkout}=_ref;const{t}=useTranslation();const{notify}=useNotification();const[templates,setTemplates]=useState([]);const[selectedTemplate,setSelectedTemplate]=useState(null);const[customizedTemplate,setCustomizedTemplate]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Load HIIT templates based on user profile\nuseEffect(()=>{const loadTemplates=async()=>{try{setLoading(true);setError(null);// Réinitialiser les erreurs précédentes\n// Vérification du profil utilisateur\nif(!userProfile){throw new Error('Profil utilisateur manquant ou incomplet');}// Mock delay for API call simulation\nawait new Promise(resolve=>setTimeout(resolve,300));// Generate templates based on user level and FTP\nconst mockTemplates=generateHIITTemplates(userProfile);setTemplates(mockTemplates);// Default select the first template\nif(mockTemplates.length>0){setSelectedTemplate(mockTemplates[0]);setCustomizedTemplate(mockTemplates[0]);// Notification de succès\nnotify.success('Templates HIIT chargés avec succès',{title:'Chargement terminé'});}else{throw new Error('Aucun template HIIT n\\'a pu être généré');}}catch(error){console.error('Error loading HIIT templates:',error);setError(error.message||'Erreur lors du chargement des templates HIIT');// Notification d'erreur\nnotify.error('Impossible de charger les templates HIIT',error,{title:'Erreur de chargement'});}finally{setLoading(false);}};if(userProfile){loadTemplates();}},[userProfile,notify,t]);/**\n   * Generate HIIT templates based on user profile\n   */const generateHIITTemplates=profile=>{if(!profile){console.error('Profil utilisateur manquant pour la génération des templates HIIT');return[];}// Vérification et correction des valeurs FTP et niveau\nlet{level='intermediate'}=profile;// Utilisation du service FTP pour valider et normaliser la FTP\nconst ftp=FTPService.validateFTP(profile.ftp,profile);// Validation du niveau utilisateur\nif(!['beginner','intermediate','advanced','elite'].includes(level)){console.warn(`Niveau utilisateur invalide: ${level}, utilisation du niveau intermédiaire par défaut`);level='intermediate';}console.info(`Génération des templates HIIT avec FTP=${ftp}W et level=${level}`);const templates=[];try{// HIIT Templates based on user level and FTP\nif(level==='beginner'){// Beginner templates with lower intensity and more rest\ntemplates.push({id:'hiit-beginner-1',name:'Pyramid de Récupération',description:t('beginnerPyramidDesc','Intervalles de durée progressive adaptés aux débutants'),difficulty:1,duration:30,// minutes\nintervals:generatePyramidIntervals(ftp,0.7,0.85,30,60,60,[30,60,90,60,30])});templates.push({id:'hiit-beginner-2',name:'Intervalles Débutant',description:t('beginnerIntervalsDesc','Intervalles courts à intensité modérée pour débutants'),difficulty:1,duration:35,intervals:generateIntervals(ftp,0.75,45,90,6)});}else if(level==='intermediate'){// Intermediate templates with moderate intensity\ntemplates.push({id:'hiit-intermediate-1',name:'Ladder Classique',description:t('intervalLadderDesc','Intervalles en échelle pour améliorer l\\'endurance et la puissance'),difficulty:2,duration:45,intervals:generateLadderIntervals(ftp,0.85,0.95,[30,60,90,120,120,90,60,30],60)});templates.push({id:'hiit-intermediate-2',name:'Over-Under 90/105',description:t('overUnderDesc','Alternance d\\'intensité pour stimuler le seuil lactique'),difficulty:2,duration:40,intervals:generateOverUnderIntervals(ftp,0.9,1.05,180,30,4)});}else if(level==='advanced'){// Advanced templates with higher intensity\ntemplates.push({id:'hiit-advanced-1',name:'VO2max Intense',description:t('vo2maxDesc','Stimulation intense de VO2max avec intervalles courts à haute intensité'),difficulty:3,duration:50,intervals:generateIntervals(ftp,1.1,30,30,10,3)});templates.push({id:'hiit-advanced-2',name:'Pyramide Avancée',description:t('advancedPyramidDesc','Pyramide difficile pour cyclistes avancés'),difficulty:3,duration:60,intervals:generatePyramidIntervals(ftp,0.9,1.1,30,180,60,[30,60,120,180,120,60,30])});}else if(level==='elite'){// Elite templates with very high intensity\ntemplates.push({id:'hiit-elite-1',name:'Sprints Supramaximaux',description:t('sprintsDesc','Sprints courts très intenses pour cyclistes de compétition'),difficulty:3,duration:45,intervals:generateIntervals(ftp,1.3,15,45,12,3)});templates.push({id:'hiit-elite-2',name:'Over-Under Elite',description:t('eliteOverUnderDesc','Over-under de compétition pour cyclistes d\\'élite'),difficulty:3,duration:65,intervals:generateOverUnderIntervals(ftp,0.95,1.2,240,30,5)});}// Ajouter des templates communs à tous les niveaux\ntemplates.push({id:'hiit-common-1',name:'30/30 Classique',description:t('thirtyThirtyDesc','Intervalles 30/30 classiques pour tous niveaux'),difficulty:level==='beginner'?2:level==='intermediate'?1:1,duration:40,intervals:generateIntervals(ftp,level==='beginner'?0.9:level==='intermediate'?1.0:1.05,30,30,10,2)});}catch(error){console.error('Erreur lors de la génération des templates HIIT',error);notify.error('Erreur lors de la génération des templates',error,{details:'Un template par défaut a été fourni à la place'});// Ajouter un template de secours en cas d'erreur\ntemplates.push({id:'hiit-fallback',name:'Entraînement par Défaut',description:'Entraînement par intervalles standard',difficulty:1,duration:30,intervals:generateIntervals(ftp||200,0.8,60,60,5)});}// Filtrer les templates qui n'ont pas d'intervalles valides\nconst validTemplates=templates.filter(template=>template.intervals&&Array.isArray(template.intervals)&&template.intervals.length>0);if(validTemplates.length===0){console.error('Aucun template valide n\\'a pu être généré');notify.warning('Aucun template valide n\\'a pu être généré, utilisation d\\'un template de secours');// Ajouter un template minimal de dernier recours\nvalidTemplates.push({id:'hiit-emergency',name:'Intervalles Simples',description:'Entraînement par intervalles de base',difficulty:1,duration:20,intervals:[{type:'work',power:Math.round((ftp||200)*0.75),duration:60,restDuration:60},{type:'work',power:Math.round((ftp||200)*0.75),duration:60,restDuration:60},{type:'work',power:Math.round((ftp||200)*0.75),duration:60,restDuration:60},{type:'work',power:Math.round((ftp||200)*0.75),duration:60,restDuration:0}]});}return validTemplates;};/**\n   * Generate standard intervals with same power and duration\n   */const generateIntervals=function(ftp,intensityFactor,workDuration,restDuration,count){let sets=arguments.length>5&&arguments[5]!==undefined?arguments[5]:1;// Validation des paramètres\nif(!ftp||ftp<=0){console.error('FTP invalide pour la génération d\\'intervalles');ftp=200;// Valeur par défaut\n}if(intensityFactor<=0||intensityFactor>2){console.warn(`Facteur d'intensité invalide (${intensityFactor}), utilisation d'une valeur par défaut (0.8)`);intensityFactor=0.8;}if(workDuration<=0)workDuration=30;if(restDuration<0)restDuration=30;if(count<=0)count=5;if(sets<=0)sets=1;const intervals=[];// Arrondir la puissance au watt près pour éviter les valeurs décimales\nconst power=Math.round(ftp*intensityFactor);for(let set=0;set<sets;set++){// Ajouter repos entre les séries (sauf première série)\nif(set>0){intervals.push({power:Math.round(ftp*0.4),// 40% FTP pour récupération entre séries\nduration:120,// 2 minutes de récupération entre séries\ntype:'rest',setRest:true});}for(let i=0;i<count;i++){// Interval d'effort\nintervals.push({power:power,duration:workDuration,type:'work'});// Interval de récupération (sauf après le dernier de la série)\nif(i<count-1||set<sets-1){intervals.push({power:Math.round(ftp*0.4),// 40% FTP pour récupération\nduration:restDuration,type:'rest'});}}}return intervals;};/**\n   * Generate pyramid intervals with increasing then decreasing durations\n   */const generatePyramidIntervals=(ftp,minIntensity,maxIntensity,minDuration,maxDuration,restDuration,durations)=>{// Validation des paramètres\nif(!ftp||ftp<=0)ftp=200;if(minIntensity<=0||minIntensity>2)minIntensity=0.7;if(maxIntensity<=0||maxIntensity>2||maxIntensity<minIntensity)maxIntensity=minIntensity+0.2;if(minDuration<=0)minDuration=30;if(maxDuration<=0||maxDuration<minDuration)maxDuration=minDuration*2;if(restDuration<0)restDuration=30;const intervals=[];// Si durations est spécifié, l'utiliser\nif(Array.isArray(durations)&&durations.length>0){const stepCount=durations.length;durations.forEach((duration,index)=>{// Calculer l'intensité progressive\nconst progressFactor=index/(stepCount-1);const intensity=minIntensity+progressFactor*(maxIntensity-minIntensity);intervals.push({power:Math.round(ftp*intensity),duration:duration,type:'work'});if(index<durations.length-1){intervals.push({power:Math.round(ftp*0.4),// 40% FTP pour récupération\nduration:restDuration,type:'rest'});}});}else{// Générer une pyramide automatique\n// Code pour créer une pyramide par défaut\n// (non implémenté ici car durations est toujours fourni dans ce composant)\n}return intervals;};/**\n   * Generate ladder intervals with varying durations\n   */const generateLadderIntervals=(ftp,minIntensity,maxIntensity,durations,restDuration)=>{// Validation des paramètres d'entrée\nif(!ftp||typeof ftp!=='number'||ftp<=0){console.error('FTP invalide dans generateLadderIntervals',{ftp});ftp=200;// Valeur par défaut sécurisée\n}if(typeof minIntensity!=='number'||minIntensity<=0||minIntensity>1.5){console.error('Intensité minimale invalide dans generateLadderIntervals',{minIntensity});minIntensity=0.75;// Valeur par défaut sécurisée\n}if(typeof maxIntensity!=='number'||maxIntensity<=0||maxIntensity>1.5||maxIntensity<minIntensity){console.error('Intensité maximale invalide dans generateLadderIntervals',{maxIntensity});maxIntensity=minIntensity+0.1;// Valeur par défaut sécurisée basée sur minIntensity\n}if(!Array.isArray(durations)||durations.length===0){console.error('Durées invalides dans generateLadderIntervals',{durations});durations=[30,60,90];// Valeurs par défaut sécurisées\n}// S'assurer que restDuration est un nombre valide\nif(typeof restDuration!=='number'||restDuration<0){console.error('Durée de repos invalide dans generateLadderIntervals',{restDuration});restDuration=60;// Valeur par défaut sécurisée\n}const intervals=[];const steps=durations.length;// Calculer l'incrément d'intensité pour chaque échelon\nconst intensityIncrement=(maxIntensity-minIntensity)/(steps-1||1);durations.forEach((duration,index)=>{// Validation de la durée\nif(typeof duration!=='number'||duration<=0){console.warn(`Durée invalide à l'index ${index}`,{duration});duration=30;// Valeur par défaut sécurisée\n}// Calculer l'intensité pour cet échelon\nconst intensity=minIntensity+intensityIncrement*index;// Calculer la puissance basée sur l'intensité et la FTP\nconst power=Math.round(ftp*intensity);// Ajouter l'intervalle d'effort\nintervals.push({type:'work',power,intensity:intensity,duration:duration,restDuration:index<durations.length-1?restDuration:0});});return intervals;};/**\n   * Generate over-under intervals with alternating intensity\n   */const generateOverUnderIntervals=(ftp,lowerIntensity,higherIntensity,totalDuration,switchTime,count)=>{// Validation des paramètres d'entrée\nif(!ftp||typeof ftp!=='number'||ftp<=0){console.error('FTP invalide dans generateOverUnderIntervals',{ftp});ftp=200;// Valeur par défaut sécurisée\n}if(typeof lowerIntensity!=='number'||lowerIntensity<=0||lowerIntensity>1.2){console.error('Intensité basse invalide dans generateOverUnderIntervals',{lowerIntensity});lowerIntensity=0.85;// Valeur par défaut sécurisée\n}if(typeof higherIntensity!=='number'||higherIntensity<=0||higherIntensity>1.5||higherIntensity<=lowerIntensity){console.error('Intensité haute invalide dans generateOverUnderIntervals',{higherIntensity});higherIntensity=lowerIntensity+0.1;// Valeur par défaut sécurisée basée sur lowerIntensity\n}if(typeof totalDuration!=='number'||totalDuration<=0){console.error('Durée totale invalide dans generateOverUnderIntervals',{totalDuration});totalDuration=300;// Valeur par défaut sécurisée (5 minutes)\n}if(typeof switchTime!=='number'||switchTime<=0||switchTime>=totalDuration){console.error('Temps de changement invalide dans generateOverUnderIntervals',{switchTime});switchTime=30;// Valeur par défaut sécurisée\n}if(typeof count!=='number'||count<=0){console.error('Nombre d\\'intervalles invalide dans generateOverUnderIntervals',{count});count=4;// Valeur par défaut sécurisée\n}const intervals=[];// Calculer la puissance pour les intensités haute et basse\nconst lowerPower=Math.round(ftp*lowerIntensity);const higherPower=Math.round(ftp*higherIntensity);// Calculer le temps de récupération entre les répétitions (1:1 ou rapport personnalisé)\nconst restDuration=Math.round(totalDuration/2);for(let i=0;i<count;i++){// Interval principal avec alternance over/under\nintervals.push({type:'over-under',power:lowerPower,// Puissance de base\nsecondaryPower:higherPower,// Puissance des pics\nintensity:lowerIntensity,secondaryIntensity:higherIntensity,duration:totalDuration,switchTime:switchTime,restDuration:i<count-1?restDuration:0});}return intervals;};/**\n   * Handle template selection\n   */const handleSelectTemplate=template=>{try{if(!template){throw new Error('Template invalide');}setSelectedTemplate(template);// Créer une copie profonde pour éviter de modifier l'original\nsetCustomizedTemplate(JSON.parse(JSON.stringify(template)));}catch(error){console.error('Erreur lors de la sélection du template:',error);setError(`Erreur lors de la sélection du template: ${error.message}`);}};/**\n   * Handle interval adjustment\n   */const handleAdjustInterval=(index,field,value)=>{if(index<0||!customizedTemplate||!customizedTemplate.intervals){console.error('Index invalide ou template non disponible',{index,customizedTemplate});notify.error('Impossible de modifier l\\'intervalle',{details:'Données d\\'intervalle non disponibles'});return;}if(!customizedTemplate.intervals[index]){console.error('Intervalle non trouvé à l\\'index spécifié',{index,intervals:customizedTemplate.intervals});notify.error('Intervalle non trouvé');return;}// Créer une copie profonde pour éviter les modifications par référence\nconst updatedTemplate=JSON.parse(JSON.stringify(customizedTemplate));// Valider et convertir la valeur entrée\nlet numericValue=parseFloat(value);// Gérer les valeurs non numériques\nif(isNaN(numericValue)){console.warn(`Valeur non numérique entrée pour ${field}:`,value);notify.warning(`Valeur invalide pour ${field==='power'?'la puissance':'la durée'}`);// Utiliser la valeur actuelle en cas d'entrée non valide\nif(field==='power'){numericValue=updatedTemplate.intervals[index].power||0;}else if(field==='duration'||field==='restDuration'){numericValue=updatedTemplate.intervals[index][field]||0;}else{// Pour tout autre champ, conserver la valeur existante\nreturn;}}// Appliquer des limites spécifiques selon le champ\nif(field==='power'){// Limiter la puissance entre 50% et 150% de la FTP\nconst ftp=(userProfile===null||userProfile===void 0?void 0:userProfile.ftp)||200;const validatedFtp=FTPService.validateFTP(ftp,userProfile);const minPower=Math.round(validatedFtp*0.5);const maxPower=Math.round(validatedFtp*1.5);if(numericValue<minPower){console.warn(`Puissance trop basse (${numericValue}W), limitée à ${minPower}W`);notify.info(`Puissance ajustée au minimum (${minPower}W)`);numericValue=minPower;}else if(numericValue>maxPower){console.warn(`Puissance trop élevée (${numericValue}W), limitée à ${maxPower}W`);notify.info(`Puissance ajustée au maximum (${maxPower}W)`);numericValue=maxPower;}// Mettre à jour l'intensité correspondante\nupdatedTemplate.intervals[index].intensity=parseFloat((numericValue/validatedFtp).toFixed(2));}else if(field==='duration'||field==='restDuration'){// Limiter la durée entre 5 et 600 secondes (10 minutes)\nif(numericValue<5){console.warn(`Durée trop courte (${numericValue}s), limitée à 5s`);notify.info(`Durée ajustée au minimum (5s)`);numericValue=5;}else if(numericValue>600){console.warn(`Durée trop longue (${numericValue}s), limitée à 600s`);notify.info(`Durée ajustée au maximum (10 minutes)`);numericValue=600;}}// Mettre à jour l'intervalle\nupdatedTemplate.intervals[index][field]=numericValue;// Mettre à jour la durée totale de l'entraînement\nupdatedTemplate.duration=calculateWorkoutDuration(updatedTemplate.intervals);// Mettre à jour le state\nsetCustomizedTemplate(updatedTemplate);};/**\n   * Calculate total workout duration in minutes\n   */const calculateWorkoutDuration=intervals=>{if(!intervals||!Array.isArray(intervals)){console.error('Intervalles invalides pour le calcul de durée',{intervals});notify.error('Erreur lors du calcul de la durée');return 0;}try{// Calculer la durée totale en secondes\nconst totalSeconds=intervals.reduce((total,interval)=>{// Vérification des valeurs pour éviter NaN\nconst workDuration=typeof interval.duration==='number'?interval.duration:0;const restDuration=typeof interval.restDuration==='number'?interval.restDuration:0;return total+workDuration+restDuration;},0);// Ajouter 5 minutes pour l'échauffement et la récupération\nconst warmupCooldownSeconds=5*60;const totalWorkoutSeconds=totalSeconds+warmupCooldownSeconds;// Convertir en minutes et arrondir\nreturn Math.ceil(totalWorkoutSeconds/60);}catch(error){console.error('Erreur lors du calcul de la durée de l\\'entraînement',error);notify.error('Erreur lors du calcul de la durée',error);return 0;}};/**\n   * Handle saving the workout\n   */const handleSaveWorkout=()=>{try{if(!customizedTemplate){throw new Error('Aucun template n\\'est sélectionné');}const zoneMap={0.6:1,// zone 1 - récupération\n0.75:2,// zone 2 - endurance\n0.85:3,// zone 3 - tempo\n0.95:4,// zone 4 - seuil\n1.05:5,// zone 5 - VO2max\n1.2:6,// zone 6 - anaérobie\n1.5:7// zone 7 - neuromuscular\n};// Déterminer la zone cible principale en fonction des intervalles\nlet totalIntensity=0;let totalDuration=0;customizedTemplate.intervals.forEach(interval=>{if(interval.type==='work'||!interval.type){const intensityValue=interval.intensity||interval.power/((userProfile===null||userProfile===void 0?void 0:userProfile.ftp)||200);const duration=interval.duration||0;totalIntensity+=intensityValue*duration;totalDuration+=duration;}});const avgIntensity=totalIntensity/(totalDuration||1);// Déterminer la zone cible\nlet targetZone=3;// Default to zone 3\nfor(const[intensity,zone]of Object.entries(zoneMap)){if(avgIntensity<=parseFloat(intensity)){targetZone=zone;break;}}const workout={...customizedTemplate,targetZone,date:new Date().toISOString(),userId:userProfile===null||userProfile===void 0?void 0:userProfile.id};// Appeler la fonction de sauvegarde parentale\nconst savedWorkout=onSaveWorkout(workout);if(savedWorkout){notify.success('L\\'entraînement a été enregistré avec succès',{title:'Sauvegarde réussie'});}}catch(error){console.error('Erreur lors de la sauvegarde de l\\'entraînement',error);notify.error('Impossible de sauvegarder l\\'entraînement',error);}};/**\n   * Render interval visualization\n   */const renderIntervalVisualization=intervals=>{try{if(!intervals||!Array.isArray(intervals)||intervals.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"visualization-error\",children:\"Intervalles non disponibles\"});}// Préparer les données pour le graphique\nconst chartData=intervals.map((interval,index)=>({name:`${index+1}`,power:interval.power||0,type:interval.type||'work'}));// Déterminer la couleur en fonction du type d'intervalle\nconst getBarColor=entry=>{return entry.type==='work'?'#ff4757':entry.type==='rest'?'#2ed573':entry.setRest?'#1e90ff':'#ffa502';};return/*#__PURE__*/_jsxs(\"div\",{className:\"interval-visualization\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('powerProfile','Profil de puissance')}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,margin:{top:5,right:5,bottom:5,left:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{domain:[0,'dataMax + 20']}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[`${value}W`,'Puissance'],labelFormatter:value=>`Intervalle ${value}`}),/*#__PURE__*/_jsx(Bar,{dataKey:\"power\",name:\"Puissance\",fill:\"#8884d8\",stroke:\"#8884d8\",fillOpacity:0.8,barSize:20,isAnimationActive:false,data:chartData,children:chartData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:getBarColor(entry)},`cell-${index}`))})]})})]});}catch(error){console.error('Erreur lors de la génération de la visualisation:',error);return/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-error\",children:[\"Erreur d'affichage: \",error.message]});}};// Affichage des erreurs\nif(error){return/*#__PURE__*/_jsx(\"div\",{className:\"hiit-templates-error\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Erreur :\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mt-3\",onClick:()=>setError(null),children:\"R\\xE9essayer\"})]})});}// Loading state\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"hiit-templates-loading\",children:t('loadingTemplates','Chargement des templates...')});}return/*#__PURE__*/_jsxs(\"div\",{className:\"hiit-templates\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"templates-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('availableTemplates','Templates disponibles')}),/*#__PURE__*/_jsx(\"div\",{className:\"templates-grid\",children:templates.map(template=>/*#__PURE__*/_jsxs(\"div\",{className:`template-card ${(selectedTemplate===null||selectedTemplate===void 0?void 0:selectedTemplate.id)===template.id?'selected':''}`,onClick:()=>handleSelectTemplate(template),children:[/*#__PURE__*/_jsx(\"h4\",{children:template.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-difficulty\",children:[Array(template.difficulty).fill().map((_,i)=>/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-star\",children:\"\\u2605\"},i)),Array(3-template.difficulty).fill().map((_,i)=>/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-star empty\",children:\"\\u2606\"},i))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-duration\",children:[template.duration,\" \",t('min','min')]}),/*#__PURE__*/_jsx(\"div\",{className:\"template-description\",children:template.description})]},template.id))})]}),customizedTemplate&&/*#__PURE__*/_jsxs(\"div\",{className:\"template-customization\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('customizeWorkout','Personnaliser l\\'entraînement')}),renderIntervalVisualization(customizedTemplate.intervals),/*#__PURE__*/_jsxs(\"div\",{className:\"intervals-table\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('intervals','Intervalles')}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:t('power','Puissance')}),/*#__PURE__*/_jsx(\"th\",{children:t('duration','Durée')}),/*#__PURE__*/_jsx(\"th\",{children:t('rest','Récupération')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:customizedTemplate.intervals.map((interval,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index+1}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:interval.power,onChange:e=>handleAdjustInterval(index,'power',e.target.value),min:Math.round((userProfile===null||userProfile===void 0?void 0:userProfile.ftp)*0.5)||100,max:Math.round((userProfile===null||userProfile===void 0?void 0:userProfile.ftp)*1.5)||400}),/*#__PURE__*/_jsx(\"span\",{children:\"W\"})]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:interval.duration,onChange:e=>handleAdjustInterval(index,'duration',e.target.value),min:10,max:600}),/*#__PURE__*/_jsx(\"span\",{children:t('sec','sec')})]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:interval.restDuration||0,onChange:e=>handleAdjustInterval(index,'restDuration',e.target.value),min:0,max:600}),/*#__PURE__*/_jsx(\"span\",{children:t('sec','sec')})]})]},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"template-save-button\",onClick:handleSaveWorkout,children:t('saveWorkout','Enregistrer')}),/*#__PURE__*/_jsx(\"button\",{className:\"template-reset-button\",onClick:()=>setCustomizedTemplate({...selectedTemplate}),children:t('resetChanges','Réinitialiser')})]})]})]});};export default HIITTemplates;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","useNotification","FTPService","jsx","_jsx","jsxs","_jsxs","HIITTemplates","_ref","userProfile","onSaveWorkout","t","notify","templates","setTemplates","selectedTemplate","setSelectedTemplate","customizedTemplate","setCustomizedTemplate","loading","setLoading","error","setError","loadTemplates","Error","Promise","resolve","setTimeout","mockTemplates","generateHIITTemplates","length","success","title","console","message","profile","level","ftp","validateFTP","includes","warn","info","push","id","name","description","difficulty","duration","intervals","generatePyramidIntervals","generateIntervals","generateLadderIntervals","generateOverUnderIntervals","details","validTemplates","filter","template","Array","isArray","warning","type","power","Math","round","restDuration","intensityFactor","workDuration","count","sets","arguments","undefined","set","setRest","i","minIntensity","maxIntensity","minDuration","maxDuration","durations","stepCount","forEach","index","progressFactor","intensity","steps","intensityIncrement","lowerIntensity","higherIntensity","totalDuration","switchTime","lowerPower","higherPower","secondaryPower","secondaryIntensity","handleSelectTemplate","JSON","parse","stringify","handleAdjustInterval","field","value","updatedTemplate","numericValue","parseFloat","isNaN","validatedFtp","minPower","maxPower","toFixed","calculateWorkoutDuration","totalSeconds","reduce","total","interval","warmupCooldownSeconds","totalWorkoutSeconds","ceil","handleSaveWorkout","zoneMap","totalIntensity","intensityValue","avgIntensity","targetZone","zone","Object","entries","workout","date","Date","toISOString","userId","savedWorkout","renderIntervalVisualization","className","children","chartData","map","getBarColor","entry","width","height","data","margin","top","right","bottom","left","strokeDasharray","dataKey","domain","formatter","labelFormatter","fill","stroke","fillOpacity","barSize","isAnimationActive","Cell","onClick","_","onChange","e","target","min","max"],"sources":["C:/Users/busin/CascadeProjects/grand-est-cyclisme-website-final (1) VERSION FINAL/client/src/components/training/HIITTemplates.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { useNotification } from '../common/NotificationSystem';\nimport FTPService from '../../services/FTPEstimationService';\n\n/**\n * HIITTemplates component displays and allows customization of HIIT workout templates\n */\nconst HIITTemplates = ({ userProfile, onSaveWorkout }) => {\n  const { t } = useTranslation();\n  const { notify } = useNotification();\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [customizedTemplate, setCustomizedTemplate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Load HIIT templates based on user profile\n  useEffect(() => {\n    const loadTemplates = async () => {\n      try {\n        setLoading(true);\n        setError(null); // Réinitialiser les erreurs précédentes\n        \n        // Vérification du profil utilisateur\n        if (!userProfile) {\n          throw new Error('Profil utilisateur manquant ou incomplet');\n        }\n        \n        // Mock delay for API call simulation\n        await new Promise(resolve => setTimeout(resolve, 300));\n        \n        // Generate templates based on user level and FTP\n        const mockTemplates = generateHIITTemplates(userProfile);\n        setTemplates(mockTemplates);\n        \n        // Default select the first template\n        if (mockTemplates.length > 0) {\n          setSelectedTemplate(mockTemplates[0]);\n          setCustomizedTemplate(mockTemplates[0]);\n          \n          // Notification de succès\n          notify.success('Templates HIIT chargés avec succès', {\n            title: 'Chargement terminé'\n          });\n        } else {\n          throw new Error('Aucun template HIIT n\\'a pu être généré');\n        }\n      } catch (error) {\n        console.error('Error loading HIIT templates:', error);\n        setError(error.message || 'Erreur lors du chargement des templates HIIT');\n        \n        // Notification d'erreur\n        notify.error('Impossible de charger les templates HIIT', error, {\n          title: 'Erreur de chargement'\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    if (userProfile) {\n      loadTemplates();\n    }\n  }, [userProfile, notify, t]);\n  \n  /**\n   * Generate HIIT templates based on user profile\n   */\n  const generateHIITTemplates = (profile) => {\n    if (!profile) {\n      console.error('Profil utilisateur manquant pour la génération des templates HIIT');\n      return [];\n    }\n    \n    // Vérification et correction des valeurs FTP et niveau\n    let { level = 'intermediate' } = profile;\n    \n    // Utilisation du service FTP pour valider et normaliser la FTP\n    const ftp = FTPService.validateFTP(profile.ftp, profile);\n    \n    // Validation du niveau utilisateur\n    if (!['beginner', 'intermediate', 'advanced', 'elite'].includes(level)) {\n      console.warn(`Niveau utilisateur invalide: ${level}, utilisation du niveau intermédiaire par défaut`);\n      level = 'intermediate';\n    }\n    \n    console.info(`Génération des templates HIIT avec FTP=${ftp}W et level=${level}`);\n    \n    const templates = [];\n    \n    try {\n      // HIIT Templates based on user level and FTP\n      if (level === 'beginner') {\n        // Beginner templates with lower intensity and more rest\n        templates.push({\n          id: 'hiit-beginner-1',\n          name: 'Pyramid de Récupération',\n          description: t('beginnerPyramidDesc', 'Intervalles de durée progressive adaptés aux débutants'),\n          difficulty: 1,\n          duration: 30, // minutes\n          intervals: generatePyramidIntervals(ftp, 0.7, 0.85, 30, 60, 60, [30, 60, 90, 60, 30])\n        });\n        \n        templates.push({\n          id: 'hiit-beginner-2',\n          name: 'Intervalles Débutant',\n          description: t('beginnerIntervalsDesc', 'Intervalles courts à intensité modérée pour débutants'),\n          difficulty: 1,\n          duration: 35,\n          intervals: generateIntervals(ftp, 0.75, 45, 90, 6)\n        });\n      } else if (level === 'intermediate') {\n        // Intermediate templates with moderate intensity\n        templates.push({\n          id: 'hiit-intermediate-1',\n          name: 'Ladder Classique',\n          description: t('intervalLadderDesc', 'Intervalles en échelle pour améliorer l\\'endurance et la puissance'),\n          difficulty: 2,\n          duration: 45,\n          intervals: generateLadderIntervals(ftp, 0.85, 0.95, [30, 60, 90, 120, 120, 90, 60, 30], 60)\n        });\n        \n        templates.push({\n          id: 'hiit-intermediate-2',\n          name: 'Over-Under 90/105',\n          description: t('overUnderDesc', 'Alternance d\\'intensité pour stimuler le seuil lactique'),\n          difficulty: 2,\n          duration: 40,\n          intervals: generateOverUnderIntervals(ftp, 0.9, 1.05, 180, 30, 4)\n        });\n      } else if (level === 'advanced') {\n        // Advanced templates with higher intensity\n        templates.push({\n          id: 'hiit-advanced-1',\n          name: 'VO2max Intense',\n          description: t('vo2maxDesc', 'Stimulation intense de VO2max avec intervalles courts à haute intensité'),\n          difficulty: 3,\n          duration: 50,\n          intervals: generateIntervals(ftp, 1.1, 30, 30, 10, 3)\n        });\n        \n        templates.push({\n          id: 'hiit-advanced-2',\n          name: 'Pyramide Avancée',\n          description: t('advancedPyramidDesc', 'Pyramide difficile pour cyclistes avancés'),\n          difficulty: 3,\n          duration: 60,\n          intervals: generatePyramidIntervals(ftp, 0.9, 1.1, 30, 180, 60, [30, 60, 120, 180, 120, 60, 30])\n        });\n      } else if (level === 'elite') {\n        // Elite templates with very high intensity\n        templates.push({\n          id: 'hiit-elite-1',\n          name: 'Sprints Supramaximaux',\n          description: t('sprintsDesc', 'Sprints courts très intenses pour cyclistes de compétition'),\n          difficulty: 3,\n          duration: 45,\n          intervals: generateIntervals(ftp, 1.3, 15, 45, 12, 3)\n        });\n        \n        templates.push({\n          id: 'hiit-elite-2',\n          name: 'Over-Under Elite',\n          description: t('eliteOverUnderDesc', 'Over-under de compétition pour cyclistes d\\'élite'),\n          difficulty: 3,\n          duration: 65,\n          intervals: generateOverUnderIntervals(ftp, 0.95, 1.2, 240, 30, 5)\n        });\n      }\n      \n      // Ajouter des templates communs à tous les niveaux\n      templates.push({\n        id: 'hiit-common-1',\n        name: '30/30 Classique',\n        description: t('thirtyThirtyDesc', 'Intervalles 30/30 classiques pour tous niveaux'),\n        difficulty: level === 'beginner' ? 2 : (level === 'intermediate' ? 1 : 1),\n        duration: 40,\n        intervals: generateIntervals(\n          ftp, \n          level === 'beginner' ? 0.9 : (level === 'intermediate' ? 1.0 : 1.05), \n          30, \n          30, \n          10,\n          2\n        )\n      });\n      \n    } catch (error) {\n      console.error('Erreur lors de la génération des templates HIIT', error);\n      notify.error('Erreur lors de la génération des templates', error, {\n        details: 'Un template par défaut a été fourni à la place'\n      });\n      \n      // Ajouter un template de secours en cas d'erreur\n      templates.push({\n        id: 'hiit-fallback',\n        name: 'Entraînement par Défaut',\n        description: 'Entraînement par intervalles standard',\n        difficulty: 1,\n        duration: 30,\n        intervals: generateIntervals(ftp || 200, 0.8, 60, 60, 5)\n      });\n    }\n    \n    // Filtrer les templates qui n'ont pas d'intervalles valides\n    const validTemplates = templates.filter(template => \n      template.intervals && \n      Array.isArray(template.intervals) && \n      template.intervals.length > 0\n    );\n    \n    if (validTemplates.length === 0) {\n      console.error('Aucun template valide n\\'a pu être généré');\n      notify.warning('Aucun template valide n\\'a pu être généré, utilisation d\\'un template de secours');\n      \n      // Ajouter un template minimal de dernier recours\n      validTemplates.push({\n        id: 'hiit-emergency',\n        name: 'Intervalles Simples',\n        description: 'Entraînement par intervalles de base',\n        difficulty: 1,\n        duration: 20,\n        intervals: [\n          { type: 'work', power: Math.round((ftp || 200) * 0.75), duration: 60, restDuration: 60 },\n          { type: 'work', power: Math.round((ftp || 200) * 0.75), duration: 60, restDuration: 60 },\n          { type: 'work', power: Math.round((ftp || 200) * 0.75), duration: 60, restDuration: 60 },\n          { type: 'work', power: Math.round((ftp || 200) * 0.75), duration: 60, restDuration: 0 }\n        ]\n      });\n    }\n    \n    return validTemplates;\n  };\n\n  /**\n   * Generate standard intervals with same power and duration\n   */\n  const generateIntervals = (ftp, intensityFactor, workDuration, restDuration, count, sets = 1) => {\n    // Validation des paramètres\n    if (!ftp || ftp <= 0) {\n      console.error('FTP invalide pour la génération d\\'intervalles');\n      ftp = 200; // Valeur par défaut\n    }\n    \n    if (intensityFactor <= 0 || intensityFactor > 2) {\n      console.warn(`Facteur d'intensité invalide (${intensityFactor}), utilisation d'une valeur par défaut (0.8)`);\n      intensityFactor = 0.8;\n    }\n    \n    if (workDuration <= 0) workDuration = 30;\n    if (restDuration < 0) restDuration = 30;\n    if (count <= 0) count = 5;\n    if (sets <= 0) sets = 1;\n    \n    const intervals = [];\n    \n    // Arrondir la puissance au watt près pour éviter les valeurs décimales\n    const power = Math.round(ftp * intensityFactor);\n    \n    for (let set = 0; set < sets; set++) {\n      // Ajouter repos entre les séries (sauf première série)\n      if (set > 0) {\n        intervals.push({\n          power: Math.round(ftp * 0.4), // 40% FTP pour récupération entre séries\n          duration: 120, // 2 minutes de récupération entre séries\n          type: 'rest',\n          setRest: true\n        });\n      }\n      \n      for (let i = 0; i < count; i++) {\n        // Interval d'effort\n        intervals.push({\n          power: power,\n          duration: workDuration,\n          type: 'work'\n        });\n        \n        // Interval de récupération (sauf après le dernier de la série)\n        if (i < count - 1 || set < sets - 1) {\n          intervals.push({\n            power: Math.round(ftp * 0.4), // 40% FTP pour récupération\n            duration: restDuration,\n            type: 'rest'\n          });\n        }\n      }\n    }\n    \n    return intervals;\n  };\n  \n  /**\n   * Generate pyramid intervals with increasing then decreasing durations\n   */\n  const generatePyramidIntervals = (ftp, minIntensity, maxIntensity, minDuration, maxDuration, restDuration, durations) => {\n    // Validation des paramètres\n    if (!ftp || ftp <= 0) ftp = 200;\n    if (minIntensity <= 0 || minIntensity > 2) minIntensity = 0.7;\n    if (maxIntensity <= 0 || maxIntensity > 2 || maxIntensity < minIntensity) maxIntensity = minIntensity + 0.2;\n    if (minDuration <= 0) minDuration = 30;\n    if (maxDuration <= 0 || maxDuration < minDuration) maxDuration = minDuration * 2;\n    if (restDuration < 0) restDuration = 30;\n    \n    const intervals = [];\n    \n    // Si durations est spécifié, l'utiliser\n    if (Array.isArray(durations) && durations.length > 0) {\n      const stepCount = durations.length;\n      durations.forEach((duration, index) => {\n        // Calculer l'intensité progressive\n        const progressFactor = index / (stepCount - 1);\n        const intensity = minIntensity + progressFactor * (maxIntensity - minIntensity);\n        \n        intervals.push({\n          power: Math.round(ftp * intensity),\n          duration: duration,\n          type: 'work'\n        });\n        \n        if (index < durations.length - 1) {\n          intervals.push({\n            power: Math.round(ftp * 0.4), // 40% FTP pour récupération\n            duration: restDuration,\n            type: 'rest'\n          });\n        }\n      });\n    } else {\n      // Générer une pyramide automatique\n      // Code pour créer une pyramide par défaut\n      // (non implémenté ici car durations est toujours fourni dans ce composant)\n    }\n    \n    return intervals;\n  };\n  \n  /**\n   * Generate ladder intervals with varying durations\n   */\n  const generateLadderIntervals = (ftp, minIntensity, maxIntensity, durations, restDuration) => {\n    // Validation des paramètres d'entrée\n    if (!ftp || typeof ftp !== 'number' || ftp <= 0) {\n      console.error('FTP invalide dans generateLadderIntervals', { ftp });\n      ftp = 200; // Valeur par défaut sécurisée\n    }\n    \n    if (typeof minIntensity !== 'number' || minIntensity <= 0 || minIntensity > 1.5) {\n      console.error('Intensité minimale invalide dans generateLadderIntervals', { minIntensity });\n      minIntensity = 0.75; // Valeur par défaut sécurisée\n    }\n    \n    if (typeof maxIntensity !== 'number' || maxIntensity <= 0 || \n        maxIntensity > 1.5 || maxIntensity < minIntensity) {\n      console.error('Intensité maximale invalide dans generateLadderIntervals', { maxIntensity });\n      maxIntensity = minIntensity + 0.1; // Valeur par défaut sécurisée basée sur minIntensity\n    }\n    \n    if (!Array.isArray(durations) || durations.length === 0) {\n      console.error('Durées invalides dans generateLadderIntervals', { durations });\n      durations = [30, 60, 90]; // Valeurs par défaut sécurisées\n    }\n    \n    // S'assurer que restDuration est un nombre valide\n    if (typeof restDuration !== 'number' || restDuration < 0) {\n      console.error('Durée de repos invalide dans generateLadderIntervals', { restDuration });\n      restDuration = 60; // Valeur par défaut sécurisée\n    }\n    \n    const intervals = [];\n    const steps = durations.length;\n    \n    // Calculer l'incrément d'intensité pour chaque échelon\n    const intensityIncrement = (maxIntensity - minIntensity) / (steps - 1 || 1);\n    \n    durations.forEach((duration, index) => {\n      // Validation de la durée\n      if (typeof duration !== 'number' || duration <= 0) {\n        console.warn(`Durée invalide à l'index ${index}`, { duration });\n        duration = 30; // Valeur par défaut sécurisée\n      }\n      \n      // Calculer l'intensité pour cet échelon\n      const intensity = minIntensity + (intensityIncrement * index);\n      \n      // Calculer la puissance basée sur l'intensité et la FTP\n      const power = Math.round(ftp * intensity);\n      \n      // Ajouter l'intervalle d'effort\n      intervals.push({\n        type: 'work',\n        power,\n        intensity: intensity,\n        duration: duration,\n        restDuration: index < durations.length - 1 ? restDuration : 0\n      });\n    });\n    \n    return intervals;\n  };\n\n  /**\n   * Generate over-under intervals with alternating intensity\n   */\n  const generateOverUnderIntervals = (ftp, lowerIntensity, higherIntensity, totalDuration, switchTime, count) => {\n    // Validation des paramètres d'entrée\n    if (!ftp || typeof ftp !== 'number' || ftp <= 0) {\n      console.error('FTP invalide dans generateOverUnderIntervals', { ftp });\n      ftp = 200; // Valeur par défaut sécurisée\n    }\n    \n    if (typeof lowerIntensity !== 'number' || lowerIntensity <= 0 || lowerIntensity > 1.2) {\n      console.error('Intensité basse invalide dans generateOverUnderIntervals', { lowerIntensity });\n      lowerIntensity = 0.85; // Valeur par défaut sécurisée\n    }\n    \n    if (typeof higherIntensity !== 'number' || higherIntensity <= 0 || \n        higherIntensity > 1.5 || higherIntensity <= lowerIntensity) {\n      console.error('Intensité haute invalide dans generateOverUnderIntervals', { higherIntensity });\n      higherIntensity = lowerIntensity + 0.1; // Valeur par défaut sécurisée basée sur lowerIntensity\n    }\n    \n    if (typeof totalDuration !== 'number' || totalDuration <= 0) {\n      console.error('Durée totale invalide dans generateOverUnderIntervals', { totalDuration });\n      totalDuration = 300; // Valeur par défaut sécurisée (5 minutes)\n    }\n    \n    if (typeof switchTime !== 'number' || switchTime <= 0 || switchTime >= totalDuration) {\n      console.error('Temps de changement invalide dans generateOverUnderIntervals', { switchTime });\n      switchTime = 30; // Valeur par défaut sécurisée\n    }\n    \n    if (typeof count !== 'number' || count <= 0) {\n      console.error('Nombre d\\'intervalles invalide dans generateOverUnderIntervals', { count });\n      count = 4; // Valeur par défaut sécurisée\n    }\n    \n    const intervals = [];\n    \n    // Calculer la puissance pour les intensités haute et basse\n    const lowerPower = Math.round(ftp * lowerIntensity);\n    const higherPower = Math.round(ftp * higherIntensity);\n    \n    // Calculer le temps de récupération entre les répétitions (1:1 ou rapport personnalisé)\n    const restDuration = Math.round(totalDuration / 2);\n    \n    for (let i = 0; i < count; i++) {\n      // Interval principal avec alternance over/under\n      intervals.push({\n        type: 'over-under',\n        power: lowerPower, // Puissance de base\n        secondaryPower: higherPower, // Puissance des pics\n        intensity: lowerIntensity,\n        secondaryIntensity: higherIntensity,\n        duration: totalDuration,\n        switchTime: switchTime,\n        restDuration: i < count - 1 ? restDuration : 0\n      });\n    }\n    \n    return intervals;\n  };\n  \n  /**\n   * Handle template selection\n   */\n  const handleSelectTemplate = (template) => {\n    try {\n      if (!template) {\n        throw new Error('Template invalide');\n      }\n      \n      setSelectedTemplate(template);\n      // Créer une copie profonde pour éviter de modifier l'original\n      setCustomizedTemplate(JSON.parse(JSON.stringify(template)));\n    } catch (error) {\n      console.error('Erreur lors de la sélection du template:', error);\n      setError(`Erreur lors de la sélection du template: ${error.message}`);\n    }\n  };\n  \n  /**\n   * Handle interval adjustment\n   */\n  const handleAdjustInterval = (index, field, value) => {\n    if (index < 0 || !customizedTemplate || !customizedTemplate.intervals) {\n      console.error('Index invalide ou template non disponible', { index, customizedTemplate });\n      notify.error('Impossible de modifier l\\'intervalle', { \n        details: 'Données d\\'intervalle non disponibles' \n      });\n      return;\n    }\n    \n    if (!customizedTemplate.intervals[index]) {\n      console.error('Intervalle non trouvé à l\\'index spécifié', { index, intervals: customizedTemplate.intervals });\n      notify.error('Intervalle non trouvé');\n      return;\n    }\n    \n    // Créer une copie profonde pour éviter les modifications par référence\n    const updatedTemplate = JSON.parse(JSON.stringify(customizedTemplate));\n    \n    // Valider et convertir la valeur entrée\n    let numericValue = parseFloat(value);\n    \n    // Gérer les valeurs non numériques\n    if (isNaN(numericValue)) {\n      console.warn(`Valeur non numérique entrée pour ${field}:`, value);\n      notify.warning(`Valeur invalide pour ${field === 'power' ? 'la puissance' : 'la durée'}`);\n      \n      // Utiliser la valeur actuelle en cas d'entrée non valide\n      if (field === 'power') {\n        numericValue = updatedTemplate.intervals[index].power || 0;\n      } else if (field === 'duration' || field === 'restDuration') {\n        numericValue = updatedTemplate.intervals[index][field] || 0;\n      } else {\n        // Pour tout autre champ, conserver la valeur existante\n        return;\n      }\n    }\n    \n    // Appliquer des limites spécifiques selon le champ\n    if (field === 'power') {\n      // Limiter la puissance entre 50% et 150% de la FTP\n      const ftp = userProfile?.ftp || 200;\n      const validatedFtp = FTPService.validateFTP(ftp, userProfile);\n      const minPower = Math.round(validatedFtp * 0.5);\n      const maxPower = Math.round(validatedFtp * 1.5);\n      \n      if (numericValue < minPower) {\n        console.warn(`Puissance trop basse (${numericValue}W), limitée à ${minPower}W`);\n        notify.info(`Puissance ajustée au minimum (${minPower}W)`);\n        numericValue = minPower;\n      } else if (numericValue > maxPower) {\n        console.warn(`Puissance trop élevée (${numericValue}W), limitée à ${maxPower}W`);\n        notify.info(`Puissance ajustée au maximum (${maxPower}W)`);\n        numericValue = maxPower;\n      }\n      \n      // Mettre à jour l'intensité correspondante\n      updatedTemplate.intervals[index].intensity = parseFloat((numericValue / validatedFtp).toFixed(2));\n    } else if (field === 'duration' || field === 'restDuration') {\n      // Limiter la durée entre 5 et 600 secondes (10 minutes)\n      if (numericValue < 5) {\n        console.warn(`Durée trop courte (${numericValue}s), limitée à 5s`);\n        notify.info(`Durée ajustée au minimum (5s)`);\n        numericValue = 5;\n      } else if (numericValue > 600) {\n        console.warn(`Durée trop longue (${numericValue}s), limitée à 600s`);\n        notify.info(`Durée ajustée au maximum (10 minutes)`);\n        numericValue = 600;\n      }\n    }\n    \n    // Mettre à jour l'intervalle\n    updatedTemplate.intervals[index][field] = numericValue;\n    \n    // Mettre à jour la durée totale de l'entraînement\n    updatedTemplate.duration = calculateWorkoutDuration(updatedTemplate.intervals);\n    \n    // Mettre à jour le state\n    setCustomizedTemplate(updatedTemplate);\n  };\n\n  /**\n   * Calculate total workout duration in minutes\n   */\n  const calculateWorkoutDuration = (intervals) => {\n    if (!intervals || !Array.isArray(intervals)) {\n      console.error('Intervalles invalides pour le calcul de durée', { intervals });\n      notify.error('Erreur lors du calcul de la durée');\n      return 0;\n    }\n    \n    try {\n      // Calculer la durée totale en secondes\n      const totalSeconds = intervals.reduce((total, interval) => {\n        // Vérification des valeurs pour éviter NaN\n        const workDuration = typeof interval.duration === 'number' ? interval.duration : 0;\n        const restDuration = typeof interval.restDuration === 'number' ? interval.restDuration : 0;\n        \n        return total + workDuration + restDuration;\n      }, 0);\n      \n      // Ajouter 5 minutes pour l'échauffement et la récupération\n      const warmupCooldownSeconds = 5 * 60;\n      const totalWorkoutSeconds = totalSeconds + warmupCooldownSeconds;\n      \n      // Convertir en minutes et arrondir\n      return Math.ceil(totalWorkoutSeconds / 60);\n    } catch (error) {\n      console.error('Erreur lors du calcul de la durée de l\\'entraînement', error);\n      notify.error('Erreur lors du calcul de la durée', error);\n      return 0;\n    }\n  };\n\n  /**\n   * Handle saving the workout\n   */\n  const handleSaveWorkout = () => {\n    try {\n      if (!customizedTemplate) {\n        throw new Error('Aucun template n\\'est sélectionné');\n      }\n      \n      const zoneMap = {\n        0.6: 1, // zone 1 - récupération\n        0.75: 2, // zone 2 - endurance\n        0.85: 3, // zone 3 - tempo\n        0.95: 4, // zone 4 - seuil\n        1.05: 5, // zone 5 - VO2max\n        1.2: 6,  // zone 6 - anaérobie\n        1.5: 7   // zone 7 - neuromuscular\n      };\n      \n      // Déterminer la zone cible principale en fonction des intervalles\n      let totalIntensity = 0;\n      let totalDuration = 0;\n      \n      customizedTemplate.intervals.forEach(interval => {\n        if (interval.type === 'work' || !interval.type) {\n          const intensityValue = interval.intensity || interval.power / (userProfile?.ftp || 200);\n          const duration = interval.duration || 0;\n          \n          totalIntensity += intensityValue * duration;\n          totalDuration += duration;\n        }\n      });\n      \n      const avgIntensity = totalIntensity / (totalDuration || 1);\n      \n      // Déterminer la zone cible\n      let targetZone = 3; // Default to zone 3\n      for (const [intensity, zone] of Object.entries(zoneMap)) {\n        if (avgIntensity <= parseFloat(intensity)) {\n          targetZone = zone;\n          break;\n        }\n      }\n      \n      const workout = {\n        ...customizedTemplate,\n        targetZone,\n        date: new Date().toISOString(),\n        userId: userProfile?.id\n      };\n      \n      // Appeler la fonction de sauvegarde parentale\n      const savedWorkout = onSaveWorkout(workout);\n      \n      if (savedWorkout) {\n        notify.success('L\\'entraînement a été enregistré avec succès', {\n          title: 'Sauvegarde réussie'\n        });\n      }\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde de l\\'entraînement', error);\n      notify.error('Impossible de sauvegarder l\\'entraînement', error);\n    }\n  };\n\n  /**\n   * Render interval visualization\n   */\n  const renderIntervalVisualization = (intervals) => {\n    try {\n      if (!intervals || !Array.isArray(intervals) || intervals.length === 0) {\n        return <div className=\"visualization-error\">Intervalles non disponibles</div>;\n      }\n      \n      // Préparer les données pour le graphique\n      const chartData = intervals.map((interval, index) => ({\n        name: `${index + 1}`,\n        power: interval.power || 0,\n        type: interval.type || 'work'\n      }));\n      \n      // Déterminer la couleur en fonction du type d'intervalle\n      const getBarColor = (entry) => {\n        return entry.type === 'work' ? '#ff4757' : \n              (entry.type === 'rest' ? '#2ed573' : \n              (entry.setRest ? '#1e90ff' : '#ffa502'));\n      };\n      \n      return (\n        <div className=\"interval-visualization\">\n          <h4>{t('powerProfile', 'Profil de puissance')}</h4>\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <BarChart data={chartData} margin={{ top: 5, right: 5, bottom: 5, left: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis domain={[0, 'dataMax + 20']} />\n              <Tooltip \n                formatter={(value) => [`${value}W`, 'Puissance']}\n                labelFormatter={(value) => `Intervalle ${value}`}\n              />\n              <Bar \n                dataKey=\"power\" \n                name=\"Puissance\"\n                fill=\"#8884d8\" \n                stroke=\"#8884d8\"\n                fillOpacity={0.8}\n                barSize={20}\n                isAnimationActive={false}\n                data={chartData}\n              >\n                {\n                  chartData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={getBarColor(entry)} />\n                  ))\n                }\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      );\n    } catch (error) {\n      console.error('Erreur lors de la génération de la visualisation:', error);\n      return <div className=\"visualization-error\">Erreur d'affichage: {error.message}</div>;\n    }\n  };\n  \n  // Affichage des erreurs\n  if (error) {\n    return (\n      <div className=\"hiit-templates-error\">\n        <div className=\"alert alert-danger\">\n          <h4>Erreur :</h4>\n          <p>{error}</p>\n          <button \n            className=\"btn btn-primary mt-3\"\n            onClick={() => setError(null)}\n          >\n            Réessayer\n          </button>\n        </div>\n      </div>\n    );\n  }\n  \n  // Loading state\n  if (loading) {\n    return <div className=\"hiit-templates-loading\">{t('loadingTemplates', 'Chargement des templates...')}</div>;\n  }\n  \n  return (\n    <div className=\"hiit-templates\">\n      <div className=\"templates-list\">\n        <h3>{t('availableTemplates', 'Templates disponibles')}</h3>\n        <div className=\"templates-grid\">\n          {templates.map(template => (\n            <div \n              key={template.id}\n              className={`template-card ${selectedTemplate?.id === template.id ? 'selected' : ''}`}\n              onClick={() => handleSelectTemplate(template)}\n            >\n              <h4>{template.name}</h4>\n              <div className=\"template-difficulty\">\n                {Array(template.difficulty).fill().map((_, i) => (\n                  <span key={i} className=\"difficulty-star\">★</span>\n                ))}\n                {Array(3 - template.difficulty).fill().map((_, i) => (\n                  <span key={i} className=\"difficulty-star empty\">☆</span>\n                ))}\n              </div>\n              <div className=\"template-duration\">{template.duration} {t('min', 'min')}</div>\n              <div className=\"template-description\">{template.description}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      {customizedTemplate && (\n        <div className=\"template-customization\">\n          <h3>{t('customizeWorkout', 'Personnaliser l\\'entraînement')}</h3>\n          \n          {renderIntervalVisualization(customizedTemplate.intervals)}\n          \n          <div className=\"intervals-table\">\n            <h4>{t('intervals', 'Intervalles')}</h4>\n            <table>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>{t('power', 'Puissance')}</th>\n                  <th>{t('duration', 'Durée')}</th>\n                  <th>{t('rest', 'Récupération')}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customizedTemplate.intervals.map((interval, index) => (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>\n                      <input \n                        type=\"number\" \n                        value={interval.power}\n                        onChange={(e) => handleAdjustInterval(index, 'power', e.target.value)}\n                        min={Math.round(userProfile?.ftp * 0.5) || 100}\n                        max={Math.round(userProfile?.ftp * 1.5) || 400}\n                      />\n                      <span>W</span>\n                    </td>\n                    <td>\n                      <input \n                        type=\"number\" \n                        value={interval.duration}\n                        onChange={(e) => handleAdjustInterval(index, 'duration', e.target.value)}\n                        min={10}\n                        max={600}\n                      />\n                      <span>{t('sec', 'sec')}</span>\n                    </td>\n                    <td>\n                      <input \n                        type=\"number\" \n                        value={interval.restDuration || 0}\n                        onChange={(e) => handleAdjustInterval(index, 'restDuration', e.target.value)}\n                        min={0}\n                        max={600}\n                      />\n                      <span>{t('sec', 'sec')}</span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          \n          <div className=\"template-actions\">\n            <button \n              className=\"template-save-button\"\n              onClick={handleSaveWorkout}\n            >\n              {t('saveWorkout', 'Enregistrer')}\n            </button>\n            <button \n              className=\"template-reset-button\"\n              onClick={() => setCustomizedTemplate({...selectedTemplate})}\n            >\n              {t('resetChanges', 'Réinitialiser')}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nHIITTemplates.propTypes = {\n  userProfile: PropTypes.shape({\n    id: PropTypes.string,\n    level: PropTypes.string,\n    ftp: PropTypes.number\n  }),\n  onSaveWorkout: PropTypes.func.isRequired\n};\n\nexport default HIITTemplates;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}