{"version":3,"file":"static/js/3848.2b8099ee.chunk.js","mappings":"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","sources":["components/training/WorkoutLibrary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Button, Row, Col, Badge, Form, Tab, Tabs, Alert } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faBicycle, faRunning, faDumbbell, faHeartbeat, \n  faChartLine, faMountain, faClock, faFilter, faStar\n} from '@fortawesome/free-solid-svg-icons';\nimport { useTranslation } from 'react-i18next';\nimport { useNotification } from '../common/NotificationSystem';\nimport TrainingSystem, { TRAINING_TYPES } from '../../services/TrainingSystem';\nimport FTPService from '../../services/FTPEstimationService';\n\n/**\n * Bibliothèque complète d'entraînements\n * Intègre tous les types d'entraînements dans une interface unifiée\n */\nconst WorkoutLibrary = ({ userProfile, onSelectWorkout, onSaveWorkout }) => {\n  const { t } = useTranslation();\n  const { notify } = useNotification();\n  const [activeTab, setActiveTab] = useState('all');\n  const [workouts, setWorkouts] = useState([]);\n  const [filteredWorkouts, setFilteredWorkouts] = useState([]);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [filters, setFilters] = useState({\n    duration: [0, 180],\n    intensity: [0, 5],\n    type: 'all',\n    difficulty: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [recommendations, setRecommendations] = useState([]);\n\n  // Charger les entraînements\n  useEffect(() => {\n    const loadWorkouts = async () => {\n      try {\n        setLoading(true);\n        \n        // Simulation d'appel API (à remplacer par un appel réel)\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Générer des entraînements selon le profil\n        const workoutLibrary = generateWorkoutLibrary(userProfile);\n        setWorkouts(workoutLibrary);\n        setFilteredWorkouts(workoutLibrary);\n        \n        // Générer des recommandations\n        if (userProfile) {\n          const userRecommendations = TrainingSystem.getTrainingRecommendations(\n            userProfile, \n            [] // Historique d'entraînement à intégrer\n          );\n          setRecommendations(userRecommendations);\n        }\n        \n        notify.success('Bibliothèque d\\'entraînements chargée');\n      } catch (error) {\n        console.error('Erreur lors du chargement des entraînements:', error);\n        notify.error('Impossible de charger les entraînements', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadWorkouts();\n  }, [userProfile, notify]);\n\n  // Filtrer les entraînements selon les critères\n  useEffect(() => {\n    let filtered = [...workouts];\n    \n    // Filtrer par onglet actif (type d'entraînement)\n    if (activeTab !== 'all') {\n      filtered = filtered.filter(workout => workout.type === activeTab);\n    }\n    \n    // Filtrer par durée\n    filtered = filtered.filter(workout => \n      workout.duration >= filters.duration[0] && \n      workout.duration <= filters.duration[1]\n    );\n    \n    // Filtrer par intensité\n    filtered = filtered.filter(workout => \n      workout.intensityLevel >= filters.intensity[0] && \n      workout.intensityLevel <= filters.intensity[1]\n    );\n    \n    // Filtrer par difficulté\n    if (filters.difficulty > 0) {\n      filtered = filtered.filter(workout => \n        workout.difficulty === filters.difficulty\n      );\n    }\n    \n    setFilteredWorkouts(filtered);\n  }, [activeTab, filters, workouts]);\n\n  /**\n   * Génère une bibliothèque d'entraînements adaptée au profil utilisateur\n   */\n  const generateWorkoutLibrary = (profile) => {\n    if (!profile) {\n      return getDefaultWorkouts();\n    }\n    \n    // Valider et ajuster la FTP si nécessaire\n    const ftp = FTPService.validateFTP(profile.ftp, profile);\n    const level = profile.level || 'intermediate';\n    \n    let allWorkouts = [];\n    \n    // Ajouter des entraînements d'endurance\n    allWorkouts = [...allWorkouts, ...generateEnduranceWorkouts(ftp, level)];\n    \n    // Ajouter des entraînements au seuil\n    allWorkouts = [...allWorkouts, ...generateThresholdWorkouts(ftp, level)];\n    \n    // Ajouter des entraînements VO2max\n    allWorkouts = [...allWorkouts, ...generateVO2maxWorkouts(ftp, level)];\n    \n    // Ajouter des entraînements de récupération\n    allWorkouts = [...allWorkouts, ...generateRecoveryWorkouts(ftp)];\n    \n    // Ajouter des entraînements de force\n    allWorkouts = [...allWorkouts, ...generateStrengthWorkouts(ftp, level)];\n    \n    // Ajouter des entraînements en montagne si pertinent\n    if (profile.preferred_terrain === 'mountain' || profile.cyclist_type === 'climber') {\n      allWorkouts = [...allWorkouts, ...generateClimbingWorkouts(ftp, level)];\n    }\n    \n    // Ajouter des entraînements HIIT avancés pour niveaux appropriés\n    if (level === 'intermediate' || level === 'advanced' || level === 'elite') {\n      allWorkouts = [...allWorkouts, ...generateHIITWorkouts(ftp, level)];\n    }\n    \n    return allWorkouts;\n  };\n\n  /**\n   * Fournit une bibliothèque d'entraînements par défaut\n   */\n  const getDefaultWorkouts = () => {\n    // FTP par défaut pour les exemples\n    const defaultFtp = 200;\n    \n    // Combiner des entraînements de base de différents types\n    return [\n      ...generateEnduranceWorkouts(defaultFtp, 'intermediate').slice(0, 3),\n      ...generateThresholdWorkouts(defaultFtp, 'intermediate').slice(0, 2),\n      ...generateRecoveryWorkouts(defaultFtp).slice(0, 1),\n      ...generateVO2maxWorkouts(defaultFtp, 'intermediate').slice(0, 1)\n    ];\n  };\n\n  /**\n   * Génère des entraînements d'endurance\n   */\n  const generateEnduranceWorkouts = (ftp, level) => {\n    // Ajuster l'intensité selon le niveau\n    const intensityMap = {\n      'beginner': 0.65,\n      'intermediate': 0.7,\n      'advanced': 0.75,\n      'elite': 0.75\n    };\n    \n    const baseIntensity = intensityMap[level] || 0.7;\n    \n    return [\n      {\n        id: 'endurance-foundation',\n        name: 'Fondation d\\'Endurance',\n        type: TRAINING_TYPES.ENDURANCE,\n        description: 'Développez votre endurance aérobie fondamentale avec cette sortie stable en zone 2.',\n        duration: 90, // minutes\n        intensityLevel: 2,\n        difficulty: level === 'beginner' ? 2 : 1,\n        targetPower: Math.round(ftp * baseIntensity),\n        terrain: 'flat',\n        intervals: [\n          { type: 'warmup', duration: 10*60, power: Math.round(ftp * 0.6) },\n          { type: 'steady', duration: 70*60, power: Math.round(ftp * baseIntensity) },\n          { type: 'cooldown', duration: 10*60, power: Math.round(ftp * 0.5) }\n        ]\n      },\n      {\n        id: 'endurance-builder',\n        name: 'Construction d\\'Endurance',\n        type: TRAINING_TYPES.ENDURANCE,\n        description: 'Sortie longue pour développer l\\'endurance aérobie et la capacité à utiliser les graisses comme carburant.',\n        duration: 120,\n        intensityLevel: 2,\n        difficulty: level === 'beginner' ? 3 : 2,\n        targetPower: Math.round(ftp * baseIntensity),\n        terrain: 'mixed',\n        intervals: [\n          { type: 'warmup', duration: 15*60, power: Math.round(ftp * 0.6) },\n          { type: 'steady', duration: 90*60, power: Math.round(ftp * baseIntensity) },\n          { type: 'cooldown', duration: 15*60, power: Math.round(ftp * 0.5) }\n        ]\n      },\n      {\n        id: 'tempo-intervals',\n        name: 'Intervalles Tempo',\n        type: TRAINING_TYPES.TEMPO,\n        description: 'Alternance entre zone d\\'endurance et zone tempo pour améliorer l\\'économie et la tolérance à l\\'acide lactique.',\n        duration: 75,\n        intensityLevel: 3,\n        difficulty: 2,\n        targetPower: Math.round(ftp * 0.85),\n        terrain: 'mixed',\n        intervals: [\n          { type: 'warmup', duration: 10*60, power: Math.round(ftp * 0.6) },\n          { type: 'steady', duration: 15*60, power: Math.round(ftp * 0.75) },\n          { type: 'steady', duration: 10*60, power: Math.round(ftp * 0.85) },\n          { type: 'recovery', duration: 5*60, power: Math.round(ftp * 0.6) },\n          { type: 'steady', duration: 10*60, power: Math.round(ftp * 0.75) },\n          { type: 'steady', duration: 10*60, power: Math.round(ftp * 0.85) },\n          { type: 'recovery', duration: 5*60, power: Math.round(ftp * 0.6) },\n          { type: 'cooldown', duration: 10*60, power: Math.round(ftp * 0.5) }\n        ]\n      }\n    ];\n  };\n\n  /**\n   * Génère des entraînements au seuil\n   */\n  const generateThresholdWorkouts = (ftp, level) => {\n    // Ajuster les paramètres selon le niveau\n    const levelParams = {\n      beginner: {\n        intensity: 0.9,\n        intervalDuration: 5*60,\n        sets: 3\n      },\n      intermediate: {\n        intensity: 0.95,\n        intervalDuration: 8*60,\n        sets: 3\n      },\n      advanced: {\n        intensity: 1.0,\n        intervalDuration: 10*60,\n        sets: 3\n      },\n      elite: {\n        intensity: 1.02,\n        intervalDuration: 12*60,\n        sets: 3\n      }\n    };\n    \n    const params = levelParams[level] || levelParams.intermediate;\n    \n    return [\n      {\n        id: 'threshold-classic',\n        name: 'Seuil Classique',\n        type: TRAINING_TYPES.THRESHOLD,\n        description: 'Intervalles au seuil pour améliorer votre puissance soutenue et repousser votre seuil lactique.',\n        duration: 60,\n        intensityLevel: 4,\n        difficulty: level === 'beginner' ? 3 : 2,\n        targetPower: Math.round(ftp * params.intensity),\n        terrain: 'flat',\n        intervals: [\n          { type: 'warmup', duration: 10*60, power: Math.round(ftp * 0.65) },\n          { \n            type: 'threshold', \n            duration: params.intervalDuration, \n            power: Math.round(ftp * params.intensity) \n          },\n          { \n            type: 'recovery', \n            duration: Math.round(params.intervalDuration/2), \n            power: Math.round(ftp * 0.5) \n          },\n          { \n            type: 'threshold', \n            duration: params.intervalDuration, \n            power: Math.round(ftp * params.intensity) \n          },\n          { \n            type: 'recovery', \n            duration: Math.round(params.intervalDuration/2), \n            power: Math.round(ftp * 0.5) \n          },\n          { \n            type: 'threshold', \n            duration: params.intervalDuration, \n            power: Math.round(ftp * params.intensity) \n          },\n          { type: 'cooldown', duration: 10*60, power: Math.round(ftp * 0.5) }\n        ]\n      },\n      {\n        id: 'threshold-progessive',\n        name: 'Seuil Progressif',\n        type: TRAINING_TYPES.THRESHOLD,\n        description: 'Intervalles au seuil avec intensité progressive pour simuler des conditions de course.',\n        duration: 75,\n        intensityLevel: 4,\n        difficulty: 3,\n        targetPower: Math.round(ftp * params.intensity),\n        terrain: 'mixed',\n        intervals: [\n          { type: 'warmup', duration: 12*60, power: Math.round(ftp * 0.65) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 0.9) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 0.95) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 1.0) },\n          { type: 'recovery', duration: 5*60, power: Math.round(ftp * 0.5) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 0.9) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 0.95) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 1.0) },\n          { type: 'recovery', duration: 5*60, power: Math.round(ftp * 0.5) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 0.9) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 0.95) },\n          { type: 'threshold', duration: 4*60, power: Math.round(ftp * 1.0) },\n          { type: 'cooldown', duration: 12*60, power: Math.round(ftp * 0.5) }\n        ]\n      }\n    ];\n  };\n\n  /**\n   * Génère des entraînements VO2max\n   */\n  const generateVO2maxWorkouts = (ftp, level) => {\n    // À implémenter selon le niveau\n    // Ces entraînements seraient plus intenses et adaptés aux niveaux plus avancés\n    return [];\n  };\n\n  /**\n   * Génère des entraînements de récupération\n   */\n  const generateRecoveryWorkouts = (ftp) => {\n    return [\n      {\n        id: 'active-recovery',\n        name: 'Récupération Active',\n        type: TRAINING_TYPES.RECOVERY,\n        description: 'Sortie légère pour favoriser la récupération tout en maintenant le mouvement.',\n        duration: 45,\n        intensityLevel: 1,\n        difficulty: 1,\n        targetPower: Math.round(ftp * 0.55),\n        terrain: 'flat',\n        intervals: [\n          { type: 'warmup', duration: 5*60, power: Math.round(ftp * 0.5) },\n          { type: 'steady', duration: 35*60, power: Math.round(ftp * 0.55) },\n          { type: 'cooldown', duration: 5*60, power: Math.round(ftp * 0.5) }\n        ]\n      }\n    ];\n  };\n\n  /**\n   * Génère des entraînements de force\n   */\n  const generateStrengthWorkouts = (ftp, level) => {\n    // À implémenter\n    return [];\n  };\n\n  /**\n   * Génère des entraînements en montagne\n   */\n  const generateClimbingWorkouts = (ftp, level) => {\n    // À implémenter\n    return [];\n  };\n\n  /**\n   * Génère des entraînements HIIT avancés\n   */\n  const generateHIITWorkouts = (ftp, level) => {\n    // À implémenter - pourrait appeler la fonction existante dans HIITTemplates\n    return [];\n  };\n\n  /**\n   * Sélectionne un entraînement\n   */\n  const handleSelectWorkout = (workout) => {\n    setSelectedWorkout(workout);\n    \n    if (onSelectWorkout) {\n      onSelectWorkout(workout);\n    }\n  };\n\n  /**\n   * Sauvegarde un entraînement dans le calendrier utilisateur\n   */\n  const handleSaveWorkout = () => {\n    if (!selectedWorkout) {\n      notify.warning('Aucun entraînement sélectionné');\n      return;\n    }\n    \n    try {\n      // Traitement pour la sauvegarde\n      if (onSaveWorkout) {\n        const result = onSaveWorkout({\n          ...selectedWorkout,\n          date: new Date().toISOString(),\n          userId: userProfile?.id\n        });\n        \n        if (result) {\n          notify.success('Entraînement ajouté à votre calendrier');\n        }\n      }\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde de l\\'entraînement:', error);\n      notify.error('Impossible de sauvegarder l\\'entraînement', error);\n    }\n  };\n\n  /**\n   * Met à jour les filtres\n   */\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Icônes pour les types d'entraînement\n  const typeIcons = {\n    [TRAINING_TYPES.ENDURANCE]: faBicycle,\n    [TRAINING_TYPES.TEMPO]: faChartLine,\n    [TRAINING_TYPES.THRESHOLD]: faHeartbeat,\n    [TRAINING_TYPES.VO2MAX]: faRunning,\n    [TRAINING_TYPES.HIIT]: faChartLine,\n    [TRAINING_TYPES.RECOVERY]: faHeartbeat,\n    [TRAINING_TYPES.STRENGTH]: faDumbbell,\n    [TRAINING_TYPES.CLIMBING]: faMountain\n  };\n\n  // Affichage pendant le chargement\n  if (loading) {\n    return (\n      <div className=\"text-center my-5\">\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"visually-hidden\">Chargement...</span>\n        </div>\n        <p className=\"mt-2\">Chargement de la bibliothèque d'entraînements...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"workout-library\">\n      <div className=\"heading mb-4\">\n        <h2>Bibliothèque d'Entraînements</h2>\n        <p className=\"text-muted\">\n          Explorez notre collection complète d'entraînements adaptés à votre profil\n        </p>\n      </div>\n\n      {recommendations && recommendations.message && (\n        <Alert variant=\"info\" className=\"mb-4\">\n          <Alert.Heading>Recommandations personnalisées</Alert.Heading>\n          <p>{recommendations.message}</p>\n          {recommendations.focusAreas && recommendations.focusAreas.length > 0 && (\n            <div className=\"mt-2\">\n              <strong>Domaines à privilégier:</strong>\n              <div className=\"d-flex flex-wrap gap-2 mt-1\">\n                {recommendations.focusAreas.map((area, idx) => (\n                  <Badge bg=\"primary\" key={idx}>{area}</Badge>\n                ))}\n              </div>\n            </div>\n          )}\n        </Alert>\n      )}\n\n      <div className=\"filters-container mb-4\">\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={faFilter} className=\"me-2\" />\n            Filtres\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Durée (minutes)</Form.Label>\n                  <div className=\"d-flex align-items-center\">\n                    <Form.Control \n                      type=\"number\" \n                      min=\"0\"\n                      max=\"300\"\n                      value={filters.duration[0]}\n                      onChange={(e) => handleFilterChange('duration', [parseInt(e.target.value) || 0, filters.duration[1]])}\n                      className=\"me-2\"\n                    />\n                    <span>à</span>\n                    <Form.Control \n                      type=\"number\"\n                      min=\"0\"\n                      max=\"300\" \n                      value={filters.duration[1]}\n                      onChange={(e) => handleFilterChange('duration', [filters.duration[0], parseInt(e.target.value) || 180])}\n                      className=\"ms-2\"\n                    />\n                  </div>\n                </Form.Group>\n              </Col>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Niveau d'intensité (1-5)</Form.Label>\n                  <div className=\"d-flex align-items-center\">\n                    <Form.Control \n                      type=\"number\" \n                      min=\"1\"\n                      max=\"5\"\n                      value={filters.intensity[0]}\n                      onChange={(e) => handleFilterChange('intensity', [parseInt(e.target.value) || 1, filters.intensity[1]])}\n                      className=\"me-2\"\n                    />\n                    <span>à</span>\n                    <Form.Control \n                      type=\"number\"\n                      min=\"1\"\n                      max=\"5\" \n                      value={filters.intensity[1]}\n                      onChange={(e) => handleFilterChange('intensity', [filters.intensity[0], parseInt(e.target.value) || 5])}\n                      className=\"ms-2\"\n                    />\n                  </div>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Difficulté</Form.Label>\n                  <div className=\"d-flex\">\n                    {[0, 1, 2, 3].map(level => (\n                      <Button \n                        key={level}\n                        variant={filters.difficulty === level ? 'primary' : 'outline-primary'}\n                        className=\"me-2\"\n                        onClick={() => handleFilterChange('difficulty', level)}\n                      >\n                        {level === 0 ? 'Tous' : Array(level).fill('★').join('')}\n                      </Button>\n                    ))}\n                  </div>\n                </Form.Group>\n              </Col>\n              <Col md={6} className=\"d-flex align-items-end\">\n                <Button \n                  variant=\"secondary\" \n                  className=\"mb-3\"\n                  onClick={() => setFilters({\n                    duration: [0, 180],\n                    intensity: [0, 5],\n                    type: 'all',\n                    difficulty: 0\n                  })}\n                >\n                  Réinitialiser les filtres\n                </Button>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n\n      <Tabs\n        activeKey={activeTab}\n        onSelect={(key) => setActiveTab(key)}\n        className=\"mb-4\"\n      >\n        <Tab eventKey=\"all\" title=\"Tous les types\">\n          {/* Contenu affiché ci-dessous */}\n        </Tab>\n        <Tab \n          eventKey={TRAINING_TYPES.ENDURANCE} \n          title={\n            <><FontAwesomeIcon icon={faBicycle} className=\"me-2\" />{t('training.endurance')}</>\n          }\n        >\n          {/* Contenu affiché ci-dessous */}\n        </Tab>\n        <Tab \n          eventKey={TRAINING_TYPES.THRESHOLD} \n          title={\n            <><FontAwesomeIcon icon={faHeartbeat} className=\"me-2\" />{t('training.threshold')}</>\n          }\n        >\n          {/* Contenu affiché ci-dessous */}\n        </Tab>\n        <Tab \n          eventKey={TRAINING_TYPES.HIIT} \n          title={\n            <><FontAwesomeIcon icon={faChartLine} className=\"me-2\" />{t('training.hiit')}</>\n          }\n        >\n          {/* Contenu affiché ci-dessous */}\n        </Tab>\n        <Tab \n          eventKey={TRAINING_TYPES.RECOVERY} \n          title={\n            <><FontAwesomeIcon icon={faHeartbeat} className=\"me-2\" />{t('training.recovery')}</>\n          }\n        >\n          {/* Contenu affiché ci-dessous */}\n        </Tab>\n      </Tabs>\n\n      <div className=\"workouts-container\">\n        {filteredWorkouts.length === 0 ? (\n          <Alert variant=\"warning\">\n            Aucun entraînement ne correspond aux critères sélectionnés. Essayez d'ajuster vos filtres.\n          </Alert>\n        ) : (\n          <Row xs={1} md={2} lg={3} className=\"g-4\">\n            {filteredWorkouts.map(workout => (\n              <Col key={workout.id}>\n                <Card \n                  className={`h-100 workout-card ${selectedWorkout?.id === workout.id ? 'border-primary' : ''}`}\n                  onClick={() => handleSelectWorkout(workout)}\n                >\n                  <Card.Header className=\"d-flex justify-content-between align-items-center\">\n                    <div>\n                      <FontAwesomeIcon \n                        icon={typeIcons[workout.type] || faBicycle} \n                        className=\"me-2\" \n                      />\n                      {t(`trainingTypes.${workout.type}`)}\n                    </div>\n                    <Badge \n                      bg={\n                        workout.intensityLevel <= 2 ? 'success' : \n                        workout.intensityLevel <= 3 ? 'info' : \n                        workout.intensityLevel <= 4 ? 'warning' : 'danger'\n                      }\n                    >\n                      Niveau {workout.intensityLevel}\n                    </Badge>\n                  </Card.Header>\n                  <Card.Body>\n                    <Card.Title>{workout.name}</Card.Title>\n                    <div className=\"mb-2\">\n                      <FontAwesomeIcon icon={faClock} className=\"me-2 text-muted\" />\n                      <span>{workout.duration} min</span>\n                      <span className=\"ms-3\">\n                        {Array(workout.difficulty).fill('★').join('')}\n                      </span>\n                    </div>\n                    <Card.Text>{workout.description}</Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button \n                      variant={selectedWorkout?.id === workout.id ? \"primary\" : \"outline-primary\"} \n                      size=\"sm\" \n                      className=\"w-100\"\n                    >\n                      {selectedWorkout?.id === workout.id ? \"Sélectionné\" : \"Sélectionner\"}\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n\n      {selectedWorkout && (\n        <div className=\"selected-workout-actions mt-4 d-flex justify-content-end\">\n          <Button \n            variant=\"success\" \n            onClick={handleSaveWorkout}\n          >\n            <FontAwesomeIcon icon={faStar} className=\"me-2\" />\n            Ajouter à mon calendrier\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nWorkoutLibrary.propTypes = {\n  userProfile: PropTypes.shape({\n    id: PropTypes.string,\n    ftp: PropTypes.number,\n    level: PropTypes.string,\n    age: PropTypes.number,\n    weight: PropTypes.number,\n    preferred_terrain: PropTypes.string,\n    cyclist_type: PropTypes.string\n  }),\n  onSelectWorkout: PropTypes.func,\n  onSaveWorkout: PropTypes.func\n};\n\nexport default WorkoutLibrary;\n"],"names":["_ref","userProfile","onSelectWorkout","onSaveWorkout","t","useTranslation","notify","useNotification","activeTab","setActiveTab","useState","workouts","setWorkouts","filteredWorkouts","setFilteredWorkouts","selectedWorkout","setSelectedWorkout","filters","setFilters","duration","intensity","type","difficulty","loading","setLoading","recommendations","setRecommendations","useEffect","async","Promise","resolve","setTimeout","workoutLibrary","generateWorkoutLibrary","userRecommendations","TrainingSystem","success","error","console","loadWorkouts","filtered","filter","workout","intensityLevel","profile","getDefaultWorkouts","ftp","FTPService","level","allWorkouts","generateEnduranceWorkouts","generateThresholdWorkouts","generateVO2maxWorkouts","generateRecoveryWorkouts","generateStrengthWorkouts","preferred_terrain","cyclist_type","generateClimbingWorkouts","generateHIITWorkouts","defaultFtp","slice","baseIntensity","id","name","TRAINING_TYPES","ENDURANCE","description","targetPower","Math","round","terrain","intervals","power","TEMPO","levelParams","beginner","intervalDuration","sets","intermediate","advanced","elite","params","THRESHOLD","RECOVERY","handleFilterChange","key","value","prev","typeIcons","faBicycle","faChartLine","faHeartbeat","VO2MAX","faRunning","HIIT","STRENGTH","faDumbbell","CLIMBING","faMountain","_jsxs","className","children","_jsx","role","message","Alert","variant","Heading","focusAreas","length","map","area","idx","Badge","bg","Card","Header","FontAwesomeIcon","icon","faFilter","Body","Row","Col","md","Form","Group","Label","Control","min","max","onChange","e","parseInt","target","Button","onClick","Array","fill","join","Tabs","activeKey","onSelect","Tab","eventKey","title","_Fragment","xs","lg","handleSelectWorkout","Title","faClock","Text","Footer","size","handleSaveWorkout","date","Date","toISOString","userId","warning","faStar"],"sourceRoot":""}