{"version":3,"file":"static/js/725.892a9bb6.chunk.js","mappings":"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","sources":["components/animations/PageTransition.js","components/weather/WindVisualization.js","services/weather.service.js","components/weather/WeatherDashboard.js","components/widgets/WeatherWidget.js","components/animations/BikeAnimationCanvas.js","components/home/EventsCarousel.js","components/cols/MapComponent.js","components/maps/RegionMap.js","services/trainingService.js","components/animations/HeroParallax.js","components/animations/AnimatedStats.js","pages/Home.js"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Box } from '@mui/material';\n\nconst PageTransition = ({ children, transition = 'fade' }) => {\n  // Définition des différentes animations de transition\n  const transitions = {\n    fade: {\n      initial: { opacity: 0 },\n      animate: { opacity: 1 },\n      exit: { opacity: 0 },\n      transition: { duration: 0.4 }\n    },\n    slide: {\n      initial: { opacity: 0, x: 100 },\n      animate: { opacity: 1, x: 0 },\n      exit: { opacity: 0, x: -100 },\n      transition: { type: 'spring', stiffness: 300, damping: 30 }\n    },\n    scale: {\n      initial: { opacity: 0, scale: 0.9 },\n      animate: { opacity: 1, scale: 1 },\n      exit: { opacity: 0, scale: 0.95 },\n      transition: { duration: 0.5 }\n    },\n    slideUp: {\n      initial: { opacity: 0, y: 50 },\n      animate: { opacity: 1, y: 0 },\n      exit: { opacity: 0, y: -50 },\n      transition: { type: 'spring', stiffness: 500, damping: 30 }\n    }\n  };\n  \n  // Utiliser la transition demandée ou la transition par défaut\n  const currentTransition = transitions[transition] || transitions.fade;\n  \n  return (\n    <motion.div\n      initial={currentTransition.initial}\n      animate={currentTransition.animate}\n      exit={currentTransition.exit}\n      transition={currentTransition.transition}\n      style={{ width: '100%' }}\n    >\n      <Box sx={{ overflow: 'hidden' }}>\n        {children}\n      </Box>\n    </motion.div>\n  );\n};\n\nexport default PageTransition;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as THREE from 'three';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Text } from '@react-three/drei';\nimport { useTranslation } from 'react-i18next';\nimport { \n  Box, \n  Typography, \n  Grid, \n  Paper, \n  Card, \n  CardHeader, \n  CardContent, \n  ButtonGroup, \n  Button, \n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Chip\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport NorthIcon from '@mui/icons-material/North';\nimport SpeedIcon from '@mui/icons-material/Speed';\nimport AirIcon from '@mui/icons-material/Air';\nimport HeightIcon from '@mui/icons-material/Height';\nimport InfoIcon from '@mui/icons-material/Info';\n\n// Styles personnalisés pour les composants MUI\nconst ColorSquare = styled('span')(({ theme, color }) => ({\n  display: 'inline-block',\n  width: '16px',\n  height: '16px',\n  marginRight: theme.spacing(1),\n  backgroundColor: color,\n  borderRadius: '2px'\n}));\n\nconst ImpactChip = styled(Chip)(({ theme, severity }) => {\n  const colors = {\n    calm: theme.palette.success.light,\n    moderate: theme.palette.info.light,\n    strong: theme.palette.warning.light,\n    extreme: theme.palette.error.light\n  };\n  \n  return {\n    backgroundColor: colors[severity] || colors.moderate,\n    color: theme.palette.getContrastText(colors[severity] || colors.moderate),\n    fontWeight: 'bold',\n    margin: theme.spacing(1, 0),\n  };\n});\n\n// Wind arrow component for 3D visualization\nconst WindArrow = ({ position, direction, speed, color }) => {\n  const arrowRef = useRef();\n  \n  useEffect(() => {\n    if (arrowRef.current) {\n      // Set arrow direction\n      const radians = (direction * Math.PI) / 180;\n      arrowRef.current.rotation.y = radians;\n      \n      // Scale arrow based on wind speed\n      const baseScale = Math.min(0.5 + (speed / 20), 2.0);\n      arrowRef.current.scale.set(baseScale, baseScale, baseScale * 2); // Longer in z-direction\n    }\n  }, [direction, speed]);\n  \n  return (\n    <group ref={arrowRef} position={position}>\n      {/* Arrow body */}\n      <mesh>\n        <cylinderGeometry args={[0.1, 0.1, 1, 8]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      \n      {/* Arrow head */}\n      <mesh position={[0, 0, 0.6]}>\n        <coneGeometry args={[0.2, 0.4, 8]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n    </group>\n  );\n};\n\n// Wind visualization legend component\nconst WindLegend = ({ items }) => {\n  const { t } = useTranslation();\n  \n  return (\n    <Card variant=\"outlined\" sx={{ mt: 2 }}>\n      <CardHeader\n        sx={{ pb: 1 }}\n        title={\n          <Typography variant=\"h6\" component=\"h4\">\n            {t('windLegend')}\n          </Typography>\n        }\n      />\n      <CardContent sx={{ pt: 1 }}>\n        <List dense disablePadding>\n          {items.map((item, index) => (\n            <ListItem key={index} sx={{ py: 0.5 }}>\n              <ListItemIcon sx={{ minWidth: 36 }}>\n                <ColorSquare color={item.color} />\n              </ListItemIcon>\n              <ListItemText \n                primary={`${item.label}: ${item.range}`} \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Main 3D terrain component with wind visualization\nconst WindTerrain = ({ elevationData, windData }) => {\n  const meshRef = useRef();\n\n  useEffect(() => {\n    if (!elevationData || !meshRef.current) return;\n    \n    // Similar to ColVisualization3D, configure the terrain geometry\n    const geometry = meshRef.current.geometry;\n    const positionAttribute = geometry.getAttribute('position');\n    \n    // Apply elevation data to the geometry\n    for (let i = 0; i < positionAttribute.count; i++) {\n      const x = Math.floor(i % elevationData.width);\n      const z = Math.floor(i / elevationData.width);\n      \n      if (elevationData.heights[z] && elevationData.heights[z][x] !== undefined) {\n        positionAttribute.setY(i, elevationData.heights[z][x] * 0.1); // Scale for visualization\n      }\n    }\n    \n    positionAttribute.needsUpdate = true;\n    geometry.computeVertexNormals();\n  }, [elevationData]);\n  \n  return (\n    <>\n      {/* Terrain mesh */}\n      <mesh ref={meshRef} rotation={[-Math.PI / 2, 0, 0]} receiveShadow>\n        <planeGeometry args={[10, 10, 100, 100]} />\n        <meshStandardMaterial \n          color=\"#a0a0a0\"\n          wireframe={false}\n          roughness={0.8}\n          metalness={0.2}\n        />\n      </mesh>\n      \n      {/* Wind arrows */}\n      {windData && windData.map((wind, index) => {\n        // Get color based on wind speed\n        let color;\n        if (wind.speed < 10) color = '#3388ff'; // Light wind\n        else if (wind.speed < 20) color = '#ffaa00'; // Moderate wind\n        else if (wind.speed < 30) color = '#ff7700'; // Strong wind\n        else color = '#ff0000'; // Very strong wind\n        \n        return (\n          <WindArrow\n            key={index}\n            position={[wind.x, wind.elevation * 0.1 + 0.5, wind.z]}\n            direction={wind.direction}\n            speed={wind.speed}\n            color={color}\n          />\n        );\n      })}\n    </>\n  );\n};\n\n// Wind data display panel\nconst WindDataPanel = ({ windData, currentLocation }) => {\n  const { t } = useTranslation();\n  \n  if (!currentLocation || !windData) return null;\n  \n  const getCurrentWindData = () => {\n    // Find closest wind data point to current location\n    if (!windData.length) return null;\n    \n    // For now, use the first wind data point as a placeholder\n    // In a real app, we'd calculate the closest point to currentLocation\n    return windData[0];\n  };\n  \n  const currentWind = getCurrentWindData() || { speed: 0, direction: 0, gusts: 0 };\n  \n  // Get wind condition description\n  const getWindCondition = (speed) => {\n    if (speed < 5) return 'calm';\n    if (speed < 15) return 'moderate';\n    if (speed < 30) return 'strong';\n    return 'extreme';\n  };\n  \n  // Get directional description\n  const getWindDirectionDesc = (direction) => {\n    const directions = ['north', 'northeast', 'east', 'southeast', 'south', 'southwest', 'west', 'northwest', 'north'];\n    const index = Math.round(direction / 45) % 8;\n    return directions[index];\n  };\n  \n  const windCondition = getWindCondition(currentWind.speed);\n  \n  return (\n    <Card variant=\"outlined\" sx={{ height: '100%' }}>\n      <CardHeader\n        title={\n          <Typography variant=\"h6\" component=\"h3\">\n            {t('windConditions')}\n          </Typography>\n        }\n      />\n      <CardContent>\n        <List dense>\n          <ListItem>\n            <ListItemIcon>\n              <SpeedIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\">\n                  <strong>{t('speed')}:</strong> {currentWind.speed} km/h\n                  <Typography variant=\"body2\" component=\"span\" sx={{ ml: 1, color: 'text.secondary' }}>\n                    ({t(windCondition)})\n                  </Typography>\n                </Typography>\n              }\n            />\n          </ListItem>\n          \n          <ListItem>\n            <ListItemIcon>\n              <NorthIcon color=\"primary\" style={{ transform: `rotate(${currentWind.direction}deg)` }} />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\">\n                  <strong>{t('direction')}:</strong> {currentWind.direction}°\n                  <Typography variant=\"body2\" component=\"span\" sx={{ ml: 1, color: 'text.secondary' }}>\n                    ({t('from')} {t(getWindDirectionDesc(currentWind.direction))})\n                  </Typography>\n                </Typography>\n              }\n            />\n          </ListItem>\n          \n          <ListItem>\n            <ListItemIcon>\n              <AirIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\">\n                  <strong>{t('gusts')}:</strong> {currentWind.gusts || Math.round(currentWind.speed * 1.3)} km/h\n                </Typography>\n              }\n            />\n          </ListItem>\n        </List>\n        \n        <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n          <ImpactChip\n            severity={windCondition}\n            icon={<InfoIcon />}\n            label={`${t('cyclingImpact')}: ${t(`${windCondition}Impact`)}`}\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Main component for wind visualization\nconst WindVisualization = ({ passId, elevationData, windData, currentLocation }) => {\n  const { t } = useTranslation();\n  const [cameraPosition, setCameraPosition] = useState([0, 5, 10]);\n  \n  // Define legend items\n  const legendItems = [\n    { color: '#3388ff', label: t('lightWind'), range: '0-10 km/h' },\n    { color: '#ffaa00', label: t('moderateWind'), range: '10-20 km/h' },\n    { color: '#ff7700', label: t('strongWind'), range: '20-30 km/h' },\n    { color: '#ff0000', label: t('extremeWind'), range: '>30 km/h' }\n  ];\n  \n  // Handle view changes\n  const handleViewChange = (view) => {\n    switch(view) {\n      case 'top':\n        setCameraPosition([0, 10, 0]);\n        break;\n      case 'side':\n        setCameraPosition([10, 5, 0]);\n        break;\n      case 'front':\n        setCameraPosition([0, 5, 10]);\n        break;\n      default:\n        setCameraPosition([0, 5, 10]);\n    }\n  };\n  \n  return (\n    <Paper \n      elevation={2} \n      sx={{ p: 2, mb: 4 }}\n      component=\"section\"\n      aria-labelledby=\"wind-visualization-title\"\n    >\n      <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h5\" component=\"h2\" id=\"wind-visualization-title\">\n          {t('windVisualization')}\n        </Typography>\n        <ButtonGroup size=\"small\" aria-label={t('viewControls')}>\n          <Button \n            onClick={() => handleViewChange('top')}\n            aria-label={t('topView')}\n          >\n            {t('topView')}\n          </Button>\n          <Button \n            onClick={() => handleViewChange('side')}\n            aria-label={t('sideView')}\n          >\n            {t('sideView')}\n          </Button>\n          <Button \n            onClick={() => handleViewChange('front')}\n            aria-label={t('frontView')}\n          >\n            {t('frontView')}\n          </Button>\n        </ButtonGroup>\n      </Box>\n      \n      <Grid container spacing={3}>\n        <Grid item xs={12} md={8}>\n          <Paper \n            elevation={0} \n            variant=\"outlined\"\n            sx={{ height: 400, overflow: 'hidden' }}\n            aria-label={t('windVisualization3D')}\n          >\n            <Canvas camera={{ position: cameraPosition, fov: 45 }} shadows>\n              <ambientLight intensity={0.5} />\n              <directionalLight position={[10, 10, 5]} intensity={1} castShadow />\n              \n              <WindTerrain elevationData={elevationData} windData={windData} />\n              \n              <OrbitControls enableZoom={true} enablePan={true} enableRotate={true} />\n            </Canvas>\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <WindDataPanel windData={windData} currentLocation={currentLocation} />\n            <WindLegend items={legendItems} />\n          </Box>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nWindVisualization.propTypes = {\n  passId: PropTypes.string.isRequired,\n  elevationData: PropTypes.object.isRequired,\n  windData: PropTypes.array.isRequired,\n  currentLocation: PropTypes.object\n};\n\n// Default wind data for development\nWindVisualization.defaultProps = {\n  windData: [],\n  currentLocation: null\n};\n\nexport default WindVisualization;\n","// Weather Service\nimport axios from 'axios';\n\n// OpenWeatherMap API key\nconst WEATHER_API_KEY = process.env.REACT_APP_OPENWEATHER_API_KEY || 'your-api-key-placeholder';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\n/**\n * Weather Service to fetch and process weather data\n */\nclass WeatherService {\n  /**\n   * Fetches current weather for a specific location\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Object>} Weather data\n   */\n  async getCurrentWeather(lat, lng, lang = 'en') {\n    try {\n      const response = await axios.get(`${BASE_URL}/weather`, {\n        params: {\n          lat,\n          lon: lng,\n          appid: WEATHER_API_KEY,\n          units: 'metric',\n          lang\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching current weather:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches 5-day weather forecast for a specific location\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Object>} Forecast data\n   */\n  async getForecast(lat, lng, lang = 'en') {\n    try {\n      const response = await axios.get(`${BASE_URL}/forecast`, {\n        params: {\n          lat,\n          lon: lng,\n          appid: WEATHER_API_KEY,\n          units: 'metric',\n          lang\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching forecast:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets weather data for multiple points along a route\n   * @param {Array<{lat: number, lng: number}>} routePoints - Array of route coordinates\n   * @param {string} lang - Language code (en, fr, de, etc.)\n   * @returns {Promise<Array<Object>>} Array of weather data for each point\n   */\n  async getRouteWeather(routePoints, lang = 'en') {\n    try {\n      // Take a sample of points to avoid too many API calls\n      const sampleSize = Math.min(10, routePoints.length);\n      const step = Math.max(1, Math.floor(routePoints.length / sampleSize));\n      const sampledPoints = [];\n      \n      for (let i = 0; i < routePoints.length; i += step) {\n        sampledPoints.push(routePoints[i]);\n      }\n      \n      // Add the last point if it's not already included\n      if (routePoints.length > 0 && \n          sampledPoints[sampledPoints.length - 1] !== routePoints[routePoints.length - 1]) {\n        sampledPoints.push(routePoints[routePoints.length - 1]);\n      }\n      \n      // Get weather for each point\n      const weatherPromises = sampledPoints.map(point => \n        this.getCurrentWeather(point.lat, point.lng, lang)\n      );\n      \n      return await Promise.all(weatherPromises);\n    } catch (error) {\n      console.error('Error fetching route weather:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Determines the cycling condition severity based on weather data\n   * @param {Object} weatherData - Weather data for a specific location\n   * @returns {string} Severity level: 'good', 'moderate', 'difficult', or 'dangerous'\n   */\n  getCyclingConditionSeverity(weatherData) {\n    if (!weatherData) return 'moderate';\n    \n    const { weather, main, wind, rain, snow } = weatherData;\n    \n    // Check for dangerous conditions first\n    if (\n      (weather && weather.some(w => ['Thunderstorm', 'Hurricane', 'Tornado'].includes(w.main))) ||\n      (wind && wind.speed > 30) ||\n      (main && main.temp > 35) ||\n      (main && main.temp < -5) ||\n      (rain && rain['1h'] > 10) ||\n      (snow && snow['1h'] > 5)\n    ) {\n      return 'dangerous';\n    }\n    \n    // Check for difficult conditions\n    if (\n      (weather && weather.some(w => ['Rain', 'Snow', 'Fog'].includes(w.main))) ||\n      (wind && wind.speed > 20) ||\n      (main && (main.temp > 30 || main.temp < 0)) ||\n      (rain && rain['1h'] > 5) ||\n      (snow && snow['1h'] > 2)\n    ) {\n      return 'difficult';\n    }\n    \n    // Check for moderate conditions\n    if (\n      (weather && weather.some(w => ['Clouds', 'Drizzle', 'Mist'].includes(w.main))) ||\n      (wind && wind.speed > 10) ||\n      (main && (main.temp > 25 || main.temp < 5)) ||\n      (rain && rain['1h'] > 1) ||\n      (main && main.humidity > 80)\n    ) {\n      return 'moderate';\n    }\n    \n    // Default to good conditions\n    return 'good';\n  }\n  \n  /**\n   * Provides equipment recommendations based on weather conditions\n   * @param {Object} weatherData - Weather data for a specific location\n   * @returns {Object} Recommendations categorized by type\n   */\n  getEquipmentRecommendations(weatherData) {\n    if (!weatherData) return {\n      clothing: [],\n      accessories: [],\n      bike: [],\n      nutrition: [],\n      safety: []\n    };\n    \n    const { weather, main, wind, rain, snow } = weatherData;\n    const condition = weather?.[0]?.main || '';\n    const temp = main?.temp || 20;\n    const windSpeed = wind?.speed || 0;\n    const isRaining = rain && rain['1h'] > 0;\n    const isSnowing = snow && snow['1h'] > 0;\n    \n    const recommendations = {\n      clothing: [],\n      accessories: [],\n      bike: [],\n      nutrition: [],\n      safety: []\n    };\n    \n    // Clothing recommendations based on temperature\n    if (temp < 5) {\n      recommendations.clothing.push('winterJacket', 'thermalBase', 'winterGloves', 'thermalTights');\n      recommendations.accessories.push('winterCap', 'earWarmers', 'neckWarmer');\n    } else if (temp < 10) {\n      recommendations.clothing.push('longSleeveJersey', 'armWarmers', 'legWarmers', 'lightGloves');\n      recommendations.accessories.push('windproofCap');\n    } else if (temp < 15) {\n      recommendations.clothing.push('longSleeveJersey', 'armWarmers', 'kneeWarmers');\n    } else if (temp < 20) {\n      recommendations.clothing.push('shortSleeveJersey', 'lightArmWarmers');\n    } else if (temp < 25) {\n      recommendations.clothing.push('shortSleeveJersey', 'lightweightSocks');\n    } else if (temp < 30) {\n      recommendations.clothing.push('lightweightJersey', 'lightweightSocks');\n      recommendations.accessories.push('sunCap');\n    } else {\n      recommendations.clothing.push('lightweightJersey', 'lightweightSocks');\n      recommendations.accessories.push('sunCap');\n      recommendations.nutrition.push('extraHydration');\n    }\n    \n    // Recommendations based on wind conditions\n    if (windSpeed > 25) {\n      recommendations.clothing.push('windproofJacket');\n      recommendations.accessories.push('aeroHelmet');\n      recommendations.bike.push('lowProfile');\n    } else if (windSpeed > 15) {\n      recommendations.clothing.push('windbreaker');\n    }\n    \n    // Recommendations based on precipitation\n    if (isRaining) {\n      recommendations.clothing.push('waterproofJacket', 'waterproofGloves');\n      recommendations.accessories.push('capWithVisor');\n      recommendations.bike.push('fenders', 'wetTires');\n      recommendations.safety.push('extraLights');\n    }\n    \n    if (isSnowing) {\n      recommendations.clothing.push('waterproofJacket', 'waterproofGloves', 'waterproofShoes');\n      recommendations.bike.push('winterTires');\n      recommendations.safety.push('extraLights', 'highVisibilityVest');\n    }\n    \n    // Recommendations based on specific weather conditions\n    switch(condition) {\n      case 'Thunderstorm':\n        recommendations.safety.push('seekShelter', 'avoidOpenAreas', 'alternatePlan');\n        break;\n      case 'Fog':\n      case 'Mist':\n        recommendations.safety.push('extraLights', 'highVisibilityVest', 'slowSpeed');\n        break;\n      case 'Clear':\n        recommendations.accessories.push('sunglasses', 'sunscreen');\n        if (temp > 25) recommendations.nutrition.push('extraHydration', 'electrolyteSupplements');\n        break;\n      default:\n        break;\n    }\n    \n    // Always recommend these items\n    recommendations.safety.push('helmet', 'mobilePhone');\n    recommendations.bike.push('spareTube', 'tirePump');\n    recommendations.nutrition.push('water');\n    \n    return recommendations;\n  }\n}\n\nexport const weatherService = new WeatherService();\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport WindVisualization from './WindVisualization';\nimport { weatherService } from '../../services/weather.service';\nimport 'leaflet/dist/leaflet.css';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Paper,\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  ButtonGroup,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Alert,\n  Chip,\n  Stack\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport WbSunnyIcon from '@mui/icons-material/WbSunny';\nimport ThunderstormIcon from '@mui/icons-material/Thunderstorm';\nimport AcUnitIcon from '@mui/icons-material/AcUnit';\nimport WaterIcon from '@mui/icons-material/Water';\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport UmbrellaIcon from '@mui/icons-material/Umbrella';\nimport AirIcon from '@mui/icons-material/Air';\nimport WindPowerIcon from '@mui/icons-material/WindPower';\n\n// Component styling\nconst StyledPopup = styled(Popup)(({ theme, severity }) => {\n  const bgColors = {\n    good: theme.palette.success.light,\n    moderate: theme.palette.info.light,\n    warning: theme.palette.warning.light,\n    critical: theme.palette.error.light,\n  };\n  \n  return {\n    '& .leaflet-popup-content-wrapper': {\n      backgroundColor: bgColors[severity] || theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      boxShadow: theme.shadows[2],\n    },\n    '& .leaflet-popup-tip': {\n      backgroundColor: bgColors[severity] || theme.palette.background.paper,\n    }\n  };\n});\n\nconst EquipmentCategory = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n  height: '100%',\n}));\n\n// Helper component to set map view based on route\nconst MapViewSetter = ({ route }) => {\n  const map = useMap();\n  \n  useEffect(() => {\n    if (route?.coordinates?.length) {\n      const bounds = L.latLngBounds(\n        route.coordinates.map(coord => [coord[0], coord[1]])\n      );\n      map.fitBounds(bounds, { padding: [50, 50] });\n    }\n  }, [map, route]);\n  \n  return null;\n};\n\n// Component to display weather markers along a route\nconst WeatherMarkers = ({ weatherPoints }) => {\n  const { t } = useTranslation();\n  \n  if (!weatherPoints?.length) return null;\n  \n  // Custom weather icon based on condition\n  const getWeatherIcon = (condition) => {\n    // Define icon URLs for different conditions\n    const iconMap = {\n      'Clear': 'sun.png',\n      'Clouds': 'cloud.png',\n      'Rain': 'rain.png',\n      'Drizzle': 'drizzle.png',\n      'Thunderstorm': 'storm.png',\n      'Snow': 'snow.png',\n      'Mist': 'mist.png',\n      'Fog': 'fog.png'\n    };\n    \n    const iconUrl = `/images/icons/weather/${iconMap[condition] || 'default.png'}`;\n    \n    return L.icon({\n      iconUrl,\n      iconSize: [32, 32],\n      iconAnchor: [16, 16],\n      popupAnchor: [0, -16]\n    });\n  };\n  \n  return weatherPoints.map((point, index) => {\n    const condition = point.weather?.[0]?.main || 'Clouds';\n    const icon = getWeatherIcon(condition);\n    const severity = weatherService.getCyclingConditionSeverity(point);\n    const temperatureClass = \n      point.main.temp < 5 ? 'cold' :\n      point.main.temp > 28 ? 'hot' : 'neutral';\n    \n    return (\n      <Marker \n        key={`weather-${index}`}\n        position={[point.lat, point.lon]} \n        icon={icon}\n      >\n        <StyledPopup severity={severity}>\n          <Box sx={{ minWidth: 180 }}>\n            <Typography variant=\"h6\" gutterBottom>{condition}</Typography>\n            <Typography \n              variant=\"h5\" \n              sx={{ \n                fontWeight: 'bold',\n                color: temperatureClass === 'cold' ? 'info.main' : \n                       temperatureClass === 'hot' ? 'error.main' : 'text.primary',\n                mb: 1\n              }}\n            >\n              {Math.round(point.main.temp)}°C\n            </Typography>\n            \n            <List dense disablePadding>\n              <ListItem sx={{ p: 0 }}>\n                <ListItemIcon sx={{ minWidth: 30 }}>\n                  <AirIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText \n                  primary={`${t('wind')}: ${point.wind.speed} km/h`}\n                  primaryTypographyProps={{ variant: 'body2' }}\n                />\n              </ListItem>\n              \n              <ListItem sx={{ p: 0 }}>\n                <ListItemIcon sx={{ minWidth: 30 }}>\n                  <WaterIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText \n                  primary={`${t('humidity')}: ${point.main.humidity}%`}\n                  primaryTypographyProps={{ variant: 'body2' }}\n                />\n              </ListItem>\n              \n              {point.rain && (\n                <ListItem sx={{ p: 0 }}>\n                  <ListItemIcon sx={{ minWidth: 30 }}>\n                    <UmbrellaIcon fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText \n                    primary={`${t('rain')}: ${point.rain['1h']} mm`}\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n              )}\n            </List>\n            \n            <Chip \n              label={`${t('cyclingCondition')}: ${t(severity)}`}\n              size=\"small\"\n              sx={{ \n                mt: 1, \n                fontWeight: 'bold',\n                bgcolor: severity === 'good' ? 'success.light' :\n                         severity === 'moderate' ? 'info.light' :\n                         severity === 'warning' ? 'warning.light' : 'error.light',\n              }}\n            />\n          </Box>\n        </StyledPopup>\n      </Marker>\n    );\n  });\n};\n\n// Component to show equipment recommendations\nconst EquipmentRecommendations = ({ weatherData }) => {\n  const { t } = useTranslation();\n  \n  if (!weatherData) return null;\n  \n  const recommendations = weatherService.getEquipmentRecommendations(weatherData);\n  \n  const categoryIcons = {\n    clothing: <ThermostatIcon />,\n    accessories: <WbSunnyIcon />,\n    bike: <WindPowerIcon />,\n    nutrition: <WaterIcon />,\n    safety: <WarningIcon />\n  };\n  \n  return (\n    <Card>\n      <CardHeader \n        title={<Typography variant=\"h6\">{t('recommendedEquipment')}</Typography>}\n      />\n      <CardContent>\n        <Grid container spacing={2}>\n          {Object.entries(recommendations).map(([category, items]) => {\n            if (!items.length) return null;\n            \n            return (\n              <Grid item xs={12} md={6} key={category}>\n                <EquipmentCategory variant=\"outlined\">\n                  <CardHeader\n                    avatar={categoryIcons[category]}\n                    title={t(category)}\n                    titleTypographyProps={{ variant: 'subtitle1' }}\n                    sx={{ pb: 0 }}\n                  />\n                  <CardContent sx={{ pt: 1 }}>\n                    <List dense>\n                      {items.map((item, index) => (\n                        <ListItem key={index} sx={{ py: 0 }}>\n                          <ListItemText primary={t(item)} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </CardContent>\n                </EquipmentCategory>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Component to show weather alerts\nconst WeatherAlerts = ({ alerts, severity }) => {\n  const { t } = useTranslation();\n  \n  if (!alerts?.length) return null;\n  \n  return (\n    <Box sx={{ mb: 2 }}>\n      {alerts.map((alert, index) => (\n        <Alert\n          key={index}\n          severity={alert.severity === 'critical' ? 'error' : 'warning'}\n          variant=\"filled\"\n          sx={{ mb: 1 }}\n          action={\n            <Button color=\"inherit\" size=\"small\">\n              {t('details')}\n            </Button>\n          }\n        >\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n            {alert.title}\n          </Typography>\n          <Typography variant=\"body2\">\n            {alert.description}\n          </Typography>\n        </Alert>\n      ))}\n    </Box>\n  );\n};\n\n// Main Weather Dashboard component\nconst WeatherDashboard = ({ routeId, routeData }) => {\n  const { t, i18n } = useTranslation();\n  const [weatherData, setWeatherData] = useState(null);\n  const [weatherPoints, setWeatherPoints] = useState([]);\n  const [windData, setWindData] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('current');\n  \n  // Convert route coordinates to format needed for weather service\n  const prepareRoutePoints = (route) => {\n    if (!route?.coordinates?.length) return [];\n    \n    // Take points at regular intervals to get weather data\n    const points = [];\n    const step = Math.max(1, Math.floor(route.coordinates.length / 5)); // 5 points max\n    \n    for (let i = 0; i < route.coordinates.length; i += step) {\n      if (points.length < 5) { // Limit to 5 points to avoid API overuse\n        points.push({ lat: route.coordinates[i][0], lon: route.coordinates[i][1] });\n      }\n    }\n    \n    return points;\n  };\n  \n  // Process weather data into wind visualization data\n  const processWindData = (weatherPoints, elevationData) => {\n    if (!weatherPoints?.length || !elevationData) return [];\n    \n    const windData = [];\n    const width = elevationData.width || 10;\n    const maxDistance = width;\n    \n    // For each weather point, create wind data\n    for (let i = 0; i < weatherPoints.length; i++) {\n      const point = weatherPoints[i];\n      if (!point.wind) continue;\n      \n      // Position on the 3D grid (simplified for example)\n      const x = (i % 3) * (maxDistance / 3) - maxDistance / 2;\n      const z = Math.floor(i / 3) * (maxDistance / 3) - maxDistance / 2;\n      \n      // Find elevation at this point\n      let elevation = 0;\n      if (elevationData.heights && elevationData.heights[0]) {\n        // Just get a random elevation from the data for demonstration\n        const randomIndex = Math.floor(Math.random() * elevationData.heights.length);\n        if (elevationData.heights[randomIndex].length > 0) {\n          elevation = elevationData.heights[randomIndex][0] || 0;\n        }\n      }\n      \n      windData.push({\n        x,\n        z,\n        elevation,\n        speed: point.wind.speed,\n        direction: point.wind.deg || 0,\n        gusts: point.wind.gust || point.wind.speed * 1.3\n      });\n    }\n    \n    return windData;\n  };\n  \n  // Generate alerts based on weather conditions\n  const generateWeatherAlerts = (weatherPoints) => {\n    if (!weatherPoints?.length) return [];\n    \n    const alerts = [];\n    \n    // Check for extreme temperatures\n    const temps = weatherPoints.map(p => p.main.temp);\n    const maxTemp = Math.max(...temps);\n    const minTemp = Math.min(...temps);\n    \n    // Cold alert\n    if (minTemp < 3) {\n      alerts.push({\n        severity: minTemp < 0 ? 'critical' : 'warning',\n        title: t('coldTemperatureAlert'),\n        description: t('coldTemperatureDescription', { temperature: Math.round(minTemp) }),\n        type: 'temperature'\n      });\n    }\n    \n    // Heat alert\n    if (maxTemp > 30) {\n      alerts.push({\n        severity: maxTemp > 35 ? 'critical' : 'warning',\n        title: t('heatAlert'),\n        description: t('heatAlertDescription', { temperature: Math.round(maxTemp) }),\n        type: 'temperature'\n      });\n    }\n    \n    // Check for precipitation\n    const hasHeavyRain = weatherPoints.some(point => \n      point.rain && point.rain['1h'] && point.rain['1h'] > 5);\n    \n    if (hasHeavyRain) {\n      alerts.push({\n        severity: 'warning',\n        title: t('heavyRainAlert'),\n        description: t('heavyRainDescription'),\n        type: 'precipitation'\n      });\n    }\n    \n    // Check for strong winds\n    const hasStrongWind = weatherPoints.some(point => \n      point.wind && point.wind.speed > 30);\n    \n    if (hasStrongWind) {\n      alerts.push({\n        severity: 'critical',\n        title: t('strongWindAlert'),\n        description: t('strongWindDescription'),\n        type: 'wind'\n      });\n    }\n    \n    // Check for thunderstorms\n    const hasThunderstorm = weatherPoints.some(point => \n      point.weather && point.weather.some(w => w.main === 'Thunderstorm'));\n    \n    if (hasThunderstorm) {\n      alerts.push({\n        severity: 'critical',\n        title: t('thunderstormAlert'),\n        description: t('thunderstormDescription'),\n        type: 'storm'\n      });\n    }\n    \n    // Determine if a combination of factors creates a hazardous condition\n    const hasModeratePrecipitation = weatherPoints.some(point => \n      point.rain && point.rain['1h'] && point.rain['1h'] > 2);\n    \n    const hasModerateWind = weatherPoints.some(point => \n      point.wind && point.wind.speed > 20);\n    \n    if (hasModeratePrecipitation && hasModerateWind) {\n      alerts.push({\n        severity: 'warning',\n        title: t('hazardousConditionsAlert'),\n        description: t('hazardousConditionsDescription'),\n        type: 'combined'\n      });\n    }\n    \n    return alerts;\n  };\n  \n  useEffect(() => {\n    setLoading(true);\n    \n    // Fetch weather data for the route\n    const fetchWeatherForRoute = async () => {\n      try {\n        if (!routeData?.mainRoute?.coordinates) {\n          setLoading(false);\n          return;\n        }\n        \n        // Prepare points along the route\n        const routePoints = prepareRoutePoints(routeData.mainRoute);\n        \n        if (!routePoints.length) {\n          setLoading(false);\n          return;\n        }\n        \n        // Current location (first point of the route)\n        setCurrentLocation(routePoints[0]);\n        \n        // Fetch weather data for each point\n        const weatherResponses = await Promise.all(\n          routePoints.map(point => \n            weatherService.getCurrentWeather(point.lat, point.lon)\n          )\n        );\n        \n        // Combine weather data with coordinates\n        const weatherWithCoords = weatherResponses.map((weather, index) => ({\n          ...weather,\n          lat: routePoints[index].lat,\n          lon: routePoints[index].lon\n        }));\n        \n        // Store main weather data (first point or average)\n        setWeatherData(weatherWithCoords[0]);\n        setWeatherPoints(weatherWithCoords);\n        \n        // Generate wind data for visualization\n        const windData = processWindData(\n          weatherWithCoords,\n          routeData.elevationData\n        );\n        setWindData(windData);\n        \n        // Generate alerts\n        const weatherAlerts = generateWeatherAlerts(weatherWithCoords);\n        setAlerts(weatherAlerts);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchWeatherForRoute();\n  }, [routeData, i18n.language]);\n  \n  // Get route color based on surface type\n  const getRouteColor = (surfaceType) => {\n    switch(surfaceType) {\n      case 'asphalt': return '#3388ff';\n      case 'gravel': return '#ff7800';\n      case 'dirt': return '#6B4226';\n      default: return '#3388ff';\n    }\n  };\n  \n  // Loading state\n  if (loading) {\n    return (\n      <Box \n        sx={{ \n          display: 'flex', \n          justifyContent: 'center', \n          alignItems: 'center', \n          height: 200,\n          width: '100%'\n        }}\n      >\n        <CircularProgress size={40} />\n        <Typography variant=\"h6\" sx={{ ml: 2 }}>\n          {t('loadingWeatherData')}\n        </Typography>\n      </Box>\n    );\n  }\n  \n  // Error state - no route data\n  if (!routeData) {\n    return (\n      <Alert severity=\"error\" sx={{ my: 2 }}>\n        <Typography variant=\"subtitle1\">\n          {t('noRouteDataAvailable')}\n        </Typography>\n      </Alert>\n    );\n  }\n  \n  const getWeatherIcon = (condition) => {\n    switch(condition) {\n      case 'Clear': return <WbSunnyIcon fontSize=\"large\" />;\n      case 'Clouds': return <CloudIcon fontSize=\"large\" />;\n      case 'Rain': case 'Drizzle': return <WaterIcon fontSize=\"large\" />;\n      case 'Thunderstorm': return <ThunderstormIcon fontSize=\"large\" />;\n      case 'Snow': return <AcUnitIcon fontSize=\"large\" />;\n      default: return <CloudIcon fontSize=\"large\" />;\n    }\n  };\n  \n  return (\n    <Paper \n      elevation={2} \n      sx={{ p: 3, mb: 4 }}\n      component=\"section\"\n      aria-labelledby=\"weather-dashboard-title\"\n    >\n      <Box \n        sx={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center',\n          flexWrap: 'wrap',\n          mb: 2\n        }}\n      >\n        <Typography variant=\"h5\" component=\"h2\" id=\"weather-dashboard-title\">\n          {t('weatherDashboard')}: {routeData.name}\n        </Typography>\n        \n        <ButtonGroup variant=\"outlined\" size=\"small\" aria-label={t('timeframeSelector')}>\n          <Button \n            onClick={() => setSelectedTimeframe('current')}\n            variant={selectedTimeframe === 'current' ? 'contained' : 'outlined'}\n            aria-pressed={selectedTimeframe === 'current'}\n          >\n            {t('currentConditions')}\n          </Button>\n          <Button\n            onClick={() => setSelectedTimeframe('forecast')}\n            variant={selectedTimeframe === 'forecast' ? 'contained' : 'outlined'}\n            aria-pressed={selectedTimeframe === 'forecast'}\n          >\n            {t('forecast24h')}\n          </Button>\n          <Button\n            onClick={() => setSelectedTimeframe('week')}\n            variant={selectedTimeframe === 'week' ? 'contained' : 'outlined'}\n            aria-pressed={selectedTimeframe === 'week'}\n          >\n            {t('weekForecast')}\n          </Button>\n        </ButtonGroup>\n      </Box>\n      \n      <WeatherAlerts alerts={alerts} />\n      \n      <Grid container spacing={3}>\n        <Grid item xs={12} md={8}>\n          <Paper \n            elevation={0} \n            variant=\"outlined\" \n            sx={{ height: 400, overflow: 'hidden' }}\n            aria-label={t('weatherMap')}\n          >\n            <MapContainer \n              style={{ height: '100%', width: '100%' }}\n              center={[48.8566, 2.3522]}\n              zoom={10}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              \n              {/* Main route polyline */}\n              <Polyline \n                positions={routeData.mainRoute.coordinates}\n                pathOptions={{ \n                  color: getRouteColor(routeData.mainRoute.surfaceType),\n                  weight: 5\n                }}\n              />\n              \n              {/* Weather markers */}\n              <WeatherMarkers weatherPoints={weatherPoints} />\n              \n              {/* Center map on route */}\n              <MapViewSetter route={routeData.mainRoute} />\n            </MapContainer>\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <EquipmentRecommendations weatherData={weatherData} />\n        </Grid>\n      </Grid>\n      \n      <Box sx={{ mt: 4 }}>\n        <WindVisualization \n          passId={routeId}\n          elevationData={routeData.elevationData}\n          windData={windData}\n          currentLocation={currentLocation}\n        />\n      </Box>\n      \n      {/*\n        Note: Forecast views (24h, week) would be implemented here\n        but are conditionally shown based on selectedTimeframe\n      */}\n      \n    </Paper>\n  );\n};\n\nWeatherDashboard.propTypes = {\n  routeId: PropTypes.string.isRequired,\n  routeData: PropTypes.object\n};\n\nexport default WeatherDashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WeatherDashboard from '../weather/WeatherDashboard';\n\n/**\n * Widget adaptateur pour la fonctionnalité météo\n * Redirige vers les composants météo existants pour maintenir la compatibilité\n */\nconst WeatherWidget = ({ data }) => {\n  return <WeatherDashboard weatherData={data} />;\n};\n\nWeatherWidget.propTypes = {\n  data: PropTypes.object\n};\n\nexport default WeatherWidget;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Composant d'animation de vélo utilisant Canvas\n * Affiche une animation de vélo stylisée pour les transitions et les écrans de chargement\n */\nconst BikeAnimationCanvas = ({ width = 300, height = 200, color = '#1976d2', speed = 1 }) => {\n  const canvasRef = useRef(null);\n  let animationFrameId;\n\n  // Fonction pour dessiner un vélo stylisé\n  const drawBike = (ctx, x, y, frameCount) => {\n    const wheelRadius = 30;\n    const frameSize = 40;\n    \n    // Calculer la rotation des roues basée sur le frameCount\n    const wheelRotation = (frameCount * speed) % (Math.PI * 2);\n    \n    // Sauvegarder le contexte\n    ctx.save();\n    ctx.translate(x, y);\n    \n    // Dessiner les roues\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 3;\n    \n    // Roue arrière\n    ctx.save();\n    ctx.translate(-frameSize, 0);\n    ctx.beginPath();\n    ctx.arc(0, 0, wheelRadius, 0, Math.PI * 2);\n    ctx.stroke();\n    \n    // Rayons de la roue arrière\n    for (let i = 0; i < 8; i++) {\n      const angle = (i / 8) * Math.PI * 2 + wheelRotation;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(\n        Math.cos(angle) * wheelRadius,\n        Math.sin(angle) * wheelRadius\n      );\n      ctx.stroke();\n    }\n    ctx.restore();\n    \n    // Roue avant\n    ctx.save();\n    ctx.translate(frameSize, 0);\n    ctx.beginPath();\n    ctx.arc(0, 0, wheelRadius, 0, Math.PI * 2);\n    ctx.stroke();\n    \n    // Rayons de la roue avant\n    for (let i = 0; i < 8; i++) {\n      const angle = (i / 8) * Math.PI * 2 + wheelRotation;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(\n        Math.cos(angle) * wheelRadius,\n        Math.sin(angle) * wheelRadius\n      );\n      ctx.stroke();\n    }\n    ctx.restore();\n    \n    // Cadre du vélo\n    ctx.beginPath();\n    ctx.moveTo(-frameSize, 0); // Centre de la roue arrière\n    ctx.lineTo(-frameSize/2, -frameSize/1.5); // Haut du cadre\n    ctx.lineTo(frameSize/2, -frameSize/2); // Jonction du cadre\n    ctx.lineTo(frameSize, 0); // Centre de la roue avant\n    ctx.moveTo(-frameSize/2, -frameSize/1.5); // Haut du cadre\n    ctx.lineTo(0, 0); // Pédalier\n    ctx.moveTo(-frameSize/2, -frameSize/1.5); // Haut du cadre\n    ctx.lineTo(0, -frameSize); // Guidon\n    ctx.lineTo(frameSize/2, -frameSize/1.2); // Guidon avant\n    ctx.stroke();\n    \n    // Pédalier animé\n    const pedalRadius = 15;\n    ctx.beginPath();\n    ctx.arc(0, 0, 5, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Pédales\n    const pedalAngle = wheelRotation;\n    \n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(\n      Math.cos(pedalAngle) * pedalRadius,\n      Math.sin(pedalAngle) * pedalRadius\n    );\n    ctx.moveTo(0, 0);\n    ctx.lineTo(\n      Math.cos(pedalAngle + Math.PI) * pedalRadius,\n      Math.sin(pedalAngle + Math.PI) * pedalRadius\n    );\n    ctx.stroke();\n    \n    // Pédales aux extrémités\n    ctx.beginPath();\n    ctx.arc(\n      Math.cos(pedalAngle) * pedalRadius,\n      Math.sin(pedalAngle) * pedalRadius,\n      3, 0, Math.PI * 2\n    );\n    ctx.arc(\n      Math.cos(pedalAngle + Math.PI) * pedalRadius,\n      Math.sin(pedalAngle + Math.PI) * pedalRadius,\n      3, 0, Math.PI * 2\n    );\n    ctx.fill();\n    \n    // Restaurer le contexte\n    ctx.restore();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let bikeX = -50;\n    \n    // Animation loop\n    const render = () => {\n      frameCount++;\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Calculer la position du vélo (mouvement cyclique)\n      bikeX = (bikeX + speed) % (canvas.width + 100);\n      if (bikeX < -50) bikeX = canvas.width + 50;\n      \n      // Dessiner le vélo\n      drawBike(context, bikeX, canvas.height / 2, frameCount);\n      \n      // Continuer l'animation\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    \n    render();\n    \n    // Nettoyage lors du démontage du composant\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [color, speed]);\n\n  return (\n    <canvas \n      ref={canvasRef} \n      width={width} \n      height={height}\n      style={{ \n        display: 'block', \n        margin: '0 auto',\n        maxWidth: '100%'\n      }}\n    />\n  );\n};\n\nBikeAnimationCanvas.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  color: PropTypes.string,\n  speed: PropTypes.number\n};\n\nexport default BikeAnimationCanvas;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Typography, Button, Card, CardContent, CardMedia, CardActionArea, Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'react-i18next';\nimport { formatDistanceToNow } from 'date-fns';\nimport { fr, enUS, de, it } from 'date-fns/locale';\n\n/**\n * Composant de carrousel d'événements pour la page d'accueil\n * Affiche les événements cyclistes à venir avec une interface interactive\n */\nconst EventsCarousel = ({ limit = 4 }) => {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0);\n  const theme = useTheme();\n  const { t, i18n } = useTranslation();\n\n  // Configuration des locales pour date-fns\n  const locales = {\n    fr: fr,\n    en: enUS,\n    de: de,\n    it: it,\n    es: enUS // Fallback à l'anglais si l'espagnol n'est pas disponible\n  };\n\n  // Obtenir la locale actuelle\n  const currentLocale = locales[i18n.language] || locales.fr;\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      try {\n        // En production, nous utiliserions l'API réelle\n        // const response = await fetch('/.netlify/functions/events-upcoming');\n        // const data = await response.json();\n        \n        // Pour le moment, utilisons des événements simulés\n        const mockEvents = [\n          {\n            id: '1',\n            title: 'Tour des Alpes 2025',\n            description: 'Une semaine de cyclisme dans les Alpes françaises et italiennes',\n            date: new Date(2025, 5, 15), // 15 juin 2025\n            location: 'Alpes',\n            imageUrl: '/images/events/alps-tour.jpg',\n            registrationUrl: '/events/alps-tour-2025'\n          },\n          {\n            id: '2',\n            title: 'Challenge Pyrénées',\n            description: 'Conquérir les cols mythiques des Pyrénées en 3 jours',\n            date: new Date(2025, 6, 10), // 10 juillet 2025\n            location: 'Pyrénées',\n            imageUrl: '/images/events/pyrenees-challenge.jpg',\n            registrationUrl: '/events/pyrenees-challenge-2025'\n          },\n          {\n            id: '3',\n            title: 'Journée Vosges Cyclisme',\n            description: 'Une journée dédiée à l\\'exploration des Vosges à vélo',\n            date: new Date(2025, 7, 5), // 5 août 2025\n            location: 'Vosges',\n            imageUrl: '/images/events/vosges-day.jpg',\n            registrationUrl: '/events/vosges-cycling-day-2025'\n          },\n          {\n            id: '4',\n            title: 'Grand Défi Alpes Suisses',\n            description: 'Les plus beaux cols des Alpes suisses en un week-end',\n            date: new Date(2025, 8, 20), // 20 septembre 2025\n            location: 'Alpes Suisses',\n            imageUrl: '/images/events/swiss-alps-challenge.jpg',\n            registrationUrl: '/events/swiss-alps-grand-challenge-2025'\n          },\n          {\n            id: '5',\n            title: 'Randonnée des 7 Majeurs',\n            description: 'Une randonnée épique passant par les 7 cols majeurs d\\'Europe',\n            date: new Date(2025, 9, 10), // 10 octobre 2025\n            location: 'Europe',\n            imageUrl: '/images/events/seven-majors-ride.jpg',\n            registrationUrl: '/events/seven-majors-ride-2025'\n          },\n          {\n            id: '6',\n            title: 'Workshop Nutrition Cycliste',\n            description: 'Atelier pratique sur la nutrition adaptée aux cyclistes de montagne',\n            date: new Date(2025, 4, 25), // 25 mai 2025\n            location: 'Paris',\n            imageUrl: '/images/events/nutrition-workshop.jpg',\n            registrationUrl: '/events/cyclist-nutrition-workshop-2025'\n          }\n        ];\n        \n        setEvents(mockEvents);\n        setLoading(false);\n      } catch (err) {\n        console.error('Erreur lors du chargement des événements:', err);\n        setError(t('common.error'));\n        setLoading(false);\n      }\n    };\n\n    fetchEvents();\n  }, [t]);\n\n  // Calculer le nombre total de pages\n  const totalPages = Math.ceil(events.length / limit);\n\n  // Obtenir les événements pour la page actuelle\n  const currentEvents = events.slice(currentPage * limit, (currentPage + 1) * limit);\n\n  // Navigation dans le carrousel\n  const nextPage = () => {\n    setCurrentPage((prev) => (prev + 1) % totalPages);\n  };\n\n  const prevPage = () => {\n    setCurrentPage((prev) => (prev === 0 ? totalPages - 1 : prev - 1));\n  };\n\n  // Formater la date de l'événement\n  const formatEventDate = (date) => {\n    return formatDistanceToNow(date, { \n      addSuffix: true,\n      locale: currentLocale\n    });\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ textAlign: 'center', p: 3 }}>\n        <Typography>{t('common.loading')}</Typography>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ textAlign: 'center', p: 3 }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h5\" component=\"h2\" sx={{ fontWeight: 'bold' }}>\n          {t('home.upcomingEvents')}\n        </Typography>\n        <Box>\n          <Button onClick={prevPage} disabled={totalPages <= 1}>\n            &lt;\n          </Button>\n          <Button onClick={nextPage} disabled={totalPages <= 1}>\n            &gt;\n          </Button>\n        </Box>\n      </Box>\n\n      <Grid container spacing={3}>\n        {currentEvents.map((event) => (\n          <Grid item xs={12} sm={6} md={3} key={event.id}>\n            <Card \n              sx={{ \n                height: '100%', \n                display: 'flex', \n                flexDirection: 'column',\n                transition: 'transform 0.3s, box-shadow 0.3s',\n                '&:hover': {\n                  transform: 'translateY(-5px)',\n                  boxShadow: theme.shadows[10]\n                }\n              }}\n            >\n              <CardActionArea \n                component=\"a\" \n                href={event.registrationUrl}\n                sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}\n              >\n                <CardMedia\n                  component=\"img\"\n                  height=\"140\"\n                  image={event.imageUrl}\n                  alt={event.title}\n                  onError={(e) => {\n                    e.target.src = '/images/placeholder.svg';\n                  }}\n                />\n                <CardContent sx={{ flex: 1 }}>\n                  <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\n                    {event.title}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    {formatEventDate(event.date)}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    {event.location}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.primary\" sx={{ \n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    display: '-webkit-box',\n                    WebkitLineClamp: 3,\n                    WebkitBoxOrient: 'vertical',\n                  }}>\n                    {event.description}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nEventsCarousel.propTypes = {\n  limit: PropTypes.number\n};\n\nexport default EventsCarousel;\n","import React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport { FaMountain } from 'react-icons/fa';\nimport { createIcon } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n/**\n * Composant de carte optimisé pour le chargement paresseux\n * Extrait de EnhancedColDetail pour améliorer les performances\n */\nconst MapComponent = ({ center, zoom, colData, selectedSide, elevationProfile }) => {\n  // Correction pour l'icône Leaflet\n  const MountainIcon = createIcon({\n    iconUrl: '/images/summits/mountain-marker.svg',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    // Gestion des erreurs pour l'icône\n    iconRetinaUrl: '/images/summits/mountain-marker.svg',\n    className: 'leaflet-mountain-icon',\n  });\n\n  // Fallback si l'icône personnalisée échoue\n  const handleIconError = () => {\n    console.warn('Icône de montagne non chargée, utilisation de l\\'icône par défaut');\n    return null; // Leaflet utilisera l'icône par défaut\n  };\n\n  return (\n    <div className=\"map-wrapper\">\n      <MapContainer \n        center={center} \n        zoom={zoom} \n        style={{ height: '400px', width: '100%' }}\n        whenCreated={(map) => {\n          // Amélioration de performance : désactiver le zoom lors du scroll\n          map.scrollWheelZoom.disable();\n          // Ajouter un bouton pour activer/désactiver le zoom au scroll\n          const zoomControl = L.control({ position: 'topright' });\n          zoomControl.onAdd = () => {\n            const div = L.DomUtil.create('div', 'leaflet-control-zoom-toggle');\n            div.innerHTML = '<button class=\"btn btn-sm btn-primary\">Activer le zoom</button>';\n            div.onclick = () => {\n              if (map.scrollWheelZoom.enabled()) {\n                map.scrollWheelZoom.disable();\n                div.innerHTML = '<button class=\"btn btn-sm btn-primary\">Activer le zoom</button>';\n              } else {\n                map.scrollWheelZoom.enable();\n                div.innerHTML = '<button class=\"btn btn-sm btn-secondary\">Désactiver le zoom</button>';\n              }\n            };\n            return div;\n          };\n          zoomControl.addTo(map);\n        }}\n      >\n        <TileLayer \n          attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n          // Optimisation des performances\n          updateWhenIdle={true}\n          updateWhenZooming={false}\n          maxZoom={18}\n        />\n        \n        <Marker \n          position={center} \n          icon={MountainIcon}\n          eventHandlers={{\n            error: handleIconError\n          }}\n        >\n          <Popup>\n            <div className=\"col-popup\">\n              <h5>{colData.name}</h5>\n              <p>{colData.altitude}m - {colData.difficulty}/5</p>\n              {selectedSide && (\n                <p>{colData.climbData[selectedSide].length}km, {colData.climbData[selectedSide].gradientAvg}%</p>\n              )}\n            </div>\n          </Popup>\n        </Marker>\n        \n        {/* Afficher le tracé du col si disponible */}\n        {elevationProfile && elevationProfile.path && (\n          <Polyline \n            positions={elevationProfile.path.map(point => [point.lat, point.lng])}\n            color=\"#007bff\"\n            weight={5}\n            opacity={0.7}\n          />\n        )}\n      </MapContainer>\n      \n      <div className=\"map-attribution mt-2\">\n        <small>Données cartographiques : OpenStreetMap | Tracés : Grand Est Cyclisme</small>\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapComponent from '../cols/MapComponent';\n\n/**\n * Adaptateur pour le composant RegionMap\n * Redirige vers le composant MapComponent existant pour maintenir la compatibilité\n * des importations dans la page d'accueil\n */\nconst RegionMap = (props) => {\n  // Définir les coordonnées par défaut pour la région Grand Est si non spécifiées\n  const defaultProps = {\n    center: [48.7, 6.2], // Coordonnées approximatives de Nancy (centre du Grand Est)\n    zoom: 7,\n    ...props\n  };\n  \n  return <MapComponent {...defaultProps} isRegionMap={true} />;\n};\n\nRegionMap.propTypes = {\n  center: PropTypes.array,\n  zoom: PropTypes.number,\n  markers: PropTypes.array,\n  routes: PropTypes.array\n};\n\nexport default RegionMap;\n","import axios from 'axios';\nimport { formatDate } from '../utils/formatters';\n\n// URL de base pour les requêtes API liées à l'entraînement\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n/**\n * Service de gestion des données d'entraînement\n */\nclass TrainingService {\n  /**\n   * Récupère les activités d'un utilisateur pour une période donnée\n   * @param {string} userId - Identifiant de l'utilisateur\n   * @param {string} timeframe - Période (week, month, year, all)\n   * @returns {Promise<Object>} - Données des activités et résumé\n   */\n  async getActivities(userId, timeframe = 'month') {\n    try {\n      const response = await axios.get(`${API_URL}/training/activities`, {\n        params: { userId, timeframe },\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des activités:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Récupère une activité spécifique\n   * @param {string} activityId - Identifiant de l'activité\n   * @returns {Promise<Object>} - Données détaillées de l'activité\n   */\n  async getActivityById(activityId) {\n    try {\n      const response = await axios.get(`${API_URL}/training/activities/${activityId}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération de l'activité ${activityId}:`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Crée une nouvelle activité\n   * @param {Object} activityData - Données de l'activité\n   * @returns {Promise<Object>} - Activité créée\n   */\n  async createActivity(activityData) {\n    try {\n      const response = await axios.post(`${API_URL}/training/activities`, activityData, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la création de l\\'activité:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Met à jour une activité existante\n   * @param {string} activityId - Identifiant de l'activité\n   * @param {Object} activityData - Nouvelles données\n   * @returns {Promise<Object>} - Activité mise à jour\n   */\n  async updateActivity(activityId, activityData) {\n    try {\n      const response = await axios.put(`${API_URL}/training/activities/${activityId}`, activityData, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la mise à jour de l'activité ${activityId}:`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Supprime une activité\n   * @param {string} activityId - Identifiant de l'activité à supprimer\n   * @returns {Promise<Object>} - Confirmation de suppression\n   */\n  async deleteActivity(activityId) {\n    try {\n      const response = await axios.delete(`${API_URL}/training/activities/${activityId}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la suppression de l'activité ${activityId}:`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Importe une activité depuis un fichier GPX\n   * @param {File} file - Fichier GPX\n   * @param {Object} metadata - Métadonnées de l'activité\n   * @returns {Promise<Object>} - Activité importée\n   */\n  async importFromGpx(file, metadata = {}) {\n    try {\n      const formData = new FormData();\n      formData.append('gpxFile', file);\n      \n      // Ajouter les métadonnées au formulaire\n      Object.keys(metadata).forEach(key => {\n        formData.append(key, metadata[key]);\n      });\n      \n      const response = await axios.post(`${API_URL}/training/import-gpx`, formData, {\n        headers: { \n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de l\\'importation du fichier GPX:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Récupère les statistiques d'entraînement\n   * @param {string} userId - Identifiant de l'utilisateur\n   * @param {string} timeframe - Période (week, month, year, all)\n   * @returns {Promise<Object>} - Statistiques d'entraînement\n   */\n  async getTrainingStats(userId, timeframe = 'month') {\n    try {\n      const response = await axios.get(`${API_URL}/training/stats`, {\n        params: { userId, timeframe },\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des statistiques:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Récupère les objectifs d'entraînement\n   * @param {string} userId - Identifiant de l'utilisateur\n   * @returns {Promise<Array>} - Liste des objectifs\n   */\n  async getTrainingGoals(userId) {\n    try {\n      const response = await axios.get(`${API_URL}/training/goals`, {\n        params: { userId },\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des objectifs:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Crée un nouvel objectif d'entraînement\n   * @param {Object} goalData - Données de l'objectif\n   * @returns {Promise<Object>} - Objectif créé\n   */\n  async createTrainingGoal(goalData) {\n    try {\n      const response = await axios.post(`${API_URL}/training/goals`, goalData, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la création de l\\'objectif:', error);\n      throw error;\n    }\n  }\n}\n\n// Exporter une instance du service\nconst trainingService = new TrainingService();\nexport default trainingService;\n","import React, { useEffect, useRef } from 'react';\nimport { Box, Typography, Container, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { motion, useAnimation, useScroll, useTransform } from 'framer-motion';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ExploreIcon from '@mui/icons-material/Explore';\n\n// Styled components\nconst HeroContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  height: '85vh',\n  maxHeight: 800,\n  width: '100%',\n  overflow: 'hidden',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: 'white',\n  marginBottom: theme.spacing(6),\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    zIndex: 1\n  }\n}));\n\nconst BackgroundImage = styled(motion.div)(({ theme }) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  backgroundRepeat: 'no-repeat',\n  zIndex: 0\n}));\n\nconst ContentContainer = styled(Container)(({ theme }) => ({\n  position: 'relative',\n  zIndex: 2,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  textAlign: 'center',\n}));\n\nconst ScrollIndicator = styled(motion.div)(({ theme }) => ({\n  position: 'absolute',\n  bottom: theme.spacing(4),\n  left: '50%',\n  transform: 'translateX(-50%)',\n  zIndex: 3,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  cursor: 'pointer',\n}));\n\nconst ScrollIcon = styled(motion.div)(({ theme }) => ({\n  width: '30px',\n  height: '50px',\n  border: `2px solid white`,\n  borderRadius: '20px',\n  marginBottom: theme.spacing(1),\n  position: 'relative',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: '8px',\n    left: '50%',\n    width: '6px',\n    height: '6px',\n    backgroundColor: 'white',\n    borderRadius: '50%',\n    transform: 'translateX(-50%)',\n  }\n}));\n\nconst HeroParallax = ({ backgroundImage, title, subtitle, ctaText, ctaLink }) => {\n  const controls = useAnimation();\n  const { scrollY } = useScroll();\n  const containerRef = useRef(null);\n  \n  // Parallax effect\n  const y = useTransform(scrollY, [0, 500], [0, 150]);\n  const opacity = useTransform(scrollY, [0, 300], [1, 0.3]);\n  \n  // Fade in animation on mount\n  useEffect(() => {\n    controls.start({ opacity: 1, y: 0, transition: { duration: 1 } });\n  }, [controls]);\n  \n  // Scroll down handler\n  const handleScrollDown = () => {\n    const nextSection = containerRef.current.nextElementSibling;\n    if (nextSection) {\n      window.scrollTo({\n        top: nextSection.offsetTop,\n        behavior: 'smooth'\n      });\n    }\n  };\n  \n  return (\n    <HeroContainer ref={containerRef}>\n      <BackgroundImage \n        style={{ y, backgroundImage: `url(${backgroundImage})` }}\n      />\n      \n      <ContentContainer maxWidth=\"lg\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={controls}\n        >\n          <Typography \n            variant=\"h1\" \n            component=\"h1\" \n            sx={{ \n              fontWeight: 700, \n              mb: 2,\n              fontSize: { xs: '2.5rem', sm: '3.5rem', md: '4.5rem' },\n              textShadow: '0 2px 10px rgba(0,0,0,0.5)'\n            }}\n          >\n            {title}\n          </Typography>\n          \n          <Typography \n            variant=\"h4\" \n            component=\"p\" \n            sx={{ \n              mb: 4,\n              maxWidth: '800px',\n              mx: 'auto',\n              fontSize: { xs: '1.2rem', sm: '1.5rem', md: '1.8rem' },\n              textShadow: '0 2px 8px rgba(0,0,0,0.5)'\n            }}\n          >\n            {subtitle}\n          </Typography>\n          \n          <motion.div\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <Button \n              component={RouterLink} \n              to={ctaLink}\n              variant=\"contained\" \n              size=\"large\"\n              endIcon={<ExploreIcon />}\n              sx={{ \n                py: 1.5, \n                px: 4,\n                fontSize: '1.1rem',\n                background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n                boxShadow: '0 6px 20px rgba(33,150,243,0.3)',\n                '&:hover': {\n                  background: 'linear-gradient(45deg, #1976D2 30%, #00B8D4 90%)',\n                  boxShadow: '0 8px 20px rgba(33,150,243,0.4)',\n                }\n              }}\n            >\n              {ctaText}\n            </Button>\n          </motion.div>\n        </motion.div>\n      </ContentContainer>\n      \n      <ScrollIndicator\n        onClick={handleScrollDown}\n        animate={{ y: [0, 10, 0] }}\n        transition={{ repeat: Infinity, duration: 1.5 }}\n      >\n        <ScrollIcon />\n        <Typography variant=\"caption\" sx={{ fontWeight: 'medium' }}>\n          Découvrir\n        </Typography>\n      </ScrollIndicator>\n    </HeroContainer>\n  );\n};\n\nexport default HeroParallax;\n","import React, { useState, useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Paper,\n  useTheme,\n  useMediaQuery,\n  alpha,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n  EmojiEvents as TrophyIcon,\n  Terrain as MountainIcon,\n  DirectionsBike as BikeIcon,\n  Groups as CommunityIcon,\n  Timeline as GraphIcon,\n  PedalBike as PedalBikeIcon\n} from '@mui/icons-material';\n\n// Styles\nconst StatContainer = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(8, 0),\n  backgroundColor: alpha(theme.palette.primary.main, 0.03),\n  borderRadius: theme.shape.borderRadius,\n  marginTop: theme.spacing(6),\n  marginBottom: theme.spacing(6),\n}));\n\nconst StatPaper = styled(Paper)(({ theme, color }) => ({\n  padding: theme.spacing(3),\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',\n  transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n  borderTop: `4px solid ${theme.palette[color || 'primary'].main}`,\n  borderRadius: theme.shape.borderRadius,\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 20px rgba(0, 0, 0, 0.1)',\n  },\n}));\n\nconst IconWrapper = styled(Box)(({ theme, color }) => ({\n  width: 60,\n  height: 60,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  borderRadius: '50%',\n  backgroundColor: alpha(theme.palette[color || 'primary'].main, 0.1),\n  color: theme.palette[color || 'primary'].main,\n  margin: theme.spacing(0, 'auto', 2),\n}));\n\nconst AnimatedValue = ({ value, duration = 2, valueType = 'number', ...props }) => {\n  const [displayValue, setDisplayValue] = useState(0);\n  const controls = useAnimation();\n  const [ref, inView] = useInView({ triggerOnce: true, threshold: 0.5 });\n\n  useEffect(() => {\n    if (inView) {\n      let startTime;\n      let step = 0;\n      let targetValue = parseInt(value, 10);\n\n      const animate = (timestamp) => {\n        if (!startTime) startTime = timestamp;\n        const progress = Math.min((timestamp - startTime) / (duration * 1000), 1);\n        \n        if (valueType === 'percentage') {\n          step = Math.floor(progress * targetValue);\n          setDisplayValue(Math.min(step, targetValue));\n        } else {\n          // Plus smooth animation for regular numbers with easing\n          const easeOutQuart = t => 1 - Math.pow(1 - t, 4);\n          step = Math.floor(easeOutQuart(progress) * targetValue);\n          setDisplayValue(Math.min(step, targetValue));\n        }\n\n        if (progress < 1) {\n          window.requestAnimationFrame(animate);\n        }\n      };\n\n      window.requestAnimationFrame(animate);\n      controls.start({ opacity: 1, y: 0 });\n    }\n  }, [inView, value, duration, valueType, controls]);\n\n  return (\n    <motion.div\n      ref={ref}\n      initial={{ opacity: 0, y: 20 }}\n      animate={controls}\n      transition={{\n        duration: 0.5,\n        ease: \"easeOut\"\n      }}\n      {...props}\n    >\n      <Typography \n        variant=\"h3\" \n        component=\"div\" \n        sx={{ \n          fontWeight: 700,\n          mb: 0.5,\n          color: 'text.primary',\n          fontSize: { xs: '2rem', sm: '2.5rem', md: '3rem' }\n        }}\n      >\n        {displayValue}\n        {valueType === 'percentage' ? '%' : valueType === 'plus' ? '+' : ''}\n      </Typography>\n    </motion.div>\n  );\n};\n\n/**\n * AnimatedStats - Composant pour afficher des statistiques animées\n * \n * @param {Object} props\n * @param {Array} props.stats - Liste des stats à afficher\n * @param {string} props.title - Titre de la section (optionnel)\n * @param {string} props.subtitle - Sous-titre de la section (optionnel)\n * @param {string} props.backgroundColor - Couleur de fond personnalisée (optionnel)\n * @param {Object} props.sx - Styles supplémentaires (optionnel)\n */\nconst AnimatedStats = ({ \n  stats = [],\n  title = \"Nos chiffres clés\",\n  subtitle = \"Découvrez ce qui fait de notre plateforme le choix préféré des cyclistes\",\n  backgroundColor,\n  sx = {} \n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\n  \n  // Stats par défaut si aucune n'est fournie\n  const defaultStats = [\n    {\n      id: 'cols',\n      value: 240,\n      label: 'Cols européens documentés',\n      description: 'Des plus célèbres aux plus secrets',\n      icon: <MountainIcon fontSize=\"large\" />,\n      color: 'primary'\n    },\n    {\n      id: 'cyclists',\n      value: 15750,\n      label: 'Cyclistes actifs',\n      description: 'Une communauté passionnée',\n      icon: <BikeIcon fontSize=\"large\" />,\n      color: 'secondary'\n    },\n    {\n      id: 'routes',\n      value: 1280,\n      label: 'Itinéraires partagés',\n      description: 'À travers toute l\\'Europe',\n      icon: <PedalBikeIcon fontSize=\"large\" />,\n      color: 'info'\n    },\n    {\n      id: 'elevation',\n      value: 4810,\n      label: 'Mètres d\\'altitude max',\n      description: 'Du niveau de la mer au Mont Blanc',\n      icon: <GraphIcon fontSize=\"large\" />,\n      color: 'warning'\n    },\n    {\n      id: 'events',\n      value: 125,\n      label: 'Événements organisés',\n      description: 'Challenges et compétitions',\n      icon: <TrophyIcon fontSize=\"large\" />,\n      color: 'success'\n    },\n    {\n      id: 'community',\n      value: 98,\n      label: 'Satisfaction utilisateurs',\n      description: 'Des retours exceptionnels',\n      icon: <CommunityIcon fontSize=\"large\" />,\n      valueType: 'percentage',\n      color: 'error'\n    }\n  ];\n  \n  const displayStats = stats.length > 0 ? stats : defaultStats;\n  const [ref, inView] = useInView({ triggerOnce: true, threshold: 0.1 });\n\n  return (\n    <StatContainer \n      ref={ref}\n      sx={{ \n        backgroundColor: backgroundColor || alpha(theme.palette.primary.main, 0.03),\n        ...sx \n      }}\n    >\n      <Box sx={{ maxWidth: 1200, mx: 'auto', px: 2 }}>\n        {(title || subtitle) && (\n          <Box sx={{ textAlign: 'center', mb: 6 }}>\n            {title && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={inView ? { opacity: 1, y: 0 } : {}}\n                transition={{ duration: 0.5 }}\n              >\n                <Typography \n                  variant=\"h3\" \n                  component=\"h2\" \n                  gutterBottom\n                  sx={{ \n                    fontWeight: 700,\n                    fontSize: { xs: '1.75rem', sm: '2.25rem', md: '2.75rem' },\n                    mb: 2\n                  }}\n                >\n                  {title}\n                </Typography>\n              </motion.div>\n            )}\n            \n            {subtitle && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={inView ? { opacity: 1, y: 0 } : {}}\n                transition={{ duration: 0.5, delay: 0.1 }}\n              >\n                <Typography \n                  variant=\"h6\" \n                  color=\"textSecondary\"\n                  sx={{ \n                    maxWidth: 800, \n                    mx: 'auto',\n                    fontSize: { xs: '0.95rem', sm: '1rem', md: '1.1rem' }\n                  }}\n                >\n                  {subtitle}\n                </Typography>\n              </motion.div>\n            )}\n          </Box>\n        )}\n        \n        <Grid container spacing={3}>\n          {displayStats.map((stat, index) => (\n            <Grid \n              item \n              xs={12} \n              sm={6} \n              md={isMobile ? 12 : isTablet ? 6 : displayStats.length > 4 ? 4 : 12 / Math.min(displayStats.length, 4)} \n              key={stat.id || index}\n            >\n              <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                animate={inView ? { opacity: 1, y: 0 } : {}}\n                transition={{ \n                  duration: 0.6,\n                  delay: 0.1 + (index * 0.1),\n                  ease: \"easeOut\"\n                }}\n              >\n                <StatPaper color={stat.color}>\n                  <IconWrapper color={stat.color}>\n                    {stat.icon}\n                  </IconWrapper>\n                  \n                  <AnimatedValue \n                    value={stat.value} \n                    valueType={stat.valueType} \n                    duration={1.5 + (index * 0.1)}\n                  />\n                  \n                  <Typography \n                    variant=\"h6\" \n                    component=\"div\"\n                    sx={{ \n                      fontWeight: 600,\n                      mb: 1,\n                      color: theme.palette[stat.color || 'primary'].main\n                    }}\n                  >\n                    {stat.label}\n                  </Typography>\n                  \n                  {stat.description && (\n                    <Typography \n                      variant=\"body2\" \n                      color=\"textSecondary\"\n                    >\n                      {stat.description}\n                    </Typography>\n                  )}\n                </StatPaper>\n              </motion.div>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </StatContainer>\n  );\n};\n\nexport default AnimatedStats;\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { \n  Container, \n  Typography, \n  Box, \n  Grid, \n  Card, \n  CardMedia, \n  CardContent, \n  CardActionArea,\n  Button,\n  Divider,\n  Paper,\n  Stack,\n  Chip,\n  useTheme,\n  useMediaQuery,\n  LinearProgress,\n  CircularProgress,\n  IconButton,\n  alpha\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { \n  Terrain as TerrainIcon,\n  RouteRounded as RouteIcon,\n  EmojiEvents as EventIcon,\n  Article as NewsIcon,\n  Equalizer as StatsIcon,\n  ArrowForward as ArrowForwardIcon,\n  OpenInNew as OpenInNewIcon,\n  People as PeopleIcon,\n  Star as StarIcon,\n  DirectionsBike as BikeIcon,\n  ExploreOutlined as ExploreIcon,\n  LightMode as SunIcon,\n  Refresh as RefreshIcon\n} from '@mui/icons-material';\n\n// Components\nimport WeatherWidget from '../components/widgets/WeatherWidget';\nimport BikeAnimationCanvas from '../components/animations/BikeAnimationCanvas';\nimport EventsCarousel from '../components/home/EventsCarousel';\nimport NewsCard from '../components/home/NewsCard';\nimport RegionMap from '../components/maps/RegionMap';\nimport StatsSummary from '../components/home/StatsSummary';\nimport Breadcrumbs from '../components/common/Breadcrumbs';\nimport HeroParallax from '../components/animations/HeroParallax';\nimport PageTransition from '../components/animations/PageTransition';\nimport AnimatedStats from '../components/animations/AnimatedStats';\n\n// Hooks\nimport { useAuth } from '../hooks/useAuth';\nimport useErrorHandler from '../hooks/useErrorHandler';\n\n// Styled Components\nconst SectionTitle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: theme.spacing(3),\n  position: 'relative',\n  '&::after': {\n    content: '\"\"',\n    flexGrow: 1,\n    height: 2,\n    backgroundColor: alpha(theme.palette.primary.main, 0.2),\n    marginLeft: theme.spacing(2),\n    borderRadius: 2,\n  }\n}));\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n  position: 'relative',\n  overflow: 'hidden',\n  boxShadow: '0 6px 15px rgba(0, 0, 0, 0.08)',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 25px rgba(0, 0, 0, 0.15)',\n  },\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '4px',\n    background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    opacity: 0,\n    transition: 'opacity 0.3s ease',\n  },\n  '&:hover::before': {\n    opacity: 1,\n  },\n}));\n\nconst DifficultyChip = styled(Chip)(({ theme, difficulty }) => {\n  const colors = {\n    1: { bg: '#e3f2fd', color: '#0d47a1' }, // Facile\n    2: { bg: '#e8f5e9', color: '#1b5e20' }, // Modéré\n    3: { bg: '#fff8e1', color: '#ff6f00' }, // Intermédiaire\n    4: { bg: '#fff3e0', color: '#e65100' }, // Difficile\n    5: { bg: '#ffebee', color: '#b71c1c' }  // Très difficile\n  };\n  const color = colors[difficulty] || colors[3];\n  \n  return {\n    backgroundColor: color.bg,\n    color: color.color,\n    fontWeight: 600,\n    '& .MuiChip-icon': {\n      color: color.color\n    }\n  };\n});\n\nconst FeatureSection = styled(Box)(({ theme, darkMode }) => ({\n  padding: theme.spacing(6, 0),\n  backgroundColor: darkMode ? alpha(theme.palette.primary.main, 0.05) : 'transparent',\n  borderRadius: theme.shape.borderRadius,\n  marginBottom: theme.spacing(4),\n}));\n\nconst StatsBox = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n  transition: 'transform 0.3s ease',\n  cursor: 'pointer',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: theme.shadows[4],\n  }\n}));\n\n/**\n * Page d'accueil principale\n * Présente un aperçu des principales fonctionnalités de l'application\n */\nconst Home = () => {\n  const [weather, setWeather] = useState(null);\n  const [featuredCols, setFeaturedCols] = useState([]);\n  const [featuredRoutes, setFeaturedRoutes] = useState([]);\n  const [newsItems, setNewsItems] = useState([]);\n  const [upcomingEvents, setUpcomingEvents] = useState([]);\n  const [loading, setLoading] = useState({\n    weather: true,\n    cols: true,\n    routes: true,\n    news: true,\n    events: true\n  });\n  \n  const { user } = useAuth();\n  const { handleApiRequest, tryCatch } = useErrorHandler();\n  \n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  // Animations Framer Motion\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: { \n      opacity: 1,\n      transition: { \n        staggerChildren: 0.1,\n        duration: 0.5 \n      } \n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { \n      opacity: 1, \n      y: 0,\n      transition: { duration: 0.5 }\n    }\n  };\n\n  // Animation d'entrée\n  const sectionVariants = {\n    offscreen: { opacity: 0, y: 50 },\n    onscreen: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        bounce: 0.3,\n        duration: 0.8\n      }\n    }\n  };\n\n  // Données de secours pour les cols\n  const fallbackCols = [\n    { id: 1, name: 'Col de la Schlucht', elevation: 1139, difficulty: 3, image: '/images/cols/schlucht.jpg' },\n    { id: 2, name: 'Grand Ballon', elevation: 1424, difficulty: 4, image: '/images/cols/grand-ballon.jpg' },\n    { id: 3, name: 'Col du Donon', elevation: 727, difficulty: 2, image: '/images/cols/donon.jpg' }\n  ];\n\n  // Données de secours pour les parcours\n  const fallbackRoutes = [\n    { id: 1, name: 'Tour des Vosges', distance: 120, elevation: 2200, difficulty: 4, image: '/images/routes/vosges.jpg' },\n    { id: 2, name: 'Traversée de l\\'Alsace', distance: 85, elevation: 1100, difficulty: 3, image: '/images/routes/alsace.jpg' },\n    { id: 3, name: 'Circuit des Lacs', distance: 60, elevation: 800, difficulty: 2, image: '/images/routes/lacs.jpg' }\n  ];\n\n  // Données de secours pour les événements\n  const fallbackEvents = [\n    { \n      id: 1, \n      title: 'Tour du Grand Est', \n      date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), \n      location: 'Strasbourg', \n      image: '/images/events/tour-grand-est.jpg',\n      participants: 120\n    },\n    { \n      id: 2, \n      title: 'Randonnée des Lacs', \n      date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000), \n      location: 'Gérardmer', \n      image: '/images/events/randonnee-lacs.jpg',\n      participants: 85\n    },\n    { \n      id: 3, \n      title: 'Challenge des Cols Vosgiens', \n      date: new Date(Date.now() + 21 * 24 * 60 * 60 * 1000), \n      location: 'Épinal', \n      image: '/images/events/cols-vosgiens.jpg',\n      participants: 65\n    }\n  ];\n\n  // Charger les données météo de la région\n  const fetchWeather = useCallback(async () => {\n    setLoading(prev => ({ ...prev, weather: true }));\n    \n    await handleApiRequest(\n      axios.get('/api/weather/current?lat=48.7&lon=6.2'),\n      {\n        successMessage: null, // Pas de message de succès pour la météo\n        errorMessage: 'Impossible de charger les données météo',\n        showSuccess: false,\n        showLoading: false,\n        onSuccess: (data) => {\n          setWeather(data);\n          setLoading(prev => ({ ...prev, weather: false }));\n        },\n        onError: () => {\n          setLoading(prev => ({ ...prev, weather: false }));\n        }\n      }\n    );\n  }, [handleApiRequest]);\n\n  // Charger les cols mis en avant\n  const fetchFeaturedCols = useCallback(async () => {\n    setLoading(prev => ({ ...prev, cols: true }));\n    \n    await handleApiRequest(\n      axios.get('/api/cols/featured'),\n      {\n        errorMessage: 'Impossible de charger les cols en vedette',\n        showSuccess: false,\n        showLoading: false,\n        onSuccess: (data) => {\n          setFeaturedCols(data);\n          setLoading(prev => ({ ...prev, cols: false }));\n        },\n        onError: () => {\n          // Utiliser les données de secours en cas d'erreur\n          setFeaturedCols(fallbackCols);\n          setLoading(prev => ({ ...prev, cols: false }));\n        }\n      }\n    );\n  }, [handleApiRequest, setFeaturedCols]);\n\n  // Charger les itinéraires mis en avant\n  const fetchFeaturedRoutes = useCallback(async () => {\n    setLoading(prev => ({ ...prev, routes: true }));\n    \n    await handleApiRequest(\n      axios.get('/api/routes/featured'),\n      {\n        errorMessage: 'Impossible de charger les parcours en vedette',\n        showSuccess: false,\n        showLoading: false,\n        onSuccess: (data) => {\n          setFeaturedRoutes(data);\n          setLoading(prev => ({ ...prev, routes: false }));\n        },\n        onError: () => {\n          // Utiliser les données de secours en cas d'erreur\n          setFeaturedRoutes(fallbackRoutes);\n          setLoading(prev => ({ ...prev, routes: false }));\n        }\n      }\n    );\n  }, [handleApiRequest, setFeaturedRoutes]);\n\n  // Charger les actualités récentes\n  const fetchNewsItems = useCallback(async () => {\n    setLoading(prev => ({ ...prev, news: true }));\n    \n    await handleApiRequest(\n      axios.get('/api/news/latest'),\n      {\n        errorMessage: 'Impossible de charger les dernières actualités',\n        showSuccess: false,\n        showLoading: false,\n        onSuccess: (data) => {\n          setNewsItems(data);\n          setLoading(prev => ({ ...prev, news: false }));\n        },\n        onError: () => {\n          setLoading(prev => ({ ...prev, news: false }));\n        }\n      }\n    );\n  }, [handleApiRequest, setNewsItems]);\n\n  // Charger les événements à venir\n  const fetchUpcomingEvents = useCallback(async () => {\n    setLoading(prev => ({ ...prev, events: true }));\n    \n    await handleApiRequest(\n      axios.get('/api/events/upcoming'),\n      {\n        errorMessage: 'Impossible de charger les événements à venir',\n        showSuccess: false,\n        showLoading: false,\n        onSuccess: (data) => {\n          setUpcomingEvents(data);\n          setLoading(prev => ({ ...prev, events: false }));\n        },\n        onError: () => {\n          // Utiliser les données de secours en cas d'erreur\n          setUpcomingEvents(fallbackEvents);\n          setLoading(prev => ({ ...prev, events: false }));\n        }\n      }\n    );\n  }, [handleApiRequest, setUpcomingEvents]);\n\n  // Charger toutes les données au chargement de la page\n  useEffect(() => {\n    const loadAllData = async () => {\n      // Utiliser Promise.allSettled pour continuer même si certaines requêtes échouent\n      await Promise.allSettled([\n        fetchWeather(),\n        fetchFeaturedCols(),\n        fetchFeaturedRoutes(),\n        fetchNewsItems(),\n        fetchUpcomingEvents()\n      ]);\n    };\n    \n    loadAllData();\n  }, [fetchWeather, fetchFeaturedCols, fetchFeaturedRoutes, fetchNewsItems, fetchUpcomingEvents]);\n\n  // Rendu des cartes de cols avec état de chargement\n  const renderColCards = () => {\n    if (loading.cols) {\n      return Array(3).fill(0).map((_, index) => (\n        <Grid item xs={12} sm={6} md={4} key={`col-skeleton-${index}`}>\n          <Card sx={{ height: '100%' }}>\n            <LinearProgress />\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h3\" sx={{ opacity: 0.5 }}>\n                Chargement...\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ opacity: 0.5 }}>\n                Altitude: ...\n              </Typography>\n              <Chip \n                label=\"...\" \n                size=\"small\"\n                color=\"primary\"\n                sx={{ opacity: 0.5 }}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      ));\n    }\n    \n    return featuredCols.map(col => (\n      <Grid item xs={12} sm={6} md={4} key={col.id}>\n        <StyledCard \n          component={motion.div}\n          variants={itemVariants}\n          sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <CardActionArea component={RouterLink} to={`/cols/${col.id}`}>\n            <CardMedia\n              component=\"img\"\n              height={140}\n              image={col.image}\n              alt={col.name}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                {col.name}\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Altitude: {col.elevation}m\n                </Typography>\n                <DifficultyChip \n                  label={`Difficulté: ${col.difficulty}/5`} \n                  size=\"small\"\n                  difficulty={col.difficulty}\n                />\n              </Box>\n            </CardContent>\n          </CardActionArea>\n        </StyledCard>\n      </Grid>\n    ));\n  };\n\n  // Rendu des cartes de parcours avec état de chargement\n  const renderRouteCards = () => {\n    if (loading.routes) {\n      return Array(3).fill(0).map((_, index) => (\n        <Grid item xs={12} sm={6} md={4} key={`route-skeleton-${index}`}>\n          <Card sx={{ height: '100%' }}>\n            <LinearProgress />\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h3\" sx={{ opacity: 0.5 }}>\n                Chargement...\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ opacity: 0.5 }}>\n                Distance: ...\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ opacity: 0.5 }}>\n                D+: ...\n              </Typography>\n              <Chip \n                label=\"...\" \n                size=\"small\"\n                color=\"primary\"\n                sx={{ opacity: 0.5 }}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      ));\n    }\n    \n    return featuredRoutes.map(route => (\n      <Grid item xs={12} sm={6} md={4} key={route.id}>\n        <StyledCard \n          component={motion.div}\n          variants={itemVariants}\n          sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <CardActionArea component={RouterLink} to={`/routes/${route.id}`}>\n            <CardMedia\n              component=\"img\"\n              height={140}\n              image={route.image}\n              alt={route.name}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                {route.name}\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Distance: {route.distance}km\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  D+: {route.elevation}m\n                </Typography>\n              </Box>\n              <DifficultyChip \n                label={`Difficulté: ${route.difficulty}/5`} \n                size=\"small\"\n                difficulty={route.difficulty}\n              />\n            </CardContent>\n          </CardActionArea>\n        </StyledCard>\n      </Grid>\n    ));\n  };\n\n  // Images pour le héros avec effet parallaxe\n  const heroBackgroundImage = '/images/hero-cycliste.jpg';\n\n  return (\n    <PageTransition>\n      <Box sx={{ overflow: 'hidden' }}>\n        {/* Hero section avec parallaxe */}\n        <HeroParallax\n          backgroundImage={heroBackgroundImage}\n          title=\"Grand Est Cyclisme\"\n          subtitle=\"Explorez les plus beaux cols et parcours cyclistes de la région Grand Est\"\n          ctaText=\"Découvrir les cols\"\n          ctaLink=\"/cols\"\n        />\n        \n        {/* Section statistiques rapides */}\n        <Container maxWidth=\"xl\">\n          <motion.div\n            initial=\"offscreen\"\n            whileInView=\"onscreen\"\n            viewport={{ once: true, amount: 0.3 }}\n            variants={sectionVariants}\n          >\n            <Grid container spacing={3} sx={{ mb: 6 }}>\n              <Grid item xs={6} md={3}>\n                <StatsBox>\n                  <BikeIcon color=\"primary\" sx={{ fontSize: 40, mb: 1 }} />\n                  <Typography variant=\"h3\" component=\"div\" color=\"primary\" fontWeight=\"bold\">\n                    247\n                  </Typography>\n                  <Typography variant=\"subtitle1\">Cols répertoriés</Typography>\n                </StatsBox>\n              </Grid>\n              <Grid item xs={6} md={3}>\n                <StatsBox>\n                  <RouteIcon color=\"secondary\" sx={{ fontSize: 40, mb: 1 }} />\n                  <Typography variant=\"h3\" component=\"div\" color=\"secondary\" fontWeight=\"bold\">\n                    189\n                  </Typography>\n                  <Typography variant=\"subtitle1\">Parcours</Typography>\n                </StatsBox>\n              </Grid>\n              <Grid item xs={6} md={3}>\n                <StatsBox>\n                  <EventIcon sx={{ fontSize: 40, mb: 1, color: theme.palette.success.main }} />\n                  <Typography variant=\"h3\" component=\"div\" sx={{ color: theme.palette.success.main }} fontWeight=\"bold\">\n                    42\n                  </Typography>\n                  <Typography variant=\"subtitle1\">Événements</Typography>\n                </StatsBox>\n              </Grid>\n              <Grid item xs={6} md={3}>\n                <StatsBox>\n                  <PeopleIcon sx={{ fontSize: 40, mb: 1, color: theme.palette.info.main }} />\n                  <Typography variant=\"h3\" component=\"div\" sx={{ color: theme.palette.info.main }} fontWeight=\"bold\">\n                    5.2k\n                  </Typography>\n                  <Typography variant=\"subtitle1\">Membres</Typography>\n                </StatsBox>\n              </Grid>\n            </Grid>\n          </motion.div>\n        </Container>\n\n        {/* Météo du jour */}\n        <Container maxWidth=\"xl\">\n          <motion.div\n            initial=\"offscreen\"\n            whileInView=\"onscreen\"\n            viewport={{ once: true, amount: 0.3 }}\n            variants={sectionVariants}\n          >\n            <Box sx={{ mb: 6 }}>\n              <Grid container spacing={3} alignItems=\"stretch\">\n                <Grid item xs={12} md={6}>\n                  <Paper sx={{ \n                    p: 3, \n                    height: '100%', \n                    display: 'flex', \n                    flexDirection: 'column',\n                    borderRadius: theme.shape.borderRadius,\n                    boxShadow: '0 6px 20px rgba(0, 0, 0, 0.08)',\n                    background: 'linear-gradient(135deg, #f5f7fa 0%, #e4ebf5 100%)'\n                  }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                      <SunIcon sx={{ mr: 1, color: theme.palette.warning.main }} />\n                      <Typography variant=\"h5\" component=\"h2\">\n                        Météo du jour\n                      </Typography>\n                      <Box sx={{ ml: 'auto' }}>\n                        <IconButton \n                          size=\"small\" \n                          onClick={() => {\n                            setLoading(prev => ({ ...prev, weather: true }));\n                            fetchWeather();\n                          }}\n                          aria-label=\"Actualiser la météo\"\n                        >\n                          <RefreshIcon />\n                        </IconButton>\n                      </Box>\n                    </Box>\n                    \n                    {loading.weather ? (\n                      <Box sx={{ p: 4, textAlign: 'center' }}>\n                        <CircularProgress size={60} />\n                        <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                          Chargement des données météo...\n                        </Typography>\n                      </Box>\n                    ) : weather ? (\n                      <WeatherWidget data={weather} />\n                    ) : (\n                      <Box sx={{ p: 3, textAlign: 'center' }}>\n                        <Typography variant=\"body1\">\n                          Données météo non disponibles pour le moment.\n                        </Typography>\n                        <Button \n                          variant=\"outlined\" \n                          startIcon={<RefreshIcon />} \n                          sx={{ mt: 2 }}\n                          onClick={() => {\n                            setLoading(prev => ({ ...prev, weather: true }));\n                            fetchWeather();\n                          }}\n                        >\n                          Réessayer\n                        </Button>\n                      </Box>\n                    )}\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Box\n                    component={BikeAnimationCanvas}\n                    sx={{ \n                      height: { xs: 200, md: '100%' },\n                      minHeight: 250,\n                      borderRadius: theme.shape.borderRadius,\n                      overflow: 'hidden',\n                      boxShadow: '0 6px 20px rgba(0, 0, 0, 0.08)',\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Box>\n          </motion.div>\n        </Container>\n        \n        {/* Sections principales */}\n        <FeatureSection>\n          <Container maxWidth=\"xl\">\n            <motion.div\n              initial=\"offscreen\"\n              whileInView=\"onscreen\"\n              viewport={{ once: true, amount: 0.3 }}\n              variants={sectionVariants}\n            >\n              <SectionTitle variant=\"h4\" component=\"h2\">\n                <TerrainIcon color=\"primary\" sx={{ mr: 1, fontSize: 30 }} />\n                Cols populaires\n              </SectionTitle>\n              \n              <Grid container spacing={3}>\n                {renderColCards()}\n              </Grid>\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3 }}>\n                <Button \n                  component={RouterLink}\n                  to=\"/cols\"\n                  variant=\"outlined\"\n                  endIcon={<ArrowForwardIcon />}\n                  sx={{ \n                    py: 1,\n                    px: 3,\n                    borderRadius: '50px',\n                    '&:hover': {\n                      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)'\n                    }\n                  }}\n                >\n                  Explorer tous les cols\n                </Button>\n              </Box>\n            </motion.div>\n          </Container>\n        </FeatureSection>\n\n        <Container maxWidth=\"xl\">\n          <motion.div\n            initial=\"offscreen\"\n            whileInView=\"onscreen\"\n            viewport={{ once: true, amount: 0.3 }}\n            variants={sectionVariants}\n          >\n            <SectionTitle variant=\"h4\" component=\"h2\">\n              <RouteIcon color=\"primary\" sx={{ mr: 1, fontSize: 30 }} />\n              Parcours à découvrir\n            </SectionTitle>\n            \n            <Grid container spacing={3}>\n              {renderRouteCards()}\n            </Grid>\n            \n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3 }}>\n              <Button \n                component={RouterLink}\n                to=\"/routes\"\n                variant=\"outlined\"\n                endIcon={<ArrowForwardIcon />}\n                sx={{ \n                  py: 1,\n                  px: 3,\n                  borderRadius: '50px',\n                  '&:hover': {\n                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)'\n                  }\n                }}\n              >\n                Voir tous les parcours\n              </Button>\n            </Box>\n          </motion.div>\n        </Container>\n        \n        <FeatureSection darkMode>\n          <Container maxWidth=\"xl\">\n            <motion.div\n              initial=\"offscreen\"\n              whileInView=\"onscreen\"\n              viewport={{ once: true, amount: 0.3 }}\n              variants={sectionVariants}\n            >\n              <SectionTitle variant=\"h4\" component=\"h2\">\n                <EventIcon color=\"primary\" sx={{ mr: 1, fontSize: 30 }} />\n                Événements à venir\n              </SectionTitle>\n              \n              {loading.events ? (\n                <Box sx={{ p: 4, textAlign: 'center' }}>\n                  <CircularProgress />\n                  <Typography sx={{ mt: 2 }}>Chargement des événements...</Typography>\n                </Box>\n              ) : upcomingEvents.length > 0 ? (\n                <EventsCarousel events={upcomingEvents} />\n              ) : (\n                <Paper sx={{ p: 4, textAlign: 'center' }}>\n                  <Typography variant=\"body1\">\n                    Aucun événement à venir pour le moment.\n                  </Typography>\n                </Paper>\n              )}\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n                <Button \n                  component={RouterLink}\n                  to=\"/events\"\n                  endIcon={<ArrowForwardIcon />}\n                  color=\"primary\"\n                  sx={{ borderRadius: '50px' }}\n                >\n                  Voir tous les événements\n                </Button>\n              </Box>\n            </motion.div>\n          </Container>\n        </FeatureSection>\n\n        {/* Section carte de la région */}\n        <Container maxWidth=\"xl\" sx={{ mt: 6, mb: 6 }}>\n          <motion.div\n            initial=\"offscreen\"\n            whileInView=\"onscreen\"\n            viewport={{ once: true, amount: 0.2 }}\n            variants={sectionVariants}\n          >\n            <SectionTitle variant=\"h4\" component=\"h2\">\n              <ExploreIcon color=\"primary\" sx={{ mr: 1, fontSize: 30 }} />\n              Explorez la région\n            </SectionTitle>\n            \n            <Paper \n              elevation={2}\n              sx={{ \n                height: 400, \n                position: 'relative',\n                overflow: 'hidden',\n                borderRadius: theme.shape.borderRadius,\n                boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)'\n              }}\n            >\n              <RegionMap />\n            </Paper>\n            \n            <Typography variant=\"body2\" sx={{ mt: 2, textAlign: 'center' }}>\n              Carte interactive des cols et parcours cyclistes du Grand Est\n            </Typography>\n          </motion.div>\n        </Container>\n\n        {/* Section statistiques animées */}\n        <motion.div\n          initial=\"offscreen\"\n          whileInView=\"onscreen\"\n          viewport={{ once: true, amount: 0.1 }}\n          variants={sectionVariants}\n        >\n          <AnimatedStats \n            title=\"La plus grande communauté cycliste d'Europe\"\n            subtitle=\"Rejoignez des milliers de cyclistes et découvrez pourquoi Euro Cycling Dashboard est devenu la référence pour les passionnés de vélo\"\n            stats={[\n              {\n                id: 'cols',\n                value: 240,\n                label: 'Cols européens',\n                description: 'Des plus célèbres aux plus secrets',\n                color: 'primary'\n              },\n              {\n                id: 'cyclists',\n                value: 15750,\n                label: 'Cyclistes actifs',\n                description: 'Une communauté passionnée',\n                color: 'secondary'\n              },\n              {\n                id: 'routes',\n                value: 1280,\n                label: 'Itinéraires partagés',\n                description: 'À travers toute l\\'Europe',\n                color: 'info'\n              },\n              {\n                id: 'events',\n                value: 125,\n                label: 'Événements organisés',\n                description: 'Challenges et compétitions',\n                color: 'success'\n              }\n            ]}\n            sx={{ mb: 6 }}\n          />\n        </motion.div>\n        \n        {/* Section Rejoindre la Communauté */}\n        <Box \n          sx={{ \n            position: 'relative',\n            py: 10,\n            backgroundImage: 'linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.7)), url(/images/cycling-community.jpg)',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            color: 'white',\n            boxShadow: 'inset 0 0 20px rgba(0, 0, 0, 0.4)',\n            mb: 6\n          }}\n        >\n          <Container maxWidth=\"md\" sx={{ position: 'relative', zIndex: 2 }}>\n            <Typography \n              variant=\"h3\" \n              component=\"h2\" \n              gutterBottom\n              sx={{ \n                fontWeight: 700,\n                mb: 2,\n                textShadow: '0 2px 10px rgba(0,0,0,0.3)'\n              }}\n            >\n              Rejoignez la communauté cycliste du Grand Est\n            </Typography>\n            <Typography \n              variant=\"h6\" \n              paragraph \n              sx={{ \n                mb: 4, \n                maxWidth: '800px', \n                mx: 'auto',\n                opacity: 0.9,\n                textShadow: '0 1px 5px rgba(0,0,0,0.2)'\n              }}\n            >\n              Planifiez vos parcours, suivez votre progression et rencontrez d'autres passionnés de vélo dans la région\n            </Typography>\n            \n            <Stack \n              direction={{ xs: 'column', sm: 'row' }}\n              spacing={2}\n              justifyContent=\"center\"\n            >\n              {!user ? (\n                <>\n                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                    <Button \n                      variant=\"contained\" \n                      size=\"large\"\n                      component={RouterLink}\n                      to=\"/auth/signup\"\n                      endIcon={<StarIcon />}\n                      sx={{ \n                        px: 4, \n                        py: 1.5, \n                        bgcolor: 'white', \n                        color: '#1976d2',\n                        '&:hover': {\n                          bgcolor: 'rgba(255,255,255,0.9)'\n                        }\n                      }}\n                    >\n                      S'inscrire\n                    </Button>\n                  </motion.div>\n                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                    <Button \n                      variant=\"outlined\" \n                      size=\"large\"\n                      component={RouterLink}\n                      to=\"/auth/login\"\n                      sx={{ \n                        px: 4, \n                        py: 1.5, \n                        borderColor: 'white', \n                        color: 'white',\n                        '&:hover': {\n                          borderColor: 'white',\n                          bgcolor: 'rgba(255,255,255,0.1)'\n                        }\n                      }}\n                    >\n                      Se connecter\n                    </Button>\n                  </motion.div>\n                </>\n              ) : (\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                  <Button \n                    variant=\"contained\" \n                    size=\"large\"\n                    component={RouterLink}\n                    to=\"/social\"\n                    endIcon={<PeopleIcon />}\n                    sx={{ \n                      px: 4, \n                      py: 1.5, \n                      bgcolor: 'white', \n                      color: '#1976d2',\n                      '&:hover': {\n                        bgcolor: 'rgba(255,255,255,0.9)'\n                      }\n                    }}\n                  >\n                    Rejoindre la communauté\n                  </Button>\n                </motion.div>\n              )}\n            </Stack>\n          </Container>\n        </Box>\n      </Box>\n    </PageTransition>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","children","transition","transitions","fade","initial","opacity","animate","exit","duration","slide","x","type","stiffness","damping","scale","slideUp","y","currentTransition","_jsx","motion","div","style","width","Box","sx","overflow","ColorSquare","styled","theme","color","display","height","marginRight","spacing","backgroundColor","borderRadius","ImpactChip","Chip","_ref2","severity","colors","calm","palette","success","light","moderate","info","strong","warning","extreme","error","getContrastText","fontWeight","margin","WindArrow","_ref3","position","direction","speed","arrowRef","useRef","useEffect","current","radians","Math","PI","rotation","baseScale","min","set","_jsxs","ref","args","WindLegend","_ref4","items","t","useTranslation","Card","variant","mt","CardHeader","pb","title","Typography","component","CardContent","pt","List","dense","disablePadding","map","item","index","ListItem","py","ListItemIcon","minWidth","ListItemText","primary","label","range","primaryTypographyProps","WindTerrain","_ref5","elevationData","windData","meshRef","geometry","positionAttribute","getAttribute","i","count","floor","z","heights","undefined","setY","needsUpdate","computeVertexNormals","_Fragment","receiveShadow","wireframe","roughness","metalness","wind","elevation","WindDataPanel","_ref6","currentLocation","currentWind","length","gusts","windCondition","SpeedIcon","ml","NorthIcon","transform","round","AirIcon","justifyContent","icon","InfoIcon","WindVisualization","_ref7","passId","cameraPosition","setCameraPosition","useState","legendItems","handleViewChange","view","Paper","p","mb","alignItems","id","ButtonGroup","size","Button","onClick","Grid","container","xs","md","Canvas","camera","fov","shadows","intensity","castShadow","OrbitControls","enableZoom","enablePan","enableRotate","flexDirection","gap","defaultProps","WEATHER_API_KEY","process","REACT_APP_OPENWEATHER_API_KEY","BASE_URL","weatherService","getCurrentWeather","lat","lng","lang","arguments","axios","get","params","lon","appid","units","data","console","getForecast","getRouteWeather","routePoints","sampleSize","step","max","sampledPoints","push","weatherPromises","point","this","Promise","all","getCyclingConditionSeverity","weatherData","weather","main","rain","snow","some","w","includes","temp","humidity","getEquipmentRecommendations","_weather$","clothing","accessories","bike","nutrition","safety","condition","windSpeed","isRaining","isSnowing","recommendations","StyledPopup","Popup","bgColors","good","critical","background","paper","shape","boxShadow","EquipmentCategory","marginBottom","MapViewSetter","route","useMap","_route$coordinates","coordinates","bounds","L","coord","fitBounds","padding","WeatherMarkers","weatherPoints","_point$weather","_point$weather$","iconUrl","iconSize","iconAnchor","popupAnchor","getWeatherIcon","temperatureClass","Marker","gutterBottom","fontSize","WaterIcon","UmbrellaIcon","bgcolor","EquipmentRecommendations","categoryIcons","ThermostatIcon","WbSunnyIcon","WindPowerIcon","WarningIcon","Object","entries","category","avatar","titleTypographyProps","WeatherAlerts","alerts","alert","Alert","action","description","_ref8","routeId","routeData","i18n","setWeatherData","setWeatherPoints","setWindData","setCurrentLocation","setAlerts","loading","setLoading","selectedTimeframe","setSelectedTimeframe","async","_routeData$mainRoute","mainRoute","_route$coordinates2","points","prepareRoutePoints","weatherWithCoords","processWindData","maxDistance","randomIndex","random","deg","gust","weatherAlerts","temps","maxTemp","minTemp","temperature","hasModeratePrecipitation","hasModerateWind","generateWeatherAlerts","fetchWeatherForRoute","language","CircularProgress","my","flexWrap","name","MapContainer","center","zoom","TileLayer","url","attribution","Polyline","positions","pathOptions","surfaceType","getRouteColor","weight","WeatherDashboard","canvasRef","animationFrameId","canvas","context","getContext","frameCount","bikeX","render","clearRect","drawBike","ctx","wheelRadius","frameSize","wheelRotation","save","translate","beginPath","strokeStyle","lineWidth","arc","stroke","angle","moveTo","lineTo","cos","sin","restore","pedalRadius","fill","pedalAngle","window","requestAnimationFrame","cancelAnimationFrame","maxWidth","limit","events","setEvents","setError","currentPage","setCurrentPage","useTheme","locales","fr","en","enUS","de","it","es","currentLocale","mockEvents","date","Date","location","imageUrl","registrationUrl","err","fetchEvents","totalPages","ceil","currentEvents","slice","textAlign","prevPage","prev","disabled","nextPage","event","sm","CardActionArea","href","flex","CardMedia","image","alt","onError","e","target","src","noWrap","formatDistanceToNow","addSuffix","locale","textOverflow","WebkitLineClamp","WebkitBoxOrient","colData","selectedSide","elevationProfile","MountainIcon","createIcon","shadowUrl","shadowSize","shadowAnchor","iconRetinaUrl","className","whenCreated","scrollWheelZoom","disable","zoomControl","control","onAdd","DomUtil","create","innerHTML","onclick","enabled","enable","addTo","updateWhenIdle","updateWhenZooming","maxZoom","eventHandlers","handleIconError","warn","altitude","difficulty","climbData","gradientAvg","path","props","MapComponent","isRegionMap","API_URL","getActivities","userId","timeframe","headers","Authorization","localStorage","getItem","getActivityById","activityId","createActivity","activityData","post","updateActivity","put","deleteActivity","delete","importFromGpx","file","metadata","formData","FormData","append","keys","forEach","key","getTrainingStats","getTrainingGoals","createTrainingGoal","goalData","HeroContainer","maxHeight","content","top","left","right","bottom","zIndex","BackgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","ContentContainer","Container","ScrollIndicator","cursor","ScrollIcon","border","backgroundImage","subtitle","ctaText","ctaLink","controls","useAnimation","scrollY","useScroll","containerRef","useTransform","start","textShadow","mx","whileHover","whileTap","RouterLink","to","endIcon","ExploreIcon","px","handleScrollDown","nextSection","nextElementSibling","scrollTo","offsetTop","behavior","repeat","Infinity","StatContainer","alpha","marginTop","StatPaper","borderTop","IconWrapper","AnimatedValue","value","valueType","displayValue","setDisplayValue","inView","useInView","triggerOnce","threshold","startTime","targetValue","parseInt","timestamp","progress","easeOutQuart","pow","ease","stats","isMobile","useMediaQuery","breakpoints","down","isTablet","defaultStats","BikeIcon","PedalBikeIcon","GraphIcon","TrophyIcon","CommunityIcon","displayStats","delay","stat","SectionTitle","flexGrow","marginLeft","StyledCard","secondary","DifficultyChip","bg","FeatureSection","darkMode","StatsBox","Home","setWeather","featuredCols","setFeaturedCols","featuredRoutes","setFeaturedRoutes","newsItems","setNewsItems","upcomingEvents","setUpcomingEvents","cols","routes","news","user","useAuth","handleApiRequest","tryCatch","useErrorHandler","itemVariants","hidden","visible","sectionVariants","offscreen","onscreen","bounce","fallbackCols","fallbackRoutes","distance","fallbackEvents","now","participants","fetchWeather","useCallback","successMessage","errorMessage","showSuccess","showLoading","onSuccess","fetchFeaturedCols","fetchFeaturedRoutes","fetchNewsItems","fetchUpcomingEvents","allSettled","loadAllData","PageTransition","HeroParallax","whileInView","viewport","once","amount","variants","RouteIcon","EventIcon","PeopleIcon","SunIcon","mr","IconButton","RefreshIcon","WeatherWidget","startIcon","BikeAnimationCanvas","minHeight","TerrainIcon","Array","_","LinearProgress","col","ArrowForwardIcon","EventsCarousel","RegionMap","AnimatedStats","paragraph","Stack","StarIcon","borderColor"],"sourceRoot":""}