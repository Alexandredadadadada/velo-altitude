{"version":3,"file":"static/js/7534.5380b385.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","components/cols/ColVisualization3D.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React, { useRef, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { Box, Typography, CircularProgress, Paper } from '@mui/material';\n\n// Composant pour la route du col\nconst ColRoad = ({ data, color = \"#444444\" }) => {\n  const meshRef = useRef();\n  const points = data.map(point => new THREE.Vector3(point.x, point.y, point.z));\n  const curve = new THREE.CatmullRomCurve3(points);\n  \n  // Créer la géométrie du tube (route)\n  const tubeGeometry = new THREE.TubeGeometry(\n    curve,\n    100,  // Segments tubulaires\n    0.2,  // Rayon\n    8,    // Segments radiaux\n    false // Fermé\n  );\n\n  return (\n    <mesh ref={meshRef}>\n      <primitive object={tubeGeometry} attach=\"geometry\" />\n      <meshStandardMaterial color={color} roughness={0.6} />\n    </mesh>\n  );\n};\n\n// Composant pour le terrain environnant\nconst Terrain = ({ data }) => {\n  const meshRef = useRef();\n  \n  // Déterminer les dimensions du terrain\n  const maxX = Math.max(...data.map(p => p.x)) + 2;\n  const maxY = Math.max(...data.map(p => p.y)) + 1;\n  const minY = Math.min(...data.map(p => p.y)) - 0.5;\n  \n  // Créer une simple géométrie de plan pour le terrain\n  return (\n    <mesh ref={meshRef} rotation={[-Math.PI / 2, 0, 0]} position={[maxX / 2, minY - 0.1, 0]}>\n      <planeGeometry args={[maxX * 1.5, 10]} />\n      <meshStandardMaterial color=\"#4b7f52\" wireframe={false} />\n    </mesh>\n  );\n};\n\n// Composant pour les points d'intérêt\nconst PointOfInterest = ({ position, name, type }) => {\n  const [hovered, setHovered] = useState(false);\n  \n  // Choisir la couleur en fonction du type\n  let color;\n  switch (type) {\n    case 'viewpoint':\n      color = \"#1E88E5\"; // Bleu\n      break;\n    case 'rest':\n      color = \"#43A047\"; // Vert\n      break;\n    case 'summit':\n      color = \"#E53935\"; // Rouge\n      break;\n    default:\n      color = \"#FFC107\"; // Jaune\n  }\n  \n  return (\n    <group position={position}>\n      <mesh \n        onPointerOver={() => setHovered(true)}\n        onPointerOut={() => setHovered(false)}\n      >\n        <sphereGeometry args={[0.15, 16, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      \n      {hovered && (\n        <Text\n          position={[0, 0.3, 0]}\n          color=\"white\"\n          fontSize={0.15}\n          maxWidth={2}\n          textAlign=\"center\"\n          anchorX=\"center\"\n          anchorY=\"middle\"\n          outlineWidth={0.01}\n          outlineColor=\"#000000\"\n        >\n          {name}\n        </Text>\n      )}\n    </group>\n  );\n};\n\n// Composant pour la caméra et les contrôles\nconst SceneSetup = ({ data }) => {\n  const { camera } = useThree();\n  \n  // Calcul du centre et de la taille de la scène pour cadrage\n  const maxX = Math.max(...data.map(p => p.x));\n  const maxY = Math.max(...data.map(p => p.y));\n  \n  // Position initiale de la caméra\n  useEffect(() => {\n    camera.position.set(maxX / 2, maxY * 2, 5);\n    camera.lookAt(maxX / 2, 0, 0);\n  }, [camera, maxX, maxY]);\n  \n  return (\n    <>\n      <OrbitControls \n        enablePan={true}\n        enableZoom={true}\n        enableRotate={true}\n        target={[maxX / 2, maxY / 2, 0]}\n      />\n      <ambientLight intensity={0.5} />\n      <directionalLight position={[10, 10, 5]} intensity={0.7} />\n      <directionalLight position={[-10, 10, 5]} intensity={0.3} />\n    </>\n  );\n};\n\n// Animation de la caméra pour \"parcourir\" le col\nconst CameraAnimation = ({ data, isPlaying }) => {\n  const { camera } = useThree();\n  const points = data.map(point => new THREE.Vector3(point.x, point.y + 0.5, point.z));\n  const curve = new THREE.CatmullRomCurve3(points);\n  \n  // Points pour la \"preview\" du chemin\n  const [progress, setProgress] = useState(0);\n  \n  useFrame(() => {\n    if (isPlaying) {\n      setProgress((prev) => (prev + 0.001) % 1);\n      const position = curve.getPoint(progress);\n      const lookAtPos = curve.getPoint(Math.min(progress + 0.01, 1));\n      \n      camera.position.set(position.x, position.y, position.z);\n      camera.lookAt(lookAtPos.x, lookAtPos.y, lookAtPos.z);\n    }\n  });\n  \n  return null;\n};\n\n// Composant principal de visualisation 3D\nconst ColVisualization3D = ({ colId, colData, pointsOfInterest }) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [terrainData, setTerrainData] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  \n  useEffect(() => {\n    // Les données sont déjà fournies en props\n    if (colData) {\n      setTerrainData(colData);\n      setLoading(false);\n    } else {\n      setError(\"Données du col non disponibles\");\n      setLoading(false);\n    }\n  }, [colData]);\n  \n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"400px\">\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n  \n  if (!terrainData) return null;\n  \n  return (\n    <Paper elevation={2} sx={{ height: '400px', width: '100%', overflow: 'hidden', position: 'relative' }}>\n      <Typography\n        variant=\"button\"\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          zIndex: 1,\n          backgroundColor: 'rgba(0,0,0,0.6)',\n          color: 'white',\n          padding: '5px 10px',\n          borderRadius: '4px',\n          cursor: 'pointer',\n        }}\n        onClick={() => setIsAnimating(!isAnimating)}\n      >\n        {isAnimating ? 'Arrêter l\\'animation' : 'Parcourir le col'}\n      </Typography>\n      \n      <Canvas shadows>\n        <SceneSetup data={terrainData} />\n        <CameraAnimation data={terrainData} isPlaying={isAnimating} />\n        <Terrain data={terrainData} />\n        <ColRoad data={terrainData} />\n        \n        {pointsOfInterest && pointsOfInterest.map((poi, index) => {\n          // Trouver le point correspondant à la distance du POI\n          const distanceRatio = poi.distance / Math.max(...terrainData.map(p => p.x));\n          const nearestIndex = Math.floor(distanceRatio * terrainData.length);\n          const point = terrainData[Math.min(nearestIndex, terrainData.length - 1)];\n          \n          return (\n            <PointOfInterest \n              key={index}\n              position={[point.x, point.y + 0.3, point.z]}\n              name={poi.name}\n              type={poi.type}\n            />\n          );\n        })}\n      </Canvas>\n    </Paper>\n  );\n};\n\nexport default ColVisualization3D;\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","ColRoad","_ref","data","color","meshRef","useRef","points","map","point","THREE","x","y","z","curve","tubeGeometry","_jsxs","children","object","attach","roughness","Terrain","_ref2","maxX","Math","max","p","minY","min","rotation","PI","position","args","wireframe","PointOfInterest","_ref3","type","hovered","setHovered","useState","onPointerOver","onPointerOut","Text","fontSize","maxWidth","textAlign","anchorX","anchorY","outlineWidth","outlineColor","SceneSetup","_ref4","camera","useThree","maxY","useEffect","set","lookAt","_Fragment","OrbitControls","enablePan","enableZoom","enableRotate","target","intensity","CameraAnimation","_ref5","isPlaying","progress","setProgress","useFrame","prev","getPoint","lookAtPos","_ref6","colId","colData","pointsOfInterest","loading","setLoading","error","setError","terrainData","setTerrainData","isAnimating","setIsAnimating","Box","display","justifyContent","alignItems","height","CircularProgress","Typography","sx","width","variant","top","left","zIndex","backgroundColor","borderRadius","cursor","onClick","Canvas","shadows","poi","index","distanceRatio","distance","nearestIndex","floor","length"],"sourceRoot":""}