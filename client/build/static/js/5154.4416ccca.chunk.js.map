{"version":3,"file":"static/js/5154.4416ccca.chunk.js","mappings":"0IAGIA,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,SAAS,EAAc,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,iJACF,MAAmB,EAAIH,EAAYE,KAAK,OAAQ,CACjDC,EAAG,4CACF,MAAO,W,gXCofV,QAnfA,SAA6BC,GAAmC,IAAlC,eAAEC,EAAc,YAAEC,GAAaF,EAC3D,MAAMG,GAAQC,EAAAA,EAAAA,MACPC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,OAC5CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IAClCK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,CAC7CO,OAAQ,GACRC,KAAM,gBAyBR,OAtBAC,EAAAA,EAAAA,YAAU,KACJd,GACFI,EAAiB,KACnB,GACC,CAACJ,IAkBCA,GAeHe,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEC,SAAA,EAEzBC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAGH,UAChBC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,EAAGC,GAAI,GAAIP,UACzBJ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGS,WAAW,SAAQR,SAAA,EAC7CC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAAAF,UACRC,EAAAA,EAAAA,KAACQ,EAAAA,EAAc,CAACJ,GAAI,CAAEK,SAAU,GAAIC,MAAO7B,EAAM8B,QAAQC,QAAQC,WAEnElB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACK,MAAI,EAACC,IAAE,EAAAH,SAAA,EACXJ,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACC,QAAQ,KAAIhB,SAAA,CAAC,sBACHnB,EAAYoC,SAElCrB,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACC,QAAQ,YAAYL,MAAM,iBAAgBX,SAAA,CACnDnB,EAAYqC,SAAS,YAAKrC,EAAYsC,OAAO,4BAAkBtC,EAAYuC,WAAW,aAG3FnB,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAAAF,UACNhB,IAAkBG,IAClBc,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACLL,QAAQ,YACRL,MAAM,UACNW,QApDcC,KACvB1C,IAELO,GAAW,GAGXoC,YAAW,KACTvC,EA+VN,SAAmCwC,EAAKlC,GAEtC,MAAMmC,EAAkBC,KAAKC,OAC1BH,EAAII,SAAW,EAAI,IAAMJ,EAAII,SAAW,EAAI,IAAM,MAClDtC,EAAYE,OAAS,KAGlBqC,EAAmBH,KAAKC,OAC3BH,EAAIP,SAAW,IAAO,IAAM,MAC5B3B,EAAYE,OAAS,KAIlBsC,EAAqBN,EAAIP,SAAW,KAAO,iBACvBO,EAAIP,SAAW,IAAO,mBAAqB,kBAG/Dc,EAAc,GAEhBP,EAAIP,SAAW,MACjBc,EAAYC,KAAK,2CACjBD,EAAYC,KAAK,yCAGfR,EAAII,SAAW,IACjBG,EAAYC,KAAK,yCACjBD,EAAYC,KAAK,8CAGfR,EAAIN,OAAS,KACfa,EAAYC,KAAK,gCACjBD,EAAYC,KAAK,qCAKnB,OAFAD,EAAYC,KAAK,qDAEV,CACLP,kBACAI,mBACAE,cACAE,MAAOT,EAAIU,GACXC,WAAY7C,EAAYE,OAGxB4C,UAAW,CACTC,YAAa,uCAAoCb,EAAIR,SAASc,qLAC9DQ,MAAO,CACL,CACEtB,KAAM,iBACNuB,MAAO,CAAC,wBAAmB,eAAgB,qBAAmB,oBAC9DC,OAAQ,uBAEV,CACExB,KAAM,oBACNuB,MAAO,CAAC,MAAO,kBAAgB,iBAAkB,UACjDC,OAAQ,uBAEV,CACExB,KAAM,6BACNuB,MAAO,CAAC,mBAAoB,cAAe,cAAe,QAC1DC,OAAQ,wBAGZC,KAAM,CACJ,6FAA0FjB,EAAIR,OAC9F,4FACA,+EACA,kFAKJ0B,UAAW,CACTL,YAAa,kBAAkBb,EAAIR,qLACnC2B,kBAAmB,2BAA2Bb,6FAC9Cc,gBAAiB,SAASnB,6FAC1Bc,MAAO,CACL,CACEM,KAAM,WACNC,QAAS,CAAC,qBAAsB,wBAAsB,4BACtDC,OAAQ,wBAEV,CACEF,KAAM,mBACNC,QAAS,CAAC,0BAAqB,SAAU,mBAAiB,cAC1DC,OAAQ,wBAEV,CACEF,KAAM,0BACNC,QAAS,CAAC,mBAAiB,wBAAsB,0BACjDC,OAAQ,uBAEV,CACEF,KAAM,kBACNC,QAAS,CAAC,2BAA4B,kBAAmB,6BACzDC,OAAQ,yBAMdC,SAAU,CACRX,YAAa,+CAA4Cb,EAAIR,sMAC7DiC,eAAgB,mHAChBC,OAAQ,CACN,CACEC,MAAO,6CACPJ,OAAQ,qCACRV,YAAa,6JAEf,CACEc,MAAO,qCACPJ,OAAQ,+BACRV,YAAa,gKAEf,CACEc,MAAO,0CACPJ,OAAQ,qBACRV,YAAa,0LAKvB,CA1duBe,CAA0BxE,EAAaU,IACxDH,GAAW,EAAM,GAChB,MAAK,EA2CqCY,SAChC,mCAUVb,IACCc,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAGH,UAChBJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,EAAGgD,UAAW,UAAWtD,SAAA,EACvCC,EAAAA,EAAAA,KAACsD,EAAAA,EAAgB,KACjBtD,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAKX,GAAI,CAAEmD,GAAI,GAAIxD,SAAC,wEAQ7ChB,IAAkBG,IACjBS,EAAAA,EAAAA,MAAA6D,EAAAA,SAAA,CAAAzD,SAAA,EAEEC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIuD,GAAI,EAAE1D,UACvBJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,EAAGqD,OAAQ,QAAS3D,SAAA,EAClCC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAK4C,cAAY,EAAA5D,SAAC,+BAItCJ,EAAAA,EAAAA,MAACiE,EAAAA,EAAG,CAACxD,GAAI,CAAEE,GAAI,GAAIP,SAAA,EACjBC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,mCAG7CJ,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACC,QAAQ,KAAKL,MAAM,UAASX,SAAA,CACrChB,EAAc0C,gBAAgB,cAEjC9B,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACC,QAAQ,QAAQL,MAAM,iBAAgBX,SAAA,CAAC,0BACzBnB,EAAYoC,YAIxChB,EAAAA,EAAAA,KAAC6D,EAAAA,EAAO,CAACzD,GAAI,CAAE0D,GAAI,MAEnB9D,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,gCAG7CJ,EAAAA,EAAAA,MAACiE,EAAAA,EAAG,CAACxD,GAAI,CAAE2D,QAAS,OAAQxD,WAAY,SAAUD,GAAI,GAAIP,SAAA,EACxDC,EAAAA,EAAAA,KAACgE,EAAAA,EAAc,CAAC5D,GAAI,CAAE6D,GAAI,EAAGvD,MAAO7B,EAAM8B,QAAQuD,KAAKrD,SACvDlB,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACC,QAAQ,KAAKL,MAAM,YAAWX,SAAA,CACvChB,EAAc8C,iBAAiB,eAIpC7B,EAAAA,EAAAA,KAAC6D,EAAAA,EAAO,CAACzD,GAAI,CAAE0D,GAAI,MAEnB9D,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,iCAG7CC,EAAAA,EAAAA,KAACmE,EAAAA,EAAI,CAACC,OAAK,EAAArE,SACRhB,EAAcgD,YAAYsC,KAAI,CAACC,EAASC,KACvC5E,EAAAA,EAAAA,MAAC6E,EAAAA,GAAQ,CAAAzE,SAAA,EACPC,EAAAA,EAAAA,KAACyE,EAAAA,EAAY,CAACrE,GAAI,CAAEsE,SAAU,IAAK3E,UACjCC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CACFe,UAAU,OACVvE,GAAI,CACFwE,MAAO,EACPlB,OAAQ,EACRmB,aAAc,MACdC,QAASjG,EAAM8B,QAAQC,QAAQC,KAC/BkD,QAAS,qBAIf/D,EAAAA,EAAAA,KAAC+E,EAAAA,EAAY,CAACnE,QAAS0D,MAbVC,aAqBvBvE,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIuD,GAAI,EAAE1D,UACvBJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,GAAIN,SAAA,EAClBJ,EAAAA,EAAAA,MAACqF,EAAAA,EAAK,CAACC,SAAS,OAAO7E,GAAI,CAAEE,GAAI,GAAIP,SAAA,CAAC,iEACqBnB,EAAYoC,KAAK,6CAG5ErB,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CACHC,MAAO/F,EACPgG,SApIUC,CAACC,EAAOC,KAC9BlG,EAAYkG,EAAS,EAoITxE,QAAQ,YACRyE,eAAe,UACfC,UAAU,UACVrF,GAAI,CAAEE,GAAI,GAAIP,SAAA,EAEdC,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,MAAM,QAAQC,MAAM5F,EAAAA,EAAAA,KAAC6F,EAAAA,EAAY,OACtC7F,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,MAAM,UAAUC,MAAM5F,EAAAA,EAAAA,KAAC8F,EAAAA,EAAS,OACrC9F,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,MAAM,WAAQC,MAAM5F,EAAAA,EAAAA,KAACQ,EAAAA,EAAc,UAI1CR,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CAACmC,KAAK,WAAWC,OAAqB,IAAb5G,EAAeW,SAC5B,IAAbX,IACCO,EAAAA,EAAAA,MAAA6D,EAAAA,SAAA,CAAAzD,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAK4C,cAAY,EAAA5D,SAAC,mCAGtCC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,QAAQkF,WAAS,EAAAlG,SAClChB,EAAcqD,UAAUC,eAG3BrC,EAAAA,EAAAA,KAACkG,EAAAA,EAAc,CAACvB,UAAWxE,EAAAA,EAAOY,QAAQ,WAAWX,GAAI,CAAEE,GAAI,GAAIP,UACjEJ,EAAAA,EAAAA,MAACwG,EAAAA,EAAK,CAACC,KAAK,QAAOrG,SAAA,EACjBC,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAAAtG,UACRJ,EAAAA,EAAAA,MAAC2G,EAAAA,EAAQ,CAAAvG,SAAA,EACPC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAC,WACXC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAC,6BACXC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAACC,MAAM,QAAOzG,SAAC,iBAG7BC,EAAAA,EAAAA,KAACyG,EAAAA,EAAS,CAAA1G,SACPhB,EAAcqD,UAAUE,MAAM+B,KAAKqC,IAClC/G,EAAAA,EAAAA,MAAC2G,EAAAA,EAAQ,CAAAvG,SAAA,EACPC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAE2G,EAAK1F,QACjBhB,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAE2G,EAAKnE,MAAMoE,KAAK,SAC5B3G,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAACC,MAAM,QAAOzG,SAAE2G,EAAKlE,WAHlBkE,EAAK1F,gBAU5BhB,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,8BAG7CC,EAAAA,EAAAA,KAACmE,EAAAA,EAAI,CAACC,OAAK,EAAArE,SACRhB,EAAcqD,UAAUK,KAAK4B,KAAI,CAACuC,EAAKrC,KACtCvE,EAAAA,EAAAA,KAACwE,EAAAA,GAAQ,CAAAzE,UACPC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAY,CAACnE,QAASgG,KADVrC,aASzBvE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CAACmC,KAAK,WAAWC,OAAqB,IAAb5G,EAAeW,SAC5B,IAAbX,IACCO,EAAAA,EAAAA,MAAA6D,EAAAA,SAAA,CAAAzD,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAK4C,cAAY,EAAA5D,SAAC,yBAGtCC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,QAAQkF,WAAS,EAAAlG,SAClChB,EAAc2D,UAAUL,eAG3B1C,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGM,GAAI,CAAEE,GAAI,GAAIP,SAAA,EACxCC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAI2G,GAAI,EAAE9G,UACvBC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAI,CAAC/F,QAAQ,WAAUhB,UACtBJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAAAhH,SAAA,EACVC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,iBAG7CJ,EAAAA,EAAAA,MAACiE,EAAAA,EAAG,CAACxD,GAAI,CAAE2D,QAAS,OAAQxD,WAAY,YAAaR,SAAA,EACnDC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAK4D,UAAU,MAAK5E,SACrChB,EAAc8C,oBAEjB7B,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAYL,MAAM,iBAAiBN,GAAI,CAAE4G,GAAI,IAAMjH,SAAC,iBAI1EC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,QAAQL,MAAM,iBAAgBX,SAC/ChB,EAAc2D,UAAUC,4BAKjC3C,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAI2G,GAAI,EAAE9G,UACvBC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAI,CAAC/F,QAAQ,WAAUhB,UACtBJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAAAhH,SAAA,EACVC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,eAG7CJ,EAAAA,EAAAA,MAACiE,EAAAA,EAAG,CAACxD,GAAI,CAAE2D,QAAS,OAAQxD,WAAY,YAAaR,SAAA,EACnDC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAK4D,UAAU,MAAK5E,SACrChB,EAAc0C,mBAEjBzB,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAYL,MAAM,iBAAiBN,GAAI,CAAE4G,GAAI,IAAMjH,SAAC,mBAI1EC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,QAAQL,MAAM,iBAAgBX,SAC/ChB,EAAc2D,UAAUE,6BAOnC5C,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,gDAG7CC,EAAAA,EAAAA,KAACkG,EAAAA,EAAc,CAACvB,UAAWxE,EAAAA,EAAOY,QAAQ,WAAUhB,UAClDJ,EAAAA,EAAAA,MAACwG,EAAAA,EAAK,CAACC,KAAK,QAAOrG,SAAA,EACjBC,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAAAtG,UACRJ,EAAAA,EAAAA,MAAC2G,EAAAA,EAAQ,CAAAvG,SAAA,EACPC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAC,UACXC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAC,aACXC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAACC,MAAM,QAAOzG,SAAC,iBAG7BC,EAAAA,EAAAA,KAACyG,EAAAA,EAAS,CAAA1G,SACPhB,EAAc2D,UAAUH,MAAM8B,KAAK4C,IAClCtH,EAAAA,EAAAA,MAAC2G,EAAAA,EAAQ,CAAAvG,SAAA,EACPC,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAEkH,EAAKpE,QACjB7C,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAAAxG,SAAEkH,EAAKnE,QAAQ6D,KAAK,SAC9B3G,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAACC,MAAM,QAAOzG,SAAEkH,EAAKlE,WAHlBkE,EAAKpE,qBAalC7C,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CAACmC,KAAK,WAAWC,OAAqB,IAAb5G,EAAeW,SAC5B,IAAbX,IACCO,EAAAA,EAAAA,MAAA6D,EAAAA,SAAA,CAAAzD,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAK4C,cAAY,EAAA5D,SAAC,iCAGtCC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,QAAQkF,WAAS,EAAAlG,SAClChB,EAAciE,SAASX,eAG1BrC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGM,GAAI,CAAEE,GAAI,GAAIP,UACxCC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAGH,UAChBC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAI,CAAC/F,QAAQ,WAAWX,GAAI,CAAE0E,QAAS,iBAAkB/E,UACxDJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAAAhH,SAAA,EACVC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAYL,MAAM,QAAQiD,cAAY,EAAA5D,SAAC,+CAG3DC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAKL,MAAM,QAAOX,SAAC,4BAGvCC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,QAAQL,MAAM,QAAQN,GAAI,CAAE8G,QAAS,IAAMnH,SAC5DhB,EAAciE,SAASC,2BAOlCjD,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAY4C,cAAY,EAAA5D,SAAC,6CAG7CC,EAAAA,EAAAA,KAACmE,EAAAA,EAAI,CAAApE,SACFhB,EAAciE,SAASE,OAAOmB,KAAI,CAAC8C,EAAO5C,KACzC5E,EAAAA,EAAAA,MAAC6E,EAAAA,GAAQ,CAAajE,WAAW,aAAYR,SAAA,EAC3CC,EAAAA,EAAAA,KAACyE,EAAAA,EAAY,CAAA1E,UACXC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CACFxD,GAAI,CACFwE,MAAO,GACPlB,OAAQ,GACRmB,aAAc,MACdC,QAASjG,EAAM8B,QAAQC,QAAQC,KAC/BkD,QAAS,OACTxD,WAAY,SACZ6G,eAAgB,SAChB1G,MAAO,QACP2G,WAAY,QACZtH,SAEDwE,EAAQ,OAGbvE,EAAAA,EAAAA,KAAC+E,EAAAA,EAAY,CACXnE,QAASuG,EAAMhE,MACfmE,WACE3H,EAAAA,EAAAA,MAAA6D,EAAAA,SAAA,CAAAzD,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAAC6D,UAAU,OAAO5D,QAAQ,QAAQL,MAAM,eAAcX,SAC9DoH,EAAMpE,SAER,WAAQoE,EAAM9E,mBAzBRkC,wBAxSjC5E,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,EAAGgD,UAAW,UAAWtD,SAAA,EACvCC,EAAAA,EAAAA,KAACQ,EAAAA,EAAc,CAACJ,GAAI,CAAEK,SAAU,GAAIC,MAAO,iBAAkBwG,QAAS,GAAK5G,GAAI,MAC/EN,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAK4C,cAAY,EAAA5D,SAAC,oEAGtCC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,QAAQL,MAAM,iBAAgBX,SAAC,8GA4U3D,C,sBC/XI7B,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,gLACD,a,sBCTAP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,sIACD,a,0ICVG,SAAS8I,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,IAAqB,oBAAqBD,EACnD,EAC8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,S,eCD3E,MAAMC,EAAY,CAAC,YAAa,aAkB1BC,GAAqBC,EAAAA,EAAAA,IAAO,MAAO,CACvC7G,KAAM,oBACNwG,KAAM,OACNM,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHpBJ,CAIxB,CACDjD,MAAO,OACPsD,UAAW,SAkDb,EAhDoCC,EAAAA,YAAiB,SAAwBC,EAASC,GACpF,MAAMN,GAAQO,EAAAA,EAAAA,GAAgB,CAC5BP,MAAOK,EACPpH,KAAM,uBAEF,UACFuH,EAAS,UACT5D,EAAY,OACVoD,EACJS,GAAQC,EAAAA,EAAAA,GAA8BV,EAAOJ,GACzCe,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGZ,EAAO,CACrCpD,cAEIiE,EA9BkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBV,EAA+BqB,EAAQ,EAuBpDE,CAAkBJ,GAClC,OAAoB1I,EAAAA,EAAAA,KAAK4H,GAAoBe,EAAAA,EAAAA,GAAS,CACpDN,IAAKA,EACLU,GAAIpE,EACJ4D,WAAWS,EAAAA,EAAAA,GAAKJ,EAAQX,KAAMM,GAC9BG,WAAYA,GACXF,GACL,G,qJChDO,SAASS,EAAyBzB,GACvC,OAAOC,EAAAA,EAAAA,IAAqB,eAAgBD,EAC9C,EACyBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,S,eCDjE,MAAMC,EAAY,CAAC,YAAa,aAmB1BuB,GAAgBrB,EAAAA,EAAAA,IAAO,QAAS,CACpC7G,KAAM,eACNwG,KAAM,OACNM,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHzBJ,CAInB,CACD9D,QAAS,uBAELoF,EAAY,CAChBpI,QAAS,QAELqI,EAAmB,QAqDzB,EApD+BjB,EAAAA,YAAiB,SAAmBC,EAASC,GAC1E,MAAMN,GAAQO,EAAAA,EAAAA,GAAgB,CAC5BP,MAAOK,EACPpH,KAAM,kBAEF,UACFuH,EAAS,UACT5D,EAAYyE,GACVrB,EACJS,GAAQC,EAAAA,EAAAA,GAA8BV,EAAOJ,GACzCe,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGZ,EAAO,CACrCpD,cAEIiE,EAjCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBgB,EAA0BL,EAAQ,EA0B/CE,CAAkBJ,GAClC,OAAoB1I,EAAAA,EAAAA,KAAKqJ,EAAAA,EAAiBC,SAAU,CAClDnE,MAAOgE,EACPpJ,UAAuBC,EAAAA,EAAAA,KAAKkJ,GAAeP,EAAAA,EAAAA,GAAS,CAClDI,GAAIpE,EACJ4D,WAAWS,EAAAA,EAAAA,GAAKJ,EAAQX,KAAMM,GAC9BF,IAAKA,EACLtC,KAAMpB,IAAcyE,EAAmB,KAAO,WAC9CV,WAAYA,GACXF,KAEP,G","sources":["../node_modules/@mui/icons-material/Schedule.js","components/mountain/components/ColSpecificNutrition.js","../node_modules/@mui/icons-material/LocalDrink.js","../node_modules/@mui/icons-material/Restaurant.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'Schedule');","import React, { useState, useEffect } from 'react';\nimport {\n  Grid, Paper, Typography, Card, CardContent, Box, Tabs, Tab, Divider,\n  List, ListItem, ListItemText, ListItemIcon, Button, CircularProgress,\n  Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow\n} from '@mui/material';\nimport RestaurantIcon from '@mui/icons-material/Restaurant';\nimport LocalDrinkIcon from '@mui/icons-material/LocalDrink';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport ScheduleIcon from '@mui/icons-material/Schedule';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * ColSpecificNutrition - Composant pour les plans nutritionnels spécifiques aux cols\n */\nfunction ColSpecificNutrition({ selectedRegion, selectedCol }) {\n  const theme = useTheme();\n  const [nutritionPlan, setNutritionPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [tabValue, setTabValue] = useState(0);\n  const [userProfile, setUserProfile] = useState({\n    weight: 70,\n    goal: 'performance'\n  });\n\n  useEffect(() => {\n    if (selectedCol) {\n      setNutritionPlan(null);\n    }\n  }, [selectedCol]);\n\n  const generateNutritionPlan = () => {\n    if (!selectedCol) return;\n    \n    setLoading(true);\n    \n    // Simuler un chargement de données\n    setTimeout(() => {\n      setNutritionPlan(generateMockNutritionPlan(selectedCol, userProfile));\n      setLoading(false);\n    }, 1500);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  if (!selectedCol) {\n    return (\n      <Paper sx={{ p: 3, textAlign: 'center' }}>\n        <RestaurantIcon sx={{ fontSize: 60, color: 'text.secondary', opacity: 0.3, mb: 2 }} />\n        <Typography variant=\"h5\" gutterBottom>\n          Sélectionnez un col pour générer un plan nutritionnel\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Choisissez un col dans l'onglet Dashboard pour obtenir des recommandations nutritionnelles adaptées.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Grid container spacing={3}>\n      {/* En-tête */}\n      <Grid item xs={12}>\n        <Paper sx={{ p: 3, mb: 2 }}>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <RestaurantIcon sx={{ fontSize: 40, color: theme.palette.primary.main }} />\n            </Grid>\n            <Grid item xs>\n              <Typography variant=\"h5\">\n                Plan nutritionnel: {selectedCol.name}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                {selectedCol.altitude}m • {selectedCol.length}km • Difficulté: {selectedCol.difficulty}/10\n              </Typography>\n            </Grid>\n            <Grid item>\n              {!nutritionPlan && !loading && (\n                <Button \n                  variant=\"contained\" \n                  color=\"primary\"\n                  onClick={generateNutritionPlan}\n                >\n                  Générer un plan\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n\n      {/* Chargement */}\n      {loading && (\n        <Grid item xs={12}>\n          <Paper sx={{ p: 5, textAlign: 'center' }}>\n            <CircularProgress />\n            <Typography variant=\"h6\" sx={{ mt: 2 }}>\n              Génération de votre plan nutritionnel personnalisé...\n            </Typography>\n          </Paper>\n        </Grid>\n      )}\n\n      {/* Plan nutritionnel */}\n      {nutritionPlan && !loading && (\n        <>\n          {/* Résumé */}\n          <Grid item xs={12} md={4}>\n            <Paper sx={{ p: 3, height: '100%' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Résumé nutritionnel\n              </Typography>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Besoins caloriques estimés\n                </Typography>\n                <Typography variant=\"h4\" color=\"primary\">\n                  {nutritionPlan.caloriesPerHour} kcal/h\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Pendant l'ascension de {selectedCol.name}\n                </Typography>\n              </Box>\n              \n              <Divider sx={{ my: 2 }} />\n              \n              <Typography variant=\"subtitle2\" gutterBottom>\n                Hydratation recommandée\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <LocalDrinkIcon sx={{ mr: 1, color: theme.palette.info.main }} />\n                <Typography variant=\"h5\" color=\"info.main\">\n                  {nutritionPlan.hydrationPerHour} ml/h\n                </Typography>\n              </Box>\n              \n              <Divider sx={{ my: 2 }} />\n              \n              <Typography variant=\"subtitle2\" gutterBottom>\n                Caractéristiques clés\n              </Typography>\n              <List dense>\n                {nutritionPlan.keyFeatures.map((feature, index) => (\n                  <ListItem key={index}>\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <Box\n                        component=\"span\"\n                        sx={{\n                          width: 8,\n                          height: 8,\n                          borderRadius: '50%',\n                          bgcolor: theme.palette.primary.main,\n                          display: 'inline-block',\n                        }}\n                      />\n                    </ListItemIcon>\n                    <ListItemText primary={feature} />\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          </Grid>\n          \n          {/* Détails du plan */}\n          <Grid item xs={12} md={8}>\n            <Paper sx={{ p: 3 }}>\n              <Alert severity=\"info\" sx={{ mb: 3 }}>\n                Ce plan nutritionnel est adapté aux caractéristiques de {selectedCol.name} et à vos objectifs de performance.\n              </Alert>\n              \n              <Tabs\n                value={tabValue}\n                onChange={handleTabChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                sx={{ mb: 3 }}\n              >\n                <Tab label=\"Avant\" icon={<ScheduleIcon />} />\n                <Tab label=\"Pendant\" icon={<TimerIcon />} />\n                <Tab label=\"Après\" icon={<RestaurantIcon />} />\n              </Tabs>\n\n              {/* Contenu de chaque onglet */}\n              <Box role=\"tabpanel\" hidden={tabValue !== 0}>\n                {tabValue === 0 && (\n                  <>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Préparation (24-48h avant)\n                    </Typography>\n                    <Typography variant=\"body1\" paragraph>\n                      {nutritionPlan.beforeCol.description}\n                    </Typography>\n                    \n                    <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 3 }}>\n                      <Table size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>Repas</TableCell>\n                            <TableCell>Aliments recommandés</TableCell>\n                            <TableCell align=\"right\">Macros</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {nutritionPlan.beforeCol.meals.map((meal) => (\n                            <TableRow key={meal.name}>\n                              <TableCell>{meal.name}</TableCell>\n                              <TableCell>{meal.foods.join(', ')}</TableCell>\n                              <TableCell align=\"right\">{meal.macros}</TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                    \n                    <Typography variant=\"subtitle2\" gutterBottom>\n                      Conseils spécifiques:\n                    </Typography>\n                    <List dense>\n                      {nutritionPlan.beforeCol.tips.map((tip, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={tip} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </>\n                )}\n              </Box>\n\n              <Box role=\"tabpanel\" hidden={tabValue !== 1}>\n                {tabValue === 1 && (\n                  <>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Pendant l'ascension\n                    </Typography>\n                    <Typography variant=\"body1\" paragraph>\n                      {nutritionPlan.duringCol.description}\n                    </Typography>\n                    \n                    <Grid container spacing={2} sx={{ mb: 3 }}>\n                      <Grid item xs={12} sm={6}>\n                        <Card variant=\"outlined\">\n                          <CardContent>\n                            <Typography variant=\"subtitle2\" gutterBottom>\n                              Hydratation\n                            </Typography>\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n                              <Typography variant=\"h4\" component=\"div\">\n                                {nutritionPlan.hydrationPerHour}\n                              </Typography>\n                              <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ ml: 0.5 }}>\n                                ml/heure\n                              </Typography>\n                            </Box>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              {nutritionPlan.duringCol.hydrationStrategy}\n                            </Typography>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <Card variant=\"outlined\">\n                          <CardContent>\n                            <Typography variant=\"subtitle2\" gutterBottom>\n                              Nutrition\n                            </Typography>\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n                              <Typography variant=\"h4\" component=\"div\">\n                                {nutritionPlan.caloriesPerHour}\n                              </Typography>\n                              <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ ml: 0.5 }}>\n                                kcal/heure\n                              </Typography>\n                            </Box>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              {nutritionPlan.duringCol.calorieStrategy}\n                            </Typography>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    </Grid>\n                    \n                    <Typography variant=\"subtitle2\" gutterBottom>\n                      Aliments et suppléments recommandés:\n                    </Typography>\n                    <TableContainer component={Paper} variant=\"outlined\">\n                      <Table size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>Type</TableCell>\n                            <TableCell>Options</TableCell>\n                            <TableCell align=\"right\">Timing</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {nutritionPlan.duringCol.foods.map((food) => (\n                            <TableRow key={food.type}>\n                              <TableCell>{food.type}</TableCell>\n                              <TableCell>{food.options.join(', ')}</TableCell>\n                              <TableCell align=\"right\">{food.timing}</TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </>\n                )}\n              </Box>\n\n              <Box role=\"tabpanel\" hidden={tabValue !== 2}>\n                {tabValue === 2 && (\n                  <>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Récupération post-col\n                    </Typography>\n                    <Typography variant=\"body1\" paragraph>\n                      {nutritionPlan.afterCol.description}\n                    </Typography>\n                    \n                    <Grid container spacing={2} sx={{ mb: 3 }}>\n                      <Grid item xs={12}>\n                        <Card variant=\"outlined\" sx={{ bgcolor: 'primary.light' }}>\n                          <CardContent>\n                            <Typography variant=\"subtitle2\" color=\"white\" gutterBottom>\n                              Fenêtre de récupération optimale\n                            </Typography>\n                            <Typography variant=\"h5\" color=\"white\">\n                              30 minutes post-effort\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"white\" sx={{ opacity: 0.8 }}>\n                              {nutritionPlan.afterCol.windowStrategy}\n                            </Typography>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    </Grid>\n                    \n                    <Typography variant=\"subtitle2\" gutterBottom>\n                      Plan de récupération en 3 phases:\n                    </Typography>\n                    <List>\n                      {nutritionPlan.afterCol.phases.map((phase, index) => (\n                        <ListItem key={index} alignItems=\"flex-start\">\n                          <ListItemIcon>\n                            <Box\n                              sx={{\n                                width: 28,\n                                height: 28,\n                                borderRadius: '50%',\n                                bgcolor: theme.palette.primary.main,\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                color: 'white',\n                                fontWeight: 'bold'\n                              }}\n                            >\n                              {index + 1}\n                            </Box>\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={phase.title}\n                            secondary={\n                              <>\n                                <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\n                                  {phase.timing}\n                                </Typography>\n                                {\" — \" + phase.description}\n                              </>\n                            }\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </>\n                )}\n              </Box>\n            </Paper>\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n}\n\n// Fonction pour générer un plan nutritionnel mocké\nfunction generateMockNutritionPlan(col, userProfile) {\n  // Calculs basés sur le col et le profil utilisateur\n  const caloriesPerHour = Math.round(\n    (col.gradient > 8 ? 650 : col.gradient > 6 ? 550 : 450) *\n    (userProfile.weight / 70)\n  );\n  \n  const hydrationPerHour = Math.round(\n    (col.altitude > 2000 ? 800 : 700) *\n    (userProfile.weight / 70)\n  );\n  \n  // Ajustements basés sur l'altitude\n  const altitudeAdjustment = col.altitude > 2500 ? \"haute altitude\" : \n                            col.altitude > 2000 ? \"altitude moyenne\" : \"faible altitude\";\n  \n  // Caractéristiques clés basées sur le col\n  const keyFeatures = [];\n  \n  if (col.altitude > 2000) {\n    keyFeatures.push(\"Stratégie adaptée à l'altitude\");\n    keyFeatures.push(\"Focus sur l'hydratation renforcée\");\n  }\n  \n  if (col.gradient > 8) {\n    keyFeatures.push(\"Support nutritionnel pour forte pente\");\n    keyFeatures.push(\"Apports énergétiques fractionnés\");\n  }\n  \n  if (col.length > 15) {\n    keyFeatures.push(\"Plan pour effort prolongé\");\n    keyFeatures.push(\"Rotation des sources de glucides\");\n  }\n  \n  keyFeatures.push(\"Électrolytes adaptés à l'effort montagne\");\n\n  return {\n    caloriesPerHour,\n    hydrationPerHour,\n    keyFeatures,\n    colId: col.id,\n    userWeight: userProfile.weight,\n    \n    // Recommandations avant le col\n    beforeCol: {\n      description: `Pour préparer votre ascension de ${col.name} (${altitudeAdjustment}), nous recommandons une stratégie de supercompensation glucidique modérée sur les 48h précédant l'effort, avec un focus sur l'hydratation et les électrolytes.`,\n      meals: [\n        {\n          name: \"Dîner (J-2)\",\n          foods: [\"Pâtes complètes\", \"Patate douce\", \"Protéine maigre\", \"Légumes verts\"],\n          macros: \"60% G, 20% P, 20% L\"\n        },\n        {\n          name: \"Déjeuner (J-1)\",\n          foods: [\"Riz\", \"Légumineuses\", \"Poisson/Poulet\", \"Avocat\"],\n          macros: \"65% G, 20% P, 15% L\"\n        },\n        {\n          name: \"Petit-déjeuner (Jour J)\",\n          foods: [\"Flocons d'avoine\", \"Fruits secs\", \"Yaourt grec\", \"Miel\"],\n          macros: \"70% G, 15% P, 15% L\"\n        }\n      ],\n      tips: [\n        `Augmentez votre consommation d'eau à 45ml/kg de poids corporel les 24h avant de gravir ${col.name}`,\n        \"Limitez les aliments riches en fibres la veille pour éviter les problèmes digestifs\",\n        \"Consommez 3-5mg/kg de caféine 60 minutes avant le début de l'ascension\",\n        \"Intégrez des sources de sodium dans vos repas pour optimiser l'hydratation\"\n      ]\n    },\n    \n    // Recommandations pendant le col\n    duringCol: {\n      description: `L'ascension de ${col.name} nécessite une stratégie nutritionnelle adaptée à sa longueur et son gradient. Voici les recommandations pour maintenir votre énergie tout au long de l'effort.`,\n      hydrationStrategy: `Pour cette ascension en ${altitudeAdjustment}, buvez régulièrement en petites quantités (150-200ml toutes les 15-20 minutes).`,\n      calorieStrategy: `Visez ${caloriesPerHour} kcal/heure réparties en apports réguliers pour maintenir votre glycémie stable.`,\n      foods: [\n        {\n          type: \"Boissons\",\n          options: [\"Boisson isotonique\", \"Eau + électrolytes\", \"Boisson de maltodextrine\"],\n          timing: \"Toutes les 15-20 min\"\n        },\n        {\n          type: \"Glucides solides\",\n          options: [\"Barre énergétique\", \"Banane\", \"Pain d'épices\", \"Riz gluant\"],\n          timing: \"Toutes les 45-60 min\"\n        },\n        {\n          type: \"Gels énergétiques\",\n          options: [\"Gel + caféine\", \"Gel + électrolytes\", \"Gel + acides aminés\"],\n          timing: \"Sections difficiles\"\n        },\n        {\n          type: \"Électrolytes\",\n          options: [\"Pastilles effervescentes\", \"Capsules de sel\", \"Boisson électrolytique\"],\n          timing: \"Selon transpiration\"\n        }\n      ]\n    },\n    \n    // Recommandations après le col\n    afterCol: {\n      description: `Après l'effort intense de l'ascension de ${col.name}, votre corps a besoin d'une stratégie de récupération optimisée pour restaurer les réserves énergétiques, réparer les tissus musculaires et réhydrater l'organisme.`,\n      windowStrategy: \"Apport combiné de protéines (20-25g) et glucides (1g/kg de poids corporel) dans les 30 minutes post-effort\",\n      phases: [\n        {\n          title: \"Récupération immédiate (0-30 min)\",\n          timing: \"Immédiatement après l'effort\",\n          description: \"Boisson de récupération riche en électrolytes avec ratio glucides/protéines de 3:1 ou 4:1. Exemple: shake protéiné avec banane et miel.\"\n        },\n        {\n          title: \"Repas de récupération (1-2h)\",\n          timing: \"1-2 heures après l'effort\",\n          description: \"Repas complet équilibré riche en glucides complexes, protéines de qualité et graisses saines. Exemple: quinoa avec poulet, légumes et avocat.\"\n        },\n        {\n          title: \"Récupération prolongée (3-24h)\",\n          timing: \"Jusqu'au lendemain\",\n          description: \"Poursuite de l'hydratation et stratégie alimentaire équilibrée avec apport augmenté en antioxydants. Monitoring de la couleur des urines pour vérifier l'hydratation.\"\n        }\n      ]\n    }\n  };\n}\n\nexport default ColSpecificNutrition;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m3 2 2.01 18.23C5.13 21.23 5.97 22 7 22h10c1.03 0 1.87-.77 1.99-1.77L21 2zm9 17c-1.66 0-3-1.34-3-3 0-2 3-5.4 3-5.4s3 3.4 3 5.4c0 1.66-1.34 3-3 3m6.33-11H5.67l-.44-4h13.53z\"\n}), 'LocalDrink');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 9H9V2H7v7H5V2H3v7c0 2.12 1.66 3.84 3.75 3.97V22h2.5v-9.03C11.34 12.84 13 11.12 13 9V2h-2zm5-3v8h2.5v8H21V2c-2.76 0-5 2.24-5 4\"\n}), 'Restaurant');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","_ref","selectedRegion","selectedCol","theme","useTheme","nutritionPlan","setNutritionPlan","useState","loading","setLoading","tabValue","setTabValue","userProfile","setUserProfile","weight","goal","useEffect","_jsxs","Grid","container","spacing","children","_jsx","item","xs","Paper","sx","p","mb","alignItems","RestaurantIcon","fontSize","color","palette","primary","main","Typography","variant","name","altitude","length","difficulty","Button","onClick","generateNutritionPlan","setTimeout","col","caloriesPerHour","Math","round","gradient","hydrationPerHour","altitudeAdjustment","keyFeatures","push","colId","id","userWeight","beforeCol","description","meals","foods","macros","tips","duringCol","hydrationStrategy","calorieStrategy","type","options","timing","afterCol","windowStrategy","phases","title","generateMockNutritionPlan","textAlign","CircularProgress","mt","_Fragment","md","height","gutterBottom","Box","Divider","my","display","LocalDrinkIcon","mr","info","List","dense","map","feature","index","ListItem","ListItemIcon","minWidth","component","width","borderRadius","bgcolor","ListItemText","Alert","severity","Tabs","value","onChange","handleTabChange","event","newValue","indicatorColor","textColor","Tab","label","icon","ScheduleIcon","TimerIcon","role","hidden","paragraph","TableContainer","Table","size","TableHead","TableRow","TableCell","align","TableBody","meal","join","tip","sm","Card","CardContent","ml","food","opacity","phase","justifyContent","fontWeight","secondary","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","styled","overridesResolver","props","styles","root","overflowX","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","defaultComponent","Tablelvl2Context","Provider"],"sourceRoot":""}