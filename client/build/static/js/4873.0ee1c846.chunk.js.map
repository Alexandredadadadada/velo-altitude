{"version":3,"file":"static/js/4873.0ee1c846.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Opacity.js","../node_modules/@mui/icons-material/esm/WaterDrop.js","../node_modules/@mui/icons-material/esm/Science.js","../node_modules/@mui/icons-material/esm/Accessibility.js","services/monitoringService.js","components/nutrition/NutritionCalculator.js","../node_modules/@mui/icons-material/esm/Fastfood.js","../node_modules/@mui/icons-material/esm/Timeline.js","../node_modules/@mui/icons-material/esm/RestaurantMenu.js","../node_modules/@mui/icons-material/esm/Cake.js","../node_modules/@mui/icons-material/esm/Timer.js","../node_modules/@mui/icons-material/esm/LocalFireDepartment.js","../node_modules/@mui/icons-material/esm/LocalDining.js","../node_modules/@mui/icons-material/esm/MonitorWeight.js","../node_modules/@mui/icons-material/esm/EggAlt.js","../node_modules/@mui/icons-material/esm/Straighten.js","../node_modules/@mui/icons-material/esm/Restaurant.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.66 8 12 2.35 6.34 8C4.78 9.56 4 11.64 4 13.64s.78 4.11 2.34 5.67 3.61 2.35 5.66 2.35 4.1-.79 5.66-2.35S20 15.64 20 13.64 19.22 9.56 17.66 8M6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14z\"\n}), 'Opacity');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2c-5.33 4.55-8 8.48-8 11.8 0 4.98 3.8 8.2 8 8.2s8-3.22 8-8.2c0-3.32-2.67-7.25-8-11.8M7.83 14c.37 0 .67.26.74.62.41 2.22 2.28 2.98 3.64 2.87.43-.02.79.32.79.75 0 .4-.32.73-.72.75-2.13.13-4.62-1.09-5.19-4.12-.08-.45.28-.87.74-.87\"\n}), 'WaterDrop');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6\"\n}), 'Science');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m9 7h-6v13h-2v-6h-2v6H9V9H3V7h18z\"\n}), 'Accessibility');","/**\n * Service de monitoring client\n * Collecte et envoie des métriques de performance, d'utilisation et d'erreurs\n * au backend pour analyse et affichage dans le tableau de bord de monitoring\n */\n\nimport axios from 'axios';\n\n// Configuration de base\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst METRICS_ENDPOINT = `${API_URL}/monitoring/metrics`;\nconst PERFORMANCE_ENDPOINT = `${API_URL}/monitoring/performance`;\nconst ERROR_ENDPOINT = `${API_URL}/monitoring/errors`;\nconst USER_TRACKING_ENDPOINT = `${API_URL}/monitoring/user-tracking`;\nconst API_METRICS_ENDPOINT = `${API_URL}/monitoring/api-metrics`;\n\n// Configuration des intervalles d'envoi de données\nconst BATCH_INTERVAL = 30000; // 30 secondes entre chaque envoi de lot de métriques\nconst MAX_BATCH_SIZE = 50; // Nombre maximum de métriques par lot\n\n// Files d'attente pour les différents types de métriques\nlet performanceMetrics = [];\nlet errorMetrics = [];\nlet userMetrics = [];\nlet apiMetrics = [];\n\n// Statistiques d'API en temps réel (pour le dashboard)\nlet apiStats = {\n  callCount: 0,\n  errorCount: 0,\n  cacheHitCount: 0,\n  fallbackCount: 0,\n  retryCount: 0,\n  responseTimeTotal: 0,\n  longestResponseTime: 0,\n  endpoints: {},\n  lastUpdated: Date.now(),\n  // Données horodatées pour les graphiques\n  timeSeriesData: {\n    timestamps: [],\n    responseTimes: [],\n    errorRates: [],\n    cacheHitRates: []\n  }\n};\n\n// Map des debounces des appels API pour éviter les appels en double\nconst apiDebounceMap = new Map();\n\n// Indicateurs d'état\nlet isInitialized = false;\nlet isSending = false;\nlet sessionId = null;\n\n/**\n * Initialise le service de monitoring\n */\nconst initialize = () => {\n  if (isInitialized) return;\n  \n  // Générer un ID de session unique\n  sessionId = `${Date.now()}-${Math.random().toString(36).substring(2, 15)}`;\n  \n  // Configurer l'envoi périodique de métriques\n  setInterval(sendBatchedMetrics, BATCH_INTERVAL);\n  \n  // Écouter les événements de performance du navigateur\n  if (window.PerformanceObserver) {\n    try {\n      // Observer les mesures de performance Web Vitals\n      const perfObserver = new PerformanceObserver((list) => {\n        list.getEntries().forEach((entry) => {\n          if (['CLS', 'FID', 'LCP', 'FCP', 'TTFB'].includes(entry.name)) {\n            trackBrowserPerformance(entry.name, entry.value, entry);\n          }\n        });\n      });\n      \n      perfObserver.observe({ type: 'largest-contentful-paint', buffered: true });\n      perfObserver.observe({ type: 'first-input', buffered: true });\n      perfObserver.observe({ type: 'layout-shift', buffered: true });\n      perfObserver.observe({ type: 'paint', buffered: true });\n      \n    } catch (e) {\n      console.warn('PerformanceObserver not fully supported:', e);\n    }\n  }\n  \n  // Intercepter les erreurs non gérées\n  window.addEventListener('error', (event) => {\n    trackError('unhandled_exception', {\n      message: event.message,\n      filename: event.filename,\n      lineno: event.lineno,\n      colno: event.colno,\n      stack: event.error ? event.error.stack : null\n    });\n  });\n  \n  // Intercepter les rejets de promesses non gérés\n  window.addEventListener('unhandledrejection', (event) => {\n    trackError('unhandled_promise_rejection', {\n      reason: event.reason ? event.reason.toString() : 'Unknown reason',\n      stack: event.reason && event.reason.stack ? event.reason.stack : null\n    });\n  });\n  \n  // Marquer comme initialisé\n  isInitialized = true;\n  \n  // Envoyer une métrique d'initialisation\n  trackGenericMetric('monitoring_initialized', {\n    userAgent: navigator.userAgent,\n    screenSize: `${window.innerWidth}x${window.innerHeight}`,\n    timestamp: Date.now()\n  });\n};\n\n/**\n * Envoie les métriques accumulées au serveur\n */\nconst sendBatchedMetrics = async () => {\n  if (isSending || \n      (performanceMetrics.length === 0 && \n       errorMetrics.length === 0 && \n       userMetrics.length === 0 && \n       apiMetrics.length === 0)) {\n    return;\n  }\n  \n  isSending = true;\n  \n  try {\n    // Collecter les métriques actuelles et vider les files d'attente\n    const metricsToSend = {\n      sessionId,\n      timestamp: Date.now(),\n      performance: [...performanceMetrics].slice(0, MAX_BATCH_SIZE),\n      errors: [...errorMetrics].slice(0, MAX_BATCH_SIZE),\n      userActivity: [...userMetrics].slice(0, MAX_BATCH_SIZE),\n      apiCalls: [...apiMetrics].slice(0, MAX_BATCH_SIZE)\n    };\n    \n    // Vider les files d'attente des métriques envoyées\n    performanceMetrics = performanceMetrics.slice(MAX_BATCH_SIZE);\n    errorMetrics = errorMetrics.slice(MAX_BATCH_SIZE);\n    userMetrics = userMetrics.slice(MAX_BATCH_SIZE);\n    apiMetrics = apiMetrics.slice(MAX_BATCH_SIZE);\n    \n    // Envoyer les métriques au backend\n    await axios.post(METRICS_ENDPOINT, metricsToSend);\n    \n    // Mettre à jour les statistiques d'API pour le dashboard\n    updateApiStats();\n    \n  } catch (error) {\n    // En cas d'erreur, stocker localement pour réessayer plus tard\n    console.warn('Failed to send metrics to server:', error);\n    \n    // Stocker jusqu'à 1000 métriques localement en cas de problème de connexion\n    const storedMetrics = JSON.parse(localStorage.getItem('pendingMetrics') || '[]');\n    if (storedMetrics.length < 1000) {\n      localStorage.setItem('pendingMetrics', JSON.stringify([\n        ...storedMetrics,\n        {\n          timestamp: Date.now(),\n          metrics: metricsToSend\n        }\n      ]));\n    }\n  } finally {\n    isSending = false;\n  }\n};\n\n/**\n * Suivi des performances d'un composant (temps de rendu, chargement, etc.)\n * @param {string} componentName - Nom du composant\n * @param {number} duration - Durée en millisecondes\n * @param {Object} metadata - Métadonnées supplémentaires\n */\nconst trackComponentPerformance = (componentName, duration, metadata = {}) => {\n  if (!isInitialized) initialize();\n  \n  performanceMetrics.push({\n    type: 'component_performance',\n    component: componentName,\n    duration,\n    timestamp: Date.now(),\n    ...metadata\n  });\n  \n  // Si des métriques clés sont lentes, envoyer immédiatement\n  if (duration > 1000 && componentName.includes('Calculator')) {\n    sendBatchedMetrics();\n  }\n};\n\n/**\n * Suivi du démontage d'un composant (fin de session d'utilisation)\n * @param {string} componentName - Nom du composant\n * @param {Object} sessionData - Données de la session (durée, actions, etc.)\n */\nconst trackComponentUnmount = (componentName, sessionData = {}) => {\n  if (!isInitialized) initialize();\n  \n  performanceMetrics.push({\n    type: 'component_unmount',\n    component: componentName,\n    timestamp: Date.now(),\n    ...sessionData\n  });\n};\n\n/**\n * Suivi des performances du navigateur (Web Vitals)\n * @param {string} metricName - Nom de la métrique (CLS, FID, LCP, etc.)\n * @param {number} value - Valeur de la métrique\n * @param {Object} entry - Entrée de performance originale\n */\nconst trackBrowserPerformance = (metricName, value, entry = {}) => {\n  if (!isInitialized) initialize();\n  \n  performanceMetrics.push({\n    type: 'browser_performance',\n    metricName,\n    value,\n    timestamp: Date.now(),\n    url: window.location.href,\n    details: entry\n  });\n};\n\n/**\n * Suivi des performances d'API\n * @param {string} endpoint - Endpoint de l'API appelé\n * @param {number} duration - Durée en millisecondes\n * @param {Object} metadata - Métadonnées (statut, taille de la réponse, etc.)\n */\nconst trackApiPerformance = (endpoint, duration, metadata = {}) => {\n  if (!isInitialized) initialize();\n  \n  apiMetrics.push({\n    type: 'api_performance',\n    endpoint,\n    duration,\n    timestamp: Date.now(),\n    ...metadata\n  });\n  \n  // Mise à jour des statistiques en temps réel\n  apiStats.callCount++;\n  apiStats.responseTimeTotal += duration;\n  apiStats.longestResponseTime = Math.max(apiStats.longestResponseTime, duration);\n  \n  // Mise à jour des données par endpoint\n  if (!apiStats.endpoints[endpoint]) {\n    apiStats.endpoints[endpoint] = {\n      callCount: 0,\n      errorCount: 0,\n      cacheHitCount: 0,\n      responseTimeTotal: 0,\n      avgResponseTime: 0\n    };\n  }\n  \n  apiStats.endpoints[endpoint].callCount++;\n  apiStats.endpoints[endpoint].responseTimeTotal += duration;\n  apiStats.endpoints[endpoint].avgResponseTime = \n    apiStats.endpoints[endpoint].responseTimeTotal / apiStats.endpoints[endpoint].callCount;\n  \n  // Mise à jour des données temporelles pour les graphiques\n  updateTimeSeriesData();\n  \n  // Si un appel API est particulièrement lent, signaler immédiatement\n  if (duration > 3000) {\n    sendBatchedMetrics();\n  }\n};\n\n/**\n * Suivi des erreurs\n * @param {string} errorType - Type d'erreur\n * @param {Object} errorDetails - Détails de l'erreur\n */\nconst trackError = (errorType, errorDetails = {}) => {\n  if (!isInitialized) initialize();\n  \n  errorMetrics.push({\n    type: 'error',\n    errorType,\n    timestamp: Date.now(),\n    url: window.location.href,\n    ...errorDetails\n  });\n  \n  // Les erreurs sont envoyées immédiatement\n  sendBatchedMetrics();\n};\n\n/**\n * Suivi des interactions utilisateur\n * @param {string} componentName - Nom du composant\n * @param {string} action - Action effectuée\n * @param {Object} metadata - Métadonnées supplémentaires\n */\nconst trackUserInteraction = (componentName, action, metadata = {}) => {\n  if (!isInitialized) initialize();\n  \n  userMetrics.push({\n    type: 'user_interaction',\n    component: componentName,\n    action,\n    timestamp: Date.now(),\n    url: window.location.href,\n    ...metadata\n  });\n};\n\n/**\n * Suivi de l'engagement utilisateur sur la durée\n * @param {string} feature - Fonctionnalité utilisée\n * @param {Object} engagementData - Données d'engagement\n */\nconst trackUserEngagement = (feature, engagementData = {}) => {\n  if (!isInitialized) initialize();\n  \n  userMetrics.push({\n    type: 'user_engagement',\n    feature,\n    timestamp: Date.now(),\n    url: window.location.href,\n    ...engagementData\n  });\n};\n\n/**\n * Suivi d'une métrique générique\n * @param {string} metricName - Nom de la métrique\n * @param {Object} data - Données associées\n */\nconst trackGenericMetric = (metricName, data = {}) => {\n  if (!isInitialized) initialize();\n  \n  performanceMetrics.push({\n    type: 'generic',\n    metricName,\n    timestamp: Date.now(),\n    ...data\n  });\n};\n\n/**\n * Enregistre une erreur d'API\n * @param {string} endpoint - Endpoint de l'API\n * @param {Object} error - Objet d'erreur\n * @param {Object} metadata - Métadonnées supplémentaires\n */\nconst logApiError = (endpoint, error, metadata = {}) => {\n  if (!isInitialized) initialize();\n  \n  errorMetrics.push({\n    type: 'api_error',\n    endpoint,\n    errorMessage: error.message || 'Unknown error',\n    errorCode: error.response?.status || 0,\n    timestamp: Date.now(),\n    ...metadata\n  });\n  \n  // Mise à jour des statistiques\n  apiStats.errorCount++;\n  \n  if (apiStats.endpoints[endpoint]) {\n    apiStats.endpoints[endpoint].errorCount++;\n  }\n  \n  // Mise à jour des données temporelles\n  updateTimeSeriesData();\n  \n  // Les erreurs API sont envoyées immédiatement\n  sendBatchedMetrics();\n};\n\n/**\n * Enregistre l'utilisation d'un système de fallback\n * @param {string} endpoint - Endpoint de l'API\n * @param {string} fallbackType - Type de fallback (cache, données locales, etc.)\n * @param {Object} metadata - Métadonnées supplémentaires\n */\nconst logFallbackUsage = (endpoint, fallbackType, metadata = {}) => {\n  if (!isInitialized) initialize();\n  \n  apiMetrics.push({\n    type: 'api_fallback',\n    endpoint,\n    fallbackType,\n    timestamp: Date.now(),\n    ...metadata\n  });\n  \n  // Mise à jour des statistiques\n  apiStats.fallbackCount++;\n  \n  // Mise à jour des données temporelles\n  updateTimeSeriesData();\n};\n\n/**\n * Enregistre un hit de cache\n * @param {string} endpoint - Endpoint de l'API\n * @param {number} savedTime - Temps économisé en ms\n */\nconst logCacheHit = (endpoint, savedTime, metadata = {}) => {\n  if (!isInitialized) initialize();\n  \n  apiMetrics.push({\n    type: 'cache_hit',\n    endpoint,\n    savedTime,\n    timestamp: Date.now(),\n    ...metadata\n  });\n  \n  // Mise à jour des statistiques\n  apiStats.cacheHitCount++;\n  \n  if (apiStats.endpoints[endpoint]) {\n    apiStats.endpoints[endpoint].cacheHitCount++;\n  }\n  \n  // Mise à jour des données temporelles\n  updateTimeSeriesData();\n};\n\n/**\n * Incrémente le compteur de retries\n * @param {string} endpoint - Endpoint de l'API\n * @param {number} retryCount - Nombre de tentatives\n */\nconst incrementRetryCount = (endpoint, retryCount = 1) => {\n  apiStats.retryCount += retryCount;\n  \n  apiMetrics.push({\n    type: 'api_retry',\n    endpoint,\n    retryCount,\n    timestamp: Date.now()\n  });\n  \n  // Mise à jour des données temporelles\n  updateTimeSeriesData();\n};\n\n/**\n * Suit un appel API et gère le debouncing pour éviter les appels redondants\n * @param {string} endpoint - Endpoint de l'API\n * @param {Object} parameters - Paramètres de l'appel\n * @param {Function} apiCall - Fonction d'appel API à exécuter\n * @returns {Promise<any>} Résultat de l'appel API\n */\nconst trackApiCall = async (endpoint, parameters, apiCall) => {\n  if (!isInitialized) initialize();\n  \n  // Créer une clé unique pour cet appel (endpoint + paramètres sérialisés)\n  const callKey = `${endpoint}:${JSON.stringify(parameters)}`;\n  \n  // Vérifier si cet appel est déjà en cours (debouncing)\n  if (apiDebounceMap.has(callKey)) {\n    return apiDebounceMap.get(callKey);\n  }\n  \n  // Enregistrer le début de l'appel\n  const startTime = performance.now();\n  \n  // Créer une promesse pour cet appel et la stocker dans la map de debounce\n  const apiPromise = new Promise(async (resolve, reject) => {\n    try {\n      // Exécuter l'appel API\n      const result = await apiCall();\n      \n      // Calculer la durée\n      const duration = performance.now() - startTime;\n      \n      // Suivre la performance\n      trackApiPerformance(endpoint, duration, {\n        status: 'success',\n        parameterCount: Object.keys(parameters).length,\n        responseSize: JSON.stringify(result).length,\n        cached: result.cached || false\n      });\n      \n      // Si le résultat provient du cache, enregistrer un hit de cache\n      if (result.cached) {\n        logCacheHit(endpoint, duration, { result });\n      }\n      \n      resolve(result);\n    } catch (error) {\n      // Calculer la durée même en cas d'erreur\n      const duration = performance.now() - startTime;\n      \n      // Enregistrer l'erreur\n      logApiError(endpoint, error, {\n        parameters,\n        duration\n      });\n      \n      reject(error);\n    } finally {\n      // Supprimer l'appel de la map de debounce après un court délai\n      // pour permettre à d'autres appels identiques d'utiliser la même promesse\n      setTimeout(() => {\n        apiDebounceMap.delete(callKey);\n      }, 100);\n    }\n  });\n  \n  // Stocker la promesse dans la map\n  apiDebounceMap.set(callKey, apiPromise);\n  \n  return apiPromise;\n};\n\n/**\n * Réinitialise les statistiques d'API\n */\nconst resetApiStats = () => {\n  apiStats = {\n    callCount: 0,\n    errorCount: 0,\n    cacheHitCount: 0,\n    fallbackCount: 0,\n    retryCount: 0,\n    responseTimeTotal: 0,\n    longestResponseTime: 0,\n    endpoints: {},\n    lastUpdated: Date.now(),\n    timeSeriesData: {\n      timestamps: [],\n      responseTimes: [],\n      errorRates: [],\n      cacheHitRates: []\n    }\n  };\n};\n\n/**\n * Récupère les statistiques d'API actuelles\n * @returns {Object} Statistiques d'API\n */\nconst getApiStats = () => {\n  // Calculer les statistiques dérivées\n  const stats = {\n    ...apiStats,\n    avgResponseTime: apiStats.callCount > 0 \n      ? apiStats.responseTimeTotal / apiStats.callCount \n      : 0,\n    errorRate: apiStats.callCount > 0 \n      ? (apiStats.errorCount / apiStats.callCount) * 100 \n      : 0,\n    cacheHitRate: apiStats.callCount > 0 \n      ? (apiStats.cacheHitCount / apiStats.callCount) * 100 \n      : 0,\n    retryRate: apiStats.callCount > 0 \n      ? (apiStats.retryCount / apiStats.callCount) * 100 \n      : 0\n  };\n  \n  return stats;\n};\n\n/**\n * Met à jour les statistiques d'API pour les dashboards\n */\nconst updateApiStats = async () => {\n  try {\n    // Envoyer les statistiques au backend\n    await axios.post(API_METRICS_ENDPOINT, getApiStats());\n    \n    // Mettre à jour le timestamp de dernière mise à jour\n    apiStats.lastUpdated = Date.now();\n  } catch (error) {\n    console.warn('Failed to update API stats:', error);\n  }\n};\n\n/**\n * Met à jour les données temporelles pour les graphiques\n */\nconst updateTimeSeriesData = () => {\n  const now = Date.now();\n  \n  // Limiter les points de données (garder les 100 derniers points)\n  if (apiStats.timeSeriesData.timestamps.length >= 100) {\n    apiStats.timeSeriesData.timestamps.shift();\n    apiStats.timeSeriesData.responseTimes.shift();\n    apiStats.timeSeriesData.errorRates.shift();\n    apiStats.timeSeriesData.cacheHitRates.shift();\n  }\n  \n  // Ajouter de nouveaux points de données\n  apiStats.timeSeriesData.timestamps.push(now);\n  \n  // Calculer les métriques\n  const avgResponseTime = apiStats.callCount > 0 \n    ? apiStats.responseTimeTotal / apiStats.callCount \n    : 0;\n    \n  const errorRate = apiStats.callCount > 0 \n    ? (apiStats.errorCount / apiStats.callCount) * 100 \n    : 0;\n    \n  const cacheHitRate = apiStats.callCount > 0 \n    ? (apiStats.cacheHitCount / apiStats.callCount) * 100 \n    : 0;\n  \n  // Ajouter les points de données\n  apiStats.timeSeriesData.responseTimes.push(avgResponseTime);\n  apiStats.timeSeriesData.errorRates.push(errorRate);\n  apiStats.timeSeriesData.cacheHitRates.push(cacheHitRate);\n};\n\n// Export du service\nconst monitoringService = {\n  initialize,\n  trackComponentPerformance,\n  trackComponentUnmount,\n  trackBrowserPerformance,\n  trackApiPerformance,\n  trackError,\n  trackUserInteraction,\n  trackUserEngagement,\n  trackGenericMetric,\n  logApiError,\n  logFallbackUsage,\n  logCacheHit,\n  incrementRetryCount,\n  trackApiCall,\n  getApiStats,\n  resetApiStats,\n  updateApiStats\n};\n\n// Auto-initialisation\ninitialize();\n\nexport default monitoringService;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  TextField,\n  Button,\n  MenuItem,\n  CircularProgress,\n  Alert,\n  Card,\n  CardContent,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  Slider,\n  FormHelperText,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport {\n  DirectionsBike,\n  Straighten,\n  MonitorWeight,\n  Accessibility,\n  Timeline,\n  Speed,\n  LocalFireDepartment,\n  WaterDrop,\n  Fastfood,\n  EggAlt,\n  Cake,\n  Opacity,\n  RestaurantMenu,\n  Event,\n  Science,\n  Timer,\n  Restaurant,\n  LocalDining\n} from '@mui/icons-material';\nimport nutritionService from '../../services/nutritionService';\nimport monitoringService from '../../services/monitoringService';\n\n/**\n * Calculateur nutritionnel pour les cyclistes\n * Permet de calculer les besoins caloriques et en macronutriments en fonction du profil et des objectifs\n */\nconst NutritionCalculator = ({ userId }) => {\n  // État du formulaire\n  const [formData, setFormData] = useState({\n    weight: '',\n    height: '',\n    age: '',\n    gender: 'male',\n    activityLevel: 'moderatelyActive',\n    goals: 'performance',\n    trainingDuration: 60,\n    trainingType: 'endurance', // Type d'entraînement (endurance, intensité, etc.)\n    trainingIntensity: 'moderate', // Intensité de l'entraînement\n    weeklyDistance: 100, // Distance hebdomadaire en km\n    upcomingEvent: false, // Préparation pour un événement\n    eventType: '', // Type d'événement (course, granfondo, etc.)\n    eventDate: null // Date de l'événement\n  });\n\n  // États pour le traitement et les résultats\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [results, setResults] = useState(null);\n  const [formErrors, setFormErrors] = useState({});\n\n  // Niveaux d'activité\n  const activityLevels = [\n    { value: 'sedentary', label: 'Sédentaire (peu ou pas d\\'exercice)' },\n    { value: 'lightlyActive', label: 'Légèrement actif (exercice léger 1-3 jours/semaine)' },\n    { value: 'moderatelyActive', label: 'Modérément actif (exercice modéré 3-5 jours/semaine)' },\n    { value: 'veryActive', label: 'Très actif (exercice intense 6-7 jours/semaine)' },\n    { value: 'extremelyActive', label: 'Extrêmement actif (exercice intense quotidien ou athlète professionnel)' }\n  ];\n\n  // Objectifs nutritionnels\n  const nutritionGoals = [\n    { value: 'weightLoss', label: 'Perte de poids' },\n    { value: 'maintenance', label: 'Maintien du poids' },\n    { value: 'performance', label: 'Performance optimale' }\n  ];\n\n  // Types d'entraînement pour cyclistes\n  const trainingTypes = [\n    { value: 'endurance', label: 'Endurance (longue distance, intensité modérée)' },\n    { value: 'tempo', label: 'Tempo/Sweet Spot (intensité soutenue)' },\n    { value: 'threshold', label: 'Seuil (intervalles à haute intensité)' },\n    { value: 'vo2max', label: 'VO2max (intervalles très intenses)' },\n    { value: 'sprint', label: 'Sprint/Force (efforts explosifs)' },\n    { value: 'recovery', label: 'Récupération (intensité très faible)' }\n  ];\n\n  // Intensités d'entraînement\n  const trainingIntensities = [\n    { value: 'low', label: 'Faible (Zone 1-2: <75% FCM)' },\n    { value: 'moderate', label: 'Modérée (Zone 3: 75-85% FCM)' },\n    { value: 'high', label: 'Élevée (Zone 4: 85-95% FCM)' },\n    { value: 'very_high', label: 'Très élevée (Zone 5-6: >95% FCM)' }\n  ];\n\n  // Types d'événements\n  const eventTypes = [\n    { value: 'race', label: 'Course (compétition)' },\n    { value: 'granfondo', label: 'Cyclosportive/Gran Fondo' },\n    { value: 'century', label: 'Century Ride (100+ km)' },\n    { value: 'multi_day', label: 'Événement multi-jours' }\n  ];\n\n  // Références pour le suivi des performances\n  const renderStartTime = useRef(Date.now());\n  const interactionCount = useRef(0);\n  const formComplexity = useRef('simple');\n  const calculationStartTime = useRef(null);\n\n  // Gérer les changements de champ\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Incrémentation du compteur d'interactions\n    interactionCount.current += 1;\n    \n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Mise à jour de la complexité du formulaire\n    updateFormComplexity();\n    \n    // Effacer l'erreur correspondante\n    if (formErrors[name]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: null\n      });\n    }\n  };\n\n  // Gérer le changement de durée d'entraînement via le slider\n  const handleSliderChange = (event, newValue) => {\n    setFormData({\n      ...formData,\n      trainingDuration: newValue\n    });\n  };\n\n  // Évaluer la complexité du formulaire basée sur les champs remplis\n  const updateFormComplexity = () => {\n    // Compter le nombre de champs remplis\n    const filledFields = Object.values(formData).filter(val => \n      val !== '' && val !== null && val !== false).length;\n    \n    if (filledFields >= 10 || formData.upcomingEvent) {\n      formComplexity.current = 'complete';\n    } else if (filledFields >= 6) {\n      formComplexity.current = 'advanced';\n    } else {\n      formComplexity.current = 'simple';\n    }\n  };\n\n  // Validation du formulaire\n  const validateForm = () => {\n    let errors = {};\n    let isValid = true;\n\n    if (!formData.weight || formData.weight <= 0) {\n      errors.weight = 'Veuillez entrer un poids valide';\n      isValid = false;\n    }\n\n    if (!formData.height || formData.height <= 0) {\n      errors.height = 'Veuillez entrer une taille valide';\n      isValid = false;\n    }\n\n    if (!formData.age || formData.age <= 0 || formData.age > 120) {\n      errors.age = 'Veuillez entrer un âge valide';\n      isValid = false;\n    }\n\n    setFormErrors(errors);\n    return isValid;\n  };\n\n  // Soumission du formulaire\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Enregistrement des métriques d'interaction\n    monitoringService.trackUserInteraction('nutrition_calculator', 'submit', {\n      formComplexity: formComplexity.current,\n      interactionCount: interactionCount.current,\n      fieldsCount: Object.keys(formData).length\n    });\n    \n    const errors = validateForm();\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    calculationStartTime.current = Date.now();\n    \n    try {\n      // Envoi des données au service de nutrition\n      const nutritionResults = await nutritionService.calculateNutrition({\n        ...formData,\n        userId\n      });\n      \n      setResults(nutritionResults);\n      \n      // Suivi des performances de calcul\n      const calculationTime = Date.now() - calculationStartTime.current;\n      monitoringService.trackApiPerformance('nutrition_calculation', calculationTime, {\n        success: true,\n        formComplexity: formComplexity.current,\n        resultSize: JSON.stringify(nutritionResults).length\n      });\n      \n    } catch (err) {\n      setError(err.message || 'Une erreur est survenue lors du calcul nutritionnel');\n      \n      // Suivi des erreurs\n      monitoringService.trackApiPerformance('nutrition_calculation', \n        Date.now() - calculationStartTime.current, {\n        success: false,\n        errorType: err.name,\n        errorMessage: err.message\n      });\n      \n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Rendu de la section de résultats\n  const renderResults = () => {\n    if (!results) return null;\n\n    return (\n      <Grid container spacing={3} sx={{ mt: 2 }}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom>\n            Vos besoins nutritionnels\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            Basés sur votre profil et vos objectifs, voici vos besoins nutritionnels quotidiens estimés.\n          </Typography>\n        </Grid>\n\n        {/* Carte des calories */}\n        <Grid item xs={12} md={6}>\n          <Card elevation={2}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <LocalFireDepartment color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Besoins caloriques</Typography>\n              </Box>\n              <Typography variant=\"h3\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>\n                {results.dailyCalories} kcal\n              </Typography>\n              <Divider sx={{ my: 2 }} />\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Métabolisme de base (BMR)</Typography>\n                  <Typography variant=\"h6\">{results.bmr} kcal</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Dépense énergétique totale</Typography>\n                  <Typography variant=\"h6\">{results.tdee} kcal</Typography>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Carte des macronutriments */}\n        <Grid item xs={12} md={6}>\n          <Card elevation={2}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Fastfood color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Macronutriments</Typography>\n              </Box>\n              <Grid container spacing={2}>\n                <Grid item xs={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Cake sx={{ color: '#4CAF50', fontSize: 40 }} />\n                    <Typography variant=\"h6\">{results.macronutrients.carbs.grams}g</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Glucides</Typography>\n                    <Typography variant=\"caption\">({results.macronutrients.carbs.percentage}%)</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <EggAlt sx={{ color: '#2196F3', fontSize: 40 }} />\n                    <Typography variant=\"h6\">{results.macronutrients.protein.grams}g</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Protéines</Typography>\n                    <Typography variant=\"caption\">({results.macronutrients.protein.percentage}%)</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Opacity sx={{ color: '#FF9800', fontSize: 40 }} />\n                    <Typography variant=\"h6\">{results.macronutrients.fat.grams}g</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Lipides</Typography>\n                    <Typography variant=\"caption\">({results.macronutrients.fat.percentage}%)</Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Carte d'hydratation */}\n        <Grid item xs={12}>\n          <Card elevation={2}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <WaterDrop color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Besoins en hydratation</Typography>\n              </Box>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Typography variant=\"h5\">{results.hydration.base}L</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Base quotidienne</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Typography variant=\"h5\">{results.hydration.training}L</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Pendant l'entraînement</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Box sx={{ textAlign: 'center' }}>\n                    <Typography variant=\"h5\">{results.hydration.total}L</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Total recommandé</Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Recommandations */}\n        <Grid item xs={12}>\n          <Card elevation={2}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Recommandations personnalisées\n              </Typography>\n              <Tabs \n                value={tabValue} \n                onChange={(event, newValue) => setTabValue(newValue)} \n                variant=\"fullWidth\" \n                sx={{ mb: 2 }}\n              >\n                <Tab label=\"Avant\" />\n                <Tab label=\"Pendant\" />\n                <Tab label=\"Après\" />\n                <Tab label=\"Quotidien\" />\n              </Tabs>\n              \n              {tabValue === 0 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition pré-entraînement\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <RestaurantMenu color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"3-4 heures avant l'effort\"\n                        secondary={`Repas complet de ${Math.round(results.dailyCalories * 0.25)} kcal avec ${Math.round(results.macronutrients.carbs.grams * 0.3)}g de glucides complexes, ${Math.round(results.macronutrients.protein.grams * 0.2)}g de protéines maigres et hydratation.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Cake color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"60 minutes avant l'effort\"\n                        secondary={`Collation légère de ${Math.round(results.dailyCalories * 0.1)} kcal avec ${Math.round(results.macronutrients.carbs.grams * 0.1)}g de glucides simples et facilement digestibles.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <WaterDrop color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Hydratation\"\n                        secondary=\"400-600ml d'eau ou boisson isotonique légère dans les 2 heures précédant l'effort.\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n              \n              {tabValue === 1 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition pendant l'effort\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Cake color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Apport glucidique\"\n                        secondary={`${formData.trainingIntensity === 'high' || formData.trainingIntensity === 'very_high' ? '60-90g' : '30-60g'} de glucides par heure d'effort sous forme de gels, barres ou boissons.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <WaterDrop color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Hydratation pendant l'effort\"\n                        secondary={`500-1000ml par heure selon l'intensité et la température. Augmentez de 200ml par tranche de 5°C au-dessus de 25°C.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Science color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Électrolytes\"\n                        secondary=\"Intégrez 400-700mg de sodium par litre pour les efforts > 90 minutes ou par temps chaud.\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n              \n              {tabValue === 2 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition post-entraînement\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Timer color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Fenêtre anabolique (30 minutes)\"\n                        secondary={`Consommez ${Math.round(results.macronutrients.carbs.grams * 0.25)}g de glucides et ${Math.round(results.macronutrients.protein.grams * 0.25)}g de protéines dans les 30 minutes suivant l'effort.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <Restaurant color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Repas complet (2 heures après)\"\n                        secondary={`Repas équilibré de ${Math.round(results.dailyCalories * 0.3)} kcal avec ${Math.round(results.macronutrients.carbs.grams * 0.3)}g de glucides, ${Math.round(results.macronutrients.protein.grams * 0.3)}g de protéines et des graisses saines.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <WaterDrop color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Réhydratation\"\n                        secondary=\"150% du poids perdu pendant l'effort. Exemple: si vous avez perdu 1kg, buvez 1.5L d'eau avec électrolytes.\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n              \n              {tabValue === 3 && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Nutrition quotidienne\n                  </Typography>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <DirectionsBike color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Périodisation nutritionnelle\"\n                        secondary={`Adaptez votre apport selon le type d'effort: ${Math.round(results.dailyCalories * 1.1)} kcal les jours d'intensité, ${Math.round(results.dailyCalories * 0.9)} kcal les jours de récupération.`}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <RestaurantMenu color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Répartition des repas\"\n                        secondary=\"Répartissez vos macronutriments sur 4-6 repas par jour pour maintenir un niveau d'énergie stable.\"\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <LocalDining color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Aliments à privilégier\"\n                        secondary=\"Glucides complexes (riz, pâtes complètes, patates douces), protéines maigres (poulet, poisson, légumineuses), graisses saines (avocat, huile d'olive, fruits à coque).\"\n                      />\n                    </ListItem>\n                  </List>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  // Effet pour le suivi du temps de rendu\n  useEffect(() => {\n    // Mesure du temps de rendu initial\n    const renderTime = Date.now() - renderStartTime.current;\n    \n    // Envoi des métriques de performance au service de monitoring\n    monitoringService.trackComponentPerformance('NutritionCalculator', renderTime, {\n      userId: userId || 'anonymous'\n    });\n    \n    // Réinitialisation du compteur d'interactions lors du montage du composant\n    interactionCount.current = 0;\n    \n    // Suivi de la session\n    const sessionTracker = setInterval(() => {\n      // Envoyer périodiquement des métriques d'utilisation\n      if (interactionCount.current > 0) {\n        monitoringService.trackUserEngagement('nutrition_calculator', {\n          interactionsSinceLastCheck: interactionCount.current,\n          formComplexity: formComplexity.current,\n          hasResults: results !== null\n        });\n        \n        // Réinitialiser le compteur après l'envoi\n        interactionCount.current = 0;\n      }\n    }, 30000); // Vérification toutes les 30 secondes\n    \n    // Nettoyage\n    return () => {\n      clearInterval(sessionTracker);\n      // Enregistrer les métriques de session complète\n      monitoringService.trackComponentUnmount('NutritionCalculator', {\n        sessionDuration: Date.now() - renderStartTime.current,\n        generatedResults: results !== null\n      });\n    };\n  }, [userId, results]);\n\n  // Rendu principal du composant\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  return (\n    <Box>\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Calculateur nutritionnel\n        </Typography>\n        <Typography variant=\"body2\" paragraph>\n          Calculez vos besoins énergétiques et nutritionnels personnalisés en fonction de votre profil et de vos objectifs.\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            {/* Informations personnelles */}\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Informations personnelles\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Poids (kg)\"\n                name=\"weight\"\n                type=\"number\"\n                value={formData.weight}\n                onChange={handleChange}\n                error={!!formErrors.weight}\n                helperText={formErrors.weight}\n                InputProps={{\n                  startAdornment: <MonitorWeight color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Taille (cm)\"\n                name=\"height\"\n                type=\"number\"\n                value={formData.height}\n                onChange={handleChange}\n                error={!!formErrors.height}\n                helperText={formErrors.height}\n                InputProps={{\n                  startAdornment: <Straighten color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Âge\"\n                name=\"age\"\n                type=\"number\"\n                value={formData.age}\n                onChange={handleChange}\n                error={!!formErrors.age}\n                helperText={formErrors.age}\n                InputProps={{\n                  startAdornment: <Accessibility color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"gender-label\">Genre</InputLabel>\n                <Select\n                  labelId=\"gender-label\"\n                  name=\"gender\"\n                  value={formData.gender}\n                  onChange={handleChange}\n                  label=\"Genre\"\n                >\n                  <MenuItem value=\"male\">Homme</MenuItem>\n                  <MenuItem value=\"female\">Femme</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"activity-level-label\">Niveau d'activité</InputLabel>\n                <Select\n                  labelId=\"activity-level-label\"\n                  name=\"activityLevel\"\n                  value={formData.activityLevel}\n                  onChange={handleChange}\n                  label=\"Niveau d'activité\"\n                >\n                  {activityLevels.map((level) => (\n                    <MenuItem key={level.value} value={level.value}>\n                      {level.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>En dehors de vos séances de cyclisme</FormHelperText>\n              </FormControl>\n            </Grid>\n\n            {/* Objectifs et entraînement */}\n            <Grid item xs={12} sx={{ mt: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Objectifs et entraînement\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"goals-label\">Objectif principal</InputLabel>\n                <Select\n                  labelId=\"goals-label\"\n                  name=\"goals\"\n                  value={formData.goals}\n                  onChange={handleChange}\n                  label=\"Objectif principal\"\n                >\n                  {nutritionGoals.map((goal) => (\n                    <MenuItem key={goal.value} value={goal.value}>\n                      {goal.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <Typography gutterBottom>\n                Durée moyenne d'entraînement (minutes/jour)\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <DirectionsBike color=\"action\" sx={{ mr: 2 }} />\n                <Slider\n                  name=\"trainingDuration\"\n                  value={formData.trainingDuration}\n                  onChange={handleSliderChange}\n                  min={0}\n                  max={240}\n                  step={15}\n                  marks={[\n                    { value: 0, label: '0' },\n                    { value: 60, label: '60' },\n                    { value: 120, label: '120' },\n                    { value: 180, label: '180' },\n                    { value: 240, label: '240' }\n                  ]}\n                  valueLabelDisplay=\"auto\"\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Grid>\n\n            {/* Profil d'entraînement cycliste */}\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Profil d'entraînement cycliste\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <FormControl fullWidth>\n                <InputLabel>Type d'entraînement principal</InputLabel>\n                <Select\n                  name=\"trainingType\"\n                  value={formData.trainingType}\n                  onChange={handleChange}\n                  label=\"Type d'entraînement principal\"\n                >\n                  {trainingTypes.map((type) => (\n                    <MenuItem key={type.value} value={type.value}>\n                      {type.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>Sélectionnez votre type d'entraînement le plus fréquent</FormHelperText>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <FormControl fullWidth>\n                <InputLabel>Intensité moyenne</InputLabel>\n                <Select\n                  name=\"trainingIntensity\"\n                  value={formData.trainingIntensity}\n                  onChange={handleChange}\n                  label=\"Intensité moyenne\"\n                >\n                  {trainingIntensities.map((intensity) => (\n                    <MenuItem key={intensity.value} value={intensity.value}>\n                      {intensity.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>Intensité moyenne de vos entraînements</FormHelperText>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField\n                fullWidth\n                label=\"Distance hebdomadaire (km)\"\n                name=\"weeklyDistance\"\n                type=\"number\"\n                value={formData.weeklyDistance}\n                onChange={handleChange}\n                InputProps={{\n                  startAdornment: <DirectionsBike color=\"action\" sx={{ mr: 1 }} />,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <FormControl component=\"fieldset\" sx={{ mt: 1 }}>\n                <Typography variant=\"body2\" gutterBottom>\n                  Préparation pour un événement spécifique?\n                </Typography>\n                <Grid container spacing={1}>\n                  <Grid item>\n                    <Button \n                      variant={formData.upcomingEvent ? \"contained\" : \"outlined\"} \n                      size=\"small\"\n                      onClick={() => setFormData({...formData, upcomingEvent: true})}\n                    >\n                      Oui\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button \n                      variant={!formData.upcomingEvent ? \"contained\" : \"outlined\"} \n                      size=\"small\"\n                      onClick={() => setFormData({...formData, upcomingEvent: false, eventType: '', eventDate: null})}\n                    >\n                      Non\n                    </Button>\n                  </Grid>\n                </Grid>\n              </FormControl>\n            </Grid>\n\n            {formData.upcomingEvent && (\n              <>\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth>\n                    <InputLabel>Type d'événement</InputLabel>\n                    <Select\n                      name=\"eventType\"\n                      value={formData.eventType}\n                      onChange={handleChange}\n                      label=\"Type d'événement\"\n                    >\n                      {eventTypes.map((type) => (\n                        <MenuItem key={type.value} value={type.value}>\n                          {type.label}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Nombre de jours avant l'événement\"\n                    name=\"eventDate\"\n                    type=\"number\"\n                    value={formData.eventDate}\n                    onChange={handleChange}\n                    InputProps={{\n                      startAdornment: <Event color=\"action\" sx={{ mr: 1 }} />,\n                    }}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid item xs={12} sx={{ mt: 2 }}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"large\"\n                disabled={loading}\n                startIcon={loading ? <CircularProgress size={24} /> : <Timeline />}\n              >\n                {loading ? 'Calcul en cours...' : 'Calculer mes besoins'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      {/* Affichage des résultats */}\n      {results && renderResults()}\n    </Box>\n  );\n};\n\nexport default NutritionCalculator;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.06 22.99h1.66c.84 0 1.53-.64 1.63-1.46L23 5.05h-5V1h-1.97v4.05h-4.97l.3 2.34c1.71.47 3.31 1.32 4.27 2.26 1.44 1.42 2.43 2.89 2.43 5.29zM1 21.99V21h15.03v.99c0 .55-.45 1-1.01 1H2.01c-.56 0-1.01-.45-1.01-1m15.03-7c0-8-15.03-8-15.03 0zM1.02 17h15v2h-15z\"\n}), 'Fastfood');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2\"\n}), 'Timeline');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m8.1 13.34 2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13z\"\n}), 'RestaurantMenu');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 6c1.11 0 2-.9 2-2 0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2m4.6 9.99-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01M18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9\"\n}), 'Cake');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 1h6v2H9zm10.03 6.39 1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61M13 14h-2V8h2z\"\n}), 'Timer');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 12.9-2.13 2.09c-.56.56-.87 1.29-.87 2.07C9 18.68 10.35 20 12 20s3-1.32 3-2.94c0-.78-.31-1.52-.87-2.07z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6-.44.55C14.38 8.02 12 7.19 12 5.3V2S4 6 4 13c0 2.92 1.56 5.47 3.89 6.86-.56-.79-.89-1.76-.89-2.8 0-1.32.52-2.56 1.47-3.5L12 10.1l3.53 3.47c.95.93 1.47 2.17 1.47 3.5 0 1.02-.31 1.96-.85 2.75 1.89-1.15 3.29-3.06 3.71-5.3.66-3.55-1.07-6.9-3.86-8.52\"\n}, \"1\")], 'LocalFireDepartment');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m8.1 13.34 2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13z\"\n}), 'LocalDining');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-7 9c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 8.5h1v1h-1zm1.5 0h1v1h-1zm1.5 0h1v1h-1z\"\n}, \"1\")], 'MonitorWeight');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9c-2-2-3.01-7-9.03-7C4.95 2 1.94 6 2 11.52 2.06 17.04 6.96 19 9.97 19c2.01 0 2.01 3 6.02 3C19 22 22 19 22 15.02 22 12 21.01 11 19 9m-7 6.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5\"\n}), 'EggAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2m0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2z\"\n}), 'Straighten');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 9H9V2H7v7H5V2H3v7c0 2.12 1.66 3.84 3.75 3.97V22h2.5v-9.03C11.34 12.84 13 11.12 13 9V2h-2zm5-3v8h2.5v8H21V2c-2.76 0-5 2.24-5 4\"\n}), 'Restaurant');"],"names":["createSvgIcon","_jsx","d","API_URL","process","METRICS_ENDPOINT","API_METRICS_ENDPOINT","MAX_BATCH_SIZE","performanceMetrics","errorMetrics","userMetrics","apiMetrics","apiStats","callCount","errorCount","cacheHitCount","fallbackCount","retryCount","responseTimeTotal","longestResponseTime","endpoints","lastUpdated","Date","now","timeSeriesData","timestamps","responseTimes","errorRates","cacheHitRates","apiDebounceMap","Map","isInitialized","isSending","sessionId","initialize","Math","random","toString","substring","setInterval","sendBatchedMetrics","window","PerformanceObserver","perfObserver","list","getEntries","forEach","entry","includes","name","trackBrowserPerformance","value","observe","type","buffered","e","console","warn","addEventListener","event","trackError","message","filename","lineno","colno","stack","error","reason","trackGenericMetric","userAgent","navigator","screenSize","innerWidth","innerHeight","timestamp","async","length","metricsToSend","performance","slice","errors","userActivity","apiCalls","axios","post","updateApiStats","storedMetrics","JSON","parse","localStorage","getItem","setItem","stringify","metrics","metricName","arguments","undefined","push","url","location","href","details","trackApiPerformance","endpoint","duration","metadata","max","avgResponseTime","updateTimeSeriesData","errorType","errorDetails","data","logApiError","_error$response","errorMessage","errorCode","response","status","logCacheHit","savedTime","getApiStats","errorRate","cacheHitRate","retryRate","shift","monitoringService","trackComponentPerformance","componentName","component","trackComponentUnmount","sessionData","trackUserInteraction","action","trackUserEngagement","feature","engagementData","logFallbackUsage","fallbackType","incrementRetryCount","trackApiCall","parameters","apiCall","callKey","has","get","startTime","apiPromise","Promise","resolve","reject","result","parameterCount","Object","keys","responseSize","cached","setTimeout","delete","set","resetApiStats","_ref","userId","formData","setFormData","useState","weight","height","age","gender","activityLevel","goals","trainingDuration","trainingType","trainingIntensity","weeklyDistance","upcomingEvent","eventType","eventDate","loading","setLoading","setError","results","setResults","formErrors","setFormErrors","renderStartTime","useRef","interactionCount","formComplexity","calculationStartTime","handleChange","target","current","updateFormComplexity","filledFields","values","filter","val","useEffect","renderTime","sessionTracker","interactionsSinceLastCheck","hasResults","clearInterval","sessionDuration","generatedResults","activeTab","setActiveTab","_jsxs","Box","children","Paper","sx","p","mb","Typography","variant","gutterBottom","paragraph","Alert","severity","onSubmit","preventDefault","fieldsCount","validateForm","isValid","nutritionResults","nutritionService","calculateNutrition","calculationTime","success","resultSize","err","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","onChange","helperText","InputProps","startAdornment","MonitorWeight","color","mr","Straighten","Accessibility","FormControl","InputLabel","id","Select","labelId","MenuItem","map","level","FormHelperText","mt","goal","display","alignItems","DirectionsBike","Slider","handleSliderChange","newValue","min","step","marks","valueLabelDisplay","flex","md","intensity","Button","size","onClick","_Fragment","Event","disabled","startIcon","CircularProgress","Timeline","Card","elevation","CardContent","LocalFireDepartment","fontWeight","dailyCalories","Divider","my","bmr","tdee","Fastfood","textAlign","Cake","fontSize","macronutrients","carbs","grams","percentage","EggAlt","protein","Opacity","fat","WaterDrop","hydration","base","training","total","Tabs","tabValue","setTabValue","Tab","List","ListItem","ListItemIcon","RestaurantMenu","ListItemText","primary","secondary","round","Science","Timer","Restaurant","LocalDining"],"sourceRoot":""}