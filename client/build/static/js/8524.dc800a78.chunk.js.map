{"version":3,"file":"static/js/8524.dc800a78.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/material/utils/useId.js","../node_modules/@mui/utils/esm/useControlled/useControlled.js","../node_modules/@mui/icons-material/Height.js","../node_modules/@mui/material/utils/useControlled.js","../node_modules/@mui/icons-material/Route.js","../node_modules/@mui/icons-material/Whatshot.js","config/constants.js","services/mountainService.js","components/mountain/components/MountainDashboard.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  borderRadius: 'inherit',\n  // for Safari to work https://github.com/mui/material-ui/issues/36285.\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId'.toString()];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","'use client';\n\nimport useId from '@mui/utils/useId';\nexport default useId;","'use client';\n\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && !Object.is(defaultValue, defaultProp)) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 6.99h3L12 3 8 6.99h3v10.02H8L12 21l4-3.99h-3z\"\n}), 'Height');","'use client';\n\nimport useControlled from '@mui/utils/useControlled';\nexport default useControlled;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 15.18V7c0-2.21-1.79-4-4-4s-4 1.79-4 4v10c0 1.1-.9 2-2 2s-2-.9-2-2V8.82C8.16 8.4 9 7.3 9 6c0-1.66-1.34-3-3-3S3 4.34 3 6c0 1.3.84 2.4 2 2.82V17c0 2.21 1.79 4 4 4s4-1.79 4-4V7c0-1.1.9-2 2-2s2 .9 2 2v8.18c-1.16.41-2 1.51-2 2.82 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82\"\n}), 'Route');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67M11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8\"\n}), 'Whatshot');","/**\n * Constantes de configuration pour l'application Velo-Altitude\n * Ces valeurs sont utilisées par les différents services pour les appels API\n * et d'autres configurations globales.\n */\n\n// URL de base de l'API - sera remplacée par la valeur correcte en production via Netlify\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || '/api';\n\n// Clés d'API pour les services tiers - à configurer dans les variables d'environnement Netlify\nexport const MAPBOX_ACCESS_TOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN || 'pk.placeholder';\nexport const WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY || 'placeholder';\nexport const STRAVA_CLIENT_ID = process.env.REACT_APP_STRAVA_CLIENT_ID || 'placeholder';\nexport const STRAVA_CLIENT_SECRET = process.env.REACT_APP_STRAVA_CLIENT_SECRET || 'placeholder';\n\n// Constantes d'application\nexport const APP_NAME = 'Velo-Altitude';\nexport const APP_VERSION = '1.0.0';\n\n// Configuration des limites d'utilisation\nexport const MAX_FILE_UPLOAD_SIZE = 5 * 1024 * 1024; // 5MB\n\n// Coordonnées par défaut pour la région Grand Est\nexport const DEFAULT_MAP_CENTER = [48.7, 6.2]; // Nancy (centre approximatif du Grand Est)\nexport const DEFAULT_MAP_ZOOM = 7;\n\n// Configuration des niveaux de difficulté pour les cols et parcours\nexport const DIFFICULTY_LEVELS = [\n  { id: 1, label: 'Facile', color: '#4CAF50' },\n  { id: 2, label: 'Modéré', color: '#2196F3' },\n  { id: 3, label: 'Difficile', color: '#FF9800' },\n  { id: 4, label: 'Très difficile', color: '#F44336' },\n  { id: 5, label: 'Extrême', color: '#9C27B0' }\n];\n","import axios from 'axios';\nimport { API_BASE_URL } from '../config/constants';\n\n/**\n * Service pour gérer les appels API du module Montagne\n * Gère les demandes liées aux cols, plans d'entraînement et nutrition\n */\nconst mountainService = {\n  /**\n   * Récupère tous les cols disponibles\n   * @param {Object} filters - Filtres pour les cols (région, difficulté, etc.)\n   * @returns {Promise} - Promesse contenant les données des cols\n   */\n  async getCols(filters = {}) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/cols`, { params: filters });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des cols:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Récupère les détails d'un col spécifique\n   * @param {string} colId - Identifiant du col\n   * @returns {Promise} - Promesse contenant les données du col\n   */\n  async getColDetails(colId) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/cols/${colId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération des détails du col ${colId}:`, error);\n      throw error;\n    }\n  },\n\n  /**\n   * Génère un plan d'entraînement spécifique pour un col\n   * @param {string} colId - Identifiant du col\n   * @param {Object} userMetrics - Métriques de l'utilisateur (FTP, poids, etc.)\n   * @returns {Promise} - Promesse contenant le plan d'entraînement\n   */\n  async generateTrainingPlan(colId, userMetrics) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/mountain/training-plan`, {\n        colId,\n        userMetrics\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la génération du plan d\\'entraînement:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Génère un plan nutritionnel spécifique pour un col\n   * @param {string} colId - Identifiant du col\n   * @param {Object} userMetrics - Métriques de l'utilisateur (poids, préférences alimentaires, etc.)\n   * @returns {Promise} - Promesse contenant le plan nutritionnel\n   */\n  async generateNutritionPlan(colId, userMetrics) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/mountain/nutrition-plan`, {\n        colId,\n        userMetrics\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la génération du plan nutritionnel:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Récupère les plans d'entraînement régionaux\n   * @param {string} region - Région (alpes, pyrenees, dolomites, ardennes)\n   * @returns {Promise} - Promesse contenant les plans d'entraînement régionaux\n   */\n  async getRegionalTrainingPlans(region) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/mountain/regional-plans/${region}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération des plans régionaux pour ${region}:`, error);\n      throw error;\n    }\n  },\n\n  /**\n   * Récupère les données de visualisation 3D pour un col\n   * @param {string} colId - Identifiant du col\n   * @returns {Promise} - Promesse contenant les données de visualisation 3D\n   */\n  async getCol3DVisualizationData(colId) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/cols/${colId}/3d-data`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération des données 3D pour le col ${colId}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default mountainService;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Card, CardContent, CardMedia, CardActionArea, Box, Chip, ToggleButtonGroup, ToggleButton, CircularProgress } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport TerrainIcon from '@mui/icons-material/Terrain';\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\nimport HeightIcon from '@mui/icons-material/Height';\nimport RouteIcon from '@mui/icons-material/Route';\nimport mountainService from '../../../services/mountainService';\nimport ColVisualization3D from '../../visualization/ColVisualization3D';\nimport { useFeatureFlags } from '../../../hooks/useFeatureFlags';\nimport axios from 'axios';\n\n// Styles personnalisés\nconst RegionToggleButton = styled(ToggleButton)(({ theme }) => ({\n  '&.Mui-selected': {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  },\n}));\n\nconst ColCard = styled(Card)(({ theme, selected }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'all 0.3s ease',\n  border: selected ? `2px solid ${theme.palette.primary.main}` : 'none',\n  transform: selected ? 'translateY(-4px)' : 'none',\n  boxShadow: selected ? theme.shadows[8] : theme.shadows[1],\n}));\n\n/**\n * MountainDashboard - Tableau de bord pour la sélection et la visualisation des cols\n */\nfunction MountainDashboard({ onRegionChange, onColSelect, selectedRegion = 'alpes', selectedCol }) {\n  const [cols, setCols] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [visualizationData, setVisualizationData] = useState(null);\n  const [visualizationLoading, setVisualizationLoading] = useState(false);\n  const { enableColSpecificTraining, enableColSpecificNutrition } = useFeatureFlags();\n  const [stats, setStats] = useState({\n    totalCols: 0,\n    averageAltitude: 0,\n    averageDifficulty: 0,\n    regionDistribution: {}\n  });\n\n  // État local pour stocker la région et le col sélectionnés si les props ne sont pas fournies\n  const [localSelectedRegion, setLocalSelectedRegion] = useState(selectedRegion || 'alpes');\n  const [localSelectedCol, setLocalSelectedCol] = useState(null);\n\n  // Déterminer les valeurs réelles à utiliser\n  const effectiveSelectedRegion = selectedRegion || localSelectedRegion;\n  const effectiveSelectedCol = selectedCol || localSelectedCol;\n\n  useEffect(() => {\n    // Fonction pour charger les cols en fonction de la région sélectionnée\n    const fetchCols = async () => {\n      setLoading(true);\n      try {\n        const colsData = await mountainService.getCols({ region: effectiveSelectedRegion });\n        \n        setCols(colsData || mockCols); // Utiliser les données mockées en cas d'erreur\n        \n        // Calculer les statistiques\n        if (colsData && colsData.length > 0) {\n          calculateStats(colsData);\n        } else {\n          calculateStats(mockCols);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des cols:\", error);\n        setCols(mockCols);\n        calculateStats(mockCols);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCols();\n  }, [effectiveSelectedRegion]);\n\n  // Charger les données de visualisation 3D lorsqu'un col est sélectionné\n  useEffect(() => {\n    const fetch3DData = async () => {\n      if (!effectiveSelectedCol) return;\n      \n      setVisualizationLoading(true);\n      try {\n        const data = await mountainService.getCol3DVisualizationData(effectiveSelectedCol.id);\n        setVisualizationData(data);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des données 3D:\", error);\n        setVisualizationData(null);\n      } finally {\n        setVisualizationLoading(false);\n      }\n    };\n\n    fetch3DData();\n  }, [effectiveSelectedCol]);\n\n  // Calcul des statistiques pour le dashboard\n  const calculateStats = (colsData) => {\n    const totalCols = colsData.length;\n    const totalAltitude = colsData.reduce((sum, col) => sum + col.altitude, 0);\n    const totalDifficulty = colsData.reduce((sum, col) => sum + col.difficulty, 0);\n    \n    // Distribution par région\n    const regions = {};\n    colsData.forEach(col => {\n      if (!regions[col.region]) {\n        regions[col.region] = 0;\n      }\n      regions[col.region]++;\n    });\n\n    setStats({\n      totalCols,\n      averageAltitude: totalAltitude / totalCols,\n      averageDifficulty: totalDifficulty / totalCols,\n      regionDistribution: regions\n    });\n  };\n\n  const handleRegionChange = (event, newRegion) => {\n    if (newRegion !== null) {\n      if (onRegionChange) {\n        onRegionChange(newRegion);\n      } else {\n        setLocalSelectedRegion(newRegion);\n      }\n    }\n  };\n\n  const handleColClick = (col) => {\n    if (onColSelect) {\n      onColSelect(col);\n    } else {\n      setLocalSelectedCol(col);\n    }\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* Sélecteur de région */}\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2, mb: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>Sélection de région</Typography>\n          <ToggleButtonGroup\n            value={effectiveSelectedRegion}\n            exclusive\n            onChange={handleRegionChange}\n            aria-label=\"région de cols\"\n            color=\"primary\"\n            fullWidth\n          >\n            <RegionToggleButton value=\"alpes\" aria-label=\"Alpes\">\n              Alpes\n            </RegionToggleButton>\n            <RegionToggleButton value=\"pyrenees\" aria-label=\"Pyrénées\">\n              Pyrénées\n            </RegionToggleButton>\n            <RegionToggleButton value=\"dolomites\" aria-label=\"Dolomites\">\n              Dolomites\n            </RegionToggleButton>\n            <RegionToggleButton value=\"ardennes\" aria-label=\"Ardennes/Flandres\">\n              Ardennes/Flandres\n            </RegionToggleButton>\n          </ToggleButtonGroup>\n        </Paper>\n      </Grid>\n      \n      {/* Statistiques */}\n      <Grid item xs={12} md={4}>\n        <Paper sx={{ p: 2, height: '100%' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Statistiques\n          </Typography>\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <Box>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Box sx={{ textAlign: 'center', mb: 2 }}>\n                    <HeightIcon color=\"primary\" sx={{ fontSize: 40 }} />\n                    <Typography variant=\"h6\">{Math.round(stats.averageAltitude)}m</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Altitude moyenne</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={6}>\n                  <Box sx={{ textAlign: 'center', mb: 2 }}>\n                    <WhatshotIcon color=\"warning\" sx={{ fontSize: 40 }} />\n                    <Typography variant=\"h6\">{stats.averageDifficulty.toFixed(1)}/10</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Difficulté moyenne</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {stats.totalCols} cols disponibles\n                  </Typography>\n                  \n                  {effectiveSelectedCol && (\n                    <Box sx={{ mt: 3, p: 2, bgcolor: 'background.default', borderRadius: 1 }}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Col sélectionné: {effectiveSelectedCol.name}\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Altitude: {effectiveSelectedCol.altitude}m\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Longueur: {effectiveSelectedCol.length}km à {effectiveSelectedCol.gradient}%\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Difficulté: {effectiveSelectedCol.difficulty}/10\n                      </Typography>\n                      \n                      <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                        {enableColSpecificTraining && (\n                          <Chip \n                            label=\"Entraînement\" \n                            color=\"primary\"\n                            size=\"small\"\n                            onClick={() => window.location.href = `/mountain/training?colId=${effectiveSelectedCol.id}`}\n                          />\n                        )}\n                        {enableColSpecificNutrition && (\n                          <Chip \n                            label=\"Nutrition\" \n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={() => window.location.href = `/mountain/nutrition?colId=${effectiveSelectedCol.id}`}\n                          />\n                        )}\n                      </Box>\n                    </Box>\n                  )}\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n        </Paper>\n      </Grid>\n\n      {/* Liste des cols */}\n      <Grid item xs={12} md={8}>\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Cols {effectiveSelectedRegion.charAt(0).toUpperCase() + effectiveSelectedRegion.slice(1)}\n          </Typography>\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <Grid container spacing={2}>\n              {cols.map((col) => (\n                <Grid item xs={12} sm={6} md={4} key={col.id}>\n                  <ColCard selected={effectiveSelectedCol && effectiveSelectedCol.id === col.id}>\n                    <CardActionArea onClick={() => handleColClick(col)}>\n                      <CardMedia\n                        component=\"img\"\n                        height=\"140\"\n                        image={col.image}\n                        alt={col.name}\n                      />\n                      <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\n                          {col.name}\n                        </Typography>\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mb: 1 }}>\n                          <Chip \n                            icon={<HeightIcon />} \n                            label={`${col.altitude}m`} \n                            size=\"small\" \n                            color=\"primary\"\n                            variant=\"outlined\"\n                          />\n                          <Chip \n                            icon={<WhatshotIcon />} \n                            label={`Difficulté: ${col.difficulty}/10`} \n                            size=\"small\"\n                            color={col.difficulty > 7 ? \"error\" : col.difficulty > 5 ? \"warning\" : \"success\"}\n                            variant=\"outlined\"\n                          />\n                        </Box>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n                          <RouteIcon fontSize=\"small\" color=\"action\" sx={{ mr: 0.5 }} />\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {col.length}km @ {col.gradient}%\n                          </Typography>\n                        </Box>\n                      </CardContent>\n                    </CardActionArea>\n                  </ColCard>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        </Paper>\n      </Grid>\n      \n      {/* Visualisation 3D du col */}\n      {effectiveSelectedCol && (\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Visualisation 3D: {effectiveSelectedCol.name}\n            </Typography>\n            \n            {visualizationLoading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>\n                <CircularProgress />\n              </Box>\n            ) : visualizationData ? (\n              <ColVisualization3D \n                passId={effectiveSelectedCol.id}\n                elevationData={visualizationData.elevationData}\n                surfaceTypes={visualizationData.surfaceTypes}\n                pointsOfInterest={visualizationData.pointsOfInterest}\n              />\n            ) : (\n              <Box sx={{ p: 3, textAlign: 'center' }}>\n                <Typography color=\"text.secondary\">\n                  Données de visualisation 3D non disponibles pour ce col.\n                </Typography>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\n// Données mockées pour le développement\nconst mockCols = [\n  {\n    id: 1,\n    name: \"Col du Galibier\",\n    region: \"alpes\",\n    altitude: 2642,\n    length: 23,\n    gradient: 5.5,\n    difficulty: 8.5,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/galibier%20S%20%2810%29.jpg\"\n  },\n  {\n    id: 2,\n    name: \"Alpe d'Huez\",\n    region: \"alpes\",\n    altitude: 1860,\n    length: 13.8,\n    gradient: 8.1,\n    difficulty: 8.0,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/alpe_d_huez.jpg\"\n  },\n  {\n    id: 3,\n    name: \"Col du Tourmalet\",\n    region: \"pyrenees\",\n    altitude: 2115,\n    length: 19,\n    gradient: 7.4,\n    difficulty: 8.8,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/tourmalet.jpg\"\n  },\n  {\n    id: 4,\n    name: \"Stelvio\",\n    region: \"dolomites\",\n    altitude: 2758,\n    length: 24.3,\n    gradient: 7.4,\n    difficulty: 9.2,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/stelvio%20N%20%281%29.jpg\"\n  },\n  {\n    id: 5,\n    name: \"Mur de Huy\",\n    region: \"ardennes\",\n    altitude: 204,\n    length: 1.3,\n    gradient: 9.6,\n    difficulty: 7.0,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/huy%20%285%29.JPG\"\n  },\n  {\n    id: 6,\n    name: \"Col d'Izoard\",\n    region: \"alpes\",\n    altitude: 2360,\n    length: 19,\n    gradient: 6.0,\n    difficulty: 7.5,\n    image: \"https://www.cyclingcols.com/sites/default/files/col/izoard%20north%20%287%29.jpg\"\n  }\n];\n\nexport default MountainDashboard;\n"],"names":["getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","_ref","theme","display","textAlign","borderRadius","width","cardActionAreaClasses","focusHighlight","opacity","vars","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","_ref2","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","React","inProps","ref","useDefaultProps","children","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","_jsx","globalId","maybeReactUseId","toString","useId","idOverride","undefined","reactId","defaultId","setDefaultId","id","useGlobalId","useControlled","controlled","default","defaultProp","state","current","isControlled","valueState","setValue","newValue","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","d","API_BASE_URL","process","REACT_APP_API_BASE_URL","getCols","filters","arguments","length","axios","get","params","data","error","console","getColDetails","colId","generateTrainingPlan","userMetrics","post","generateNutritionPlan","getRegionalTrainingPlans","region","getCol3DVisualizationData","RegionToggleButton","ToggleButton","primary","main","color","contrastText","dark","ColCard","Card","selected","height","flexDirection","border","transform","boxShadow","shadows","mockCols","altitude","gradient","difficulty","image","_ref3","onRegionChange","onColSelect","selectedRegion","selectedCol","cols","setCols","useState","loading","setLoading","visualizationData","setVisualizationData","visualizationLoading","setVisualizationLoading","enableColSpecificTraining","enableColSpecificNutrition","useFeatureFlags","stats","setStats","totalCols","averageAltitude","averageDifficulty","regionDistribution","localSelectedRegion","setLocalSelectedRegion","localSelectedCol","setLocalSelectedCol","effectiveSelectedRegion","effectiveSelectedCol","useEffect","async","colsData","mountainService","calculateStats","fetchCols","fetch3DData","totalAltitude","reduce","sum","col","totalDifficulty","regions","forEach","Grid","container","spacing","item","xs","Paper","sx","p","mb","Typography","variant","gutterBottom","ToggleButtonGroup","value","exclusive","onChange","handleRegionChange","event","newRegion","fullWidth","md","Box","justifyContent","CircularProgress","HeightIcon","fontSize","Math","round","WhatshotIcon","toFixed","mt","bgcolor","flexWrap","gap","Chip","label","size","onClick","window","location","href","charAt","toUpperCase","slice","map","sm","CardActionArea","handleColClick","CardMedia","component","alt","CardContent","noWrap","icon","alignItems","RouteIcon","mr","ColVisualization3D","passId","elevationData","surfaceTypes","pointsOfInterest"],"sourceRoot":""}