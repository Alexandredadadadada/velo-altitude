{"version":3,"file":"static/js/7052.3d0827e9.chunk.js","mappings":"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","sources":["config/branding.js","data/hiitWorkouts.js","components/training/CalorieCalculator.js","components/training/HIITBuilder.js"],"sourcesContent":["/**\n * Configuration centralisée pour le branding Velo-Altitude\n * Ce fichier sert de source unique de vérité pour tous les éléments de marque du site\n */\n\nexport const brandConfig = {\n  // Informations de base\n  siteName: \"Velo-Altitude\",\n  previousName: \"Grand Est Cyclisme\",\n  domain: \"velo-altitude.com\",\n  \n  // Relations et partenariats\n  partnershipText: \"en partenariat avec Grand Est Cyclisme\",\n  partnershipShort: \"Partenaire: Grand Est Cyclisme\",\n  \n  // Éléments visuels\n  logoPath: \"/assets/images/velo-altitude-logo.svg\",\n  logoAlt: \"Logo Velo-Altitude - Le dashboard vélo ultime\",\n  favicon: \"/favicon.ico\",\n  \n  // Textes marketing\n  tagline: \"Le plus grand dashboard vélo d'Europe\",\n  taglineShort: \"Dashboard vélo ultime\",\n  description: \"Velo-Altitude est la plateforme de référence pour les cyclistes passionnés d'ascension et de cols. Visualisez, planifiez et partagez vos défis cyclistes avec notre technologie de pointe.\",\n  \n  // Réseaux sociaux\n  social: {\n    twitter: \"@VeloAltitude\",\n    facebook: \"VeloAltitude\",\n    instagram: \"velo.altitude\",\n    strava: \"clubs/velo-altitude\"\n  },\n  \n  // Couleurs (pour référence)\n  colors: {\n    primary: \"#1976d2\",\n    secondary: \"#ff9800\",\n    altitude: \"#3f51b5\",\n    mountain: \"#4caf50\"\n  },\n  \n  // Identité visuelle\n  visualIdentity: {\n    mountainIcon: true,\n    elevationGraphic: true,\n    cyclistIcon: true\n  },\n  \n  // SEO et métadonnées\n  defaultMetaTags: {\n    title: \"Velo-Altitude | Le dashboard vélo ultime pour les passionnés de cols\",\n    description: \"Planifiez, visualisez et relevez vos défis cyclistes avec Velo-Altitude, la plateforme de référence pour les cyclistes passionnés d'ascension et de cols.\",\n    keywords: \"vélo, cyclisme, cols, altitude, dashboard, défis, 7 majeurs, visualisation 3D\"\n  },\n  \n  // Configuration légale\n  legal: {\n    companyName: \"Velo-Altitude SAS\",\n    address: \"Paris, France\",\n    contactEmail: \"contact@velo-altitude.com\",\n    copyright: `© ${new Date().getFullYear()} Velo-Altitude. Tous droits réservés.`\n  }\n};\n\n// Exporter des fonctions d'aide pour le branding\nexport const getBrandName = () => brandConfig.siteName;\nexport const getPartnershipText = (short = false) => short ? brandConfig.partnershipShort : brandConfig.partnershipText;\nexport const getFullBrandName = () => `${brandConfig.siteName} - ${brandConfig.taglineShort}`;\nexport const getLogo = () => brandConfig.logoPath;\nexport const getCopyright = () => brandConfig.legal.copyright;\n\nexport default brandConfig;\n","/**\n * hiitWorkouts.js\n * Bibliothèque structurée de séances HIIT pour Velo-Altitude\n * Séances organisées par durée et dépense calorique pour faciliter la recherche\n */\n\nimport { brandConfig } from '../config/branding';\n\n// Utilitaires pour les calculs énergétiques\nconst calculateTotalIntensity = (intervals) => {\n  return intervals.reduce((total, interval) => {\n    const duration = interval.duration || 0;\n    const intensity = interval.intensity || 0;\n    const repeat = interval.repeat || 1;\n    \n    if (interval.recovery && interval.recoveryIntensity) {\n      const recoveryEffort = interval.recovery * interval.recoveryIntensity * repeat;\n      return total + (duration * intensity * repeat) + recoveryEffort;\n    }\n    \n    return total + (duration * intensity * repeat);\n  }, 0);\n};\n\n/**\n * Calcule les calories approximatives brûlées pendant une séance\n * @param {Number} totalIntensity - Intensité cumulée de la séance\n * @param {Number} userWeight - Poids de l'utilisateur en kg\n * @param {Number} userFTP - FTP de l'utilisateur en watts\n * @return {Number} - Calories estimées\n */\nexport const calculateCalories = (totalIntensity, userWeight = 70, userFTP = 200) => {\n  // Coefficient adapté en fonction du poids et du FTP\n  const calorieCoefficient = (userWeight / 70) * (userFTP / 200) * 3.5;\n  return Math.round(totalIntensity * calorieCoefficient);\n};\n\n/**\n * Séances HIIT organisées par durée\n * Chaque séance contient:\n * - id: identifiant unique\n * - name: nom de la séance\n * - duration: durée en minutes\n * - caloriesBurned: calories approximatives pour un cycliste de 70kg avec FTP 200W\n * - intensity: niveau d'intensité global (low, medium, medium-high, high, very-high)\n * - type: catégorie de séance (endurance, power, recovery, mountain)\n * - badgeType: type de badge visuel (express, burn, power, climb)\n * - format: structure détaillée des intervalles\n */\nexport const hiitWorkoutsByTime = [\n  // Séances Express (15 minutes)\n  {\n    id: \"quick15\",\n    name: \"Express 15\",\n    description: \"Séance courte et intense pour maximiser l'effet en minimum de temps\",\n    duration: 15,\n    caloriesBurned: 200,\n    intensity: \"high\",\n    type: \"power\",\n    badgeType: \"express\",\n    focusArea: [\"cardio\", \"lactate\"],\n    format: [\n      { type: \"warmup\", duration: 3, intensity: 50 },\n      { type: \"interval\", duration: 0.5, intensity: 95, repeat: 10, recovery: 0.5, recoveryIntensity: 40 },\n      { type: \"cooldown\", duration: 2, intensity: 40 }\n    ]\n  },\n  {\n    id: \"tabata15\",\n    name: \"Tabata Express\",\n    description: \"Protocole Tabata classique adapté pour les cyclistes pressés\",\n    duration: 15,\n    caloriesBurned: 220,\n    intensity: \"very-high\",\n    type: \"power\",\n    badgeType: \"express\",\n    focusArea: [\"anaerobic\", \"vo2max\"],\n    format: [\n      { type: \"warmup\", duration: 4, intensity: 60 },\n      { type: \"interval\", duration: 0.33, intensity: 100, repeat: 8, recovery: 0.67, recoveryIntensity: 30 },\n      { type: \"interval\", duration: 0.33, intensity: 100, repeat: 8, recovery: 0.67, recoveryIntensity: 30 },\n      { type: \"cooldown\", duration: 3, intensity: 40 }\n    ]\n  },\n  \n  // Séances Standard (30 minutes)\n  {\n    id: \"standard30\",\n    name: \"Classique 30\",\n    description: \"Séance équilibrée de 30 minutes pour améliorer votre endurance et puissance\",\n    duration: 30,\n    caloriesBurned: 450,\n    intensity: \"medium-high\",\n    type: \"endurance\",\n    badgeType: \"balanced\",\n    focusArea: [\"threshold\", \"vo2max\"],\n    format: [\n      { type: \"warmup\", duration: 5, intensity: 60 },\n      { type: \"interval\", duration: 2, intensity: 85, repeat: 5, recovery: 1, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 1, intensity: 95, repeat: 5, recovery: 1, recoveryIntensity: 40 },\n      { type: \"cooldown\", duration: 5, intensity: 50 }\n    ]\n  },\n  {\n    id: \"pyramid30\",\n    name: \"Pyramide 30\",\n    description: \"Structure pyramidale pour travailler progressivement jusqu'au pic d'intensité\",\n    duration: 30,\n    caloriesBurned: 420,\n    intensity: \"medium-high\",\n    type: \"endurance\",\n    badgeType: \"structured\",\n    focusArea: [\"lactate\", \"threshold\"],\n    format: [\n      { type: \"warmup\", duration: 5, intensity: 55 },\n      { type: \"interval\", duration: 1, intensity: 75, repeat: 1, recovery: 1, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 2, intensity: 80, repeat: 1, recovery: 1, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 3, intensity: 85, repeat: 1, recovery: 1, recoveryIntensity: 45 },\n      { type: \"interval\", duration: 4, intensity: 90, repeat: 1, recovery: 2, recoveryIntensity: 40 },\n      { type: \"interval\", duration: 3, intensity: 85, repeat: 1, recovery: 1, recoveryIntensity: 45 },\n      { type: \"interval\", duration: 2, intensity: 80, repeat: 1, recovery: 1, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 1, intensity: 75, repeat: 1, recovery: 1, recoveryIntensity: 50 },\n      { type: \"cooldown\", duration: 3, intensity: 45 }\n    ]\n  },\n  \n  // Séances Complètes (45 minutes)\n  {\n    id: \"complete45\",\n    name: \"Progressive 45\",\n    description: \"Séance complète avec progression d'intensité pour améliorer votre endurance lactique\",\n    duration: 45,\n    caloriesBurned: 650,\n    intensity: \"medium\",\n    type: \"endurance\",\n    badgeType: \"complete\",\n    focusArea: [\"endurance\", \"threshold\"],\n    format: [\n      { type: \"warmup\", duration: 8, intensity: 60 },\n      { type: \"interval\", duration: 3, intensity: 75, repeat: 3, recovery: 2, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 2, intensity: 85, repeat: 4, recovery: 1, recoveryIntensity: 45 },\n      { type: \"interval\", duration: 1, intensity: 95, repeat: 5, recovery: 1, recoveryIntensity: 40 },\n      { type: \"cooldown\", duration: 5, intensity: 50 }\n    ]\n  },\n  {\n    id: \"mountain45\",\n    name: \"Col Virtuel 45\",\n    description: \"Simulation d'ascension de col avec variations d'intensité comme sur un vrai col\",\n    duration: 45,\n    caloriesBurned: 680,\n    intensity: \"medium-high\",\n    type: \"mountain\",\n    badgeType: \"climb\",\n    focusArea: [\"climbing\", \"threshold\"],\n    format: [\n      { type: \"warmup\", duration: 7, intensity: 60 },\n      { type: \"interval\", duration: 3, intensity: 80, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 2, intensity: 90, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 1, intensity: 70, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 3, intensity: 85, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 2, intensity: 95, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 1, intensity: 75, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 4, intensity: 85, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 3, intensity: 100, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 2, intensity: 70, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 5, intensity: 80, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 2, intensity: 95, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"cooldown\", duration: 5, intensity: 50 }\n    ]\n  },\n  \n  // Séances Longues (60 minutes)\n  {\n    id: \"endurance60\",\n    name: \"Endurance 60\",\n    description: \"Travail d'endurance avec intervalles longs pour préparer les longues ascensions\",\n    duration: 60,\n    caloriesBurned: 800,\n    intensity: \"medium\",\n    type: \"endurance\",\n    badgeType: \"endurance\",\n    focusArea: [\"endurance\", \"fatigue_resistance\"],\n    format: [\n      { type: \"warmup\", duration: 10, intensity: 60 },\n      { type: \"interval\", duration: 8, intensity: 75, repeat: 2, recovery: 4, recoveryIntensity: 55 },\n      { type: \"interval\", duration: 5, intensity: 85, repeat: 3, recovery: 3, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 3, intensity: 90, repeat: 1, recovery: 2, recoveryIntensity: 45 },\n      { type: \"cooldown\", duration: 8, intensity: 50 }\n    ]\n  },\n  {\n    id: \"power60\",\n    name: \"Puissance 60\",\n    description: \"Séance orientée développement de la puissance maximale et résistance à la fatigue\",\n    duration: 60,\n    caloriesBurned: 900,\n    intensity: \"high\",\n    type: \"power\",\n    badgeType: \"burn\",\n    focusArea: [\"power\", \"lactate_tolerance\"],\n    format: [\n      { type: \"warmup\", duration: 10, intensity: 60 },\n      { type: \"interval\", duration: 1, intensity: 120, repeat: 5, recovery: 3, recoveryIntensity: 40 },\n      { type: \"interval\", duration: 2, intensity: 110, repeat: 5, recovery: 2, recoveryIntensity: 40 },\n      { type: \"interval\", duration: 5, intensity: 90, repeat: 3, recovery: 2, recoveryIntensity: 50 },\n      { type: \"cooldown\", duration: 8, intensity: 45 }\n    ]\n  }\n];\n\n/**\n * Séances HIIT organisées par dépense calorique\n * Configuration similaire aux séances par temps, mais avec des séances optimisées pour maximiser\n * les calories brûlées dans différentes plages (300, 500, 700, 1000 calories)\n */\nexport const hiitWorkoutsByCalories = [\n  // Séances 300 calories\n  {\n    id: \"burn300_quick\",\n    name: \"Brûle 300 Express\",\n    description: \"Séance rapide concentrée sur la dépense calorique maximale en temps minimum\",\n    duration: 20,\n    caloriesBurned: 300,\n    intensity: \"high\",\n    type: \"power\",\n    badgeType: \"burn\",\n    focusArea: [\"fat_burning\", \"cardio\"],\n    format: [\n      { type: \"warmup\", duration: 3, intensity: 60 },\n      { type: \"interval\", duration: 0.5, intensity: 100, repeat: 12, recovery: 0.5, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 1, intensity: 90, repeat: 5, recovery: 1, recoveryIntensity: 60 },\n      { type: \"cooldown\", duration: 2, intensity: 50 }\n    ]\n  },\n  {\n    id: \"burn300_balanced\",\n    name: \"Brûle 300 Équilibré\",\n    description: \"Séance équilibrée pour brûler 300 calories avec un niveau d'intensité modéré\",\n    duration: 25,\n    caloriesBurned: 300,\n    intensity: \"medium\",\n    type: \"endurance\",\n    badgeType: \"balanced\",\n    focusArea: [\"fat_burning\", \"endurance\"],\n    format: [\n      { type: \"warmup\", duration: 5, intensity: 60 },\n      { type: \"interval\", duration: 3, intensity: 80, repeat: 3, recovery: 2, recoveryIntensity: 60 },\n      { type: \"interval\", duration: 1, intensity: 90, repeat: 5, recovery: 1, recoveryIntensity: 50 },\n      { type: \"cooldown\", duration: 3, intensity: 50 }\n    ]\n  },\n  \n  // Séances 500 calories\n  {\n    id: \"burn500_intense\",\n    name: \"Intense 500\",\n    description: \"Séance à haute intensité conçue pour maximiser la dépense de 500 calories\",\n    duration: 35,\n    caloriesBurned: 500,\n    intensity: \"high\",\n    type: \"power\",\n    badgeType: \"burn\",\n    focusArea: [\"fat_burning\", \"vo2max\"],\n    format: [\n      { type: \"warmup\", duration: 5, intensity: 60 },\n      { type: \"interval\", duration: 1, intensity: 95, repeat: 8, recovery: 1, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 2, intensity: 85, repeat: 5, recovery: 1, recoveryIntensity: 55 },\n      { type: \"interval\", duration: 3, intensity: 90, repeat: 2, recovery: 2, recoveryIntensity: 50 },\n      { type: \"cooldown\", duration: 5, intensity: 45 }\n    ]\n  },\n  {\n    id: \"burn500_threshold\",\n    name: \"Seuil 500\",\n    description: \"Travail au seuil pour développer l'endurance tout en brûlant 500 calories\",\n    duration: 40,\n    caloriesBurned: 500,\n    intensity: \"medium-high\",\n    type: \"endurance\",\n    badgeType: \"structured\",\n    focusArea: [\"threshold\", \"fat_burning\"],\n    format: [\n      { type: \"warmup\", duration: 8, intensity: 60 },\n      { type: \"interval\", duration: 5, intensity: 85, repeat: 4, recovery: 2, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 1, intensity: 95, repeat: 3, recovery: 1, recoveryIntensity: 45 },\n      { type: \"cooldown\", duration: 5, intensity: 50 }\n    ]\n  },\n  \n  // Séances 700 calories\n  {\n    id: \"burn700_mountain\",\n    name: \"Col 700\",\n    description: \"Simulation d'ascension pour brûler 700 calories en travaillant la résistance en montagne\",\n    duration: 50,\n    caloriesBurned: 700,\n    intensity: \"medium-high\",\n    type: \"mountain\",\n    badgeType: \"climb\",\n    focusArea: [\"climbing\", \"fat_burning\"],\n    format: [\n      { type: \"warmup\", duration: 8, intensity: 60 },\n      { type: \"interval\", duration: 8, intensity: 80, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 3, intensity: 90, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 1, intensity: 70, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 6, intensity: 85, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 2, intensity: 95, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 2, intensity: 75, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 8, intensity: 80, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 3, intensity: 100, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"interval\", duration: 2, intensity: 70, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"cooldown\", duration: 6, intensity: 50 }\n    ]\n  },\n  {\n    id: \"burn700_power\",\n    name: \"Puissance 700\",\n    description: \"Séance orientée puissance avec des efforts maximaux pour une dépense de 700 calories\",\n    duration: 45,\n    caloriesBurned: 700,\n    intensity: \"very-high\",\n    type: \"power\",\n    badgeType: \"burn\",\n    focusArea: [\"power\", \"fat_burning\"],\n    format: [\n      { type: \"warmup\", duration: 8, intensity: 60 },\n      { type: \"interval\", duration: 0.5, intensity: 120, repeat: 10, recovery: 1.5, recoveryIntensity: 40 },\n      { type: \"interval\", duration: 1, intensity: 110, repeat: 8, recovery: 1, recoveryIntensity: 40 },\n      { type: \"interval\", duration: 3, intensity: 90, repeat: 3, recovery: 2, recoveryIntensity: 50 },\n      { type: \"cooldown\", duration: 7, intensity: 45 }\n    ]\n  },\n  \n  // Séances 1000 calories\n  {\n    id: \"burn1000_endurance\",\n    name: \"Endurance 1000\",\n    description: \"Séance longue pour brûler 1000 calories en développant l'endurance\",\n    duration: 75,\n    caloriesBurned: 1000,\n    intensity: \"medium\",\n    type: \"endurance\",\n    badgeType: \"endurance\",\n    focusArea: [\"endurance\", \"fat_burning\"],\n    format: [\n      { type: \"warmup\", duration: 10, intensity: 60 },\n      { type: \"interval\", duration: 10, intensity: 75, repeat: 3, recovery: 5, recoveryIntensity: 55 },\n      { type: \"interval\", duration: 5, intensity: 85, repeat: 3, recovery: 3, recoveryIntensity: 50 },\n      { type: \"interval\", duration: 2, intensity: 95, repeat: 2, recovery: 2, recoveryIntensity: 45 },\n      { type: \"cooldown\", duration: 10, intensity: 50 }\n    ]\n  },\n  {\n    id: \"burn1000_complete\",\n    name: \"Complet 1000\",\n    description: \"Séance complète qui travaille tous les systèmes énergétiques tout en brûlant 1000 calories\",\n    duration: 70,\n    caloriesBurned: 1000,\n    intensity: \"high\",\n    type: \"power\",\n    badgeType: \"burn\",\n    focusArea: [\"complete\", \"fat_burning\"],\n    format: [\n      { type: \"warmup\", duration: 10, intensity: 60 },\n      // Bloc anaérobie\n      { type: \"interval\", duration: 0.5, intensity: 120, repeat: 6, recovery: 1.5, recoveryIntensity: 40 },\n      // Bloc VO2max\n      { type: \"interval\", duration: 3, intensity: 95, repeat: 3, recovery: 2, recoveryIntensity: 40 },\n      // Bloc seuil\n      { type: \"interval\", duration: 5, intensity: 85, repeat: 4, recovery: 2, recoveryIntensity: 50 },\n      // Bloc endurance\n      { type: \"interval\", duration: 8, intensity: 75, repeat: 1, recovery: 0, recoveryIntensity: 0 },\n      { type: \"cooldown\", duration: 7, intensity: 45 }\n    ]\n  }\n];\n\n// Badges visuels pour les types de séances\nexport const workoutBadges = {\n  express: {\n    label: \"Express\",\n    color: \"#ff9800\", // Orange\n    icon: \"bolt\", // Éclair\n    description: \"Séance courte et efficace pour les emplois du temps chargés\"\n  },\n  burn: {\n    label: \"Brûle-graisse\",\n    color: \"#f44336\", // Rouge\n    icon: \"local_fire_department\", // Flamme\n    description: \"Maximise la dépense calorique et la combustion des graisses\"\n  },\n  climb: {\n    label: \"Grimpeur\",\n    color: \"#4caf50\", // Vert\n    icon: \"terrain\", // Montagne\n    description: \"Simule les conditions d'ascension des cols\"\n  },\n  endurance: {\n    label: \"Endurance\",\n    color: \"#2196f3\", // Bleu\n    icon: \"watch_later\", // Horloge\n    description: \"Développe l'endurance sur la durée\"\n  },\n  balanced: {\n    label: \"Équilibré\",\n    color: \"#9c27b0\", // Violet\n    icon: \"balance\", // Balance\n    description: \"Travail équilibré de plusieurs qualités physiques\"\n  },\n  structured: {\n    label: \"Structuré\",\n    color: \"#3f51b5\", // Indigo\n    icon: \"view_module\", // Modules\n    description: \"Progression structurée avec phases distinctes\"\n  }\n};\n\n// Obtenir toutes les séances combinées\nexport const getAllWorkouts = () => [...hiitWorkoutsByTime, ...hiitWorkoutsByCalories];\n\n// Recherche de séances\nexport const findWorkouts = (criteria = {}) => {\n  let workouts = getAllWorkouts();\n  \n  // Filtrer par durée\n  if (criteria.minDuration !== undefined) {\n    workouts = workouts.filter(w => w.duration >= criteria.minDuration);\n  }\n  if (criteria.maxDuration !== undefined) {\n    workouts = workouts.filter(w => w.duration <= criteria.maxDuration);\n  }\n  \n  // Filtrer par calories\n  if (criteria.minCalories !== undefined) {\n    workouts = workouts.filter(w => w.caloriesBurned >= criteria.minCalories);\n  }\n  if (criteria.maxCalories !== undefined) {\n    workouts = workouts.filter(w => w.caloriesBurned <= criteria.maxCalories);\n  }\n  \n  // Filtrer par intensité\n  if (criteria.intensity) {\n    workouts = workouts.filter(w => w.intensity === criteria.intensity);\n  }\n  \n  // Filtrer par type\n  if (criteria.type) {\n    workouts = workouts.filter(w => w.type === criteria.type);\n  }\n  \n  // Filtrer par badge\n  if (criteria.badgeType) {\n    workouts = workouts.filter(w => w.badgeType === criteria.badgeType);\n  }\n  \n  // Filtrer par zone d'intérêt\n  if (criteria.focusArea) {\n    workouts = workouts.filter(w => w.focusArea.includes(criteria.focusArea));\n  }\n  \n  return workouts;\n};\n\nexport default {\n  hiitWorkoutsByTime,\n  hiitWorkoutsByCalories,\n  workoutBadges,\n  getAllWorkouts,\n  findWorkouts,\n  calculateCalories\n};\n","/**\n * CalorieCalculator.js\n * Composant pour personnaliser et calculer la dépense calorique des séances HIIT\n * Intégré au module HIITBuilder de Velo-Altitude\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Slider,\n  Stack,\n  TextField,\n  Typography,\n  Tooltip,\n  Zoom\n} from '@mui/material';\nimport {\n  LocalFireDepartment as FireIcon,\n  Settings as SettingsIcon,\n  FitnessCenter as FitnessIcon,\n  Person as PersonIcon,\n  EmojiPeople as ActivityIcon,\n  Speed as FTPIcon,\n  Close as CloseIcon,\n  InfoOutlined as InfoIcon,\n  Save as SaveIcon,\n  RestartAlt as ResetIcon\n} from '@mui/icons-material';\nimport { brandConfig } from '../../config/branding';\nimport UserService from '../../services/UserService';\nimport { calculateCalories } from '../../data/hiitWorkouts';\n\n// Niveaux d'activité prédéfinis\nconst activityLevels = [\n  { \n    id: 'beginner', \n    label: 'Débutant', \n    description: 'Moins de 3 heures d\\'activité par semaine, FTP estimée < 2.5 W/kg',\n    multiplier: 0.8,\n    ftpEstimate: 2.0\n  },\n  { \n    id: 'recreational', \n    label: 'Loisir', \n    description: '3-5 heures d\\'activité par semaine, FTP estimée 2.5-3.0 W/kg',\n    multiplier: 1.0,\n    ftpEstimate: 2.7\n  },\n  { \n    id: 'intermediate', \n    label: 'Intermédiaire', \n    description: '5-8 heures d\\'activité par semaine, FTP estimée 3.0-3.5 W/kg',\n    multiplier: 1.2,\n    ftpEstimate: 3.2\n  },\n  { \n    id: 'advanced', \n    label: 'Avancé', \n    description: '8-12 heures d\\'activité par semaine, FTP estimée 3.5-4.1 W/kg',\n    multiplier: 1.4,\n    ftpEstimate: 3.8\n  },\n  { \n    id: 'expert', \n    label: 'Expert', \n    description: 'Plus de 12 heures d\\'activité par semaine, FTP estimée > 4.1 W/kg',\n    multiplier: 1.6,\n    ftpEstimate: 4.3\n  }\n];\n\n/**\n * Composant de calculateur de calories personnalisé\n * @param {Object} props - Propriétés du composant\n * @param {Object} props.userProfile - Profil de l'utilisateur\n * @param {Function} props.onCalorieSettingsChange - Fonction appelée quand les paramètres sont modifiés\n * @param {boolean} props.open - Contrôle l'ouverture du panneau\n * @param {Function} props.onClose - Fonction appelée à la fermeture du panneau\n */\nconst CalorieCalculator = ({ userProfile, onCalorieSettingsChange, open, onClose }) => {\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [calculationType, setCalculationType] = useState('auto'); // 'auto' ou 'manual'\n  \n  // Paramètres du calculateur\n  const [settings, setSettings] = useState({\n    weight: 70,\n    age: 35,\n    gender: 'male',\n    activityLevel: 'recreational',\n    ftp: 200,\n    useCustomFTP: false,\n  });\n  \n  // Valeurs de test pour visualiser l'impact\n  const [testWorkout, setTestWorkout] = useState({\n    duration: 45,\n    intensity: 'medium-high',\n    standardCalories: 650\n  });\n  \n  // Charger les données utilisateur au montage du composant\n  useEffect(() => {\n    if (userProfile) {\n      loadUserData();\n    }\n  }, [userProfile]);\n  \n  // Charger les données de l'utilisateur\n  const loadUserData = async () => {\n    setLoading(true);\n    try {\n      // Utiliser les données de profil si disponibles\n      if (userProfile) {\n        const newSettings = {\n          ...settings,\n          weight: userProfile.weight || settings.weight,\n          age: userProfile.age || settings.age,\n          gender: userProfile.gender || settings.gender,\n          activityLevel: userProfile.cyclist_type === 'beginner' ? 'beginner' :\n                          userProfile.cyclist_type === 'all-rounder' ? 'recreational' :\n                          userProfile.cyclist_type === 'climber' ? 'intermediate' :\n                          userProfile.cyclist_type === 'sprinter' ? 'advanced' : 'recreational',\n          ftp: userProfile.ftp || settings.ftp,\n          useCustomFTP: userProfile.ftp ? true : false\n        };\n        setSettings(newSettings);\n        \n        // Mettre à jour immédiatement les paramètres de calorie\n        if (onCalorieSettingsChange) {\n          onCalorieSettingsChange(newSettings);\n        }\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des données utilisateur:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Mettre à jour un paramètre spécifique\n  const handleSettingChange = (key, value) => {\n    const newSettings = { ...settings, [key]: value };\n    \n    // Si le niveau d'activité change et que l'utilisateur n'a pas de FTP personnalisé,\n    // mettre à jour la FTP estimée\n    if (key === 'activityLevel' && !settings.useCustomFTP) {\n      const activityLevel = activityLevels.find(level => level.id === value);\n      if (activityLevel) {\n        newSettings.ftp = Math.round(activityLevel.ftpEstimate * newSettings.weight);\n      }\n    }\n    \n    // Si le poids change et que l'utilisateur n'a pas de FTP personnalisée,\n    // mettre à jour la FTP estimée\n    if (key === 'weight' && !settings.useCustomFTP) {\n      const activityLevel = activityLevels.find(level => level.id === settings.activityLevel);\n      if (activityLevel) {\n        newSettings.ftp = Math.round(activityLevel.ftpEstimate * value);\n      }\n    }\n    \n    // Mettre à jour l'utilisation de FTP personnalisée\n    if (key === 'useCustomFTP') {\n      if (!value) {\n        // Si l'utilisateur n'utilise plus de FTP personnalisée, revenir à l'estimation\n        const activityLevel = activityLevels.find(level => level.id === settings.activityLevel);\n        if (activityLevel) {\n          newSettings.ftp = Math.round(activityLevel.ftpEstimate * settings.weight);\n        }\n      }\n    }\n    \n    setSettings(newSettings);\n  };\n  \n  // Calculer les calories personnalisées\n  const calculatePersonalizedCalories = (standardCalories) => {\n    const activityLevel = activityLevels.find(level => level.id === settings.activityLevel);\n    const baseMultiplier = activityLevel ? activityLevel.multiplier : 1.0;\n    \n    // Coefficient de genre (légère différence due à la composition corporelle moyenne)\n    const genderMultiplier = settings.gender === 'female' ? 0.9 : 1.0;\n    \n    // Coefficient d'âge (métabolisme plus lent avec l'âge)\n    const ageMultiplier = settings.age < 30 ? 1.1 :\n                          settings.age < 40 ? 1.0 :\n                          settings.age < 50 ? 0.95 :\n                          settings.age < 60 ? 0.9 : 0.85;\n    \n    // Coefficient de poids (ajusté par rapport au poids standard de 70kg)\n    const weightMultiplier = settings.weight / 70;\n    \n    // Coefficient de FTP (ajusté par rapport à la FTP standard de 200W)\n    const ftpMultiplier = settings.ftp / 200;\n    \n    // Calcul final\n    const totalMultiplier = baseMultiplier * genderMultiplier * ageMultiplier * weightMultiplier * ftpMultiplier;\n    return Math.round(standardCalories * totalMultiplier);\n  };\n  \n  // Enregistrer les modifications et fermer\n  const handleSave = () => {\n    if (onCalorieSettingsChange) {\n      onCalorieSettingsChange(settings);\n    }\n    onClose();\n  };\n  \n  // Réinitialiser aux valeurs par défaut\n  const handleReset = () => {\n    setSettings({\n      weight: 70,\n      age: 35,\n      gender: 'male',\n      activityLevel: 'recreational',\n      ftp: 200,\n      useCustomFTP: false\n    });\n  };\n  \n  // Calculer les calories pour la séance de test\n  const testWorkoutCalories = calculatePersonalizedCalories(testWorkout.standardCalories);\n  const calorieChange = testWorkoutCalories - testWorkout.standardCalories;\n  \n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n      PaperProps={{\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden'\n        }\n      }}\n    >\n      <DialogTitle sx={{ \n        bgcolor: brandConfig.colors.primary, \n        color: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <FireIcon sx={{ mr: 1 }} />\n          {t('personalizedCalorieCalculator')}\n        </Box>\n        <IconButton size=\"small\" onClick={onClose} sx={{ color: 'white' }}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      \n      <DialogContent dividers>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {t('calorieCalculatorDescription')}\n        </Typography>\n        \n        <Divider sx={{ my: 2 }} />\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} md={7}>\n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n              <PersonIcon sx={{ mr: 1 }} />\n              {t('yourProfile')}\n            </Typography>\n            \n            <Card variant=\"outlined\" sx={{ mb: 2 }}>\n              <CardContent>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label={t('weight')}\n                      type=\"number\"\n                      value={settings.weight}\n                      onChange={(e) => handleSettingChange('weight', parseInt(e.target.value))}\n                      fullWidth\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label={t('age')}\n                      type=\"number\"\n                      value={settings.age}\n                      onChange={(e) => handleSettingChange('age', parseInt(e.target.value))}\n                      fullWidth\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">{t('years')}</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup \n                        row \n                        value={settings.gender} \n                        onChange={(e) => handleSettingChange('gender', e.target.value)}\n                      >\n                        <FormControlLabel value=\"male\" control={<Radio />} label={t('male')} />\n                        <FormControlLabel value=\"female\" control={<Radio />} label={t('female')} />\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n            \n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n              <ActivityIcon sx={{ mr: 1 }} />\n              {t('activityLevel')}\n            </Typography>\n            \n            <Card variant=\"outlined\" sx={{ mb: 2 }}>\n              <CardContent>\n                <FormControl fullWidth>\n                  <InputLabel>{t('yourCyclingLevel')}</InputLabel>\n                  <Select\n                    value={settings.activityLevel}\n                    onChange={(e) => handleSettingChange('activityLevel', e.target.value)}\n                    label={t('yourCyclingLevel')}\n                  >\n                    {activityLevels.map(level => (\n                      <MenuItem key={level.id} value={level.id}>\n                        {level.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <FormHelperText>\n                    {activityLevels.find(level => level.id === settings.activityLevel)?.description}\n                  </FormHelperText>\n                </FormControl>\n              </CardContent>\n            </Card>\n            \n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n              <FTPIcon sx={{ mr: 1 }} />\n              {t('yourFTP')}\n              <Tooltip \n                title={t('ftpDescription')} \n                arrow\n                TransitionComponent={Zoom}\n              >\n                <InfoIcon fontSize=\"small\" sx={{ ml: 1, color: 'text.secondary' }} />\n              </Tooltip>\n            </Typography>\n            \n            <Card variant=\"outlined\">\n              <CardContent>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      control={\n                        <Radio\n                          checked={!settings.useCustomFTP}\n                          onChange={() => handleSettingChange('useCustomFTP', false)}\n                        />\n                      }\n                      label={t('estimatedFTP')}\n                    />\n                    \n                    {!settings.useCustomFTP && (\n                      <Box sx={{ ml: 4, mb: 2 }}>\n                        <Typography variant=\"body1\" color=\"primary\" fontWeight=\"bold\">\n                          {settings.ftp} watts\n                          <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" sx={{ ml: 1 }}>\n                            ({(settings.ftp / settings.weight).toFixed(1)} W/kg)\n                          </Typography>\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {t('basedOnProfileAndActivity')}\n                        </Typography>\n                      </Box>\n                    )}\n                    \n                    <FormControlLabel\n                      control={\n                        <Radio\n                          checked={settings.useCustomFTP}\n                          onChange={() => handleSettingChange('useCustomFTP', true)}\n                        />\n                      }\n                      label={t('customFTP')}\n                    />\n                    \n                    {settings.useCustomFTP && (\n                      <Box sx={{ ml: 4 }}>\n                        <TextField\n                          label={t('yourFTPWatts')}\n                          type=\"number\"\n                          value={settings.ftp}\n                          onChange={(e) => handleSettingChange('ftp', parseInt(e.target.value))}\n                          fullWidth\n                          InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">watts</InputAdornment>,\n                          }}\n                          helperText={`${(settings.ftp / settings.weight).toFixed(1)} W/kg`}\n                        />\n                      </Box>\n                    )}\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          \n          <Grid item xs={12} md={5}>\n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n              <FireIcon sx={{ mr: 1 }} />\n              {t('calorieImpact')}\n            </Typography>\n            \n            <Card \n              sx={{ \n                height: '100%', \n                display: 'flex', \n                flexDirection: 'column',\n                bgcolor: 'background.default',\n                borderRadius: 2\n              }}\n            >\n              <CardContent sx={{ flexGrow: 1 }}>\n                <Box \n                  sx={{ \n                    p: 2, \n                    borderRadius: 2, \n                    mb: 2,\n                    bgcolor: 'white'\n                  }}\n                >\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('exampleWorkout')}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                    {t('intensityLevel')}: {\n                      testWorkout.intensity === 'low' ? t('low') :\n                      testWorkout.intensity === 'medium' ? t('medium') :\n                      testWorkout.intensity === 'medium-high' ? t('mediumHigh') :\n                      testWorkout.intensity === 'high' ? t('high') :\n                      t('veryHigh')\n                    }\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                    {t('duration')}: {testWorkout.duration} min\n                  </Typography>\n                  \n                  <Divider sx={{ my: 1 }} />\n                  \n                  <Grid container spacing={1} alignItems=\"center\">\n                    <Grid item xs={6}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {t('standardCalories')}:\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\" align=\"right\">\n                        {testWorkout.standardCalories} kcal\n                      </Typography>\n                    </Grid>\n                    \n                    <Grid item xs={6}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {t('yourCalories')}:\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography \n                        variant=\"h5\" \n                        color=\"primary\" \n                        align=\"right\"\n                        fontWeight=\"bold\"\n                      >\n                        {testWorkoutCalories} kcal\n                      </Typography>\n                    </Grid>\n                    \n                    <Grid item xs={12}>\n                      <Box \n                        sx={{ \n                          mt: 1, \n                          p: 1, \n                          borderRadius: 1,\n                          bgcolor: calorieChange > 0 ? 'success.light' : 'warning.light',\n                          color: calorieChange > 0 ? 'success.contrastText' : 'warning.contrastText',\n                          display: 'flex',\n                          justifyContent: 'center',\n                          alignItems: 'center'\n                        }}\n                      >\n                        <Typography variant=\"body2\" fontWeight=\"medium\">\n                          {calorieChange > 0 ? '+' : ''}{calorieChange} kcal ({Math.round((calorieChange / testWorkout.standardCalories) * 100)}%)\n                        </Typography>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box>\n                \n                <Typography variant=\"subtitle2\" gutterBottom>\n                  {t('testDifferentWorkout')}:\n                </Typography>\n                \n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" gutterBottom>\n                      {t('duration')}: {testWorkout.duration} min\n                    </Typography>\n                    <Slider\n                      value={testWorkout.duration}\n                      onChange={(e, value) => setTestWorkout({ ...testWorkout, duration: value })}\n                      min={15}\n                      max={90}\n                      step={5}\n                      marks={[\n                        { value: 15, label: '15' },\n                        { value: 30, label: '30' },\n                        { value: 45, label: '45' },\n                        { value: 60, label: '60' },\n                        { value: 90, label: '90' }\n                      ]}\n                      valueLabelDisplay=\"auto\"\n                    />\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                    <FormControl fullWidth size=\"small\">\n                      <InputLabel>{t('intensityLevel')}</InputLabel>\n                      <Select\n                        value={testWorkout.intensity}\n                        onChange={(e) => {\n                          const intensity = e.target.value;\n                          let standardCalories;\n                          \n                          // Ajuster les calories standard en fonction de l'intensité et de la durée\n                          if (intensity === 'low') {\n                            standardCalories = Math.round(testWorkout.duration * 8); // ~8 kcal/min\n                          } else if (intensity === 'medium') {\n                            standardCalories = Math.round(testWorkout.duration * 10); // ~10 kcal/min\n                          } else if (intensity === 'medium-high') {\n                            standardCalories = Math.round(testWorkout.duration * 14); // ~14 kcal/min\n                          } else if (intensity === 'high') {\n                            standardCalories = Math.round(testWorkout.duration * 18); // ~18 kcal/min\n                          } else { // very-high\n                            standardCalories = Math.round(testWorkout.duration * 22); // ~22 kcal/min\n                          }\n                          \n                          setTestWorkout({ \n                            ...testWorkout, \n                            intensity, \n                            standardCalories\n                          });\n                        }}\n                        label={t('intensityLevel')}\n                      >\n                        <MenuItem value=\"low\">{t('low')}</MenuItem>\n                        <MenuItem value=\"medium\">{t('medium')}</MenuItem>\n                        <MenuItem value=\"medium-high\">{t('mediumHigh')}</MenuItem>\n                        <MenuItem value=\"high\">{t('high')}</MenuItem>\n                        <MenuItem value=\"very-high\">{t('veryHigh')}</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n                \n                <Box sx={{ mt: 3 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('calorieCalculationFactors')}:\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" gutterBottom>\n                    • {t('weightFactor')}: {Math.round((settings.weight / 70) * 100)}%\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" gutterBottom>\n                    • {t('ageFactor')}: {\n                      settings.age < 30 ? '110%' :\n                      settings.age < 40 ? '100%' :\n                      settings.age < 50 ? '95%' :\n                      settings.age < 60 ? '90%' : '85%'\n                    }\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" gutterBottom>\n                    • {t('genderFactor')}: {settings.gender === 'female' ? '90%' : '100%'}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" gutterBottom>\n                    • {t('ftpFactor')}: {Math.round((settings.ftp / 200) * 100)}%\n                  </Typography>\n                  \n                  <Typography variant=\"body2\">\n                    • {t('activityFactor')}: {\n                      activityLevels.find(level => level.id === settings.activityLevel)?.multiplier * 100\n                    }%\n                  </Typography>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      \n      <DialogActions sx={{ px: 3, py: 2 }}>\n        <Button\n          onClick={handleReset}\n          startIcon={<ResetIcon />}\n          color=\"inherit\"\n        >\n          {t('resetToDefaults')}\n        </Button>\n        <Box flexGrow={1} />\n        <Button onClick={onClose}>{t('cancel')}</Button>\n        <Button \n          onClick={handleSave} \n          variant=\"contained\" \n          color=\"primary\"\n          startIcon={<SaveIcon />}\n        >\n          {t('saveAndApply')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nCalorieCalculator.propTypes = {\n  userProfile: PropTypes.object,\n  onCalorieSettingsChange: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default CalorieCalculator;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Tabs,\n  Tab,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider,\n  Chip,\n  CircularProgress,\n  Paper,\n  Alert,\n  IconButton,\n  Tooltip,\n  InputAdornment,\n  ToggleButtonGroup,\n  ToggleButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Slider,\n  Badge\n} from '@mui/material';\nimport {\n  DirectionsRun as RunIcon,\n  FitnessCenter as FitnessIcon,\n  Timer as TimerIcon,\n  LocalFireDepartment as FireIcon,\n  Favorite as HeartIcon,\n  Info as InfoIcon,\n  Save as SaveIcon,\n  TimelapseRounded as ClockIcon,\n  BoltRounded as ExpressIcon,\n  Terrain as MountainIcon,\n  Balance as BalanceIcon,\n  ViewModule as StructuredIcon,\n  FilterAlt as FilterIcon,\n  Settings as SettingsIcon\n} from '@mui/icons-material';\nimport { \n  LineChart, \n  Line, \n  BarChart,\n  Bar,\n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip as RechartsTooltip, \n  Legend, \n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { useNotification } from '../common/NotificationSystem';\nimport { brandConfig } from '../../config/branding';\nimport CalorieCalculator from './CalorieCalculator';\nimport UserService from '../../services/UserService';\n\n// Importer les données HIIT structurées\nimport { \n  hiitWorkoutsByTime, \n  hiitWorkoutsByCalories, \n  workoutBadges, \n  getAllWorkouts,\n  findWorkouts,\n  calculateCalories \n} from '../../data/hiitWorkouts';\n\n/**\n * Composant de programmes HIIT spécifiques pour fitness et entraînement cycliste\n * Permet de créer et suivre des programmes d'entraînement par intervalles à haute intensité\n */\nconst HIITBuilder = ({ userProfile, onSaveWorkout }) => {\n  const { t } = useTranslation();\n  const { notify } = useNotification();\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [workouts, setWorkouts] = useState([]);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [filterView, setFilterView] = useState('time'); // 'time' ou 'calories'\n  const [filterCriteria, setFilterCriteria] = useState({\n    minDuration: 0,\n    maxDuration: 90,\n    minCalories: 0,\n    maxCalories: 1200,\n    type: 'all',\n    badgeType: 'all'\n  });\n  const [customWorkout, setCustomWorkout] = useState({\n    name: '',\n    description: '',\n    targetSystem: 'aerobic', // aerobic, anaerobic, mixed\n    duration: 30,\n    intervals: []\n  });\n  const [currentInterval, setCurrentInterval] = useState({\n    intensity: 90, // % of FTP or max heart rate\n    duration: 30, // seconds\n    recovery: 30, // seconds\n    repetitions: 5\n  });\n  const [previewData, setPreviewData] = useState([]);\n  \n  // État pour le calculateur de calories\n  const [calorieCalculatorOpen, setCalorieCalculatorOpen] = useState(false);\n  const [calorieSettings, setCalorieSettings] = useState({\n    weight: userProfile?.weight || 70,\n    age: userProfile?.age || 35,\n    gender: userProfile?.gender || 'male',\n    activityLevel: userProfile?.cyclist_type === 'beginner' ? 'beginner' :\n                   userProfile?.cyclist_type === 'all-rounder' ? 'recreational' :\n                   userProfile?.cyclist_type === 'climber' ? 'intermediate' :\n                   userProfile?.cyclist_type === 'sprinter' ? 'advanced' : 'recreational',\n    ftp: userProfile?.ftp || 200,\n    useCustomFTP: userProfile?.ftp ? true : false\n  });\n  const [personalizedCalories, setPersonalizedCalories] = useState(true);\n\n  // Systèmes d'énergie ciblés\n  const energySystems = [\n    { value: 'aerobic', label: t('aerobicSystem'), color: '#4CAF50', description: t('aerobicSystemDesc') },\n    { value: 'anaerobic', label: t('anaerobicSystem'), color: '#F44336', description: t('anaerobicSystemDesc') },\n    { value: 'mixed', label: t('mixedSystem'), color: '#FF9800', description: t('mixedSystemDesc') },\n    { value: 'neuromuscular', label: t('neuromuscularSystem'), color: '#9C27B0', description: t('neuromuscularSystemDesc') }\n  ];\n\n  // Charger les templates HIIT\n  useEffect(() => {\n    if (userProfile) {\n      loadHIITData();\n    }\n  }, [userProfile]);\n\n  // Charger toutes les données HIIT\n  const loadHIITData = () => {\n    setLoading(true);\n    \n    // Utiliser les données du fichier hiitWorkouts.js au lieu des mocks\n    setWorkouts(getAllWorkouts());\n    \n    setLoading(false);\n  };\n\n  // Filtrer les séances HIIT selon les critères\n  const getFilteredWorkouts = () => {\n    return findWorkouts({\n      minDuration: filterCriteria.minDuration,\n      maxDuration: filterCriteria.maxDuration,\n      minCalories: filterCriteria.minCalories,\n      maxCalories: filterCriteria.maxCalories,\n      type: filterCriteria.type !== 'all' ? filterCriteria.type : undefined,\n      badgeType: filterCriteria.badgeType !== 'all' ? filterCriteria.badgeType : undefined\n    });\n  };\n\n  // Gérer le changement d'onglet\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  // Gérer le changement de vue des filtres (temps ou calories)\n  const handleFilterViewChange = (event, newView) => {\n    if (newView !== null) {\n      setFilterView(newView);\n    }\n  };\n\n  // Gérer les changements dans les critères de filtre\n  const handleFilterChange = (name, value) => {\n    setFilterCriteria(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Générer un rendu pour le badge d'une séance\n  const renderWorkoutBadge = (badgeType) => {\n    if (!badgeType || !workoutBadges[badgeType]) return null;\n    \n    const badge = workoutBadges[badgeType];\n    const icon = {\n      'bolt': <ExpressIcon />,\n      'local_fire_department': <FireIcon />,\n      'terrain': <MountainIcon />,\n      'watch_later': <ClockIcon />,\n      'balance': <BalanceIcon />,\n      'view_module': <StructuredIcon />\n    }[badge.icon] || <InfoIcon />;\n    \n    return (\n      <Chip\n        icon={icon}\n        label={badge.label}\n        size=\"small\"\n        sx={{\n          backgroundColor: badge.color,\n          color: 'white',\n          fontWeight: 500,\n          '& .MuiChip-icon': {\n            color: 'white'\n          }\n        }}\n      />\n    );\n  };\n\n  // Sélectionner une séance\n  const handleSelectWorkout = (workout) => {\n    setSelectedWorkout(workout);\n    setActiveTab(3); // Passer à l'onglet de prévisualisation\n    \n    notify({\n      message: t('workoutSelected', { name: workout.name }),\n      severity: 'success'\n    });\n  };\n\n  // Générer des intervalles simples\n  const generateIntervals = (workSecs, restSecs, repetitions, intensity) => {\n    const intervals = [];\n    \n    // Échauffement: 10 minutes en Z1-Z2\n    intervals.push({\n      type: 'warmup',\n      duration: 600,\n      intensity: 60,\n      label: t('warmup')\n    });\n    \n    // Intervalles principaux\n    for (let i = 0; i < repetitions; i++) {\n      intervals.push({\n        type: 'work',\n        duration: workSecs,\n        intensity: intensity,\n        label: `${t('interval')} ${i + 1}/${repetitions}`\n      });\n      \n      intervals.push({\n        type: 'rest',\n        duration: restSecs,\n        intensity: 50,\n        label: `${t('recovery')} ${i + 1}/${repetitions}`\n      });\n    }\n    \n    // Récupération: 5 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 300,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n\n  // Générer des intervalles Sweet Spot (nouveau)\n  const generateSweetSpotIntervals = (repetitions, workSecs, restSecs, intensity) => {\n    const intervals = [];\n    \n    // Échauffement: 15 minutes progression Z1 à Z3\n    intervals.push({\n      type: 'warmup',\n      duration: 900,\n      intensity: 65,\n      label: t('warmup'),\n      progressiveIntensity: true\n    });\n    \n    // Intervalles Sweet Spot\n    for (let i = 0; i < repetitions; i++) {\n      intervals.push({\n        type: 'work',\n        duration: workSecs,\n        intensity: intensity,\n        label: `${t('sweetSpotInterval')} ${i + 1}/${repetitions}`\n      });\n      \n      intervals.push({\n        type: 'rest',\n        duration: restSecs,\n        intensity: 55,\n        label: `${t('recovery')} ${i + 1}/${repetitions}`\n      });\n    }\n    \n    // Récupération: 10 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 600,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n  \n  // Générer des intervalles au seuil (nouveau)\n  const generateThresholdIntervals = (repetitions, workSecs, restSecs, intensity) => {\n    const intervals = [];\n    \n    // Échauffement: 15 minutes progression Z1 à Z3\n    intervals.push({\n      type: 'warmup',\n      duration: 900,\n      intensity: 65,\n      label: t('warmup'),\n      progressiveIntensity: true\n    });\n    \n    // Intervalles au seuil\n    for (let i = 0; i < repetitions; i++) {\n      intervals.push({\n        type: 'work',\n        duration: workSecs,\n        intensity: intensity,\n        label: `${t('thresholdInterval')} ${i + 1}/${repetitions}`\n      });\n      \n      intervals.push({\n        type: 'rest',\n        duration: restSecs,\n        intensity: 55,\n        label: `${t('recovery')} ${i + 1}/${repetitions}`\n      });\n    }\n    \n    // Récupération: 10 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 600,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n  \n  // Générer une simulation de montée avec intensité progressive (nouveau)\n  const generateClimbPyramid = () => {\n    const intervals = [];\n    \n    // Échauffement: 15 minutes\n    intervals.push({\n      type: 'warmup',\n      duration: 900,\n      intensity: 65,\n      label: t('warmup'),\n      progressiveIntensity: true\n    });\n    \n    // Phase 1: Approche de la montée (75% FTP pendant 5 min)\n    intervals.push({\n      type: 'work',\n      duration: 300,\n      intensity: 75,\n      label: t('approachClimb')\n    });\n    \n    // Phase 2: Début de montée (85% FTP pendant 5 min)\n    intervals.push({\n      type: 'work',\n      duration: 300,\n      intensity: 85,\n      label: t('startClimb')\n    });\n    \n    // Phase 3: Section raide (100% FTP pendant 3 min)\n    intervals.push({\n      type: 'work',\n      duration: 180,\n      intensity: 100,\n      label: t('steepSection')\n    });\n    \n    // Phase 4: Section très raide (110% FTP pendant 2 min)\n    intervals.push({\n      type: 'work',\n      duration: 120,\n      intensity: 110,\n      label: t('verySteepSection')\n    });\n    \n    // Phase 5: Sommet (120% FTP pendant 1 min)\n    intervals.push({\n      type: 'work',\n      duration: 60,\n      intensity: 120,\n      label: t('summit')\n    });\n    \n    // Phase 6: Récupération active (60% FTP pendant 5 min)\n    intervals.push({\n      type: 'rest',\n      duration: 300,\n      intensity: 60,\n      label: t('activeRecovery')\n    });\n    \n    // Phase 7: Deuxième montée (inverse de la première)\n    intervals.push({\n      type: 'work',\n      duration: 60,\n      intensity: 120,\n      label: t('summit2')\n    });\n    \n    intervals.push({\n      type: 'work',\n      duration: 120,\n      intensity: 110,\n      label: t('verySteepSection2')\n    });\n    \n    intervals.push({\n      type: 'work',\n      duration: 180,\n      intensity: 100,\n      label: t('steepSection2')\n    });\n    \n    intervals.push({\n      type: 'work',\n      duration: 300,\n      intensity: 85,\n      label: t('descentClimb')\n    });\n    \n    // Récupération: 10 minutes en Z1\n    intervals.push({\n      type: 'cooldown',\n      duration: 600,\n      intensity: 50,\n      label: t('cooldown')\n    });\n    \n    return intervals;\n  };\n\n  // Calculer les statistiques du workout\n  const calculateWorkoutStats = (intervals) => {\n    if (!intervals || intervals.length === 0) {\n      return {\n        totalDuration: 0,\n        workDuration: 0,\n        restDuration: 0,\n        avgIntensity: 0,\n        maxIntensity: 0,\n        tss: 0,\n        intensityDistribution: []\n      };\n    }\n    \n    let totalDuration = 0;\n    let totalWorkDuration = 0;\n    let totalRestDuration = 0;\n    let intensitySum = 0;\n    let maxIntensity = 0;\n    let workIfNormalized = 0;\n    \n    // Distribution de l'intensité par zones\n    const zoneDistribution = {\n      'Z1': 0, // Récupération (<60% FTP)\n      'Z2': 0, // Endurance (60-75% FTP)\n      'Z3': 0, // Tempo (76-90% FTP)\n      'Z4': 0, // Seuil (91-105% FTP)\n      'Z5': 0, // VO2Max (106-120% FTP)\n      'Z6': 0  // Anaérobie (>120% FTP)\n    };\n    \n    intervals.forEach(interval => {\n      totalDuration += interval.duration;\n      \n      if (interval.type === 'work') {\n        totalWorkDuration += interval.duration;\n      } else if (interval.type === 'rest' || interval.type === 'cooldown') {\n        totalRestDuration += interval.duration;\n      }\n      \n      intensitySum += interval.intensity * interval.duration;\n      maxIntensity = Math.max(maxIntensity, interval.intensity);\n      \n      // Calculer le travail normalisé (pour TSS)\n      const normalizedIntensity = Math.pow(interval.intensity / 100, 4);\n      workIfNormalized += normalizedIntensity * interval.duration;\n      \n      // Ajouter à la distribution des zones\n      if (interval.intensity <= 60) {\n        zoneDistribution['Z1'] += interval.duration;\n      } else if (interval.intensity <= 75) {\n        zoneDistribution['Z2'] += interval.duration;\n      } else if (interval.intensity <= 90) {\n        zoneDistribution['Z3'] += interval.duration;\n      } else if (interval.intensity <= 105) {\n        zoneDistribution['Z4'] += interval.duration;\n      } else if (interval.intensity <= 120) {\n        zoneDistribution['Z5'] += interval.duration;\n      } else {\n        zoneDistribution['Z6'] += interval.duration;\n      }\n    });\n    \n    const avgIntensity = intensitySum / totalDuration;\n    \n    // Calculer l'intensité normalisée\n    const normalizedIntensity = Math.pow(workIfNormalized / totalDuration, 0.25) * 100;\n    \n    // Calculer le TSS\n    // TSS = (sec × NP × IF) ÷ (FTP × 3600) × 100\n    // Où IF = NP/FTP\n    const userFTP = userProfile?.ftp || 200;\n    const intensityFactor = normalizedIntensity / 100;\n    const tss = Math.round((totalDuration * normalizedIntensity * intensityFactor) / (userFTP * 36));\n    \n    // Préparer les données pour le graphique de distribution des zones\n    const intensityDistribution = Object.keys(zoneDistribution).map(zone => {\n      return {\n        name: zone,\n        value: Math.round(zoneDistribution[zone] / 60), // Convertir en minutes\n        time: formatTime(zoneDistribution[zone])\n      };\n    });\n    \n    return {\n      totalDuration,\n      workDuration: totalWorkDuration,\n      restDuration: totalRestDuration,\n      avgIntensity,\n      maxIntensity,\n      normalizedIntensity: Math.round(normalizedIntensity),\n      tss,\n      intensityDistribution\n    };\n  };\n  \n  // Formater les secondes en format MM:SS\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Gérer la sauvegarde du workout\n  const handleSaveWorkout = (workout) => {\n    if (onSaveWorkout) {\n      // Ajouter des métadonnées avant de sauvegarder\n      const workoutToSave = {\n        ...workout,\n        id: workout.id || `custom-${Date.now()}`,\n        createdAt: new Date().toISOString(),\n        stats: calculateWorkoutStats(workout.intervals),\n        calories: workout.caloriesBurned || calculateWorkoutStats(workout.intervals).calories\n      };\n      \n      onSaveWorkout(workoutToSave);\n      \n      notify({\n        message: t('workoutSaved', { name: workout.name }),\n        severity: 'success'\n      });\n    }\n  };\n\n  // Gérer les changements des paramètres de calories\n  const handleCalorieSettingsChange = (newSettings) => {\n    setCalorieSettings(newSettings);\n    \n    // Si nous avons un utilisateur connecté, enregistrer ses préférences\n    if (userProfile && userProfile.id) {\n      try {\n        // Dans une véritable implémentation, cela appellerait l'API pour sauvegarder les préférences\n        console.log('Sauvegarde des préférences calorigènes:', newSettings);\n        notify(t('caloriePreferencesSaved'), 'success');\n      } catch (error) {\n        console.error('Erreur lors de la sauvegarde des préférences:', error);\n        notify(t('errorSavingPreferences'), 'error');\n      }\n    }\n    \n    // Mettre à jour les calories personnalisées pour tous les workouts\n    setPersonalizedCalories(true);\n  };\n\n  // Calculer les calories personnalisées pour un workout\n  const getPersonalizedCalories = (workout) => {\n    if (!personalizedCalories || !workout) return workout.caloriesBurned;\n    \n    // Calculer l'intensité totale pour cette séance\n    let totalIntensity = 0;\n    \n    if (workout.format) {\n      totalIntensity = workout.format.reduce((total, interval) => {\n        const duration = interval.duration || 0;\n        const intensity = interval.intensity || 0;\n        const repeat = interval.repeat || 1;\n        \n        if (interval.recovery && interval.recoveryIntensity) {\n          const recoveryEffort = interval.recovery * interval.recoveryIntensity * repeat;\n          return total + (duration * intensity * repeat) + recoveryEffort;\n        }\n        \n        return total + (duration * intensity * repeat);\n      }, 0);\n    }\n    \n    // Utiliser la fonction de calcul des calories\n    return calculateCalories(\n      totalIntensity, \n      calorieSettings.weight, \n      calorieSettings.ftp\n    );\n  };\n\n  // Rendu des onglets\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 0: // Catalogue de séances\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('workoutCatalog')}\n            </Typography>\n            \n            {loading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n                <CircularProgress />\n              </Box>\n            ) : (\n              <>\n                <Paper sx={{ p: 2, mb: 3 }}>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    <FilterIcon fontSize=\"small\" sx={{ mr: 1, verticalAlign: 'middle' }} />\n                    {t('filterWorkouts')}\n                  </Typography>\n                  \n                  <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                      <ToggleButtonGroup\n                        value={filterView}\n                        exclusive\n                        onChange={handleFilterViewChange}\n                        aria-label=\"filter view\"\n                        size=\"small\"\n                        sx={{ mb: 2 }}\n                      >\n                        <ToggleButton value=\"time\" aria-label=\"filter by time\">\n                          <TimerIcon fontSize=\"small\" sx={{ mr: 1 }} />\n                          {t('filterByTime')}\n                        </ToggleButton>\n                        <ToggleButton value=\"calories\" aria-label=\"filter by calories\">\n                          <FireIcon fontSize=\"small\" sx={{ mr: 1 }} />\n                          {t('filterByCalories')}\n                        </ToggleButton>\n                      </ToggleButtonGroup>\n                      \n                      {filterView === 'time' ? (\n                        <Box sx={{ width: '100%', px: 2 }}>\n                          <Typography variant=\"body2\" gutterBottom>\n                            {t('duration')}: {filterCriteria.minDuration} - {filterCriteria.maxDuration} min\n                          </Typography>\n                          <Slider\n                            value={[filterCriteria.minDuration, filterCriteria.maxDuration]}\n                            onChange={(e, value) => {\n                              handleFilterChange('minDuration', value[0]);\n                              handleFilterChange('maxDuration', value[1]);\n                            }}\n                            valueLabelDisplay=\"auto\"\n                            min={0}\n                            max={90}\n                            step={5}\n                          />\n                        </Box>\n                      ) : (\n                        <Box sx={{ width: '100%', px: 2 }}>\n                          <Typography variant=\"body2\" gutterBottom>\n                            {t('calories')}: {filterCriteria.minCalories} - {filterCriteria.maxCalories} kcal\n                          </Typography>\n                          <Slider\n                            value={[filterCriteria.minCalories, filterCriteria.maxCalories]}\n                            onChange={(e, value) => {\n                              handleFilterChange('minCalories', value[0]);\n                              handleFilterChange('maxCalories', value[1]);\n                            }}\n                            valueLabelDisplay=\"auto\"\n                            min={0}\n                            max={1200}\n                            step={100}\n                          />\n                        </Box>\n                      )}\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6}>\n                      <FormControl size=\"small\" fullWidth sx={{ mb: 2 }}>\n                        <InputLabel id=\"workout-type-label\">{t('workoutType')}</InputLabel>\n                        <Select\n                          labelId=\"workout-type-label\"\n                          value={filterCriteria.type}\n                          onChange={(e) => handleFilterChange('type', e.target.value)}\n                          label={t('workoutType')}\n                        >\n                          <MenuItem value=\"all\">{t('allTypes')}</MenuItem>\n                          <MenuItem value=\"power\">{t('power')}</MenuItem>\n                          <MenuItem value=\"endurance\">{t('endurance')}</MenuItem>\n                          <MenuItem value=\"mountain\">{t('mountain')}</MenuItem>\n                        </Select>\n                      </FormControl>\n                      \n                      <FormControl size=\"small\" fullWidth>\n                        <InputLabel id=\"badge-type-label\">{t('workoutCategory')}</InputLabel>\n                        <Select\n                          labelId=\"badge-type-label\"\n                          value={filterCriteria.badgeType}\n                          onChange={(e) => handleFilterChange('badgeType', e.target.value)}\n                          label={t('workoutCategory')}\n                        >\n                          <MenuItem value=\"all\">{t('allCategories')}</MenuItem>\n                          {Object.entries(workoutBadges).map(([key, badge]) => (\n                            <MenuItem key={key} value={key}>\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                <Box\n                                  sx={{\n                                    width: 12,\n                                    height: 12,\n                                    borderRadius: '50%',\n                                    bgcolor: badge.color,\n                                    mr: 1\n                                  }}\n                                />\n                                {badge.label}\n                              </Box>\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </Paper>\n                \n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {getFilteredWorkouts().length} {t('workoutsFound')}\n                </Typography>\n                \n                <Grid container spacing={2}>\n                  {getFilteredWorkouts().map((workout) => (\n                    <Grid item xs={12} sm={6} md={4} key={workout.id}>\n                      <Card \n                        sx={{ \n                          height: '100%', \n                          display: 'flex', \n                          flexDirection: 'column',\n                          transition: 'transform 0.2s',\n                          '&:hover': {\n                            transform: 'translateY(-4px)',\n                            boxShadow: 6\n                          }\n                        }}\n                      >\n                        <CardContent sx={{ flexGrow: 1 }}>\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                            <Typography variant=\"h6\" component=\"div\">\n                              {workout.name}\n                            </Typography>\n                            {renderWorkoutBadge(workout.badgeType)}\n                          </Box>\n                          \n                          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2, minHeight: 40 }}>\n                            {workout.description}\n                          </Typography>\n                          \n                          <Divider sx={{ my: 1 }} />\n                          \n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 2 }}>\n                            <Chip\n                              icon={<TimerIcon />}\n                              size=\"small\"\n                              label={`${workout.duration} min`}\n                              variant=\"outlined\"\n                            />\n                            <Chip\n                              icon={<FireIcon />}\n                              size=\"small\"\n                              label={`${workout.caloriesBurned} kcal`}\n                              variant=\"outlined\"\n                              color=\"error\"\n                            />\n                            <Chip\n                              icon={\n                                workout.intensity === 'high' || workout.intensity === 'very-high' ? \n                                <FitnessIcon /> : <HeartIcon />\n                              }\n                              size=\"small\"\n                              label={t(workout.intensity)}\n                              variant=\"outlined\"\n                              color={\n                                workout.intensity === 'high' ? 'warning' :\n                                workout.intensity === 'very-high' ? 'error' :\n                                'primary'\n                              }\n                            />\n                          </Box>\n                        </CardContent>\n                        \n                        <Box sx={{ p: 2, pt: 0 }}>\n                          <Button \n                            variant=\"contained\"\n                            fullWidth\n                            onClick={() => handleSelectWorkout(workout)}\n                          >\n                            {t('selectWorkout')}\n                          </Button>\n                        </Box>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </>\n            )}\n          </Box>\n        );\n      \n      case 1: // Création de séance personnalisée\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('customWorkout')}\n            </Typography>\n            \n            <Paper sx={{ p: 2, mb: 3 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label={t('workoutName')}\n                    value={customWorkout.name}\n                    onChange={(e) => setCustomWorkout({ ...customWorkout, name: e.target.value })}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth margin=\"normal\">\n                    <InputLabel>{t('targetSystem')}</InputLabel>\n                    <Select\n                      value={customWorkout.targetSystem}\n                      onChange={(e) => setCustomWorkout({ ...customWorkout, targetSystem: e.target.value })}\n                      label={t('targetSystem')}\n                    >\n                      {energySystems.map((system) => (\n                        <MenuItem key={system.value} value={system.value}>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Box\n                              sx={{\n                                width: 12,\n                                height: 12,\n                                borderRadius: '50%',\n                                bgcolor: system.color,\n                                mr: 1\n                              }}\n                            />\n                            {system.label}\n                          </Box>\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    label={t('workoutDescription')}\n                    value={customWorkout.description}\n                    onChange={(e) => setCustomWorkout({ ...customWorkout, description: e.target.value })}\n                    fullWidth\n                    multiline\n                    rows={2}\n                    margin=\"normal\"\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n            \n            <Paper sx={{ p: 2, mb: 3 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t('addIntervals')}\n              </Typography>\n              \n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('workDuration')}\n                    type=\"number\"\n                    value={currentInterval.duration}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, duration: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">{t('seconds')}</InputAdornment>,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('recovery')}\n                    type=\"number\"\n                    value={currentInterval.recovery}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, recovery: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">{t('seconds')}</InputAdornment>,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('intensity')}\n                    type=\"number\"\n                    value={currentInterval.intensity}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, intensity: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">% FTP</InputAdornment>,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField\n                    label={t('repetitions')}\n                    type=\"number\"\n                    value={currentInterval.repetitions}\n                    onChange={(e) => setCurrentInterval({ ...currentInterval, repetitions: parseInt(e.target.value) })}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </Grid>\n              </Grid>\n              \n              <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateIntervals(\n                      currentInterval.duration,\n                      currentInterval.recovery,\n                      currentInterval.repetitions,\n                      currentInterval.intensity\n                    );\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addBasicIntervals')}\n                </Button>\n                \n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateSweetSpotIntervals(\n                      currentInterval.repetitions,\n                      currentInterval.duration,\n                      currentInterval.recovery,\n                      currentInterval.intensity\n                    );\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addSweetSpotIntervals')}\n                </Button>\n                \n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateThresholdIntervals(\n                      currentInterval.repetitions,\n                      currentInterval.duration,\n                      currentInterval.recovery,\n                      currentInterval.intensity\n                    );\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addThresholdIntervals')}\n                </Button>\n                \n                <Button \n                  variant=\"outlined\" \n                  onClick={() => {\n                    const newIntervals = generateClimbPyramid();\n                    setCustomWorkout({\n                      ...customWorkout,\n                      intervals: [...customWorkout.intervals, ...newIntervals]\n                    });\n                  }}\n                >\n                  {t('addClimbPyramid')}\n                </Button>\n              </Box>\n            </Paper>\n            \n            {customWorkout.intervals.length > 0 && (\n              <Paper sx={{ p: 2, mb: 3 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                  <Typography variant=\"subtitle1\">\n                    {t('currentIntervals')}\n                  </Typography>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\" \n                    size=\"small\"\n                    onClick={() => setCustomWorkout({ ...customWorkout, intervals: [] })}\n                  >\n                    {t('clearAll')}\n                  </Button>\n                </Box>\n                \n                <TableContainer>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>{t('type')}</TableCell>\n                        <TableCell align=\"right\">{t('duration')}</TableCell>\n                        <TableCell align=\"right\">{t('intensity')}</TableCell>\n                        <TableCell>{t('description')}</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {customWorkout.intervals.map((interval, idx) => (\n                        <TableRow\n                          key={idx}\n                          sx={{\n                            backgroundColor: \n                              interval.type === 'work' ? 'rgba(244, 67, 54, 0.1)' :\n                              interval.type === 'rest' ? 'rgba(76, 175, 80, 0.1)' :\n                              interval.type === 'warmup' ? 'rgba(33, 150, 243, 0.1)' :\n                              'rgba(255, 152, 0, 0.1)'\n                          }}\n                        >\n                          <TableCell>\n                            {interval.type === 'work' ? t('work') :\n                             interval.type === 'rest' ? t('rest') :\n                             interval.type === 'warmup' ? t('warmup') :\n                             t('cooldown')}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {Math.floor(interval.duration / 60)}:{(interval.duration % 60).toString().padStart(2, '0')}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {interval.intensity}% FTP\n                          </TableCell>\n                          <TableCell>{interval.label}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                \n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => {\n                      // Mettre à jour la durée totale\n                      const totalDuration = Math.round(calculateTotalDuration(customWorkout.intervals) / 60);\n                      setCustomWorkout({\n                        ...customWorkout,\n                        duration: totalDuration\n                      });\n                      \n                      // Passer à l'onglet de prévisualisation\n                      setActiveTab(3);\n                    }}\n                  >\n                    {t('previewWorkout')}\n                  </Button>\n                </Box>\n              </Paper>\n            )}\n          </Box>\n        );\n      \n      case 2: // Statistiques HIIT\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('hiitStats')}\n            </Typography>\n            \n            <Paper sx={{ p: 3, mb: 3 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t('benefitsOfHiit')}\n              </Typography>\n              \n              <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                  <Card sx={{ height: '100%' }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                        {t('effectivenessByDuration')}\n                      </Typography>\n                      \n                      <ResponsiveContainer width=\"100%\" height={250}>\n                        <BarChart\n                          data={[\n                            { duration: '15min', effectiveness: 65, fatigue: 40 },\n                            { duration: '30min', effectiveness: 85, fatigue: 65 },\n                            { duration: '45min', effectiveness: 95, fatigue: 80 },\n                            { duration: '60min', effectiveness: 100, fatigue: 95 },\n                            { duration: '75min', effectiveness: 95, fatigue: 100 }\n                          ]}\n                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                        >\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"duration\" />\n                          <YAxis />\n                          <RechartsTooltip />\n                          <Legend />\n                          <Bar dataKey=\"effectiveness\" name={t('trainingImpact')} fill={brandConfig.colors.primary} />\n                          <Bar dataKey=\"fatigue\" name={t('fatigue')} fill={brandConfig.colors.secondary} />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                \n                <Grid item xs={12} md={6}>\n                  <Card sx={{ height: '100%' }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                        {t('energySystemTargeting')}\n                      </Typography>\n                      \n                      <ResponsiveContainer width=\"100%\" height={250}>\n                        <PieChart>\n                          <Pie\n                            data={[\n                              { name: t('aerobicSystem'), value: 35, color: '#4CAF50' },\n                              { name: t('anaerobicSystem'), value: 45, color: '#F44336' },\n                              { name: t('mixedSystem'), value: 20, color: '#FF9800' }\n                            ]}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            labelLine={false}\n                            outerRadius={80}\n                            fill=\"#8884d8\"\n                            dataKey=\"value\"\n                            nameKey=\"name\"\n                            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                          >\n                            {[\n                              { name: t('aerobicSystem'), value: 35, color: '#4CAF50' },\n                              { name: t('anaerobicSystem'), value: 45, color: '#F44336' },\n                              { name: t('mixedSystem'), value: 20, color: '#FF9800' }\n                            ].map((entry, index) => (\n                              <Cell key={`cell-${index}`} fill={entry.color} />\n                            ))}\n                          </Pie>\n                          <RechartsTooltip />\n                        </PieChart>\n                      </ResponsiveContainer>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Grid>\n            </Paper>\n            \n            <Paper sx={{ p: 3 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t('workoutCalorieEstimations')}\n              </Typography>\n              \n              <Alert severity=\"info\" sx={{ mb: 2 }}>\n                {t('calorieCalculationNote')}\n              </Alert>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>{t('workoutType')}</TableCell>\n                      <TableCell align=\"right\">15 {t('minutes')}</TableCell>\n                      <TableCell align=\"right\">30 {t('minutes')}</TableCell>\n                      <TableCell align=\"right\">45 {t('minutes')}</TableCell>\n                      <TableCell align=\"right\">60+ {t('minutes')}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<ExpressIcon />} label=\"Express\" size=\"small\" sx={{ backgroundColor: workoutBadges.express.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">200-250 kcal</TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<FireIcon />} label=\"Brûle-graisse\" size=\"small\" sx={{ backgroundColor: workoutBadges.burn.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">250-300 kcal</TableCell>\n                      <TableCell align=\"right\">450-550 kcal</TableCell>\n                      <TableCell align=\"right\">650-750 kcal</TableCell>\n                      <TableCell align=\"right\">800-1000 kcal</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<MountainIcon />} label=\"Grimpeur\" size=\"small\" sx={{ backgroundColor: workoutBadges.climb.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">400-500 kcal</TableCell>\n                      <TableCell align=\"right\">600-700 kcal</TableCell>\n                      <TableCell align=\"right\">800-950 kcal</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>\n                        <Chip icon={<ClockIcon />} label=\"Endurance\" size=\"small\" sx={{ backgroundColor: workoutBadges.endurance.color, color: 'white' }} />\n                      </TableCell>\n                      <TableCell align=\"right\">-</TableCell>\n                      <TableCell align=\"right\">350-450 kcal</TableCell>\n                      <TableCell align=\"right\">550-650 kcal</TableCell>\n                      <TableCell align=\"right\">750-900 kcal</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Box>\n        );\n      \n      case 3: // Onglet Prévisualisation du workout\n        return (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {t('workoutPreview')}\n            </Typography>\n            \n            {!selectedWorkout && customWorkout.intervals.length === 0 ? (\n              <Alert severity=\"info\" sx={{ mb: 2 }}>\n                {t('selectOrCreateWorkout')}\n              </Alert>\n            ) : (\n              <>\n                <Grid container spacing={2} sx={{ mb: 3 }}>\n                  <Grid item xs={12} md={8}>\n                    <Paper \n                      elevation={2} \n                      sx={{ \n                        p: 2, \n                        bgcolor: 'background.paper' \n                      }}\n                    >\n                      <Typography variant=\"h6\">\n                        {selectedWorkout ? selectedWorkout.name : customWorkout.name || t('customWorkout')}\n                      </Typography>\n                      \n                      <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                        {selectedWorkout ? selectedWorkout.description : customWorkout.description || t('noDescription')}\n                      </Typography>\n                      \n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n                        <Chip \n                          icon={<TimerIcon />} \n                          label={`${Math.round((selectedWorkout ? calculateTotalDuration(selectedWorkout.intervals) : calculateTotalDuration(customWorkout.intervals)) / 60)} min`} \n                          size=\"small\" \n                          color=\"primary\"\n                          variant=\"outlined\"\n                        />\n                        \n                        <Chip \n                          icon={<FitnessIcon />} \n                          label={energySystems.find(s => s.value === (selectedWorkout ? selectedWorkout.targetSystem : customWorkout.targetSystem))?.label} \n                          size=\"small\"\n                          sx={{ \n                            bgcolor: energySystems.find(s => s.value === (selectedWorkout ? selectedWorkout.targetSystem : customWorkout.targetSystem))?.color,\n                            color: 'white'\n                          }}\n                        />\n                        \n                        <Chip \n                          icon={<HeartIcon />} \n                          label={`${t('intensity')}: ${Math.round(calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).avgIntensity)}%`} \n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                        />\n                        \n                        <Chip \n                          icon={<FireIcon />} \n                          label={`TSS: ${calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).tss}`} \n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"error\"\n                        />\n                      </Box>\n                    </Paper>\n                  </Grid>\n                  \n                  <Grid item xs={12} md={4}>\n                    <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        {t('workoutStats')}\n                      </Typography>\n                      \n                      {loading ? (\n                        <CircularProgress />\n                      ) : (\n                        <List dense>\n                          <ListItem>\n                            <ListItemText \n                              primary={t('totalDuration')}\n                              secondary={`${Math.round((selectedWorkout ? calculateTotalDuration(selectedWorkout.intervals) : calculateTotalDuration(customWorkout.intervals)) / 60)} ${t('minutes')}`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('workToRestRatio')}\n                              secondary={`${Math.round((calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).workDuration / calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).restDuration) * 10) / 10}:1`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('avgIntensity')}\n                              secondary={`${Math.round(calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).avgIntensity)}% FTP`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('normalizedIntensity')}\n                              secondary={`${calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).normalizedIntensity}% FTP`}\n                            />\n                          </ListItem>\n                          \n                          <ListItem>\n                            <ListItemText \n                              primary={t('tssLabel')}\n                              secondary={\n                                <Tooltip title={t('tssExplanation')}>\n                                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <span>{calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).tss}</span>\n                                    <InfoIcon fontSize=\"small\" color=\"action\" sx={{ ml: 1 }} />\n                                  </Box>\n                                </Tooltip>\n                              }\n                            />\n                          </ListItem>\n                        </List>\n                      )}\n                    </Paper>\n                  </Grid>\n                </Grid>\n                \n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={7}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {t('intensityProfile')}\n                    </Typography>\n                    \n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <LineChart\n                        data={previewData}\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis \n                          dataKey=\"time\" \n                          label={{ value: t('time'), position: 'insideBottomRight', offset: -10 }}\n                        />\n                        <YAxis \n                          label={{ value: t('intensity'), angle: -90, position: 'insideLeft' }}\n                          domain={[0, dataMax => Math.max(120, dataMax)]}\n                        />\n                        <Tooltip formatter={(value) => [`${value}% FTP`, t('intensity')]} />\n                        <Legend />\n                        <ReferenceLine y={100} stroke=\"red\" strokeDasharray=\"3 3\" label={{ value: \"FTP\", position: 'right' }} />\n                        <ReferenceLine y={90} stroke=\"#ff9800\" strokeDasharray=\"3 3\" label={{ value: \"90%\", position: 'right' }} />\n                        <ReferenceLine y={75} stroke=\"#4caf50\" strokeDasharray=\"3 3\" label={{ value: \"75%\", position: 'right' }} />\n                        <Line \n                          type=\"stepAfter\" \n                          dataKey=\"intensity\" \n                          stroke=\"#8884d8\" \n                          strokeWidth={2}\n                          dot={false}\n                          activeDot={{ r: 8 }}\n                        />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </Grid>\n                  \n                  <Grid item xs={12} md={5}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {t('zoneDistribution')}\n                    </Typography>\n                    \n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <PieChart>\n                        <Pie\n                          data={calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).intensityDistribution}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"value\"\n                          nameKey=\"name\"\n                          label={({ name, percent, time }) => `${name}: ${(percent * 100).toFixed(0)}% (${time})`}\n                        >\n                          {calculateWorkoutStats(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).intensityDistribution.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={\n                              entry.name === 'Z1' ? '#4fc3f7' :\n                              entry.name === 'Z2' ? '#4caf50' :\n                              entry.name === 'Z3' ? '#ff9800' :\n                              entry.name === 'Z4' ? '#f44336' :\n                              entry.name === 'Z5' ? '#9c27b0' :\n                              '#e91e63'\n                            } />\n                          ))}\n                        </Pie>\n                        <Tooltip formatter={(value, name, entry) => [`${value} min (${entry.payload.time})`, name]} />\n                        <Legend />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  </Grid>\n                </Grid>\n                \n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={7}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {t('intervalStructure')}\n                    </Typography>\n                    \n                    <TableContainer component={Paper}>\n                      <Table size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>{t('type')}</TableCell>\n                            <TableCell align=\"right\">{t('duration')}</TableCell>\n                            <TableCell align=\"right\">{t('intensity')}</TableCell>\n                            <TableCell>{t('description')}</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {(selectedWorkout ? selectedWorkout.intervals : customWorkout.intervals).map((interval, idx) => (\n                            <TableRow\n                              key={idx}\n                              sx={{\n                                backgroundColor: \n                                  interval.type === 'work' ? 'rgba(244, 67, 54, 0.1)' :\n                                  interval.type === 'rest' ? 'rgba(76, 175, 80, 0.1)' :\n                                  interval.type === 'warmup' ? 'rgba(33, 150, 243, 0.1)' :\n                                  'rgba(255, 152, 0, 0.1)'\n                              }}\n                            >\n                              <TableCell>\n                                {interval.type === 'work' ? t('work') :\n                                 interval.type === 'rest' ? t('rest') :\n                                 interval.type === 'warmup' ? t('warmup') :\n                                 t('cooldown')}\n                              </TableCell>\n                              <TableCell align=\"right\">\n                                {Math.floor(interval.duration / 60)}:{(interval.duration % 60).toString().padStart(2, '0')}\n                              </TableCell>\n                              <TableCell align=\"right\">\n                                {interval.intensity}% FTP\n                              </TableCell>\n                              <TableCell>{interval.label}</TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </Grid>\n                </Grid>\n                \n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<SaveIcon />}\n                    onClick={() => handleSaveWorkout(selectedWorkout || customWorkout)}\n                  >\n                    {t('saveWorkout')}\n                  </Button>\n                </Box>\n              </>\n            )}\n          </Box>\n        );\n      // ... (autres onglets)\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        {t('hiitBuilder')}\n      </Typography>\n      \n      <Tabs \n        value={activeTab} \n        onChange={handleTabChange} \n        variant=\"scrollable\" \n        scrollButtons=\"auto\"\n      >\n        <Tab label={t('templates')} />\n        <Tab label={t('customWorkout')} />\n        <Tab label={t('workoutStats')} />\n        <Tab label={t('workoutPreview')} />\n      </Tabs>\n      \n      {renderTabContent()}\n      \n      <CalorieCalculator\n        userProfile={userProfile}\n        onCalorieSettingsChange={handleCalorieSettingsChange}\n        open={calorieCalculatorOpen}\n        onClose={() => setCalorieCalculatorOpen(false)}\n      />\n    </Box>\n  );\n};\n\nexport default HIITBuilder;"],"names":["brandConfig","siteName","previousName","domain","partnershipText","partnershipShort","logoPath","logoAlt","favicon","tagline","taglineShort","description","social","twitter","facebook","instagram","strava","colors","primary","secondary","altitude","mountain","visualIdentity","mountainIcon","elevationGraphic","cyclistIcon","defaultMetaTags","title","keywords","legal","companyName","address","contactEmail","copyright","Date","getFullYear","hiitWorkoutsByTime","id","name","duration","caloriesBurned","intensity","type","badgeType","focusArea","format","repeat","recovery","recoveryIntensity","hiitWorkoutsByCalories","workoutBadges","express","label","color","icon","burn","climb","endurance","balanced","structured","getAllWorkouts","findWorkouts","criteria","arguments","length","undefined","workouts","minDuration","filter","w","maxDuration","minCalories","maxCalories","includes","activityLevels","multiplier","ftpEstimate","_ref","_activityLevels$find","_activityLevels$find2","userProfile","onCalorieSettingsChange","open","onClose","t","useTranslation","loading","setLoading","useState","calculationType","setCalculationType","settings","setSettings","weight","age","gender","activityLevel","ftp","useCustomFTP","testWorkout","setTestWorkout","standardCalories","useEffect","loadUserData","async","newSettings","cyclist_type","error","console","handleSettingChange","key","value","find","level","Math","round","testWorkoutCalories","totalMultiplier","calculatePersonalizedCalories","calorieChange","_jsxs","Dialog","maxWidth","fullWidth","PaperProps","sx","borderRadius","overflow","children","DialogTitle","bgcolor","display","alignItems","justifyContent","Box","_jsx","FireIcon","mr","IconButton","size","onClick","CloseIcon","DialogContent","dividers","Typography","variant","gutterBottom","Divider","my","Grid","container","spacing","item","xs","md","PersonIcon","Card","mb","CardContent","sm","TextField","onChange","e","parseInt","target","InputProps","endAdornment","InputAdornment","position","FormControl","component","RadioGroup","row","FormControlLabel","control","Radio","ActivityIcon","InputLabel","Select","map","MenuItem","FormHelperText","FTPIcon","Tooltip","arrow","TransitionComponent","Zoom","InfoIcon","fontSize","ml","checked","fontWeight","toFixed","helperText","height","flexDirection","flexGrow","p","align","mt","Slider","min","max","step","marks","valueLabelDisplay","DialogActions","px","py","Button","handleReset","startIcon","ResetIcon","handleSave","SaveIcon","onSaveWorkout","notify","useNotification","activeTab","setActiveTab","setWorkouts","selectedWorkout","setSelectedWorkout","filterView","setFilterView","filterCriteria","setFilterCriteria","customWorkout","setCustomWorkout","targetSystem","intervals","currentInterval","setCurrentInterval","repetitions","previewData","setPreviewData","calorieCalculatorOpen","setCalorieCalculatorOpen","calorieSettings","setCalorieSettings","personalizedCalories","setPersonalizedCalories","energySystems","loadHIITData","getFilteredWorkouts","handleFilterViewChange","event","newView","handleFilterChange","prev","renderWorkoutBadge","badge","ExpressIcon","MountainIcon","ClockIcon","BalanceIcon","StructuredIcon","Chip","backgroundColor","calculateWorkoutStats","totalDuration","workDuration","restDuration","avgIntensity","maxIntensity","tss","intensityDistribution","totalWorkDuration","totalRestDuration","intensitySum","workIfNormalized","zoneDistribution","forEach","interval","normalizedIntensity","pow","userFTP","intensityFactor","Object","keys","zone","time","formatTime","seconds","secs","floor","Tabs","handleTabChange","newValue","scrollButtons","Tab","renderTabContent","_energySystems$find","_energySystems$find2","CircularProgress","_Fragment","Paper","FilterIcon","verticalAlign","ToggleButtonGroup","exclusive","ToggleButton","TimerIcon","width","labelId","entries","_ref2","workout","transition","transform","boxShadow","minHeight","flexWrap","gap","FitnessIcon","HeartIcon","pt","message","severity","handleSelectWorkout","margin","system","multiline","rows","newIntervals","generateIntervals","workSecs","restSecs","push","i","generateSweetSpotIntervals","progressiveIntensity","generateThresholdIntervals","generateClimbPyramid","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","idx","toString","padStart","calculateTotalDuration","ResponsiveContainer","BarChart","data","effectiveness","fatigue","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","RechartsTooltip","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","_ref3","percent","entry","index","Cell","Alert","elevation","paragraph","s","List","dense","ListItem","ListItemText","LineChart","offset","angle","dataMax","formatter","ReferenceLine","y","stroke","Line","strokeWidth","dot","activeDot","r","_ref4","payload","workoutToSave","now","createdAt","toISOString","stats","calories","handleSaveWorkout","CalorieCalculator","log"],"sourceRoot":""}