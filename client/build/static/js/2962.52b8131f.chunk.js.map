{"version":3,"file":"static/js/2962.52b8131f.chunk.js","mappings":"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","sources":["components/strava/StravaSyncStatus.js","components/strava/StravaSyncHistory.js","pages/StravaSync.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper, \n  LinearProgress, \n  Button, \n  Chip, \n  Grid, \n  Divider,\n  Alert,\n  IconButton,\n  Tooltip,\n  CircularProgress\n} from '@mui/material';\nimport { \n  Refresh as RefreshIcon,\n  Cancel as CancelIcon,\n  Info as InfoIcon,\n  CheckCircle as CheckCircleIcon,\n  Error as ErrorIcon,\n  History as HistoryIcon\n} from '@mui/icons-material';\nimport { formatDistance, formatDistanceToNow } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\n\n// Constantes pour les statuts\nconst STATUS_COLORS = {\n  initializing: 'info',\n  in_progress: 'info',\n  completed: 'success',\n  error: 'error',\n  cancelled: 'warning',\n  never_synced: 'default'\n};\n\nconst STATUS_LABELS = {\n  initializing: 'Initialisation',\n  in_progress: 'En cours',\n  completed: 'Terminée',\n  error: 'Erreur',\n  cancelled: 'Annulée',\n  never_synced: 'Jamais synchronisé'\n};\n\nconst StravaSyncStatus = ({ onHistoryClick }) => {\n  const [syncStatus, setSyncStatus] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pollingInterval, setPollingInterval] = useState(null);\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Fonction pour formater les dates\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleString('fr-FR', { \n      day: '2-digit', \n      month: '2-digit', \n      year: 'numeric', \n      hour: '2-digit', \n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  // Fonction pour formater la durée\n  const formatDuration = (milliseconds) => {\n    if (!milliseconds) return 'N/A';\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes % 60}m ${seconds % 60}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n\n  // Récupérer le statut de synchronisation\n  const fetchSyncStatus = async () => {\n    try {\n      const response = await axios.get('/api/strava/sync/status');\n      setSyncStatus(response.data);\n      \n      // Si la synchronisation est terminée ou en erreur, arrêter le polling\n      if (['completed', 'error', 'cancelled'].includes(response.data.status)) {\n        if (pollingInterval) {\n          clearInterval(pollingInterval);\n          setPollingInterval(null);\n        }\n      }\n      \n      setError(null);\n    } catch (err) {\n      setError(err.response?.data?.error || 'Erreur lors de la récupération du statut');\n      if (pollingInterval) {\n        clearInterval(pollingInterval);\n        setPollingInterval(null);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Démarrer une synchronisation\n  const startSync = async (options = {}) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/strava/sync', options);\n      \n      setSyncStatus(response.data.status);\n      enqueueSnackbar('Synchronisation Strava démarrée', { variant: 'success' });\n      \n      // Démarrer le polling si ce n'est pas déjà fait\n      if (!pollingInterval) {\n        const interval = setInterval(fetchSyncStatus, 2000);\n        setPollingInterval(interval);\n      }\n    } catch (err) {\n      setError(err.response?.data?.error || 'Erreur lors du démarrage de la synchronisation');\n      enqueueSnackbar(\n        err.response?.data?.error || 'Échec du démarrage de la synchronisation', \n        { variant: 'error' }\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Annuler une synchronisation\n  const cancelSync = async () => {\n    try {\n      setLoading(true);\n      await axios.delete('/api/strava/sync');\n      \n      // Mise à jour immédiate du statut\n      fetchSyncStatus();\n      \n      enqueueSnackbar('Synchronisation annulée', { variant: 'info' });\n    } catch (err) {\n      setError(err.response?.data?.error || 'Erreur lors de l\\'annulation');\n      enqueueSnackbar(\n        err.response?.data?.error || 'Échec de l\\'annulation', \n        { variant: 'error' }\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Récupérer le statut initial et configurer le polling si nécessaire\n  useEffect(() => {\n    fetchSyncStatus();\n\n    // Configurer le polling si on n'a pas encore de statut ou si la synchronisation est en cours\n    return () => {\n      if (pollingInterval) {\n        clearInterval(pollingInterval);\n      }\n    };\n  }, []);\n\n  // Configurer le polling si le statut change\n  useEffect(() => {\n    if (syncStatus && ['initializing', 'in_progress'].includes(syncStatus.status) && !pollingInterval) {\n      const interval = setInterval(fetchSyncStatus, 2000);\n      setPollingInterval(interval);\n      return () => clearInterval(interval);\n    }\n  }, [syncStatus]);\n\n  if (loading && !syncStatus) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Afficher un message d'erreur si nécessaire\n  if (error && !syncStatus) {\n    return (\n      <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h6\">\n          Synchronisation Strava\n        </Typography>\n        <Box>\n          <Tooltip title=\"Rafraîchir\">\n            <IconButton \n              size=\"small\" \n              onClick={fetchSyncStatus} \n              disabled={loading}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Historique des synchronisations\">\n            <IconButton \n              size=\"small\" \n              onClick={onHistoryClick} \n              disabled={loading}\n              sx={{ ml: 1 }}\n            >\n              <HistoryIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {syncStatus ? (\n        <>\n          <Box mb={2}>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item>\n                <Chip \n                  label={STATUS_LABELS[syncStatus.status] || syncStatus.status} \n                  color={STATUS_COLORS[syncStatus.status] || 'default'}\n                  icon={\n                    syncStatus.status === 'completed' ? <CheckCircleIcon /> :\n                    syncStatus.status === 'error' ? <ErrorIcon /> :\n                    syncStatus.status === 'in_progress' ? <CircularProgress size={16} /> :\n                    <InfoIcon />\n                  }\n                />\n              </Grid>\n              <Grid item xs>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {syncStatus.message || 'Aucune information disponible'}\n                </Typography>\n              </Grid>\n              {['in_progress', 'initializing'].includes(syncStatus.status) && (\n                <Grid item>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"secondary\" \n                    size=\"small\"\n                    startIcon={<CancelIcon />}\n                    onClick={cancelSync}\n                    disabled={loading}\n                  >\n                    Annuler\n                  </Button>\n                </Grid>\n              )}\n              {['completed', 'error', 'cancelled', 'never_synced'].includes(syncStatus.status) && (\n                <Grid item>\n                  <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"small\"\n                    startIcon={<RefreshIcon />}\n                    onClick={() => startSync({ daysToSync: 30 })}\n                    disabled={loading}\n                  >\n                    Synchroniser (30j)\n                  </Button>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n\n          {/* Barre de progression */}\n          {['in_progress', 'initializing'].includes(syncStatus.status) && (\n            <Box mb={2}>\n              <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                Progression: {syncStatus.progress}%\n              </Typography>\n              <LinearProgress \n                variant=\"determinate\" \n                value={syncStatus.progress || 0} \n                sx={{ height: 10, borderRadius: 5 }} \n              />\n            </Box>\n          )}\n\n          {/* Statistiques de synchronisation */}\n          {syncStatus.stats && (\n            <Box mb={2}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Statistiques\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={6} sm={4} md={2}>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Total</Typography>\n                  <Typography variant=\"body1\">{syncStatus.stats.total || 0}</Typography>\n                </Grid>\n                <Grid item xs={6} sm={4} md={2}>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Traitées</Typography>\n                  <Typography variant=\"body1\">{syncStatus.stats.processed || 0}</Typography>\n                </Grid>\n                <Grid item xs={6} sm={4} md={2}>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Ajoutées</Typography>\n                  <Typography variant=\"body1\">{syncStatus.stats.added || 0}</Typography>\n                </Grid>\n                <Grid item xs={6} sm={4} md={2}>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Mises à jour</Typography>\n                  <Typography variant=\"body1\">{syncStatus.stats.updated || 0}</Typography>\n                </Grid>\n                <Grid item xs={6} sm={4} md={2}>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Ignorées</Typography>\n                  <Typography variant=\"body1\">{syncStatus.stats.skipped || 0}</Typography>\n                </Grid>\n                <Grid item xs={6} sm={4} md={2}>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Échecs</Typography>\n                  <Typography variant=\"body1\">{syncStatus.stats.failed || 0}</Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n\n          <Divider sx={{ my: 2 }} />\n\n          {/* Informations temporelles */}\n          <Box>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"textSecondary\">Début</Typography>\n                <Typography variant=\"body2\">\n                  {syncStatus.startTime ? (\n                    <>\n                      {formatDate(syncStatus.startTime)}\n                      <Tooltip title={formatDate(syncStatus.startTime)}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n                          {formatDistanceToNow(new Date(syncStatus.startTime), { addSuffix: true, locale: fr })}\n                        </Typography>\n                      </Tooltip>\n                    </>\n                  ) : 'N/A'}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"textSecondary\">Dernière mise à jour</Typography>\n                <Typography variant=\"body2\">\n                  {syncStatus.lastUpdate ? (\n                    <>\n                      {formatDate(syncStatus.lastUpdate)}\n                      <Tooltip title={formatDate(syncStatus.lastUpdate)}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n                          {formatDistanceToNow(new Date(syncStatus.lastUpdate), { addSuffix: true, locale: fr })}\n                        </Typography>\n                      </Tooltip>\n                    </>\n                  ) : 'N/A'}\n                </Typography>\n              </Grid>\n              {syncStatus.endTime && (\n                <>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">Fin</Typography>\n                    <Typography variant=\"body2\">\n                      {formatDate(syncStatus.endTime)}\n                      <Tooltip title={formatDate(syncStatus.endTime)}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n                          {formatDistanceToNow(new Date(syncStatus.endTime), { addSuffix: true, locale: fr })}\n                        </Typography>\n                      </Tooltip>\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">Durée</Typography>\n                    <Typography variant=\"body2\">\n                      {syncStatus.startTime && syncStatus.endTime ? \n                        formatDuration(new Date(syncStatus.endTime) - new Date(syncStatus.startTime)) \n                        : 'N/A'}\n                    </Typography>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Box>\n\n          {/* Afficher l'erreur si elle existe */}\n          {syncStatus.error && (\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\n              <Typography variant=\"subtitle2\">\n                {syncStatus.error.code ? `Erreur (${syncStatus.error.code})` : 'Erreur'}\n              </Typography>\n              <Typography variant=\"body2\">{syncStatus.error.message}</Typography>\n            </Alert>\n          )}\n        </>\n      ) : (\n        // Pas encore de statut de synchronisation\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={3}>\n          <Typography variant=\"body1\" gutterBottom>\n            Aucune synchronisation Strava n'a encore été effectuée.\n          </Typography>\n          <Button \n            variant=\"contained\" \n            color=\"primary\"\n            startIcon={<RefreshIcon />}\n            onClick={() => startSync({ daysToSync: 30 })}\n            disabled={loading}\n            sx={{ mt: 2 }}\n          >\n            Synchroniser maintenant (30 derniers jours)\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => startSync({ fullSync: true })}\n            disabled={loading}\n            sx={{ mt: 1 }}\n          >\n            Synchronisation complète\n          </Button>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default StravaSyncStatus;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper, \n  Table, \n  TableBody, \n  TableCell, \n  TableContainer, \n  TableHead, \n  TableRow,\n  IconButton,\n  Chip,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  CircularProgress,\n  Alert,\n  TablePagination\n} from '@mui/material';\nimport { \n  Refresh as RefreshIcon,\n  Info as InfoIcon,\n  CheckCircle as CheckCircleIcon,\n  Error as ErrorIcon,\n  Warning as WarningIcon,\n  Close as CloseIcon\n} from '@mui/icons-material';\nimport { formatDistanceToNow, format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\n\n// Constantes pour les statuts (identiques à celles de StravaSyncStatus)\nconst STATUS_COLORS = {\n  initializing: 'info',\n  in_progress: 'info',\n  completed: 'success',\n  error: 'error',\n  cancelled: 'warning',\n  never_synced: 'default'\n};\n\nconst STATUS_LABELS = {\n  initializing: 'Initialisation',\n  in_progress: 'En cours',\n  completed: 'Terminée',\n  error: 'Erreur',\n  cancelled: 'Annulée',\n  never_synced: 'Jamais synchronisé'\n};\n\n// Composant pour afficher les détails d'une synchronisation\nconst SyncDetailsDialog = ({ open, onClose, syncDetails }) => {\n  if (!syncDetails) return null;\n  \n  // Fonction pour formater les dates\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleString('fr-FR', { \n      day: '2-digit', \n      month: '2-digit', \n      year: 'numeric', \n      hour: '2-digit', \n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  // Fonction pour formater la durée\n  const formatDuration = (milliseconds) => {\n    if (!milliseconds) return 'N/A';\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes % 60}m ${seconds % 60}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n  \n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">\n            Détails de la synchronisation\n          </Typography>\n          <IconButton size=\"small\" onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent dividers>\n        <Box mb={3}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Statut\n          </Typography>\n          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n            <Chip \n              label={STATUS_LABELS[syncDetails.status] || syncDetails.status} \n              color={STATUS_COLORS[syncDetails.status] || 'default'}\n              size=\"small\"\n              sx={{ mr: 2 }}\n            />\n            <Typography variant=\"body2\">\n              {syncDetails.message || 'Aucune information disponible'}\n            </Typography>\n          </Box>\n        </Box>\n        \n        <Box mb={3}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Période de synchronisation\n          </Typography>\n          <Typography variant=\"body2\">\n            {syncDetails.options?.startDate ? `Du ${formatDate(syncDetails.options.startDate)}` : ''}\n            {syncDetails.options?.endDate ? ` au ${formatDate(syncDetails.options.endDate)}` : ''}\n            {syncDetails.options?.fullSync ? 'Synchronisation complète' : ''}\n            {syncDetails.options?.daysToSync ? `Derniers ${syncDetails.options.daysToSync} jours` : ''}\n            {!syncDetails.options?.startDate && !syncDetails.options?.endDate && \n             !syncDetails.options?.fullSync && !syncDetails.options?.daysToSync ? \n              'Période non spécifiée' : ''}\n          </Typography>\n        </Box>\n        \n        <Box mb={3}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Statistiques\n          </Typography>\n          <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 2 }}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Traitées</TableCell>\n                  <TableCell>Ajoutées</TableCell>\n                  <TableCell>Mises à jour</TableCell>\n                  <TableCell>Ignorées</TableCell>\n                  <TableCell>Échecs</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>{syncDetails.stats?.total || 0}</TableCell>\n                  <TableCell>{syncDetails.stats?.processed || 0}</TableCell>\n                  <TableCell>{syncDetails.stats?.added || 0}</TableCell>\n                  <TableCell>{syncDetails.stats?.updated || 0}</TableCell>\n                  <TableCell>{syncDetails.stats?.skipped || 0}</TableCell>\n                  <TableCell>{syncDetails.stats?.failed || 0}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n        \n        <Box mb={3}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Timing\n          </Typography>\n          <TableContainer component={Paper} variant=\"outlined\">\n            <Table size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell width=\"30%\">Début</TableCell>\n                  <TableCell>{formatDate(syncDetails.startTime)}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Dernière mise à jour</TableCell>\n                  <TableCell>{formatDate(syncDetails.lastUpdate)}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Fin</TableCell>\n                  <TableCell>{formatDate(syncDetails.endTime)}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Durée</TableCell>\n                  <TableCell>\n                    {syncDetails.startTime && syncDetails.endTime ? \n                      formatDuration(new Date(syncDetails.endTime) - new Date(syncDetails.startTime)) \n                      : 'N/A'}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n        \n        {syncDetails.error && (\n          <Box>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Détails de l'erreur\n            </Typography>\n            <Alert severity=\"error\">\n              <Typography variant=\"subtitle2\">\n                {syncDetails.error.code ? `Code: ${syncDetails.error.code}` : 'Erreur'}\n              </Typography>\n              <Typography variant=\"body2\">{syncDetails.error.message}</Typography>\n              {syncDetails.error.details && (\n                <Box mt={1}>\n                  <Typography variant=\"caption\" component=\"pre\" sx={{ \n                    whiteSpace: 'pre-wrap',\n                    overflowX: 'auto',\n                    maxHeight: '200px',\n                    backgroundColor: 'rgba(0,0,0,0.03)',\n                    p: 1,\n                    borderRadius: 1\n                  }}>\n                    {syncDetails.error.details}\n                  </Typography>\n                </Box>\n              )}\n            </Alert>\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Fermer\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst StravaSyncHistory = () => {\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [selectedSync, setSelectedSync] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Fonction pour récupérer l'historique des synchronisations\n  const fetchHistory = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/strava/sync/history', {\n        params: { limit: 20 } // Récupérer les 20 dernières synchronisations\n      });\n      setHistory(response.data);\n      setError(null);\n    } catch (err) {\n      setError(err.response?.data?.error || 'Erreur lors de la récupération de l\\'historique');\n      enqueueSnackbar(\n        err.response?.data?.error || 'Échec de la récupération de l\\'historique', \n        { variant: 'error' }\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ouvrir le dialogue de détails\n  const openDetailsDialog = (sync) => {\n    setSelectedSync(sync);\n    setDialogOpen(true);\n  };\n\n  // Fermer le dialogue de détails\n  const closeDetailsDialog = () => {\n    setDialogOpen(false);\n  };\n\n  // Changer de page\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  // Changer le nombre de lignes par page\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Récupérer l'historique au chargement du composant\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n\n  // Fonction pour formater les dates relatives\n  const formatRelativeDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    return formatDistanceToNow(new Date(dateString), { addSuffix: true, locale: fr });\n  };\n\n  // Fonction pour obtenir l'icône de statut\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircleIcon fontSize=\"small\" />;\n      case 'error':\n        return <ErrorIcon fontSize=\"small\" />;\n      case 'cancelled':\n        return <WarningIcon fontSize=\"small\" />;\n      case 'in_progress':\n        return <CircularProgress size={16} />;\n      default:\n        return <InfoIcon fontSize=\"small\" />;\n    }\n  };\n\n  if (loading && history.length === 0) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error && history.length === 0) {\n    return (\n      <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (history.length === 0 && !loading) {\n    return (\n      <Alert severity=\"info\" sx={{ mt: 2, mb: 2 }}>\n        Aucun historique de synchronisation disponible.\n      </Alert>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h6\">\n          Historique des synchronisations\n        </Typography>\n        <Tooltip title=\"Rafraîchir\">\n          <IconButton \n            size=\"small\" \n            onClick={fetchHistory} \n            disabled={loading}\n          >\n            <RefreshIcon />\n          </IconButton>\n        </Tooltip>\n      </Box>\n\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Statut</TableCell>\n              <TableCell>Début</TableCell>\n              <TableCell>Durée</TableCell>\n              <TableCell>Activités</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && history.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={5} align=\"center\">\n                  <CircularProgress size={24} />\n                </TableCell>\n              </TableRow>\n            ) : (\n              history\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((sync) => (\n                  <TableRow key={sync._id} hover>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\">\n                        <Tooltip title={STATUS_LABELS[sync.status] || sync.status}>\n                          <IconButton size=\"small\" sx={{ mr: 1, color: `${STATUS_COLORS[sync.status]}.main` }}>\n                            {getStatusIcon(sync.status)}\n                          </IconButton>\n                        </Tooltip>\n                        <Typography variant=\"body2\" noWrap sx={{ maxWidth: 150 }}>\n                          {sync.message || STATUS_LABELS[sync.status] || sync.status}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Tooltip title={new Date(sync.startTime).toLocaleString()}>\n                        <Typography variant=\"body2\">\n                          {formatRelativeDate(sync.startTime)}\n                        </Typography>\n                      </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                      {sync.startTime && sync.endTime ? (\n                        <Typography variant=\"body2\">\n                          {Math.round((new Date(sync.endTime) - new Date(sync.startTime)) / 1000)}s\n                        </Typography>\n                      ) : (\n                        <Typography variant=\"body2\">-</Typography>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant=\"body2\">\n                        {sync.stats ? (\n                          <>{sync.stats.processed} ({sync.stats.added} ajoutées)</>\n                        ) : '-'}\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Tooltip title=\"Voir les détails\">\n                        <IconButton \n                          size=\"small\" \n                          onClick={() => openDetailsDialog(sync)}\n                        >\n                          <InfoIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={history.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        labelRowsPerPage=\"Lignes par page:\"\n        labelDisplayedRows={({ from, to, count }) => `${from}-${to} sur ${count}`}\n      />\n\n      <SyncDetailsDialog\n        open={dialogOpen}\n        onClose={closeDetailsDialog}\n        syncDetails={selectedSync}\n      />\n    </Paper>\n  );\n};\n\nexport default StravaSyncHistory;\n","import React, { useState } from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Tabs, \n  Tab, \n  Paper, \n  Button, \n  Divider,\n  Alert,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Switch,\n  FormControlLabel\n} from '@mui/material';\nimport { \n  Sync as SyncIcon,\n  Settings as SettingsIcon,\n  DirectionsBike as BikeIcon,\n  History as HistoryIcon\n} from '@mui/icons-material';\nimport { useSnackbar } from 'notistack';\nimport { Helmet } from 'react-helmet';\nimport StravaSyncStatus from '../components/strava/StravaSyncStatus';\nimport StravaSyncHistory from '../components/strava/StravaSyncHistory';\n\n// Panneau d'onglet\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`strava-sync-tabpanel-${index}`}\n      aria-labelledby={`strava-sync-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst StravaSync = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [showHistory, setShowHistory] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Afficher l'historique lorsque demandé depuis le composant de statut\n  const toggleHistory = () => {\n    setShowHistory(!showHistory);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Helmet>\n        <title>Synchronisation Strava | Grand Est Cyclisme</title>\n      </Helmet>\n\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          <BikeIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n          Synchronisation Strava\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph>\n          Gérez la synchronisation de vos activités Strava avec notre plateforme pour suivre vos performances.\n        </Typography>\n      </Box>\n\n      <Paper elevation={1} sx={{ mb: 4 }}>\n        <Tabs\n          value={tabValue}\n          onChange={handleChangeTab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab icon={<SyncIcon />} label=\"Synchronisation\" id=\"strava-sync-tab-0\" />\n          <Tab icon={<SettingsIcon />} label=\"Paramètres\" id=\"strava-sync-tab-1\" />\n        </Tabs>\n      </Paper>\n\n      <TabPanel value={tabValue} index={0}>\n        <StravaSyncStatus onHistoryClick={toggleHistory} />\n        \n        {showHistory && (\n          <>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n              <Typography variant=\"h6\">\n                <HistoryIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                Historique des synchronisations\n              </Typography>\n              <Button \n                variant=\"outlined\" \n                size=\"small\" \n                onClick={toggleHistory}\n              >\n                Masquer l'historique\n              </Button>\n            </Box>\n            <StravaSyncHistory />\n          </>\n        )}\n        \n        <Box mt={4}>\n          <Typography variant=\"h6\" gutterBottom>\n            Options de synchronisation avancées\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Synchronisation complète\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                    Récupère toutes vos activités Strava, quel que soit leur âge. Cette opération peut prendre un certain temps.\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button \n                    fullWidth \n                    variant=\"contained\" \n                    color=\"primary\"\n                    onClick={() => {\n                      // Cette fonction sera liée au composant StravaSyncStatus\n                      enqueueSnackbar('Veuillez utiliser le bouton de synchronisation complète dans le panneau de statut', { variant: 'info' });\n                    }}\n                  >\n                    Synchroniser tout\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            \n            <Grid item xs={12} sm={6} md={4}>\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Derniers 6 mois\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                    Récupère uniquement les activités des 6 derniers mois. Option recommandée pour une mise à jour régulière.\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button \n                    fullWidth \n                    variant=\"contained\" \n                    color=\"primary\"\n                    onClick={() => {\n                      // Cette fonction sera liée au composant StravaSyncStatus\n                      enqueueSnackbar('Veuillez utiliser le bouton de synchronisation dans le panneau de statut', { variant: 'info' });\n                    }}\n                  >\n                    Synchroniser 6 mois\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            \n            <Grid item xs={12} sm={6} md={4}>\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Derniers 30 jours\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                    Récupère uniquement les activités des 30 derniers jours. Option la plus rapide pour des mises à jour fréquentes.\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button \n                    fullWidth \n                    variant=\"contained\" \n                    color=\"primary\"\n                    onClick={() => {\n                      // Cette fonction sera liée au composant StravaSyncStatus\n                      enqueueSnackbar('Veuillez utiliser le bouton de synchronisation dans le panneau de statut', { variant: 'info' });\n                    }}\n                  >\n                    Synchroniser 30 jours\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n        </Box>\n      </TabPanel>\n\n      <TabPanel value={tabValue} index={1}>\n        <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Paramètres de synchronisation\n          </Typography>\n          \n          <Box mb={3}>\n            <FormControlLabel\n              control={\n                <Switch \n                  color=\"primary\" \n                  checked={true}\n                  onChange={() => {\n                    enqueueSnackbar('Fonctionnalité en cours de développement', { variant: 'info' });\n                  }}\n                />\n              }\n              label=\"Synchronisation automatique quotidienne\"\n            />\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Synchronise automatiquement vos activités Strava chaque jour\n            </Typography>\n          </Box>\n          \n          <Box mb={3}>\n            <FormControlLabel\n              control={\n                <Switch \n                  color=\"primary\" \n                  checked={true}\n                  onChange={() => {\n                    enqueueSnackbar('Fonctionnalité en cours de développement', { variant: 'info' });\n                  }}\n                />\n              }\n              label=\"Synchroniser les nouvelles activités en temps réel\"\n            />\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Synchronise automatiquement les nouvelles activités dès qu'elles sont créées dans Strava\n            </Typography>\n          </Box>\n          \n          <Box mb={3}>\n            <FormControlLabel\n              control={\n                <Switch \n                  color=\"primary\" \n                  checked={false}\n                  onChange={() => {\n                    enqueueSnackbar('Fonctionnalité en cours de développement', { variant: 'info' });\n                  }}\n                />\n              }\n              label=\"Synchroniser les activités privées\"\n            />\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Inclut vos activités privées Strava dans la synchronisation\n            </Typography>\n          </Box>\n          \n          <Divider sx={{ my: 3 }} />\n          \n          <Typography variant=\"h6\" gutterBottom>\n            Notifications\n          </Typography>\n          \n          <Box mb={3}>\n            <FormControlLabel\n              control={\n                <Switch \n                  color=\"primary\" \n                  checked={true}\n                  onChange={() => {\n                    enqueueSnackbar('Fonctionnalité en cours de développement', { variant: 'info' });\n                  }}\n                />\n              }\n              label=\"Notifications par email\"\n            />\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Recevez un email lorsqu'une synchronisation est terminée ou a échoué\n            </Typography>\n          </Box>\n          \n          <Box mb={3}>\n            <FormControlLabel\n              control={\n                <Switch \n                  color=\"primary\" \n                  checked={true}\n                  onChange={() => {\n                    enqueueSnackbar('Fonctionnalité en cours de développement', { variant: 'info' });\n                  }}\n                />\n              }\n              label=\"Notifications dans l'application\"\n            />\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Recevez des notifications dans l'application concernant les synchronisations\n            </Typography>\n          </Box>\n        </Paper>\n        \n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          Les paramètres de synchronisation sont en cours de développement. Certaines fonctionnalités peuvent ne pas être encore disponibles.\n        </Alert>\n      </TabPanel>\n    </Container>\n  );\n};\n\nexport default StravaSync;\n"],"names":["STATUS_COLORS","initializing","in_progress","completed","error","cancelled","never_synced","STATUS_LABELS","_ref","onHistoryClick","syncStatus","setSyncStatus","useState","loading","setLoading","setError","pollingInterval","setPollingInterval","enqueueSnackbar","useSnackbar","formatDate","dateString","Date","toLocaleString","day","month","year","hour","minute","second","fetchSyncStatus","async","response","axios","get","data","includes","status","clearInterval","err","_err$response","_err$response$data","startSync","options","arguments","length","undefined","post","variant","interval","setInterval","_err$response2","_err$response2$data","_err$response3","_err$response3$data","useEffect","_jsx","Box","display","justifyContent","alignItems","p","children","CircularProgress","Alert","severity","sx","mt","mb","_jsxs","Paper","elevation","Typography","Tooltip","title","IconButton","size","onClick","disabled","RefreshIcon","ml","HistoryIcon","_Fragment","Grid","container","spacing","item","Chip","label","color","icon","CheckCircleIcon","ErrorIcon","InfoIcon","xs","message","Button","startIcon","CancelIcon","delete","_err$response4","_err$response4$data","_err$response5","_err$response5$data","daysToSync","gutterBottom","progress","LinearProgress","value","height","borderRadius","stats","sm","md","total","processed","added","updated","skipped","failed","Divider","my","startTime","formatDistanceToNow","addSuffix","locale","fr","lastUpdate","endTime","milliseconds","seconds","Math","floor","minutes","hours","formatDuration","code","flexDirection","fullSync","SyncDetailsDialog","_syncDetails$options","_syncDetails$options2","_syncDetails$options3","_syncDetails$options4","_syncDetails$options5","_syncDetails$options6","_syncDetails$options7","_syncDetails$options8","_syncDetails$stats","_syncDetails$stats2","_syncDetails$stats3","_syncDetails$stats4","_syncDetails$stats5","_syncDetails$stats6","open","onClose","syncDetails","Dialog","maxWidth","fullWidth","DialogTitle","CloseIcon","DialogContent","dividers","mr","startDate","endDate","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","width","details","whiteSpace","overflowX","maxHeight","backgroundColor","DialogActions","StravaSyncHistory","history","setHistory","page","setPage","rowsPerPage","setRowsPerPage","selectedSync","setSelectedSync","dialogOpen","setDialogOpen","fetchHistory","params","limit","getStatusIcon","fontSize","WarningIcon","align","colSpan","slice","map","sync","hover","noWrap","round","openDetailsDialog","_id","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","labelRowsPerPage","labelDisplayedRows","_ref2","from","to","closeDetailsDialog","TabPanel","props","index","other","role","hidden","id","StravaSync","tabValue","setTabValue","showHistory","setShowHistory","toggleHistory","Container","Helmet","BikeIcon","verticalAlign","paragraph","Tabs","onChange","handleChangeTab","newValue","indicatorColor","textColor","Tab","SyncIcon","SettingsIcon","StravaSyncStatus","Card","CardContent","CardActions","FormControlLabel","control","Switch","checked"],"sourceRoot":""}