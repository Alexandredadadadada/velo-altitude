{"version":3,"file":"static/js/6981.1cae0cd2.chunk.js","mappings":"yXAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,oLACD,O,2DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,6JACD,S,cCeJ,MA2LA,EA3LqBC,KACnB,MAAM,YAAEC,IAAgBC,EAAAA,EAAAA,OACjBC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,CAC/CC,KAAM,GACNC,cAAe,GACfC,YAAa,GACbC,WAAY,SACZC,cAAc,EACdC,SAAU,EACVC,UAAW,IAIPC,EAAgBC,IACpB,MAAM,KAAER,EAAI,MAAES,GAAUD,EAAEE,OAC1BZ,GAAgBa,IAAI,IACfA,EACH,CAACX,GAAOS,KACP,EAGL,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,GAAI,GAAIC,SAAA,EACrCzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAACC,WAAW,OAAML,SAAC,oCAIvEzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,QAAQI,WAAS,EAACC,MAAM,iBAAgBP,SAAC,0IAI7DL,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEV,SAAA,EAEzBL,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEb,SAAA,EACvBzB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CACJzB,UAAW,EACXS,GAAI,CACFiB,OAAQ,IACRC,aAAc,EACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,QAAS,WACTpB,UAEFL,EAAAA,EAAAA,MAAC0B,EAAAA,EAAG,CAACvB,GAAI,CAAEwB,UAAW,UAAWtB,SAAA,EAC/BzB,EAAAA,EAAAA,KAACgD,EAAO,CAACzB,GAAI,CAAE0B,SAAU,GAAIjB,MAAO,iBAAkBkB,GAAI,MAC1DlD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,KAAKK,MAAM,iBAAgBP,SAAC,uBAGhDzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiBT,GAAI,CAAED,SAAU,IAAK6B,GAAI,OAAQC,GAAI,GAAI3B,SAAC,gKAMjGL,EAAAA,EAAAA,MAAC0B,EAAAA,EAAG,CAACvB,GAAI,CAAE6B,GAAI,EAAGV,QAAS,OAAQW,IAAK,EAAGC,SAAU,QAAS7B,SAAA,EAC5DzB,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACL5B,QAAQ,YACRK,MAAM,UACNwB,WAAWxD,EAAAA,EAAAA,KAACyD,EAAAA,EAAQ,IACpBC,UAAWrD,EAAaG,OAASH,EAAaI,cAAcgB,SAC7D,iCAGDzB,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACL5B,QAAQ,WACRK,MAAM,UACNwB,WAAWxD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,IACrBD,UAAWrD,EAAaG,OAASH,EAAaI,cAAcgB,SAC7D,cAGDzB,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACL5B,QAAQ,WACR6B,WAAWxD,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,IAAInC,SAC1B,wBAOLzB,EAAAA,EAAAA,KAACiC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEb,UACvBL,EAAAA,EAAAA,MAACmB,EAAAA,EAAK,CAACzB,UAAW,EAAGS,GAAI,CAAEsC,EAAG,EAAGpB,aAAc,GAAIhB,SAAA,EACjDzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAJ,SAAC,mCAItCzB,EAAAA,EAAAA,KAAC8D,EAAAA,EAAS,CACRC,WAAS,EACTC,OAAO,SACPC,MAAM,yBACNzD,KAAK,OACLS,MAAOZ,EAAaG,KACpB0D,SAAUnD,KAGZf,EAAAA,EAAAA,KAAC8D,EAAAA,EAAS,CACRC,WAAS,EACTC,OAAO,SACPC,MAAM,qBACNzD,KAAK,gBACLS,MAAOZ,EAAaI,cACpByD,SAAUnD,KAGZf,EAAAA,EAAAA,KAAC8D,EAAAA,EAAS,CACRC,WAAS,EACTC,OAAO,SACPC,MAAM,qBACNzD,KAAK,cACLS,MAAOZ,EAAaK,YACpBwD,SAAUnD,KAGZK,EAAAA,EAAAA,MAAC+C,EAAAA,EAAW,CAACJ,WAAS,EAACC,OAAO,SAAQvC,SAAA,EACpCzB,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,CAACC,GAAG,mBAAkB5C,SAAC,mBAClCL,EAAAA,EAAAA,MAACkD,EAAAA,EAAM,CACLC,QAAQ,mBACR/D,KAAK,aACLS,MAAOZ,EAAaM,WACpBsD,MAAM,gBACNC,SAAUnD,EAAaU,SAAA,EAEvBzB,EAAAA,EAAAA,KAACwE,EAAAA,EAAQ,CAACvD,MAAM,OAAMQ,SAAC,YACvBzB,EAAAA,EAAAA,KAACwE,EAAAA,EAAQ,CAACvD,MAAM,SAAQQ,SAAC,aACzBzB,EAAAA,EAAAA,KAACwE,EAAAA,EAAQ,CAACvD,MAAM,OAAMQ,SAAC,eACvBzB,EAAAA,EAAAA,KAACwE,EAAAA,EAAQ,CAACvD,MAAM,SAAQQ,SAAC,kBAI7BzB,EAAAA,EAAAA,KAACyE,EAAAA,EAAO,CAAClD,GAAI,CAAEmD,GAAI,MAEnB1E,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,YAAYE,cAAY,EAAAJ,SAAC,8BAI7CL,EAAAA,EAAAA,MAACuD,EAAAA,EAAI,CAACC,OAAK,EAAAnD,SAAA,EACTL,EAAAA,EAAAA,MAACyD,EAAAA,GAAQ,CAAApD,SAAA,EACPzB,EAAAA,EAAAA,KAAC8E,EAAAA,EAAY,CAAArD,UACXzB,EAAAA,EAAAA,KAAC+E,EAAAA,EAAQ,CAAC/C,MAAM,eAElBhC,EAAAA,EAAAA,KAACgF,EAAAA,EAAY,CACXC,QAAQ,WACRC,UAAW7E,EAAaQ,SAAW,EAAI,GAAGR,EAAaQ,cAAgB,uBAG3EO,EAAAA,EAAAA,MAACyD,EAAAA,GAAQ,CAAApD,SAAA,EACPzB,EAAAA,EAAAA,KAAC8E,EAAAA,EAAY,CAAArD,UACXzB,EAAAA,EAAAA,KAACmF,EAAAA,EAAW,CAACnD,MAAM,eAErBhC,EAAAA,EAAAA,KAACgF,EAAAA,EAAY,CACXC,QAAQ,yBACRC,UAAW7E,EAAaS,UAAY,EAAI,GAAGT,EAAaS,cAAgB,uBAG5EM,EAAAA,EAAAA,MAACyD,EAAAA,GAAQ,CAAApD,SAAA,EACPzB,EAAAA,EAAAA,KAAC8E,EAAAA,EAAY,CAAArD,UACXzB,EAAAA,EAAAA,KAACoF,EAAS,CAACpD,MAAM,eAEnBhC,EAAAA,EAAAA,KAACgF,EAAAA,EAAY,CACXC,QAAQ,uBACRC,UAAU,2CAStB9D,EAAAA,EAAAA,MAACmB,EAAAA,EAAK,CAACzB,UAAW,EAAGS,GAAI,CAAEsC,EAAG,EAAGT,GAAI,EAAGX,aAAc,GAAIhB,SAAA,EACxDzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAJ,SAAC,mDAItCzB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CAACvB,GAAI,CAAEsC,EAAG,EAAGd,UAAW,SAAUf,MAAO,kBAAmBP,UAC9DzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAQ,QAAOF,SAAC,2EAKtB,C,6DCxMhB,SAAe1B,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,2IACD,O,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,2WACD,Q","sources":["../node_modules/@mui/icons-material/esm/Map.js","../node_modules/@mui/icons-material/esm/Place.js","pages/RoutePlanner.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Share.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20.5 3-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5M15 19l-6-2.11V5l6 2.11z\"\n}), 'Map');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7m0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5\"\n}), 'Place');","import React, { useState } from 'react';\nimport { \n  Container, Typography, Paper, Grid, Box, TextField, \n  Button, Divider, List, ListItem, ListItemText, ListItemIcon,\n  FormControl, InputLabel, Select, MenuItem\n} from '@mui/material';\nimport { \n  Map as MapIcon, \n  Place as PlaceIcon, \n  Terrain as TerrainIcon,\n  DirectionsBike as BikeIcon,\n  Save as SaveIcon,\n  Share as ShareIcon,\n  Route as RouteIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\n\n/**\n * Composant de planification d'itinéraires\n * Intègre les fonctionnalités de cartographie pour créer et enregistrer des parcours\n */\nconst RoutePlanner = () => {\n  const { userProfile } = useAuth();\n  const [routeDetails, setRouteDetails] = useState({\n    name: '',\n    startLocation: '',\n    endLocation: '',\n    difficulty: 'medium',\n    includesCols: false,\n    distance: 0,\n    elevation: 0\n  });\n\n  // Gérer les changements dans le formulaire\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setRouteDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom fontWeight=\"bold\">\n        Planificateur d'Itinéraires\n      </Typography>\n      \n      <Typography variant=\"body1\" paragraph color=\"text.secondary\">\n        Créez et planifiez vos itinéraires cyclistes personnalisés. Intégrez vos cols favoris et partagez avec la communauté.\n      </Typography>\n      \n      <Grid container spacing={3}>\n        {/* Section carte */}\n        <Grid item xs={12} md={8}>\n          <Paper \n            elevation={3} \n            sx={{ \n              height: 500, \n              borderRadius: 2,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              bgcolor: '#f5f5f5'\n            }}\n          >\n            <Box sx={{ textAlign: 'center' }}>\n              <MapIcon sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Carte interactive\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ maxWidth: 400, mx: 'auto', mt: 1 }}>\n                La carte se chargera ici avec les données Mapbox. Vous pourrez tracer votre itinéraire en cliquant sur les points de départ et d'arrivée.\n              </Typography>\n            </Box>\n          </Paper>\n          \n          <Box sx={{ mt: 3, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<SaveIcon />}\n              disabled={!routeDetails.name || !routeDetails.startLocation}\n            >\n              Enregistrer l'itinéraire\n            </Button>\n            <Button \n              variant=\"outlined\" \n              color=\"primary\"\n              startIcon={<ShareIcon />}\n              disabled={!routeDetails.name || !routeDetails.startLocation}\n            >\n              Partager\n            </Button>\n            <Button \n              variant=\"outlined\"\n              startIcon={<RouteIcon />}\n            >\n              Exporter GPX\n            </Button>\n          </Box>\n        </Grid>\n        \n        {/* Section détails et formulaire */}\n        <Grid item xs={12} md={4}>\n          <Paper elevation={2} sx={{ p: 3, borderRadius: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Détails de l'itinéraire\n            </Typography>\n            \n            <TextField\n              fullWidth\n              margin=\"normal\"\n              label=\"Nom de l'itinéraire\"\n              name=\"name\"\n              value={routeDetails.name}\n              onChange={handleChange}\n            />\n            \n            <TextField\n              fullWidth\n              margin=\"normal\"\n              label=\"Point de départ\"\n              name=\"startLocation\"\n              value={routeDetails.startLocation}\n              onChange={handleChange}\n            />\n            \n            <TextField\n              fullWidth\n              margin=\"normal\"\n              label=\"Point d'arrivée\"\n              name=\"endLocation\"\n              value={routeDetails.endLocation}\n              onChange={handleChange}\n            />\n            \n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel id=\"difficulty-label\">Difficulté</InputLabel>\n              <Select\n                labelId=\"difficulty-label\"\n                name=\"difficulty\"\n                value={routeDetails.difficulty}\n                label=\"Difficulté\"\n                onChange={handleChange}\n              >\n                <MenuItem value=\"easy\">Facile</MenuItem>\n                <MenuItem value=\"medium\">Moyenne</MenuItem>\n                <MenuItem value=\"hard\">Difficile</MenuItem>\n                <MenuItem value=\"expert\">Expert</MenuItem>\n              </Select>\n            </FormControl>\n            \n            <Divider sx={{ my: 3 }} />\n            \n            <Typography variant=\"subtitle1\" gutterBottom>\n              Statistiques estimées\n            </Typography>\n            \n            <List dense>\n              <ListItem>\n                <ListItemIcon>\n                  <BikeIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText \n                  primary=\"Distance\" \n                  secondary={routeDetails.distance > 0 ? `${routeDetails.distance} km` : \"Non calculé\"} \n                />\n              </ListItem>\n              <ListItem>\n                <ListItemIcon>\n                  <TerrainIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText \n                  primary=\"Dénivelé positif\" \n                  secondary={routeDetails.elevation > 0 ? `${routeDetails.elevation} m` : \"Non calculé\"} \n                />\n              </ListItem>\n              <ListItem>\n                <ListItemIcon>\n                  <PlaceIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText \n                  primary=\"Cols sur le parcours\" \n                  secondary=\"Aucun sélectionné\" \n                />\n              </ListItem>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n      \n      {/* Suggestions de cols à proximité */}\n      <Paper elevation={2} sx={{ p: 3, mt: 3, borderRadius: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Cols à proximité de votre itinéraire\n        </Typography>\n        \n        <Box sx={{ p: 3, textAlign: 'center', color: 'text.secondary' }}>\n          <Typography variant=\"body1\">\n            Tracez votre itinéraire pour voir les cols à proximité\n          </Typography>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default RoutePlanner;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92\"\n}), 'Share');"],"names":["createSvgIcon","_jsx","d","RoutePlanner","userProfile","useAuth","routeDetails","setRouteDetails","useState","name","startLocation","endLocation","difficulty","includesCols","distance","elevation","handleChange","e","value","target","prev","_jsxs","Container","maxWidth","sx","py","children","Typography","variant","component","gutterBottom","fontWeight","paragraph","color","Grid","container","spacing","item","xs","md","Paper","height","borderRadius","display","alignItems","justifyContent","bgcolor","Box","textAlign","MapIcon","fontSize","mb","mx","mt","gap","flexWrap","Button","startIcon","SaveIcon","disabled","ShareIcon","RouteIcon","p","TextField","fullWidth","margin","label","onChange","FormControl","InputLabel","id","Select","labelId","MenuItem","Divider","my","List","dense","ListItem","ListItemIcon","BikeIcon","ListItemText","primary","secondary","TerrainIcon","PlaceIcon"],"sourceRoot":""}