{"version":3,"file":"static/js/5109.55880f64.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/icons-material/esm/Opacity.js","../node_modules/@mui/icons-material/esm/Fastfood.js","../node_modules/@mui/icons-material/esm/RestaurantMenu.js","../node_modules/@mui/icons-material/esm/Cake.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/LocalFireDepartment.js","../node_modules/@mui/icons-material/esm/EggAlt.js","../node_modules/@mui/icons-material/esm/LocalDrink.js","../node_modules/@mui/icons-material/esm/GrainOutlined.js","../node_modules/@mui/icons-material/esm/SetMeal.js","../node_modules/@mui/icons-material/esm/AcUnit.js","components/nutrition/NutritionRecommendations.js","../node_modules/@mui/icons-material/esm/Info.js","../node_modules/@mui/icons-material/esm/Restaurant.js","../node_modules/@mui/icons-material/esm/FitnessCenter.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.66 8 12 2.35 6.34 8C4.78 9.56 4 11.64 4 13.64s.78 4.11 2.34 5.67 3.61 2.35 5.66 2.35 4.1-.79 5.66-2.35S20 15.64 20 13.64 19.22 9.56 17.66 8M6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14z\"\n}), 'Opacity');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.06 22.99h1.66c.84 0 1.53-.64 1.63-1.46L23 5.05h-5V1h-1.97v4.05h-4.97l.3 2.34c1.71.47 3.31 1.32 4.27 2.26 1.44 1.42 2.43 2.89 2.43 5.29zM1 21.99V21h15.03v.99c0 .55-.45 1-1.01 1H2.01c-.56 0-1.01-.45-1.01-1m15.03-7c0-8-15.03-8-15.03 0zM1.02 17h15v2h-15z\"\n}), 'Fastfood');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m8.1 13.34 2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13z\"\n}), 'RestaurantMenu');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 6c1.11 0 2-.9 2-2 0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2m4.6 9.99-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01M18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9\"\n}), 'Cake');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 12.9-2.13 2.09c-.56.56-.87 1.29-.87 2.07C9 18.68 10.35 20 12 20s3-1.32 3-2.94c0-.78-.31-1.52-.87-2.07z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6-.44.55C14.38 8.02 12 7.19 12 5.3V2S4 6 4 13c0 2.92 1.56 5.47 3.89 6.86-.56-.79-.89-1.76-.89-2.8 0-1.32.52-2.56 1.47-3.5L12 10.1l3.53 3.47c.95.93 1.47 2.17 1.47 3.5 0 1.02-.31 1.96-.85 2.75 1.89-1.15 3.29-3.06 3.71-5.3.66-3.55-1.07-6.9-3.86-8.52\"\n}, \"1\")], 'LocalFireDepartment');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9c-2-2-3.01-7-9.03-7C4.95 2 1.94 6 2 11.52 2.06 17.04 6.96 19 9.97 19c2.01 0 2.01 3 6.02 3C19 22 22 19 22 15.02 22 12 21.01 11 19 9m-7 6.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5\"\n}), 'EggAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m3 2 2.01 18.23C5.13 21.23 5.97 22 7 22h10c1.03 0 1.87-.77 1.99-1.77L21 2zm9 17c-1.66 0-3-1.34-3-3 0-2 3-5.4 3-5.4s3 3.4 3 5.4c0 1.66-1.34 3-3 3m6.33-11H5.67l-.44-4h13.53z\"\n}), 'LocalDrink');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2M6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m-4 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'GrainOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m21.05 17.56-17.97.94L3 17l17.98-.94zM21 19.48H3v1.5h18zM22 5v7c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2m-2 1c-1.68 0-3.04.98-3.21 2.23-.64-.73-2.73-2.73-6.54-2.73-4.67 0-6.75 3-6.75 3s2.08 3 6.75 3c3.81 0 5.9-2 6.54-2.73C16.96 10.02 18.32 11 20 11z\"\n}), 'SetMeal');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 11h-4.17l3.24-3.24-1.41-1.42L15 11h-2V9l4.66-4.66-1.42-1.41L13 6.17V2h-2v4.17L7.76 2.93 6.34 4.34 11 9v2H9L4.34 6.34 2.93 7.76 6.17 11H2v2h4.17l-3.24 3.24 1.41 1.42L9 13h2v2l-4.66 4.66 1.42 1.41L11 17.83V22h2v-4.17l3.24 3.24 1.42-1.41L13 15v-2h2l4.66 4.66 1.41-1.42L17.83 13H22z\"\n}), 'AcUnit');","import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Chip,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Alert,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  useTheme\n} from '@mui/material';\nimport {\n  Restaurant,\n  ExpandMore,\n  Fastfood,\n  LocalDrink,\n  DirectionsBike,\n  EggAlt,\n  FitnessCenter,\n  Opacity,\n  GrainOutlined,\n  LocalFireDepartment,\n  RestaurantMenu,\n  AcUnit,\n  SetMeal,\n  Cake,\n  Info\n} from '@mui/icons-material';\nimport nutritionService from '../../services/nutritionService';\n\n/**\n * Composant de recommandations nutritionnelles personnalisées\n * basées sur le profil, les objectifs et l'activité du cycliste\n */\nconst NutritionRecommendations = ({ userId, nutritionData }) => {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [recommendations, setRecommendations] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  // Catégories de recommandations\n  const categories = [\n    { id: 'all', label: 'Tout', icon: <Restaurant /> },\n    { id: 'macros', label: 'Macronutriments', icon: <Fastfood /> },\n    { id: 'hydration', label: 'Hydratation', icon: <Opacity /> },\n    { id: 'pre-workout', label: 'Avant l\\'effort', icon: <DirectionsBike /> },\n    { id: 'during-workout', label: 'Pendant l\\'effort', icon: <LocalFireDepartment /> },\n    { id: 'recovery', label: 'Récupération', icon: <FitnessCenter /> }\n  ];\n\n  // Récupérer les recommandations nutritionnelles\n  useEffect(() => {\n    if (nutritionData) {\n      generateRecommendationsFromData(nutritionData);\n    } else if (userId) {\n      fetchRecommendations();\n    }\n  }, [userId, nutritionData]);\n\n  // Récupération des données si non fournies\n  const fetchRecommendations = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Récupérer les données du profil et d'activité de l'utilisateur\n      const data = await nutritionService.getUserNutritionData(userId);\n      \n      if (!data) {\n        throw new Error('Données indisponibles');\n      }\n      \n      generateRecommendationsFromData(data);\n    } catch (err) {\n      console.error('Erreur lors de la récupération des recommandations:', err);\n      setError('Impossible de charger les recommandations nutritionnelles.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Générer les recommandations à partir des données\n  const generateRecommendationsFromData = (data) => {\n    try {\n      // Vérifier que les données essentielles sont présentes\n      if (!data || !data.metrics || !data.goals) {\n        throw new Error('Données incomplètes pour générer des recommandations');\n      }\n      \n      // Récupérer les valeurs pertinentes (avec valeurs par défaut si manquantes)\n      const weight = data.metrics.weight || 70;\n      const height = data.metrics.height || 175;\n      const age = data.metrics.age || 30;\n      const gender = data.metrics.gender || 'male';\n      const activity = data.metrics.activityLevel || 'moderate';\n      const goal = data.goals.type || 'performance';\n      const discipline = data.cycling?.discipline || 'road';\n      const trainingHours = data.cycling?.weeklyHours || 8;\n      \n      // Calculer les besoins caloriques de base\n      let bmr;\n      if (gender === 'male') {\n        bmr = 10 * weight + 6.25 * height - 5 * age + 5;\n      } else {\n        bmr = 10 * weight + 6.25 * height - 5 * age - 161;\n      }\n      \n      // Facteur d'activité\n      const activityFactors = {\n        sedentary: 1.2,\n        light: 1.375,\n        moderate: 1.55,\n        active: 1.725,\n        very_active: 1.9\n      };\n      \n      // Niveau d'entraînement hebdomadaire\n      let trainingFactor = 1.0;\n      if (trainingHours > 0) {\n        // Ajouter environ 0.05 par heure d'entraînement hebdomadaire\n        trainingFactor = 1.0 + (trainingHours * 0.05);\n      }\n      \n      const tdee = bmr * activityFactors[activity] * trainingFactor;\n      \n      // Ajuster les calories selon l'objectif\n      let targetCalories;\n      let carbPercentage;\n      let proteinPercentage;\n      let fatPercentage;\n      \n      switch (goal) {\n        case 'weight-loss':\n          targetCalories = Math.round(tdee * 0.85); // Déficit de 15%\n          carbPercentage = 40;\n          proteinPercentage = 35;\n          fatPercentage = 25;\n          break;\n        case 'performance':\n          targetCalories = Math.round(tdee * 1.1); // Surplus de 10%\n          carbPercentage = 60;\n          proteinPercentage = 20;\n          fatPercentage = 20;\n          break;\n        case 'maintenance':\n        default:\n          targetCalories = Math.round(tdee);\n          carbPercentage = 50;\n          proteinPercentage = 25;\n          fatPercentage = 25;\n      }\n      \n      // Calcul des grammes de macronutriments\n      const carbGrams = Math.round((targetCalories * (carbPercentage / 100)) / 4);\n      const proteinGrams = Math.round((targetCalories * (proteinPercentage / 100)) / 4);\n      const fatGrams = Math.round((targetCalories * (fatPercentage / 100)) / 9);\n      \n      // Hydratation quotidienne de base (en litres)\n      const baseHydration = Math.round(weight * 0.035 * 100) / 100;\n      \n      // Hydratation spécifique pour l'entraînement (en litres par heure)\n      const workoutHydration = 0.5; // 500ml par heure en moyenne\n      const dailyWorkoutHydration = Math.round((trainingHours / 7) * workoutHydration * 100) / 100;\n      const totalHydration = baseHydration + dailyWorkoutHydration;\n      \n      // Générer les recommandations\n      const recommendations = {\n        macros: [\n          {\n            id: 'calorie-needs',\n            title: 'Besoins caloriques',\n            description: `Vos besoins caloriques quotidiens sont d'environ ${targetCalories} kcal, en fonction de votre objectif de ${goal === 'weight-loss' ? 'perte de poids' : (goal === 'performance' ? 'performance' : 'maintien')}.`,\n            priority: 'high',\n            icon: <LocalFireDepartment />\n          },\n          {\n            id: 'carb-needs',\n            title: 'Glucides',\n            description: `Consommez environ ${carbGrams}g de glucides par jour (${carbPercentage}% de votre apport calorique). Privilégiez les sources complexes comme les céréales complètes, les légumineuses et les tubercules.`,\n            priority: 'high',\n            icon: <GrainOutlined />\n          },\n          {\n            id: 'protein-needs',\n            title: 'Protéines',\n            description: `Visez ${proteinGrams}g de protéines par jour (${proteinPercentage}% de votre apport calorique), soit environ ${Math.round((proteinGrams / weight) * 10) / 10}g/kg de poids corporel. Alternez sources animales (viandes maigres, œufs, produits laitiers) et végétales (légumineuses, tofu).`,\n            priority: 'high',\n            icon: <EggAlt />\n          },\n          {\n            id: 'fat-needs',\n            title: 'Lipides',\n            description: `Incluez ${fatGrams}g de lipides par jour (${fatPercentage}% de votre apport calorique). Privilégiez les bonnes graisses (huile d'olive, avocat, poissons gras, noix) et limitez les graisses saturées.`,\n            priority: 'medium',\n            icon: <Cake />\n          }\n        ],\n        hydration: [\n          {\n            id: 'daily-hydration',\n            title: 'Hydratation quotidienne',\n            description: `Buvez au moins ${totalHydration}L d'eau par jour, dont ${baseHydration}L pour vos besoins de base et ${dailyWorkoutHydration}L supplémentaires pour compenser vos entraînements.`,\n            priority: 'high',\n            icon: <Opacity />\n          },\n          {\n            id: 'hydration-tips',\n            title: 'Conseils d\\'hydratation',\n            description: 'Buvez régulièrement tout au long de la journée, pas seulement quand vous avez soif. L\\'eau plate est idéale, mais vous pouvez également inclure des tisanes et boissons peu sucrées.',\n            priority: 'medium',\n            icon: <LocalDrink />\n          }\n        ],\n        'pre-workout': [\n          {\n            id: 'pre-workout-meal',\n            title: 'Repas avant entraînement',\n            description: `Consommez un repas riche en glucides complexes 2-3h avant l'effort (${Math.round(carbGrams * 0.25)}g de glucides). Par exemple: pâtes complètes avec sauce tomate, riz avec poulet, patate douce avec légumes.`,\n            priority: 'high',\n            icon: <RestaurantMenu />\n          },\n          {\n            id: 'pre-workout-snack',\n            title: 'Collation avant entraînement',\n            description: `Pour un entraînement court, une petite collation 30-60min avant suffit (${Math.round(carbGrams * 0.1)}g de glucides): banane, barre de céréales, ou quelques dattes.`,\n            priority: 'medium',\n            icon: <Fastfood />\n          },\n          {\n            id: 'caffeine-strategy',\n            title: 'Caféine stratégique',\n            description: 'La caféine peut améliorer vos performances. Consommez 200-300mg (1-2 tasses de café) 30-60min avant les séances importantes pour un effet optimal.',\n            priority: 'low',\n            icon: <LocalFireDepartment />\n          }\n        ],\n        'during-workout': [\n          {\n            id: 'workout-hydration',\n            title: 'Hydratation pendant l\\'effort',\n            description: `Buvez 500-750ml d'eau par heure d'entraînement. Pour les efforts de plus d'une heure, optez pour une boisson contenant des électrolytes et ${Math.round(carbGrams * 0.06)}g de glucides par heure.`,\n            priority: 'high',\n            icon: <Opacity />\n          },\n          {\n            id: 'energy-for-long-rides',\n            title: 'Énergie pour longues sorties',\n            description: `Pour les efforts de plus de 90 minutes, consommez 60-90g de glucides par heure sous forme de gels, barres énergétiques ou fruits secs. Alternez différentes sources pour faciliter la digestion.`,\n            priority: 'high',\n            icon: <DirectionsBike />\n          },\n          {\n            id: 'energy-for-intensity',\n            title: 'Nutrition pour haute intensité',\n            description: 'Pour les entraînements courts mais intenses, privilégiez les glucides à assimilation rapide comme les gels ou boissons énergétiques avec maltodextrine.',\n            priority: 'medium',\n            icon: <LocalFireDepartment />\n          }\n        ],\n        recovery: [\n          {\n            id: 'recovery-window',\n            title: 'Fenêtre de récupération',\n            description: `Consommez ${Math.round(proteinGrams * 0.2)}g de protéines et ${Math.round(carbGrams * 0.25)}g de glucides dans les 30 minutes après l'effort pour optimiser la récupération musculaire.`,\n            priority: 'high',\n            icon: <FitnessCenter />\n          },\n          {\n            id: 'recovery-meal',\n            title: 'Repas de récupération',\n            description: 'Dans les 2 heures suivant l\\'effort, prenez un repas complet contenant protéines, glucides et légumes. Par exemple: saumon avec riz et légumes, poulet avec quinoa et salade, ou ragoût de lentilles avec légumes.',\n            priority: 'high',\n            icon: <SetMeal />\n          },\n          {\n            id: 'hydration-recovery',\n            title: 'Réhydratation',\n            description: 'Buvez 1.5 fois le poids perdu pendant l\\'effort pour restaurer l\\'équilibre hydrique. Incluez des électrolytes, surtout après les efforts intenses ou par temps chaud.',\n            priority: 'medium',\n            icon: <Opacity />\n          },\n          {\n            id: 'anti-inflammatory-foods',\n            title: 'Aliments anti-inflammatoires',\n            description: 'Incorporez des aliments riches en antioxydants et aux propriétés anti-inflammatoires: petits fruits, cerises, curcuma, gingembre, poissons gras, huile d\\'olive.',\n            priority: 'medium',\n            icon: <AcUnit />\n          }\n        ]\n      };\n      \n      // Recommandations spécifiques selon la discipline\n      if (discipline === 'road') {\n        recommendations['during-workout'].push({\n          id: 'road-specific',\n          title: 'Spécifique route',\n          description: 'Pour les sorties de plusieurs heures, échelonnez votre alimentation. Mangez des aliments solides (barres, sandwichs fins) dans la première moitié, puis passez aux gels et liquides pour la fin de parcours.',\n          priority: 'medium',\n          icon: <DirectionsBike />\n        });\n      } else if (discipline === 'mtb') {\n        recommendations['during-workout'].push({\n          id: 'mtb-specific',\n          title: 'Spécifique VTT',\n          description: 'Les efforts en VTT sont souvent intermittents. Optez pour un mélange de glucides (fructose, glucose) et des collations faciles à manger sur des terrains techniques.',\n          priority: 'medium',\n          icon: <DirectionsBike />\n        });\n      } else if (discipline === 'track') {\n        recommendations['pre-workout'].push({\n          id: 'track-specific',\n          title: 'Spécifique piste',\n          description: 'Pour les épreuves explosives sur piste, augmentez légèrement votre apport en créatine (3-5g/jour) et favorisez les aliments riches en nitrates comme la betterave.',\n          priority: 'medium',\n          icon: <DirectionsBike />\n        });\n      }\n      \n      setRecommendations(recommendations);\n    } catch (err) {\n      console.error('Erreur lors de la génération des recommandations:', err);\n      setError('Impossible de générer des recommandations précises avec les données disponibles.');\n    }\n  };\n\n  // Filtrer les recommandations par catégorie\n  const getFilteredRecommendations = () => {\n    if (!recommendations) return [];\n    \n    if (selectedCategory === 'all') {\n      return Object.keys(recommendations).flatMap(category => \n        recommendations[category].map(item => ({ ...item, category }))\n      );\n    }\n    \n    return recommendations[selectedCategory]?.map(item => ({ ...item, category: selectedCategory })) || [];\n  };\n\n  // Obtenir la couleur de priorité\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'high':\n        return theme.palette.error.main;\n      case 'medium':\n        return theme.palette.warning.main;\n      case 'low':\n        return theme.palette.info.main;\n      default:\n        return theme.palette.grey[500];\n    }\n  };\n\n  // Rendu lorsque les données sont en cours de chargement\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Rendu en cas d'erreur\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 3 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  // Rendu lorsqu'il n'y a pas de recommandations\n  if (!recommendations) {\n    return (\n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Pour obtenir des recommandations nutritionnelles personnalisées, veuillez compléter votre profil avec vos informations personnelles, objectifs et niveau d'activité.\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      {/* Filtres par catégorie */}\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 3 }}>\n        {categories.map((category) => (\n          <Chip\n            key={category.id}\n            icon={category.icon}\n            label={category.label}\n            onClick={() => setSelectedCategory(category.id)}\n            color={selectedCategory === category.id ? 'primary' : 'default'}\n            variant={selectedCategory === category.id ? 'filled' : 'outlined'}\n            sx={{ mb: 1, '& .MuiChip-icon': { fontSize: '1.2rem' } }}\n          />\n        ))}\n      </Box>\n\n      {/* Recommandations filtrées */}\n      <Grid container spacing={3}>\n        {getFilteredRecommendations().map((recommendation) => (\n          <Grid item xs={12} md={6} key={recommendation.id}>\n            <Card variant=\"outlined\">\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 1 }}>\n                  <Box sx={{ \n                    mr: 2, \n                    display: 'flex', \n                    alignItems: 'center', \n                    justifyContent: 'center',\n                    bgcolor: `${getPriorityColor(recommendation.priority)}20`,\n                    color: getPriorityColor(recommendation.priority),\n                    borderRadius: '50%',\n                    width: 40,\n                    height: 40\n                  }}>\n                    {recommendation.icon}\n                  </Box>\n                  <Box sx={{ flex: 1 }}>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {recommendation.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {recommendation.description}\n                    </Typography>\n                  </Box>\n                </Box>\n                <Chip \n                  size=\"small\" \n                  label={categories.find(c => c.id === recommendation.category)?.label || recommendation.category}\n                  sx={{ \n                    mt: 2,\n                    bgcolor: theme.palette.background.default,\n                    color: theme.palette.text.secondary,\n                    '& .MuiChip-label': { fontSize: '0.7rem' }\n                  }}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Disclaimer */}\n      <Alert \n        severity=\"info\" \n        icon={<Info />}\n        sx={{ mt: 4 }}\n        variant=\"outlined\"\n      >\n        Ces recommandations sont générales et doivent être adaptées à vos besoins et préférences individuelles. Consultez un professionnel de la nutrition pour des conseils personnalisés.\n      </Alert>\n    </Box>\n  );\n};\n\nexport default NutritionRecommendations;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 9H9V2H7v7H5V2H3v7c0 2.12 1.66 3.84 3.75 3.97V22h2.5v-9.03C11.34 12.84 13 11.12 13 9V2h-2zm5-3v8h2.5v8H21V2c-2.76 0-5 2.24-5 4\"\n}), 'Restaurant');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20.57 14.86 22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z\"\n}), 'FitnessCenter');"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","createSvgIcon","d","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","_ref","userId","nutritionData","theme","useTheme","loading","setLoading","useState","error","setError","recommendations","setRecommendations","selectedCategory","setSelectedCategory","categories","id","label","icon","Restaurant","Fastfood","Opacity","DirectionsBike","LocalFireDepartment","FitnessCenter","useEffect","generateRecommendationsFromData","fetchRecommendations","async","data","nutritionService","getUserNutritionData","Error","err","console","_data$cycling","_data$cycling2","metrics","goals","weight","height","age","gender","activity","activityLevel","goal","type","discipline","cycling","trainingHours","weeklyHours","bmr","trainingFactor","tdee","sedentary","light","moderate","active","very_active","targetCalories","carbPercentage","proteinPercentage","fatPercentage","Math","round","carbGrams","proteinGrams","fatGrams","baseHydration","workoutHydration","dailyWorkoutHydration","totalHydration","macros","title","description","priority","GrainOutlined","EggAlt","Cake","hydration","LocalDrink","RestaurantMenu","recovery","SetMeal","AcUnit","push","getPriorityColor","palette","main","warning","info","grey","Box","sx","display","justifyContent","my","children","CircularProgress","Alert","severity","mb","_jsxs","flexWrap","gap","map","category","Chip","onClick","color","variant","fontSize","Grid","container","spacing","getFilteredRecommendations","_recommendations$sele","Object","keys","flatMap","item","recommendation","_categories$find","xs","md","Card","CardContent","alignItems","mr","bgcolor","borderRadius","width","flex","Typography","gutterBottom","size","find","c","mt","background","default","text","secondary","Info"],"sourceRoot":""}