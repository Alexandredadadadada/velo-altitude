{"version":3,"file":"static/js/818.78201ae2.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/AlertTitle/AlertTitle.js","../node_modules/@mui/icons-material/esm/BugReport.js","../node_modules/@mui/icons-material/esm/NetworkCheck.js","../node_modules/@mui/icons-material/esm/Storage.js","../node_modules/@mui/icons-material/esm/WarningAmber.js","components/demo/ErrorHandlingDemo.js","pages/ErrorDemo.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/material/utils/useId.js","../node_modules/@mui/icons-material/esm/Info.js","../node_modules/@mui/icons-material/esm/Security.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getAlertTitleUtilityClass } from './alertTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n});\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20zm-6 8h-4v-2h4zm0-4h-4v-2h4z\"\n}), 'BugReport');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.9 5c-.17 0-.32.09-.41.23l-.07.15-5.18 11.65c-.16.29-.26.61-.26.96 0 1.11.9 2.01 2.01 2.01.96 0 1.77-.68 1.96-1.59l.01-.03L16.4 5.5c0-.28-.22-.5-.5-.5M1 9l2 2c2.88-2.88 6.79-4.08 10.53-3.62l1.19-2.68C9.89 3.84 4.74 5.27 1 9m20 2 2-2c-1.64-1.64-3.55-2.82-5.59-3.57l-.53 2.82c1.5.62 2.9 1.53 4.12 2.75m-4 4 2-2c-.8-.8-1.7-1.42-2.66-1.89l-.55 2.92c.42.27.83.59 1.21.97M5 13l2 2c1.13-1.13 2.56-1.79 4.03-2l1.28-2.88c-2.63-.08-5.3.87-7.31 2.88\"\n}), 'NetworkCheck');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2 20h20v-4H2zm2-3h2v2H4zM2 4v4h20V4zm4 3H4V5h2zm-4 7h20v-4H2zm2-3h2v2H4z\"\n}), 'Storage');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99 19.53 19H4.47zM12 2 1 21h22z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 16h-2v2h2zm0-6h-2v5h2z\"\n}, \"1\")], 'WarningAmber');","/**\n * Composant de démonstration du système de gestion d'erreurs\n * Ce composant permet de tester différents scénarios d'erreurs\n * et de voir comment ils sont gérés par notre système\n */\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  Grid,\n  Divider,\n  Card,\n  CardContent,\n  CardActions,\n  Alert,\n  Snackbar,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  CircularProgress\n} from '@mui/material';\nimport {\n  ErrorOutline as ErrorIcon,\n  WarningAmber as WarningIcon,\n  Info as InfoIcon,\n  BugReport as BugIcon,\n  NetworkCheck as NetworkIcon,\n  Security as SecurityIcon,\n  Storage as StorageIcon,\n  Code as CodeIcon\n} from '@mui/icons-material';\n\n// Hooks personnalisés\nimport useErrorHandler from '../../hooks/useErrorHandler';\nimport { useNotification } from '../common/NotificationSystem';\n\n// Composant qui génère une erreur lors du rendu\nconst BuggyComponent = () => {\n  // Cette ligne va générer une erreur\n  const causeError = undefined.toString();\n  return <div>{causeError}</div>;\n};\n\n// Composant qui génère une erreur après un délai\nconst DelayedErrorComponent = () => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      // Générer une erreur après 2 secondes\n      throw new Error('Erreur générée après un délai');\n    }, 2000);\n    \n    return () => clearTimeout(timer);\n  }, []);\n  \n  return <Typography>Ce composant va générer une erreur après 2 secondes...</Typography>;\n};\n\n// Composant principal de démonstration\nconst ErrorHandlingDemo = () => {\n  const { handleApiRequest, tryCatch, handleError } = useErrorHandler();\n  const { notify } = useNotification();\n  \n  const [errorType, setErrorType] = useState('validation_error');\n  const [errorMessage, setErrorMessage] = useState('Erreur de validation des données');\n  const [showBuggyComponent, setShowBuggyComponent] = useState(false);\n  const [showDelayedError, setShowDelayedError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Types d'erreurs disponibles\n  const errorTypes = [\n    { value: 'validation_error', label: 'Erreur de validation', icon: <CodeIcon /> },\n    { value: 'auth_error', label: 'Erreur d\\'authentification', icon: <SecurityIcon /> },\n    { value: 'network_error', label: 'Erreur réseau', icon: <NetworkIcon /> },\n    { value: 'server_error', label: 'Erreur serveur', icon: <StorageIcon /> },\n    { value: 'unknown_error', label: 'Erreur inconnue', icon: <BugIcon /> }\n  ];\n  \n  // Simuler une requête API qui échoue\n  const simulateApiError = async () => {\n    setIsLoading(true);\n    \n    try {\n      await handleApiRequest(\n        new Promise((_, reject) => {\n          setTimeout(() => {\n            reject({\n              response: {\n                data: {\n                  error: {\n                    type: errorType,\n                    message: errorMessage,\n                    severity: errorType.includes('auth') || errorType.includes('server') ? 'error' : 'warning',\n                    details: `Détails supplémentaires sur l'erreur de type ${errorType}`\n                  }\n                }\n              }\n            });\n          }, 1500);\n        }),\n        {\n          loadingMessage: 'Simulation d\\'une requête API en cours...',\n          errorMessage: 'La requête API a échoué',\n          showLoading: true\n        }\n      );\n    } catch (error) {\n      // L'erreur est déjà gérée par handleApiRequest\n      console.log('Erreur capturée dans le composant:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Simuler une erreur synchrone avec try/catch\n  const simulateSyncError = () => {\n    tryCatch(\n      () => {\n        // Code qui génère une erreur\n        throw new Error(`Erreur synchrone: ${errorMessage}`);\n      },\n      {\n        errorMessage: `Une erreur s'est produite lors de l'exécution: ${errorMessage}`,\n        showError: true\n      }\n    );\n  };\n  \n  // Simuler différents types de notifications\n  const showNotification = (type) => {\n    const messages = {\n      success: 'Opération réussie avec succès !',\n      error: 'Une erreur s\\'est produite lors de l\\'opération.',\n      warning: 'Attention, cette action pourrait avoir des conséquences.',\n      info: 'Information importante à prendre en compte.'\n    };\n    \n    notify[type](messages[type], {\n      title: type.charAt(0).toUpperCase() + type.slice(1),\n      duration: 5000\n    });\n  };\n  \n  // Simuler une erreur manuelle\n  const triggerManualError = () => {\n    handleError(\n      errorMessage,\n      errorType,\n      {\n        severity: errorType.includes('auth') || errorType.includes('server') ? 'error' : 'warning',\n        details: `Erreur déclenchée manuellement de type ${errorType}`,\n        showNotification: true\n      }\n    );\n  };\n  \n  return (\n    <Box sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        <BugIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n        Démonstration du système de gestion d'erreurs\n      </Typography>\n      \n      <Typography variant=\"body1\" paragraph>\n        Cette page permet de tester différents scénarios d'erreurs et de voir comment ils sont gérés par notre système centralisé.\n      </Typography>\n      \n      <Divider sx={{ my: 3 }} />\n      \n      {/* Configuration des erreurs */}\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Configuration de l'erreur\n        </Typography>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <FormControl fullWidth>\n              <InputLabel id=\"error-type-label\">Type d'erreur</InputLabel>\n              <Select\n                labelId=\"error-type-label\"\n                value={errorType}\n                label=\"Type d'erreur\"\n                onChange={(e) => setErrorType(e.target.value)}\n              >\n                {errorTypes.map((type) => (\n                  <MenuItem key={type.value} value={type.value}>\n                    {React.cloneElement(type.icon, { fontSize: 'small', sx: { mr: 1 } })}\n                    {type.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"Message d'erreur\"\n              value={errorMessage}\n              onChange={(e) => setErrorMessage(e.target.value)}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Démonstrations */}\n      <Grid container spacing={3}>\n        {/* Erreurs API */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                <NetworkIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                Erreurs API\n              </Typography>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Simule une erreur lors d'une requête API asynchrone. L'erreur sera interceptée et gérée par notre hook useErrorHandler.\n              </Typography>\n              \n              {isLoading && (\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\n                  <CircularProgress />\n                </Box>\n              )}\n            </CardContent>\n            \n            <CardActions>\n              <Button \n                variant=\"contained\" \n                color=\"primary\" \n                onClick={simulateApiError}\n                disabled={isLoading}\n              >\n                Simuler une erreur API\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        \n        {/* Erreurs synchrones */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                <CodeIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                Erreurs synchrones\n              </Typography>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Simule une erreur synchrone dans un bloc try/catch. L'erreur sera capturée et gérée par notre fonction tryCatch.\n              </Typography>\n            </CardContent>\n            \n            <CardActions>\n              <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                onClick={simulateSyncError}\n              >\n                Simuler une erreur synchrone\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        \n        {/* Erreurs de rendu */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                <BugIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                Erreurs de rendu\n              </Typography>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Simule une erreur lors du rendu d'un composant. L'erreur sera capturée par le composant ErrorBoundary.\n              </Typography>\n              \n              {showBuggyComponent && <BuggyComponent />}\n            </CardContent>\n            \n            <CardActions>\n              <Button \n                variant=\"contained\" \n                color=\"error\" \n                onClick={() => setShowBuggyComponent(true)}\n                disabled={showBuggyComponent}\n              >\n                Afficher composant avec erreur\n              </Button>\n              \n              <Button \n                variant=\"outlined\" \n                onClick={() => setShowBuggyComponent(false)}\n                disabled={!showBuggyComponent}\n              >\n                Masquer composant\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        \n        {/* Erreurs différées */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                <WarningIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                Erreurs différées\n              </Typography>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Simule une erreur qui se produit après un délai. Utile pour tester la gestion des erreurs asynchrones.\n              </Typography>\n              \n              {showDelayedError && <DelayedErrorComponent />}\n            </CardContent>\n            \n            <CardActions>\n              <Button \n                variant=\"contained\" \n                color=\"warning\" \n                onClick={() => setShowDelayedError(true)}\n                disabled={showDelayedError}\n              >\n                Déclencher erreur différée\n              </Button>\n              \n              <Button \n                variant=\"outlined\" \n                onClick={() => setShowDelayedError(false)}\n                disabled={!showDelayedError}\n              >\n                Annuler\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        \n        {/* Notifications */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                <InfoIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                Notifications\n              </Typography>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Teste différents types de notifications qui peuvent être affichées par le système.\n              </Typography>\n            </CardContent>\n            \n            <CardActions>\n              <Button \n                variant=\"outlined\" \n                color=\"success\" \n                onClick={() => showNotification('success')}\n              >\n                Succès\n              </Button>\n              \n              <Button \n                variant=\"outlined\" \n                color=\"error\" \n                onClick={() => showNotification('error')}\n              >\n                Erreur\n              </Button>\n              \n              <Button \n                variant=\"outlined\" \n                color=\"warning\" \n                onClick={() => showNotification('warning')}\n              >\n                Avertissement\n              </Button>\n              \n              <Button \n                variant=\"outlined\" \n                color=\"info\" \n                onClick={() => showNotification('info')}\n              >\n                Info\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        \n        {/* Erreur manuelle */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                <ErrorIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                Erreur manuelle\n              </Typography>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Déclenche manuellement une erreur via le service de gestion d'erreurs. Utile pour les erreurs détectées par la logique métier.\n              </Typography>\n            </CardContent>\n            \n            <CardActions>\n              <Button \n                variant=\"contained\" \n                color=\"error\" \n                onClick={triggerManualError}\n              >\n                Déclencher erreur manuelle\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n      \n      <Box sx={{ mt: 4 }}>\n        <Alert severity=\"info\">\n          <Typography variant=\"body2\">\n            <strong>Note:</strong> Toutes les erreurs sont enregistrées dans la console et peuvent être envoyées à un service de suivi des erreurs comme Sentry si configuré.\n          </Typography>\n        </Alert>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ErrorHandlingDemo;\n","/**\n * Page de démonstration du système de gestion d'erreurs\n * Cette page montre comment utiliser les différents composants\n * et hooks liés à la gestion d'erreurs\n */\n\nimport React from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Paper, \n  Divider,\n  Breadcrumbs as MuiBreadcrumbs,\n  Link,\n  Alert,\n  AlertTitle\n} from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { \n  BugReport as BugIcon,\n  Home as HomeIcon,\n  ArrowRight as ArrowRightIcon\n} from '@mui/icons-material';\n\n// Composants\nimport ErrorBoundary from '../components/common/ErrorBoundary';\nimport ErrorHandlingDemo from '../components/demo/ErrorHandlingDemo';\nimport Breadcrumbs from '../components/common/Breadcrumbs';\n\n// Hooks\nimport useErrorHandler from '../hooks/useErrorHandler';\n\nconst ErrorDemo = () => {\n  const { handleError } = useErrorHandler();\n  \n  // Fonction appelée lorsque l'ErrorBoundary capture une erreur\n  const handleBoundaryError = (error, errorInfo) => {\n    // Enregistrer l'erreur dans notre service centralisé\n    handleError(\n      error.message || 'Erreur non gérée dans le composant',\n      'component_error',\n      {\n        details: errorInfo?.componentStack,\n        severity: 'error',\n        showNotification: true\n      }\n    );\n    \n    // Vous pourriez également envoyer l'erreur à un service de suivi comme Sentry\n    console.error('Erreur capturée par ErrorBoundary:', error);\n    console.error('Informations sur le composant:', errorInfo);\n  };\n  \n  return (\n    <Box>\n      <Breadcrumbs \n        items={[\n          { label: 'Accueil', path: '/' },\n          { label: 'Démo Gestion d\\'Erreurs', path: '/error-demo' }\n        ]} \n      />\n      \n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n            <BugIcon sx={{ mr: 1, verticalAlign: 'middle', fontSize: 'inherit' }} />\n            Démonstration du Système de Gestion d'Erreurs\n          </Typography>\n          \n          <Typography variant=\"subtitle1\" color=\"text.secondary\" paragraph>\n            Cette page présente les différentes fonctionnalités du système centralisé de gestion d'erreurs\n            et montre comment les erreurs sont capturées, traitées et affichées à l'utilisateur.\n          </Typography>\n          \n          <Divider sx={{ my: 3 }} />\n        </Box>\n        \n        <Alert severity=\"info\" sx={{ mb: 4 }}>\n          <AlertTitle>Guide d'utilisation</AlertTitle>\n          <Typography variant=\"body2\">\n            Cette page de démonstration vous permet de tester différents scénarios d'erreurs et de voir comment ils sont gérés.\n            Vous pouvez déclencher des erreurs API, des erreurs synchrones, des erreurs de rendu et voir comment le système\n            les capture et les affiche à l'utilisateur.\n          </Typography>\n        </Alert>\n        \n        {/* Wrapper avec ErrorBoundary pour capturer les erreurs */}\n        <ErrorBoundary onError={handleBoundaryError}>\n          <Paper elevation={3} sx={{ p: 3, borderRadius: 2 }}>\n            <ErrorHandlingDemo />\n          </Paper>\n        </ErrorBoundary>\n        \n        <Box sx={{ mt: 4 }}>\n          <Typography variant=\"h5\" gutterBottom>\n            Comment ça fonctionne ?\n          </Typography>\n          \n          <Typography variant=\"body1\" paragraph>\n            Le système de gestion d'erreurs est composé de plusieurs éléments :\n          </Typography>\n          \n          <Box component=\"ul\" sx={{ pl: 4 }}>\n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography variant=\"body1\">\n                <strong>ErrorService</strong> : Service centralisé qui gère toutes les erreurs de l'application\n              </Typography>\n            </Box>\n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography variant=\"body1\">\n                <strong>useErrorHandler</strong> : Hook React qui expose les fonctionnalités du service d'erreurs\n              </Typography>\n            </Box>\n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography variant=\"body1\">\n                <strong>ErrorBoundary</strong> : Composant qui capture les erreurs dans l'arbre de composants enfants\n              </Typography>\n            </Box>\n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography variant=\"body1\">\n                <strong>NotificationSystem</strong> : Système d'affichage des notifications pour informer l'utilisateur\n              </Typography>\n            </Box>\n          </Box>\n          \n          <Typography variant=\"body1\" paragraph>\n            Ensemble, ces éléments forment un système robuste qui permet de gérer les erreurs de manière cohérente\n            et d'offrir une expérience utilisateur optimale même en cas de problème.\n          </Typography>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ErrorDemo;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","'use client';\n\nimport useId from '@mui/utils/useId';\nexport default useId;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11z\"\n}), 'Security');"],"names":["getAlertTitleUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertTitleRoot","styled","Typography","name","overridesResolver","props","styles","root","_ref","theme","fontWeight","typography","fontWeightMedium","marginTop","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsx","_extends","gutterBottom","component","clsx","createSvgIcon","d","BuggyComponent","causeError","undefined","toString","children","DelayedErrorComponent","useEffect","timer","setTimeout","Error","clearTimeout","ErrorHandlingDemo","handleApiRequest","tryCatch","handleError","useErrorHandler","notify","useNotification","errorType","setErrorType","useState","errorMessage","setErrorMessage","showBuggyComponent","setShowBuggyComponent","showDelayedError","setShowDelayedError","isLoading","setIsLoading","errorTypes","value","label","icon","CodeIcon","SecurityIcon","NetworkIcon","StorageIcon","BugIcon","showNotification","type","success","error","warning","info","title","charAt","toUpperCase","slice","duration","_jsxs","Box","sx","py","variant","mr","verticalAlign","paragraph","Divider","my","Paper","p","mb","Grid","container","spacing","item","xs","md","FormControl","fullWidth","InputLabel","id","Select","labelId","onChange","e","target","map","MenuItem","fontSize","TextField","Card","CardContent","color","display","justifyContent","CircularProgress","CardActions","Button","onClick","async","Promise","_","reject","response","data","message","severity","includes","details","loadingMessage","showLoading","console","log","disabled","simulateSyncError","showError","WarningIcon","InfoIcon","ErrorIcon","triggerManualError","mt","Alert","ErrorDemo","Breadcrumbs","items","path","Container","maxWidth","AlertTitle","ErrorBoundary","onError","handleBoundaryError","errorInfo","componentStack","elevation","borderRadius","pl","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","alignItems","padding","marginLeft","slots"],"sourceRoot":""}