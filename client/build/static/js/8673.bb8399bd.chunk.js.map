{"version":3,"file":"static/js/8673.bb8399bd.chunk.js","mappings":"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","sources":["pages/MountainHub.js","hooks/useFeatureFlags.js"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { Routes, Route, Navigate, useParams } from 'react-router-dom';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport LoadingFallback from '../components/common/LoadingFallback';\nimport { useFeatureFlags } from '../hooks/useFeatureFlags';\n\n// Lazy loading des composants du module Montagne\nconst MountainDashboard = lazy(() => import('../components/mountain/components/MountainDashboard'));\nconst ColSpecificTraining = lazy(() => import('../components/mountain/components/ColSpecificTraining'));\nconst ColSpecificNutrition = lazy(() => import('../components/mountain/components/ColSpecificNutrition'));\nconst RegionalTrainingPlans = lazy(() => import('../components/mountain/components/RegionalTrainingPlans'));\n\n/**\n * Page principale pour le module Montagne\n * Gère les sous-routes et l'affichage des différents composants\n */\nfunction MountainHub() {\n  const { enableMountainModule } = useFeatureFlags();\n\n  // Si le module n'est pas activé, afficher un message\n  if (!enableMountainModule) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 5 }}>\n        <Paper sx={{ p: 4, textAlign: 'center' }}>\n          <Typography variant=\"h4\" gutterBottom>\n            Module Montagne\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            Ce module est actuellement désactivé. Veuillez contacter l'administrateur pour plus d'informations.\n          </Typography>\n        </Paper>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 3 }}>\n      <Suspense fallback={<LoadingFallback type=\"content\" />}>\n        <Routes>\n          <Route index element={<Navigate to=\"/mountain/dashboard\" replace />} />\n          <Route path=\"dashboard\" element={<MountainDashboard />} />\n          <Route path=\"training\" element={<ColSpecificTraining />} />\n          <Route path=\"nutrition\" element={<ColSpecificNutrition />} />\n          <Route path=\"regional\" element={<RegionalTrainingPlans selectedRegion=\"alpes\" />} />\n          <Route path=\"regional/:region\" element={\n            <RegionalTrainingPlanWithParams />\n          } />\n          <Route path=\"*\" element={<Navigate to=\"/mountain/dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </Container>\n  );\n}\n\n// Composant d'adaptation pour passer les paramètres d'URL à RegionalTrainingPlans\nfunction RegionalTrainingPlanWithParams() {\n  const { region } = useParams();\n  return <RegionalTrainingPlans selectedRegion={region || 'alpes'} />;\n}\n\nexport default MountainHub;\n","import { useState, useEffect } from 'react';\n\n/**\n * Hook personnalisé pour gérer les drapeaux de fonctionnalités (feature flags)\n * Permet d'activer/désactiver certaines fonctionnalités de manière dynamique\n * \n * @param {string} flagName - Nom du drapeau de fonctionnalité à vérifier\n * @param {boolean} defaultValue - Valeur par défaut si le drapeau n'est pas défini\n * @returns {boolean} - État actuel du drapeau de fonctionnalité\n */\nconst useFeatureFlags = (flagName, defaultValue = false) => {\n  const [isEnabled, setIsEnabled] = useState(defaultValue);\n\n  useEffect(() => {\n    const checkFeatureFlag = async () => {\n      try {\n        // En environnement de production, on pourrait récupérer ces valeurs d'une API\n        // Pour l'instant, on utilise des valeurs statiques ou celles stockées en localStorage\n        const featureFlags = {\n          // Fonctionnalités principales\n          'map-3d-visualization': true,\n          'weather-integration': true,\n          'ftp-calculator': true,\n          'hiit-module': true,\n          \n          // Fonctionnalités en cours de développement\n          'strava-integration': true,\n          'advanced-analytics': true,\n          'nutrition-planner': true,\n          'community-challenges': true,\n          \n          // Fonctionnalités expérimentales\n          'route-comparison': true,\n          'ai-training-suggestions': false,\n          'virtual-reality-preview': false,\n          'live-group-rides': false\n        };\n\n        // Vérifier si la fonctionnalité est activée\n        const storedValue = localStorage.getItem(`feature-flag-${flagName}`);\n        \n        // Priorité au localStorage, puis aux valeurs statiques, puis à la valeur par défaut\n        if (storedValue !== null) {\n          setIsEnabled(storedValue === 'true');\n        } else if (flagName in featureFlags) {\n          setIsEnabled(featureFlags[flagName]);\n          // Stocker la valeur pour utilisation future\n          localStorage.setItem(`feature-flag-${flagName}`, featureFlags[flagName]);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la vérification des feature flags:', error);\n        setIsEnabled(defaultValue);\n      }\n    };\n\n    checkFeatureFlag();\n  }, [flagName, defaultValue]);\n\n  return isEnabled;\n};\n\n// Exporter comme default export pour maintenir la compatibilité avec le code existant\nexport default useFeatureFlags;\n\n// Exporter également comme named export pour maintenir la compatibilité avec les imports nommés\nexport { useFeatureFlags };\n"],"names":["MountainDashboard","lazy","ColSpecificTraining","ColSpecificNutrition","RegionalTrainingPlans","RegionalTrainingPlanWithParams","region","useParams","_jsx","selectedRegion","enableMountainModule","useFeatureFlags","Container","maxWidth","sx","py","children","Suspense","fallback","LoadingFallback","type","_jsxs","Routes","Route","index","element","Navigate","to","replace","path","Paper","p","textAlign","Typography","variant","gutterBottom","color","flagName","defaultValue","arguments","length","undefined","isEnabled","setIsEnabled","useState","useEffect","async","featureFlags","storedValue","localStorage","getItem","setItem","error","console","checkFeatureFlag"],"sourceRoot":""}