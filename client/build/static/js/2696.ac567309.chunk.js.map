{"version":3,"file":"static/js/2696.ac567309.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Timeline.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Share.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/FavoriteBorder.js","contexts/ChallengeContext.js","components/challenges/components/ColSearchTab.js","components/challenges/components/MyChallenge.js","components/challenges/components/PredefinedChallenges.js","components/challenges/components/UserChallenges.js","../node_modules/@mui/icons-material/esm/Cloud.js","../node_modules/@mui/icons-material/esm/Download.js","components/challenges/components/ColDetailsDialog.js","components/challenges/components/ScheduleDialog.js","components/challenges/SevenMajorsChallenge.js","../node_modules/@mui/icons-material/esm/Public.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2\"\n}), 'Timeline');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92\"\n}), 'Share');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3m-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05\"\n}), 'FavoriteBorder');","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\n\n// Création du contexte\nconst ChallengeContext = createContext();\n\n// Actions types\nconst ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  SET_ALL_COLS: 'SET_ALL_COLS',\n  SET_TOTAL_ITEMS: 'SET_TOTAL_ITEMS',\n  SET_FILTERS: 'SET_FILTERS',\n  SET_PAGE: 'SET_PAGE',\n  SELECT_COL: 'SELECT_COL',\n  REMOVE_COL: 'REMOVE_COL',\n  SET_CHALLENGE_NAME: 'SET_CHALLENGE_NAME',\n  SET_IS_PUBLIC: 'SET_IS_PUBLIC',\n  SET_ACTIVE_TAB: 'SET_ACTIVE_TAB',\n  SET_PREDEFINED_CHALLENGES: 'SET_PREDEFINED_CHALLENGES',\n  SET_USER_CHALLENGES: 'SET_USER_CHALLENGES',\n  SET_SELECTED_COL: 'SET_SELECTED_COL',\n  SET_SHOW_COL_DETAILS: 'SET_SHOW_COL_DETAILS',\n  SET_WEATHER_DATA: 'SET_WEATHER_DATA',\n  SET_USER_COMPLETED_COLS: 'SET_USER_COMPLETED_COLS',\n  SET_SCHEDULED_ASCENTS: 'SET_SCHEDULED_ASCENTS',\n  SET_SCHEDULE_DIALOG: 'SET_SCHEDULE_DIALOG',\n  ADD_SCHEDULED_ASCENT: 'ADD_SCHEDULED_ASCENT',\n  SET_COMMUNITY_FILTER: 'SET_COMMUNITY_FILTER',\n  SET_COMMUNITY_SEARCH: 'SET_COMMUNITY_SEARCH',\n  SET_COMMUNITY_LIKES: 'SET_COMMUNITY_LIKES',\n  TOGGLE_LIKE_CHALLENGE: 'TOGGLE_LIKE_CHALLENGE',\n  LOAD_CHALLENGE: 'LOAD_CHALLENGE',\n  CLEAR_SELECTION: 'CLEAR_SELECTION',\n  SET_NOTIFICATION: 'SET_NOTIFICATION',\n  CLEAR_NOTIFICATION: 'CLEAR_NOTIFICATION',\n  SET_EXPORT_FORMAT: 'SET_EXPORT_FORMAT',\n};\n\n// État initial\nconst initialState = {\n  loading: false,\n  error: null,\n  allCols: [],\n  totalItems: 0,\n  filters: {\n    region: '',\n    country: '',\n    minAltitude: '',\n    maxAltitude: '',\n    difficulty: '',\n    searchQuery: ''\n  },\n  page: 1,\n  rowsPerPage: 20,\n  selectedCols: [],\n  challengeName: \"Mon défi des 7 Majeurs\",\n  isPublic: false,\n  activeTab: 0,\n  predefinedChallenges: [],\n  userChallenges: [],\n  selectedCol: null,\n  showColDetails: false,\n  weatherData: {},\n  showScheduleDialog: false,\n  scheduleColId: null,\n  scheduleColName: '',\n  communityFilter: 'recent',\n  communitySearch: '',\n  communityLikes: {},\n  userCompletedCols: [],\n  scheduledAscents: {},\n  exportFormat: 'gpx',\n  notification: null\n};\n\n// Reducer pour gérer les actions\nconst challengeReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, loading: action.payload };\n    \n    case ACTIONS.SET_ERROR:\n      return { ...state, error: action.payload, loading: false };\n    \n    case ACTIONS.SET_ALL_COLS:\n      return { ...state, allCols: action.payload, loading: false };\n    \n    case ACTIONS.SET_TOTAL_ITEMS:\n      return { ...state, totalItems: action.payload };\n    \n    case ACTIONS.SET_FILTERS:\n      return { \n        ...state, \n        filters: { ...state.filters, ...action.payload },\n        page: 1 // Réinitialiser la page lors du changement de filtres\n      };\n    \n    case ACTIONS.SET_PAGE:\n      return { ...state, page: action.payload };\n    \n    case ACTIONS.SELECT_COL:\n      // Éviter les doublons et limiter à 7 cols\n      if (state.selectedCols.length >= 7 || \n          state.selectedCols.some(col => col.id === action.payload.id)) {\n        return state;\n      }\n      return { \n        ...state, \n        selectedCols: [...state.selectedCols, action.payload] \n      };\n    \n    case ACTIONS.REMOVE_COL:\n      return { \n        ...state, \n        selectedCols: state.selectedCols.filter(col => col.id !== action.payload)\n      };\n    \n    case ACTIONS.SET_CHALLENGE_NAME:\n      return { ...state, challengeName: action.payload };\n    \n    case ACTIONS.SET_IS_PUBLIC:\n      return { ...state, isPublic: action.payload };\n    \n    case ACTIONS.SET_ACTIVE_TAB:\n      return { ...state, activeTab: action.payload };\n    \n    case ACTIONS.SET_PREDEFINED_CHALLENGES:\n      return { ...state, predefinedChallenges: action.payload, loading: false };\n    \n    case ACTIONS.SET_USER_CHALLENGES:\n      return { ...state, userChallenges: action.payload, loading: false };\n    \n    case ACTIONS.SET_SELECTED_COL:\n      return { ...state, selectedCol: action.payload };\n    \n    case ACTIONS.SET_SHOW_COL_DETAILS:\n      return { ...state, showColDetails: action.payload };\n    \n    case ACTIONS.SET_WEATHER_DATA:\n      return { \n        ...state, \n        weatherData: { \n          ...state.weatherData, \n          [action.payload.colId]: action.payload.data \n        } \n      };\n    \n    case ACTIONS.SET_USER_COMPLETED_COLS:\n      return { ...state, userCompletedCols: action.payload };\n    \n    case ACTIONS.SET_SCHEDULED_ASCENTS:\n      return { ...state, scheduledAscents: action.payload };\n    \n    case ACTIONS.SET_SCHEDULE_DIALOG:\n      return { \n        ...state, \n        showScheduleDialog: action.payload.show,\n        scheduleColId: action.payload.colId || state.scheduleColId,\n        scheduleColName: action.payload.colName || state.scheduleColName\n      };\n    \n    case ACTIONS.ADD_SCHEDULED_ASCENT:\n      return {\n        ...state,\n        scheduledAscents: {\n          ...state.scheduledAscents,\n          [action.payload.colId]: action.payload.date\n        }\n      };\n    \n    case ACTIONS.SET_COMMUNITY_FILTER:\n      return { ...state, communityFilter: action.payload };\n    \n    case ACTIONS.SET_COMMUNITY_SEARCH:\n      return { ...state, communitySearch: action.payload };\n    \n    case ACTIONS.SET_COMMUNITY_LIKES:\n      return { ...state, communityLikes: action.payload };\n    \n    case ACTIONS.TOGGLE_LIKE_CHALLENGE:\n      return {\n        ...state,\n        communityLikes: {\n          ...state.communityLikes,\n          [action.payload]: !state.communityLikes[action.payload]\n        }\n      };\n    \n    case ACTIONS.LOAD_CHALLENGE:\n      return {\n        ...state,\n        challengeName: action.payload.name,\n        selectedCols: action.payload.cols,\n        isPublic: action.payload.isPublic || false,\n        activeTab: 1 // Basculer vers l'onglet \"Mon défi\"\n      };\n    \n    case ACTIONS.CLEAR_SELECTION:\n      return {\n        ...state,\n        selectedCols: [],\n        challengeName: \"Mon défi des 7 Majeurs\",\n        isPublic: false\n      };\n    \n    case ACTIONS.SET_NOTIFICATION:\n      return { ...state, notification: action.payload };\n    \n    case ACTIONS.CLEAR_NOTIFICATION:\n      return { ...state, notification: null };\n    \n    case ACTIONS.SET_EXPORT_FORMAT:\n      return { ...state, exportFormat: action.payload };\n    \n    default:\n      return state;\n  }\n};\n\n// Provider du contexte\nexport const ChallengeProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(challengeReducer, initialState);\n  const { isAuthenticated, user } = useAuth();\n  \n  // Fonctions d'effet de bord\n  \n  // Charger les données des cols avec pagination\n  const fetchColsData = async () => {\n    try {\n      dispatch({ type: ACTIONS.SET_LOADING, payload: true });\n      \n      const response = await axios.get('/api/european-cols', {\n        params: {\n          page: state.page,\n          limit: state.rowsPerPage,\n          search: state.filters.searchQuery,\n          region: state.filters.region,\n          country: state.filters.country,\n          minAltitude: state.filters.minAltitude,\n          maxAltitude: state.filters.maxAltitude,\n          difficulty: state.filters.difficulty\n        }\n      });\n      \n      dispatch({ type: ACTIONS.SET_ALL_COLS, payload: response.data.items });\n      dispatch({ type: ACTIONS.SET_TOTAL_ITEMS, payload: response.data.total });\n    } catch (err) {\n      console.error('Erreur lors du chargement des cols:', err);\n      dispatch({ \n        type: ACTIONS.SET_ERROR, \n        payload: 'Impossible de charger les données des cols. Veuillez réessayer plus tard.' \n      });\n    }\n  };\n  \n  // Charger les défis prédéfinis\n  const fetchPredefinedChallenges = async () => {\n    try {\n      dispatch({ type: ACTIONS.SET_LOADING, payload: true });\n      \n      const response = await axios.get('/api/predefined-challenges');\n      dispatch({ type: ACTIONS.SET_PREDEFINED_CHALLENGES, payload: response.data });\n    } catch (err) {\n      console.error('Erreur lors du chargement des défis prédéfinis:', err);\n      dispatch({ \n        type: ACTIONS.SET_ERROR, \n        payload: 'Impossible de charger les défis prédéfinis. Veuillez réessayer plus tard.' \n      });\n    }\n  };\n  \n  // Charger les défis de l'utilisateur\n  const fetchUserChallenges = async () => {\n    if (!isAuthenticated) return;\n    \n    try {\n      dispatch({ type: ACTIONS.SET_LOADING, payload: true });\n      \n      const response = await axios.get('/api/user-challenges');\n      dispatch({ type: ACTIONS.SET_USER_CHALLENGES, payload: response.data });\n    } catch (err) {\n      console.error('Erreur lors du chargement des défis utilisateur:', err);\n      dispatch({ \n        type: ACTIONS.SET_ERROR, \n        payload: 'Impossible de charger vos défis. Veuillez réessayer plus tard.' \n      });\n    }\n  };\n  \n  // Charger les cols complétés par l'utilisateur\n  const fetchCompletedCols = async () => {\n    if (!isAuthenticated) return;\n    \n    try {\n      const response = await axios.get('/api/user-completed-cols');\n      dispatch({ type: ACTIONS.SET_USER_COMPLETED_COLS, payload: response.data.map(item => item.colId) });\n    } catch (err) {\n      console.error('Erreur lors du chargement des cols complétés:', err);\n    }\n  };\n  \n  // Charger les ascensions programmées\n  const fetchScheduledAscents = async () => {\n    if (!isAuthenticated) return;\n    \n    try {\n      const response = await axios.get('/api/scheduled-ascents');\n      \n      // Transformer le tableau en objet { colId: date }\n      const scheduledMap = response.data.reduce((acc, item) => {\n        acc[item.colId] = item.date;\n        return acc;\n      }, {});\n      \n      dispatch({ type: ACTIONS.SET_SCHEDULED_ASCENTS, payload: scheduledMap });\n    } catch (err) {\n      console.error('Erreur lors du chargement des ascensions programmées:', err);\n    }\n  };\n  \n  // Sauvegarder un défi personnalisé\n  const saveChallenge = async () => {\n    if (!isAuthenticated || state.selectedCols.length === 0) return;\n    \n    try {\n      dispatch({ type: ACTIONS.SET_LOADING, payload: true });\n      \n      const challengeData = {\n        name: state.challengeName,\n        cols: state.selectedCols.map(col => col.id),\n        isPublic: state.isPublic\n      };\n      \n      await axios.post('/api/user-challenges', challengeData);\n      \n      // Rafraîchir la liste des défis\n      await fetchUserChallenges();\n      \n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Défi sauvegardé avec succès!',\n          severity: 'success'\n        }\n      });\n    } catch (err) {\n      console.error('Erreur lors de la sauvegarde du défi:', err);\n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Impossible de sauvegarder le défi. Veuillez réessayer plus tard.',\n          severity: 'error'\n        } \n      });\n    } finally {\n      dispatch({ type: ACTIONS.SET_LOADING, payload: false });\n    }\n  };\n  \n  // Marquer un col comme complété\n  const markColAsCompleted = async (colId) => {\n    if (!isAuthenticated) return;\n    \n    try {\n      await axios.post('/api/user-completed-cols', { colId });\n      \n      // Mettre à jour la liste des cols complétés\n      dispatch({ \n        type: ACTIONS.SET_USER_COMPLETED_COLS, \n        payload: [...state.userCompletedCols, colId]\n      });\n      \n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Col marqué comme conquis!',\n          severity: 'success'\n        }\n      });\n    } catch (err) {\n      console.error('Erreur lors du marquage du col:', err);\n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Impossible de marquer le col comme complété. Veuillez réessayer plus tard.',\n          severity: 'error'\n        } \n      });\n    }\n  };\n  \n  // Planifier une ascension\n  const scheduleAscent = async (date) => {\n    if (!isAuthenticated || !state.scheduleColId) return;\n    \n    try {\n      await axios.post('/api/scheduled-ascents', {\n        colId: state.scheduleColId,\n        date: date\n      });\n      \n      // Mettre à jour la liste des ascensions programmées\n      dispatch({ \n        type: ACTIONS.ADD_SCHEDULED_ASCENT, \n        payload: {\n          colId: state.scheduleColId,\n          date: date\n        }\n      });\n      \n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Ascension programmée!',\n          severity: 'success'\n        }\n      });\n      \n      // Fermer la boîte de dialogue\n      dispatch({ \n        type: ACTIONS.SET_SCHEDULE_DIALOG, \n        payload: {\n          show: false\n        }\n      });\n    } catch (err) {\n      console.error('Erreur lors de la programmation de l\\'ascension:', err);\n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Impossible de programmer l\\'ascension. Veuillez réessayer plus tard.',\n          severity: 'error'\n        } \n      });\n    }\n  };\n  \n  // Récupérer les données météo pour un col\n  const fetchWeatherData = async (colId, lat, lng) => {\n    try {\n      const response = await axios.get(`/api/weather?lat=${lat}&lng=${lng}`);\n      \n      dispatch({ \n        type: ACTIONS.SET_WEATHER_DATA, \n        payload: {\n          colId,\n          data: response.data\n        }\n      });\n    } catch (err) {\n      console.error('Erreur lors de la récupération des données météo:', err);\n    }\n  };\n  \n  // Supprimer un défi utilisateur\n  const deleteChallenge = async (challengeId) => {\n    if (!isAuthenticated) return;\n    \n    try {\n      await axios.delete(`/api/user-challenges/${challengeId}`);\n      \n      // Rafraîchir la liste des défis\n      await fetchUserChallenges();\n      \n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Défi supprimé avec succès!',\n          severity: 'success'\n        }\n      });\n    } catch (err) {\n      console.error('Erreur lors de la suppression du défi:', err);\n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Impossible de supprimer le défi. Veuillez réessayer plus tard.',\n          severity: 'error'\n        } \n      });\n    }\n  };\n  \n  // \"Like\" un défi communautaire\n  const likeChallenge = async (challengeId) => {\n    if (!isAuthenticated) return;\n    \n    try {\n      // Inverser l'état du like\n      const isLiked = state.communityLikes[challengeId];\n      \n      await axios.post(`/api/challenges/${challengeId}/like`, { like: !isLiked });\n      \n      dispatch({ type: ACTIONS.TOGGLE_LIKE_CHALLENGE, payload: challengeId });\n    } catch (err) {\n      console.error('Erreur lors du like/unlike:', err);\n    }\n  };\n  \n  // Exporter un parcours\n  const exportTrack = async (colId, format) => {\n    try {\n      const response = await axios.get(`/api/cols/${colId}/export?format=${format}`, {\n        responseType: 'blob'\n      });\n      \n      // Créer un URL pour le blob\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      \n      // Créer un lien temporaire\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `col_${colId}.${format}`);\n      \n      // Ajouter au document\n      document.body.appendChild(link);\n      \n      // Cliquer sur le lien\n      link.click();\n      \n      // Nettoyer\n      link.parentNode.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error('Erreur lors de l\\'exportation du parcours:', err);\n      dispatch({ \n        type: ACTIONS.SET_NOTIFICATION, \n        payload: {\n          message: 'Impossible d\\'exporter le parcours. Veuillez réessayer plus tard.',\n          severity: 'error'\n        } \n      });\n    }\n  };\n  \n  // Effets pour le chargement initial des données\n  useEffect(() => {\n    fetchColsData();\n  }, [state.page, state.rowsPerPage, state.filters]);\n  \n  useEffect(() => {\n    fetchPredefinedChallenges();\n  }, []);\n  \n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserChallenges();\n      fetchCompletedCols();\n      fetchScheduledAscents();\n    }\n  }, [isAuthenticated]);\n  \n  // Préparer l'objet de valeur du contexte\n  const value = {\n    ...state,\n    dispatch,\n    actions: ACTIONS,\n    \n    // Actions d'effet de bord\n    fetchColsData,\n    fetchPredefinedChallenges,\n    fetchUserChallenges,\n    fetchCompletedCols,\n    fetchScheduledAscents,\n    fetchWeatherData,\n    saveChallenge,\n    markColAsCompleted,\n    scheduleAscent,\n    deleteChallenge,\n    likeChallenge,\n    exportTrack,\n    \n    // Actions simplifiées pour les composants\n    selectCol: (col) => dispatch({ type: ACTIONS.SELECT_COL, payload: col }),\n    removeCol: (colId) => dispatch({ type: ACTIONS.REMOVE_COL, payload: colId }),\n    setChallengeName: (name) => dispatch({ type: ACTIONS.SET_CHALLENGE_NAME, payload: name }),\n    setIsPublic: (isPublic) => dispatch({ type: ACTIONS.SET_IS_PUBLIC, payload: isPublic }),\n    setActiveTab: (tab) => dispatch({ type: ACTIONS.SET_ACTIVE_TAB, payload: tab }),\n    viewColDetails: (col) => {\n      dispatch({ type: ACTIONS.SET_SELECTED_COL, payload: col });\n      dispatch({ type: ACTIONS.SET_SHOW_COL_DETAILS, payload: true });\n      if (col && col.latitude && col.longitude) {\n        fetchWeatherData(col.id, col.latitude, col.longitude);\n      }\n    },\n    closeColDetails: () => dispatch({ type: ACTIONS.SET_SHOW_COL_DETAILS, payload: false }),\n    showScheduleDialog: (colId, colName) => dispatch({ \n      type: ACTIONS.SET_SCHEDULE_DIALOG, \n      payload: { show: true, colId, colName } \n    }),\n    closeScheduleDialog: () => dispatch({ \n      type: ACTIONS.SET_SCHEDULE_DIALOG, \n      payload: { show: false } \n    }),\n    setCommunityFilter: (filter) => dispatch({ type: ACTIONS.SET_COMMUNITY_FILTER, payload: filter }),\n    setCommunitySearch: (search) => dispatch({ type: ACTIONS.SET_COMMUNITY_SEARCH, payload: search }),\n    loadChallenge: (challenge) => dispatch({ type: ACTIONS.LOAD_CHALLENGE, payload: challenge }),\n    clearSelection: () => dispatch({ type: ACTIONS.CLEAR_SELECTION }),\n    setNotification: (notification) => dispatch({ type: ACTIONS.SET_NOTIFICATION, payload: notification }),\n    clearNotification: () => dispatch({ type: ACTIONS.CLEAR_NOTIFICATION }),\n    setExportFormat: (format) => dispatch({ type: ACTIONS.SET_EXPORT_FORMAT, payload: format }),\n    setPage: (page) => dispatch({ type: ACTIONS.SET_PAGE, payload: page }),\n    setFilters: (filters) => dispatch({ type: ACTIONS.SET_FILTERS, payload: filters })\n  };\n  \n  return (\n    <ChallengeContext.Provider value={value}>\n      {children}\n    </ChallengeContext.Provider>\n  );\n};\n\n// Hook custom pour utiliser le contexte\nexport const useChallenge = () => {\n  const context = useContext(ChallengeContext);\n  if (context === undefined) {\n    throw new Error('useChallenge must be used within a ChallengeProvider');\n  }\n  return context;\n};\n\nexport default ChallengeContext;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Chip,\n  CircularProgress,\n  Alert,\n  Paper,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  FilterList as FilterIcon,\n  Add as AddIcon,\n  Visibility as VisibilityIcon,\n  Public as GlobeIcon,\n  Terrain as TerrainIcon\n} from '@mui/icons-material';\n\n/**\n * Composant pour la recherche et le filtrage des cols\n */\nconst ColSearchTab = ({ \n  cols, \n  loading, \n  filters, \n  onFilterChange, \n  onResetFilters,\n  onSelectCol,\n  onViewDetails,\n  selectedColsIds\n}) => {\n  const { t } = useTranslation();\n  const [filteredResults, setFilteredResults] = useState([]);\n  \n  // Mémoriser les pays et régions uniques pour les filtres\n  const uniqueCountries = useMemo(() => {\n    const countries = [...new Set(cols.map(col => col.country))];\n    return countries.sort();\n  }, [cols]);\n  \n  const uniqueRegions = useMemo(() => {\n    const regions = [...new Set(cols.map(col => col.region))];\n    return regions.sort();\n  }, [cols]);\n  \n  // Appliquer les filtres aux cols\n  useEffect(() => {\n    let results = [...cols];\n    \n    // Filtrer par région\n    if (filters.region) {\n      results = results.filter(col => col.region === filters.region);\n    }\n    \n    // Filtrer par pays\n    if (filters.country) {\n      results = results.filter(col => col.country === filters.country);\n    }\n    \n    // Filtrer par altitude minimale\n    if (filters.minAltitude) {\n      results = results.filter(col => col.altitude >= parseInt(filters.minAltitude));\n    }\n    \n    // Filtrer par altitude maximale\n    if (filters.maxAltitude) {\n      results = results.filter(col => col.altitude <= parseInt(filters.maxAltitude));\n    }\n    \n    // Filtrer par difficulté\n    if (filters.difficulty) {\n      results = results.filter(col => col.difficulty === filters.difficulty);\n    }\n    \n    // Filtrer par recherche textuelle\n    if (filters.searchQuery) {\n      const query = filters.searchQuery.toLowerCase();\n      results = results.filter(col => \n        col.name.toLowerCase().includes(query) || \n        col.region.toLowerCase().includes(query) ||\n        col.country.toLowerCase().includes(query)\n      );\n    }\n    \n    setFilteredResults(results);\n  }, [cols, filters]);\n  \n  // Fonction pour créer le composant de carte du col\n  const renderColCard = (col) => {\n    const isSelected = selectedColsIds.includes(col.id);\n    \n    return (\n      <Card elevation={3} key={col.id} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <CardMedia\n          component=\"img\"\n          height=\"140\"\n          image={col.image || '/images/cols/placeholder.jpg'}\n          alt={col.name}\n          sx={{ objectFit: 'cover' }}\n        />\n        <CardContent sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h6\" gutterBottom component=\"div\" noWrap>\n            {col.name}\n          </Typography>\n          \n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n            <GlobeIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {col.region}, {col.country}\n            </Typography>\n          </Box>\n          \n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <TerrainIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {col.altitude}m • {col.length}km • {col.gradient}%\n            </Typography>\n          </Box>\n          \n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n            <Chip \n              size=\"small\" \n              label={`${t('cols.difficulty')}: ${col.difficulty}`} \n              color={\n                col.difficulty === 'HC' ? 'error' :\n                col.difficulty === '1' ? 'warning' :\n                col.difficulty === '2' ? 'success' :\n                col.difficulty === '3' ? 'info' : 'default'\n              }\n            />\n            \n            {col.isPopular && (\n              <Chip \n                size=\"small\" \n                label={t('cols.popular')} \n                color=\"primary\" \n              />\n            )}\n          </Box>\n        </CardContent>\n        \n        <CardActions sx={{ justifyContent: 'space-between', p: 2 }}>\n          <Tooltip title={t('common.view_details')}>\n            <IconButton \n              size=\"small\" \n              color=\"primary\"\n              onClick={() => onViewDetails(col)}\n            >\n              <VisibilityIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Button\n            size=\"small\"\n            variant={isSelected ? \"outlined\" : \"contained\"}\n            color={isSelected ? \"secondary\" : \"primary\"}\n            startIcon={<AddIcon />}\n            onClick={() => onSelectCol(col)}\n            disabled={isSelected || selectedColsIds.length >= 7}\n          >\n            {isSelected ? t('challenges.seven_majors.added') : t('challenges.seven_majors.add_to_challenge')}\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  };\n  \n  return (\n    <Box>\n      {/* Filtres de recherche */}\n      <Paper elevation={1} sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} sm={4} md={3}>\n            <TextField\n              fullWidth\n              label={t('challenges.search')}\n              name=\"searchQuery\"\n              value={filters.searchQuery}\n              onChange={onFilterChange}\n              InputProps={{\n                startAdornment: <SearchIcon sx={{ color: 'action.active', mr: 1 }} />,\n              }}\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={4} md={3}>\n            <FormControl fullWidth>\n              <InputLabel id=\"country-select-label\">{t('cols.country')}</InputLabel>\n              <Select\n                labelId=\"country-select-label\"\n                name=\"country\"\n                value={filters.country}\n                label={t('cols.country')}\n                onChange={onFilterChange}\n              >\n                <MenuItem value=\"\">\n                  <em>{t('common.all')}</em>\n                </MenuItem>\n                {uniqueCountries.map(country => (\n                  <MenuItem key={country} value={country}>{country}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} sm={4} md={3}>\n            <FormControl fullWidth>\n              <InputLabel id=\"region-select-label\">{t('cols.region')}</InputLabel>\n              <Select\n                labelId=\"region-select-label\"\n                name=\"region\"\n                value={filters.region}\n                label={t('cols.region')}\n                onChange={onFilterChange}\n              >\n                <MenuItem value=\"\">\n                  <em>{t('common.all')}</em>\n                </MenuItem>\n                {uniqueRegions.map(region => (\n                  <MenuItem key={region} value={region}>{region}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} sm={4} md={3}>\n            <FormControl fullWidth>\n              <InputLabel id=\"difficulty-select-label\">{t('cols.difficulty')}</InputLabel>\n              <Select\n                labelId=\"difficulty-select-label\"\n                name=\"difficulty\"\n                value={filters.difficulty}\n                label={t('cols.difficulty')}\n                onChange={onFilterChange}\n              >\n                <MenuItem value=\"\">\n                  <em>{t('common.all')}</em>\n                </MenuItem>\n                <MenuItem value=\"HC\">HC</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} sm={4} md={2}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              label={t('cols.min_altitude')}\n              name=\"minAltitude\"\n              value={filters.minAltitude}\n              onChange={onFilterChange}\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={4} md={2}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              label={t('cols.max_altitude')}\n              name=\"maxAltitude\"\n              value={filters.maxAltitude}\n              onChange={onFilterChange}\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={4} md=\"auto\">\n            <Button\n              fullWidth\n              variant=\"outlined\"\n              color=\"secondary\"\n              startIcon={<FilterIcon />}\n              onClick={onResetFilters}\n            >\n              {t('common.reset_filters')}\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Résultats de recherche */}\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : filteredResults.length > 0 ? (\n        <Grid container spacing={3}>\n          {filteredResults.map(col => (\n            <Grid item key={col.id} xs={12} sm={6} md={4} lg={3}>\n              {renderColCard(col)}\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          {t('challenges.seven_majors.no_results')}\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default ColSearchTab;\n","import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Paper,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  IconButton,\n  Divider,\n  Tooltip,\n  LinearProgress,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Alert\n} from '@mui/material';\nimport {\n  Delete as DeleteIcon,\n  Visibility as VisibilityIcon,\n  Save as SaveIcon,\n  CheckCircle as CheckCircleIcon,\n  CalendarMonth as CalendarIcon,\n  EmojiEvents as TrophyIcon,\n  Terrain as TerrainIcon,\n  Share as ShareIcon,\n  Public as GlobeIcon,\n  StarRate as StarIcon\n} from '@mui/icons-material';\n\n/**\n * Composant pour afficher et gérer le défi de l'utilisateur\n */\nconst MyChallenge = ({ \n  selectedCols,\n  challengeName,\n  onChallengeTitleChange,\n  onRemoveCol,\n  onViewCol,\n  onSaveChallenge,\n  onMarkAsCompleted,\n  onScheduleAscent,\n  onShareChallenge,\n  isPublic,\n  onTogglePublic,\n  isAuthenticated,\n  completedCols,\n  scheduledAscents\n}) => {\n  const { t } = useTranslation();\n  \n  // Statistiques du défi\n  const stats = useMemo(() => {\n    if (!selectedCols || selectedCols.length === 0) return null;\n    \n    const totalAltitude = selectedCols.reduce((sum, col) => sum + col.altitude, 0);\n    const totalLength = selectedCols.reduce((sum, col) => sum + col.length, 0);\n    \n    // Calculer la difficulté moyenne (convertir en numérique)\n    const difficultyMap = { 'HC': 5, '1': 4, '2': 3, '3': 2, '4': 1 };\n    const totalDifficulty = selectedCols.reduce((sum, col) => {\n      return sum + (difficultyMap[col.difficulty] || 3);\n    }, 0);\n    const avgDifficulty = totalDifficulty / selectedCols.length;\n    \n    // Convertir la difficulté moyenne en catégorie\n    let avgDifficultyCategory;\n    if (avgDifficulty >= 4.5) avgDifficultyCategory = 'HC';\n    else if (avgDifficulty >= 3.5) avgDifficultyCategory = '1';\n    else if (avgDifficulty >= 2.5) avgDifficultyCategory = '2';\n    else if (avgDifficulty >= 1.5) avgDifficultyCategory = '3';\n    else avgDifficultyCategory = '4';\n    \n    return {\n      totalAltitude,\n      totalLength,\n      avgDifficulty: avgDifficultyCategory,\n      avgGradient: selectedCols.reduce((sum, col) => sum + col.gradient, 0) / selectedCols.length\n    };\n  }, [selectedCols]);\n  \n  // Calculer le pourcentage de complétion\n  const completionPercentage = useMemo(() => {\n    if (!selectedCols || selectedCols.length === 0) return 0;\n    const completed = selectedCols.filter(col => completedCols.includes(col.id)).length;\n    return (completed / selectedCols.length) * 100;\n  }, [selectedCols, completedCols]);\n  \n  return (\n    <Box>\n      {/* En-tête du défi */}\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n        <Grid container spacing={3} alignItems=\"center\">\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label={t('challenges.seven_majors.challenge_name')}\n              value={challengeName}\n              onChange={onChallengeTitleChange}\n              variant=\"outlined\"\n            />\n          </Grid>\n          \n          <Grid item xs={12} md={6}>\n            <Box sx={{ display: 'flex', justifyContent: { xs: 'flex-start', md: 'flex-end' }, gap: 2 }}>\n              {isAuthenticated && (\n                <>\n                  <FormControlLabel\n                    control={\n                      <Switch \n                        checked={isPublic} \n                        onChange={onTogglePublic} \n                        color=\"primary\"\n                      />\n                    }\n                    label={t('challenges.seven_majors.public_challenge')}\n                  />\n                  \n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<SaveIcon />}\n                    onClick={onSaveChallenge}\n                    disabled={selectedCols.length === 0}\n                  >\n                    {t('common.save')}\n                  </Button>\n                  \n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    startIcon={<ShareIcon />}\n                    onClick={onShareChallenge}\n                    disabled={selectedCols.length === 0}\n                  >\n                    {t('common.share')}\n                  </Button>\n                </>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Progression du défi */}\n      {selectedCols.length > 0 && (\n        <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <TrophyIcon sx={{ verticalAlign: 'middle', mr: 1 }} />\n              {t('challenges.seven_majors.progress')}\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={completionPercentage} \n              color=\"success\"\n              sx={{ height: 10, borderRadius: 5 }}\n            />\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n              {t('challenges.seven_majors.completed')}: {selectedCols.filter(col => completedCols.includes(col.id)).length}/{selectedCols.length}\n            </Typography>\n          </Box>\n          \n          {stats && (\n            <Grid container spacing={2} sx={{ mt: 2 }}>\n              <Grid item xs={6} sm={3}>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {t('cols.total_altitude')}\n                </Typography>\n                <Typography variant=\"h6\">\n                  {stats.totalAltitude} m\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6} sm={3}>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {t('cols.total_length')}\n                </Typography>\n                <Typography variant=\"h6\">\n                  {stats.totalLength} km\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6} sm={3}>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {t('cols.avg_difficulty')}\n                </Typography>\n                <Typography variant=\"h6\">\n                  {stats.avgDifficulty}\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6} sm={3}>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {t('cols.avg_gradient')}\n                </Typography>\n                <Typography variant=\"h6\">\n                  {stats.avgGradient.toFixed(1)}%\n                </Typography>\n              </Grid>\n            </Grid>\n          )}\n        </Paper>\n      )}\n      \n      {/* Liste des cols sélectionnés */}\n      {selectedCols.length > 0 ? (\n        <Grid container spacing={3}>\n          {selectedCols.map(col => (\n            <Grid item key={col.id} xs={12} sm={6} md={4}>\n              <Card elevation={3}>\n                <CardMedia\n                  component=\"img\"\n                  height=\"140\"\n                  image={col.image || '/images/cols/placeholder.jpg'}\n                  alt={col.name}\n                  sx={{ \n                    objectFit: 'cover',\n                    filter: completedCols.includes(col.id) ? 'grayscale(0%)' : 'grayscale(40%)'\n                  }}\n                />\n                \n                {completedCols.includes(col.id) && (\n                  <Box\n                    sx={{\n                      position: 'absolute',\n                      top: 10,\n                      right: 10,\n                      bgcolor: 'success.main',\n                      color: 'white',\n                      borderRadius: '50%',\n                      width: 36,\n                      height: 36,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    <CheckCircleIcon />\n                  </Box>\n                )}\n                \n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    {col.name}\n                  </Typography>\n                  \n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                    <GlobeIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {col.region}, {col.country}\n                    </Typography>\n                  </Box>\n                  \n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                    <TerrainIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {col.altitude}m • {col.length}km • {col.gradient}%\n                    </Typography>\n                  </Box>\n                  \n                  {scheduledAscents[col.id] && (\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                      <CalendarIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'primary.main' }} />\n                      <Typography variant=\"body2\" color=\"primary.main\">\n                        {t('challenges.seven_majors.scheduled_for')}: {new Date(scheduledAscents[col.id]).toLocaleDateString()}\n                      </Typography>\n                    </Box>\n                  )}\n                </CardContent>\n                \n                <CardActions sx={{ justifyContent: 'space-between', p: 2 }}>\n                  <Box>\n                    <Tooltip title={t('common.view_details')}>\n                      <IconButton \n                        size=\"small\" \n                        color=\"primary\"\n                        onClick={() => onViewCol(col)}\n                      >\n                        <VisibilityIcon />\n                      </IconButton>\n                    </Tooltip>\n                    \n                    <Tooltip title={t('common.remove')}>\n                      <IconButton \n                        size=\"small\" \n                        color=\"error\"\n                        onClick={() => onRemoveCol(col.id)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                  \n                  <Box>\n                    {isAuthenticated && (\n                      <>\n                        <Button\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          startIcon={<CalendarIcon />}\n                          onClick={() => onScheduleAscent(col.id)}\n                          sx={{ mr: 1 }}\n                        >\n                          {t('challenges.seven_majors.schedule')}\n                        </Button>\n                        \n                        <Button\n                          size=\"small\"\n                          variant=\"contained\"\n                          color={completedCols.includes(col.id) ? \"success\" : \"primary\"}\n                          startIcon={completedCols.includes(col.id) ? <CheckCircleIcon /> : null}\n                          onClick={() => onMarkAsCompleted(col.id)}\n                        >\n                          {completedCols.includes(col.id) \n                            ? t('challenges.seven_majors.completed') \n                            : t('challenges.seven_majors.mark_completed')}\n                        </Button>\n                      </>\n                    )}\n                  </Box>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n          \n          {/* Cases restantes pour atteindre 7 cols */}\n          {Array.from({ length: Math.max(0, 7 - selectedCols.length) }).map((_, index) => (\n            <Grid item key={`empty-${index}`} xs={12} sm={6} md={4}>\n              <Paper \n                elevation={1} \n                sx={{ \n                  height: '100%', \n                  minHeight: 320, \n                  display: 'flex', \n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  p: 3,\n                  border: '2px dashed',\n                  borderColor: 'divider'\n                }}\n              >\n                <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom align=\"center\">\n                  {t('challenges.seven_majors.add_more_cols')}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                  {t('challenges.seven_majors.cols_remaining', { count: 7 - selectedCols.length })}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          {t('challenges.seven_majors.empty_challenge')}\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default MyChallenge;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Button,\n  Chip,\n  IconButton,\n  CircularProgress,\n  Alert,\n  Tooltip,\n  Divider\n} from '@mui/material';\nimport {\n  EmojiEvents as TrophyIcon,\n  Add as AddIcon,\n  Visibility as VisibilityIcon,\n  Public as GlobeIcon,\n  Terrain as TerrainIcon,\n  Star as StarIcon\n} from '@mui/icons-material';\n\n/**\n * Composant pour afficher et charger les défis prédéfinis\n */\nconst PredefinedChallenges = ({ \n  challenges, \n  loading, \n  error, \n  onLoadChallenge,\n  onViewColDetails\n}) => {\n  const { t } = useTranslation();\n  \n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mt: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n  \n  if (!challenges || challenges.length === 0) {\n    return (\n      <Alert severity=\"info\" sx={{ mt: 2 }}>\n        {t('challenges.seven_majors.no_predefined')}\n      </Alert>\n    );\n  }\n  \n  return (\n    <Box>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        {t('challenges.seven_majors.predefined_intro')}\n      </Typography>\n      \n      <Grid container spacing={3} sx={{ mt: 2 }}>\n        {challenges.map(challenge => (\n          <Grid item key={challenge.id} xs={12} md={6}>\n            <Card elevation={3}>\n              <CardMedia\n                component=\"img\"\n                height=\"160\"\n                image={challenge.image || '/images/challenges/placeholder.jpg'}\n                alt={challenge.name}\n                sx={{ objectFit: 'cover' }}\n              />\n              \n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <TrophyIcon sx={{ mr: 1, color: 'primary.main' }} />\n                  <Typography variant=\"h5\">\n                    {challenge.name}\n                  </Typography>\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                  {challenge.description}\n                </Typography>\n                \n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('challenges.seven_majors.difficulty')}:\n                  </Typography>\n                  <Chip \n                    label={challenge.difficulty} \n                    color={\n                      challenge.difficulty === 'Expert' ? 'error' :\n                      challenge.difficulty === 'Avancé' ? 'warning' :\n                      challenge.difficulty === 'Intermédiaire' ? 'success' : 'info'\n                    }\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Divider sx={{ my: 2 }} />\n                \n                <Typography variant=\"subtitle2\" gutterBottom>\n                  {t('challenges.seven_majors.included_cols')}:\n                </Typography>\n                \n                <Grid container spacing={1}>\n                  {challenge.cols.map(col => (\n                    <Grid item key={col.id} xs={12}>\n                      <Box \n                        sx={{ \n                          display: 'flex', \n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          p: 1,\n                          bgcolor: 'background.paper',\n                          borderRadius: 1,\n                          '&:hover': { bgcolor: 'action.hover' }\n                        }}\n                      >\n                        <Box>\n                          <Typography variant=\"body2\">\n                            {col.name}\n                          </Typography>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            {col.region}, {col.country} • {col.altitude}m\n                          </Typography>\n                        </Box>\n                        \n                        <Tooltip title={t('common.view_details')}>\n                          <IconButton \n                            size=\"small\" \n                            onClick={() => onViewColDetails(col)}\n                          >\n                            <VisibilityIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      </Box>\n                    </Grid>\n                  ))}\n                </Grid>\n              </CardContent>\n              \n              <CardActions sx={{ justifyContent: 'flex-end', p: 2 }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={() => onLoadChallenge(challenge)}\n                >\n                  {t('challenges.seven_majors.load_challenge')}\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default PredefinedChallenges;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Button,\n  IconButton,\n  Chip,\n  CircularProgress,\n  Alert,\n  Tooltip,\n  TextField,\n  InputAdornment,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@mui/material';\nimport {\n  EmojiEvents as TrophyIcon,\n  Favorite as FavoriteIcon,\n  FavoriteBorder as FavoriteBorderIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Search as SearchIcon,\n  Public as GlobeIcon,\n  Visibility as VisibilityIcon,\n  Share as ShareIcon\n} from '@mui/icons-material';\n\n/**\n * Composant pour afficher et gérer les défis sauvegardés par l'utilisateur\n */\nconst UserChallenges = ({ \n  challenges, \n  loading, \n  onLoadChallenge,\n  onDeleteChallenge,\n  onLikeChallenge,\n  onViewColDetails,\n  onShareChallenge,\n  userLikes\n}) => {\n  const { t } = useTranslation();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showConfirmDelete, setShowConfirmDelete] = useState(false);\n  const [challengeToDelete, setChallengeToDelete] = useState(null);\n  \n  // Filtrer les défis en fonction de la recherche\n  const filteredChallenges = challenges.filter(challenge => \n    challenge.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    challenge.createdBy.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  \n  // Gérer la suppression d'un défi\n  const handleDeleteClick = (challenge) => {\n    setChallengeToDelete(challenge);\n    setShowConfirmDelete(true);\n  };\n  \n  const confirmDelete = () => {\n    if (challengeToDelete) {\n      onDeleteChallenge(challengeToDelete.id);\n      setChallengeToDelete(null);\n      setShowConfirmDelete(false);\n    }\n  };\n  \n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  if (!challenges || challenges.length === 0) {\n    return (\n      <Alert severity=\"info\" sx={{ mt: 2 }}>\n        {t('challenges.seven_majors.no_saved_challenges')}\n      </Alert>\n    );\n  }\n  \n  return (\n    <Box>\n      {/* Barre de recherche */}\n      <TextField\n        fullWidth\n        placeholder={t('common.search_challenges')}\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        sx={{ mb: 3 }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      \n      {filteredChallenges.length === 0 ? (\n        <Alert severity=\"info\">\n          {t('challenges.seven_majors.no_search_results')}\n        </Alert>\n      ) : (\n        <Grid container spacing={3}>\n          {filteredChallenges.map(challenge => (\n            <Grid item key={challenge.id} xs={12} md={6}>\n              <Card elevation={3}>\n                <CardMedia\n                  component=\"img\"\n                  height=\"140\"\n                  image={challenge.image || '/images/challenges/placeholder.jpg'}\n                  alt={challenge.name}\n                  sx={{ objectFit: 'cover' }}\n                />\n                \n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <TrophyIcon sx={{ mr: 1, color: 'primary.main' }} />\n                    <Typography variant=\"h5\">\n                      {challenge.name}\n                    </Typography>\n                  </Box>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                    {t('challenges.seven_majors.created_by')}: {challenge.createdBy.name}\n                  </Typography>\n                  \n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n                    <Chip \n                      icon={<GlobeIcon />} \n                      label={challenge.isPublic ? t('common.public') : t('common.private')} \n                      size=\"small\"\n                      color={challenge.isPublic ? \"primary\" : \"default\"}\n                    />\n                    \n                    <Chip \n                      label={`${challenge.cols.length} cols`} \n                      size=\"small\"\n                    />\n                    \n                    <Chip \n                      icon={<FavoriteIcon />} \n                      label={challenge.likes || 0} \n                      size=\"small\"\n                      color=\"secondary\"\n                    />\n                  </Box>\n                  \n                  <Divider sx={{ my: 2 }} />\n                  \n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('challenges.seven_majors.included_cols')}:\n                  </Typography>\n                  \n                  <Grid container spacing={1} sx={{ mb: 2 }}>\n                    {challenge.cols.slice(0, 3).map(col => (\n                      <Grid item key={col.id} xs={12}>\n                        <Box \n                          sx={{ \n                            display: 'flex', \n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            p: 1,\n                            bgcolor: 'background.paper',\n                            borderRadius: 1,\n                            '&:hover': { bgcolor: 'action.hover' }\n                          }}\n                        >\n                          <Box>\n                            <Typography variant=\"body2\">\n                              {col.name}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              {col.region}, {col.country} • {col.altitude}m\n                            </Typography>\n                          </Box>\n                          \n                          <Tooltip title={t('common.view_details')}>\n                            <IconButton \n                              size=\"small\" \n                              onClick={() => onViewColDetails(col)}\n                            >\n                              <VisibilityIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                      </Grid>\n                    ))}\n                    \n                    {challenge.cols.length > 3 && (\n                      <Typography variant=\"body2\" sx={{ p: 1, color: 'text.secondary' }}>\n                        +{challenge.cols.length - 3} {t('common.more')}...\n                      </Typography>\n                    )}\n                  </Grid>\n                </CardContent>\n                \n                <CardActions sx={{ p: 2 }}>\n                  <Box sx={{ display: 'flex', gap: 1 }}>\n                    <Tooltip title={t('common.like')}>\n                      <IconButton \n                        color={userLikes[challenge.id] ? \"secondary\" : \"default\"}\n                        onClick={() => onLikeChallenge(challenge.id)}\n                      >\n                        {userLikes[challenge.id] ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                      </IconButton>\n                    </Tooltip>\n                    \n                    <Tooltip title={t('common.share')}>\n                      <IconButton \n                        color=\"primary\"\n                        onClick={() => onShareChallenge(challenge)}\n                      >\n                        <ShareIcon />\n                      </IconButton>\n                    </Tooltip>\n                    \n                    {challenge.createdBy.isSelf && (\n                      <Tooltip title={t('common.delete')}>\n                        <IconButton \n                          color=\"error\"\n                          onClick={() => handleDeleteClick(challenge)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </Tooltip>\n                    )}\n                  </Box>\n                  \n                  <Box sx={{ flexGrow: 1 }} />\n                  \n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => onLoadChallenge(challenge)}\n                  >\n                    {t('challenges.seven_majors.load_challenge')}\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n      \n      {/* Dialog de confirmation de suppression */}\n      <Dialog\n        open={showConfirmDelete}\n        onClose={() => setShowConfirmDelete(false)}\n      >\n        <DialogTitle>\n          {t('common.confirm_delete')}\n        </DialogTitle>\n        <DialogContent>\n          <Typography>\n            {t('challenges.seven_majors.confirm_delete_challenge', { \n              name: challengeToDelete?.name || ''\n            })}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowConfirmDelete(false)}>\n            {t('common.cancel')}\n          </Button>\n          <Button \n            onClick={confirmDelete} \n            color=\"error\" \n            variant=\"contained\"\n          >\n            {t('common.delete')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default UserChallenges;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96\"\n}), 'Cloud');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z\"\n}), 'Download');","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  Grid,\n  Box,\n  Divider,\n  IconButton,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ToggleButtonGroup,\n  ToggleButton,\n  Tooltip\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  Download as DownloadIcon,\n  CheckCircle as CheckCircleIcon,\n  Terrain as TerrainIcon,\n  Public as GlobeIcon,\n  WbSunny as SunnyIcon,\n  Cloud as CloudIcon,\n  Timeline as TimelineIcon\n} from '@mui/icons-material';\nimport ColVisualization3D from '../../cols/ColVisualization3D';\n\n/**\n * Composant pour afficher les détails d'un col dans une boîte de dialogue\n */\nconst ColDetailsDialog = ({\n  open,\n  col,\n  onClose,\n  onExportTrack,\n  onMarkAsCompleted,\n  onAddToChallenge,\n  isSelected,\n  isCompleted,\n  maxColsReached,\n  exportFormat,\n  onExportFormatChange,\n  weatherData\n}) => {\n  const { t } = useTranslation();\n  \n  if (!col) return null;\n  \n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"lg\"\n      fullWidth\n      aria-labelledby=\"col-details-dialog-title\"\n    >\n      <DialogTitle id=\"col-details-dialog-title\">\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n          <Typography variant=\"h5\">\n            {col.name}\n          </Typography>\n          <IconButton onClick={onClose} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      \n      <DialogContent dividers>\n        <Grid container spacing={3}>\n          {/* Informations générales */}\n          <Grid item xs={12} md={6}>\n            <Box sx={{ mb: 3 }}>\n              <img \n                src={col.image || '/images/cols/placeholder.jpg'} \n                alt={col.name}\n                style={{ \n                  width: '100%', \n                  height: '300px', \n                  objectFit: 'cover', \n                  borderRadius: '8px' \n                }}\n              />\n            </Box>\n            \n            <Typography variant=\"h6\" gutterBottom>\n              {t('cols.details')}\n            </Typography>\n            \n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <GlobeIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {t('cols.location')}:\n                  </Typography>\n                </Box>\n                <Typography variant=\"body1\">\n                  {col.region}, {col.country}\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <TerrainIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {t('cols.altitude')}:\n                  </Typography>\n                </Box>\n                <Typography variant=\"body1\">\n                  {col.altitude} m\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <TimelineIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {t('cols.length')}:\n                  </Typography>\n                </Box>\n                <Typography variant=\"body1\">\n                  {col.length} km\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <TimelineIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {t('cols.avg_gradient')}:\n                  </Typography>\n                </Box>\n                <Typography variant=\"body1\">\n                  {col.gradient}%\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <TimelineIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {t('cols.max_gradient')}:\n                  </Typography>\n                </Box>\n                <Typography variant=\"body1\">\n                  {col.maxGradient || '-'}%\n                </Typography>\n              </Grid>\n              \n              <Grid item xs={6}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <TimelineIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {t('cols.difficulty')}:\n                  </Typography>\n                </Box>\n                <Chip \n                  label={col.difficulty} \n                  size=\"small\"\n                  color={\n                    col.difficulty === 'HC' ? 'error' :\n                    col.difficulty === '1' ? 'warning' :\n                    col.difficulty === '2' ? 'success' :\n                    col.difficulty === '3' ? 'info' : 'default'\n                  }\n                />\n              </Grid>\n            </Grid>\n            \n            {/* Description */}\n            {col.description && (\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  {t('cols.description')}\n                </Typography>\n                <Typography variant=\"body2\" paragraph>\n                  {col.description}\n                </Typography>\n              </Box>\n            )}\n            \n            {/* Météo */}\n            {weatherData && (\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  {t('cols.current_weather')}\n                </Typography>\n                \n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      {weatherData.isGoodWeather ? (\n                        <SunnyIcon sx={{ mr: 1, color: 'warning.main' }} />\n                      ) : (\n                        <CloudIcon sx={{ mr: 1, color: 'info.main' }} />\n                      )}\n                      <Typography variant=\"body2\">\n                        {weatherData.condition}\n                      </Typography>\n                    </Box>\n                  </Grid>\n                  \n                  <Grid item xs={6}>\n                    <Typography variant=\"body2\">\n                      {t('cols.temperature')}: {weatherData.temperature}°C\n                    </Typography>\n                  </Grid>\n                  \n                  <Grid item xs={6}>\n                    <Typography variant=\"body2\">\n                      {t('cols.wind')}: {weatherData.wind} km/h\n                    </Typography>\n                  </Grid>\n                  \n                  <Grid item xs={6}>\n                    <Typography variant=\"body2\">\n                      {t('cols.humidity')}: {weatherData.humidity}%\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n            \n            {/* Histoires et anecdotes */}\n            {col.stories && col.stories.length > 0 && (\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  {t('cols.stories')}\n                </Typography>\n                <ul>\n                  {col.stories.map((story, index) => (\n                    <li key={index}>\n                      <Typography variant=\"body2\">{story}</Typography>\n                    </li>\n                  ))}\n                </ul>\n              </Box>\n            )}\n            \n            {/* Points d'intérêt */}\n            {col.pointsOfInterest && col.pointsOfInterest.length > 0 && (\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  {t('cols.points_of_interest')}\n                </Typography>\n                <List dense>\n                  {col.pointsOfInterest.map((poi, index) => (\n                    <ListItem key={index}>\n                      <ListItemText \n                        primary={poi.name} \n                        secondary={poi.description}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n          </Grid>\n          \n          {/* Visualisation 3D */}\n          <Grid item xs={12} md={6}>\n            <Box sx={{ height: '100%', minHeight: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {t('cols.profile_visualization')}\n              </Typography>\n              \n              {/* Utilisation du composant de visualisation 3D existant */}\n              <ColVisualization3D \n                colId={col.id} \n                colData={col.elevationData || []} \n                pointsOfInterest={col.pointsOfInterest || []}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      \n      <DialogActions sx={{ justifyContent: 'space-between', p: 2 }}>\n        <Button onClick={onClose} color=\"inherit\">\n          {t('common.close')}\n        </Button>\n        \n        {/* Bouton d'exportation */}\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <ToggleButtonGroup\n            value={exportFormat}\n            exclusive\n            onChange={(e, newFormat) => newFormat && onExportFormatChange(newFormat)}\n            size=\"small\"\n            sx={{ mr: 1 }}\n          >\n            <ToggleButton value=\"gpx\">GPX</ToggleButton>\n            <ToggleButton value=\"tcx\">TCX</ToggleButton>\n          </ToggleButtonGroup>\n          \n          <Button \n            onClick={() => onExportTrack(col)}\n            startIcon={<DownloadIcon />}\n            color=\"secondary\"\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            {t('common.export')}\n          </Button>\n        </Box>\n        \n        {/* Bouton pour marquer comme complété */}\n        {isSelected && (\n          <Button \n            onClick={() => onMarkAsCompleted(col.id)}\n            color={isCompleted ? \"success\" : \"primary\"}\n            variant=\"outlined\"\n            startIcon={isCompleted ? <CheckCircleIcon /> : null}\n          >\n            {isCompleted \n              ? t('challenges.seven_majors.completed') \n              : t('challenges.seven_majors.mark_as_completed')}\n          </Button>\n        )}\n        \n        <Button \n          onClick={() => onAddToChallenge(col)}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={isSelected || maxColsReached}\n        >\n          {t('challenges.seven_majors.add_to_challenge')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ColDetailsDialog;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  IconButton\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  Event as EventIcon,\n  CalendarMonth as CalendarIcon\n} from '@mui/icons-material';\n\n/**\n * Composant de dialogue pour planifier une ascension\n */\nconst ScheduleDialog = ({ \n  open, \n  onClose, \n  onSchedule, \n  selectedColId,\n  selectedColName \n}) => {\n  const { t } = useTranslation();\n  const [selectedDate, setSelectedDate] = useState('');\n  const [dateError, setDateError] = useState('');\n  \n  // Valider la date sélectionnée\n  const validateDate = (date) => {\n    const today = new Date();\n    const selected = new Date(date);\n    \n    if (isNaN(selected.getTime())) {\n      return t('common.invalid_date');\n    }\n    \n    if (selected < today) {\n      return t('challenges.seven_majors.date_in_past');\n    }\n    \n    return '';\n  };\n  \n  // Gérer le changement de date\n  const handleDateChange = (e) => {\n    const date = e.target.value;\n    setSelectedDate(date);\n    setDateError(validateDate(date));\n  };\n  \n  // Gérer la soumission du formulaire\n  const handleSubmit = () => {\n    const error = validateDate(selectedDate);\n    \n    if (error) {\n      setDateError(error);\n      return;\n    }\n    \n    onSchedule(selectedColId, selectedDate);\n    onClose();\n  };\n  \n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"sm\"\n      fullWidth\n      aria-labelledby=\"schedule-ascent-dialog-title\"\n    >\n      <DialogTitle id=\"schedule-ascent-dialog-title\">\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n          <Typography variant=\"h6\">\n            <CalendarIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n            {t('challenges.seven_majors.schedule_ascent')}\n          </Typography>\n          <IconButton onClick={onClose} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      \n      <DialogContent dividers>\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {t('challenges.seven_majors.scheduling_for')}:\n          </Typography>\n          <Typography variant=\"h6\" color=\"primary\">\n            {selectedColName}\n          </Typography>\n        </Box>\n        \n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"body2\" gutterBottom>\n            {t('challenges.seven_majors.schedule_instructions')}\n          </Typography>\n          \n          <TextField\n            label={t('challenges.seven_majors.ascent_date')}\n            type=\"date\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            fullWidth\n            error={!!dateError}\n            helperText={dateError}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            sx={{ mt: 2 }}\n            inputProps={{\n              min: new Date().toISOString().split('T')[0]\n            }}\n          />\n        </Box>\n      </DialogContent>\n      \n      <DialogActions sx={{ p: 2 }}>\n        <Button onClick={onClose} color=\"inherit\">\n          {t('common.cancel')}\n        </Button>\n        <Button \n          onClick={handleSubmit} \n          color=\"primary\" \n          variant=\"contained\"\n          disabled={!selectedDate || !!dateError}\n        >\n          {t('challenges.seven_majors.confirm_schedule')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ScheduleDialog;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useTheme } from '@mui/material/styles';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useChallenge } from '../../contexts/ChallengeContext';\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  Paper,\n  Alert,\n  CircularProgress,\n  Snackbar,\n  Pagination\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  EmojiEvents as TrophyIcon,\n  Public as GlobeIcon,\n  Person as PersonIcon\n} from '@mui/icons-material';\n\n// Import des sous-composants\nimport ColSearchTab from './components/ColSearchTab';\nimport MyChallenge from './components/MyChallenge';\nimport PredefinedChallenges from './components/PredefinedChallenges';\nimport UserChallenges from './components/UserChallenges';\nimport ColDetailsDialog from './components/ColDetailsDialog';\nimport ScheduleDialog from './components/ScheduleDialog';\n\n/**\n * Composant pour le défi \"Les 7 Majeurs\" permettant aux cyclistes de sélectionner\n * et suivre 7 grands cols à conquérir dans l'année\n */\nconst SevenMajorsChallenge = () => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const { isAuthenticated } = useAuth();\n  \n  // Utiliser le contexte ChallengeContext pour toute la gestion d'état\n  const { \n    // États\n    loading, error, allCols, totalItems, filters, page, rowsPerPage,\n    selectedCols, challengeName, isPublic, activeTab, predefinedChallenges,\n    userChallenges, selectedCol, showColDetails, weatherData, showScheduleDialog,\n    scheduleColId, scheduleColName, userCompletedCols, scheduledAscents,\n    exportFormat, notification,\n    \n    // Actions\n    setActiveTab, setPage, setFilters, selectCol, removeCol, setChallengeName,\n    setIsPublic, viewColDetails, closeColDetails, saveChallenge, markColAsCompleted,\n    scheduleAscent, openScheduleDialog, closeScheduleDialog,\n    deleteChallenge, likeChallenge, loadChallenge, clearNotification, exportTrack,\n    setExportFormat\n  } = useChallenge();\n  \n  // Gestionnaires d'événements simplifiés\n  const handleTabChange = (_, newValue) => {\n    setActiveTab(newValue);\n  };\n  \n  const handlePageChange = (_, newPage) => {\n    setPage(newPage);\n  };\n  \n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n  };\n  \n  const handleSelectCol = (col) => {\n    selectCol(col);\n  };\n  \n  const handleRemoveCol = (colId) => {\n    removeCol(colId);\n  };\n  \n  const handleChallengeTitleChange = (newTitle) => {\n    setChallengeName(newTitle);\n  };\n  \n  const handleTogglePublic = () => {\n    setIsPublic(!isPublic);\n  };\n  \n  const handleViewColDetails = (col) => {\n    viewColDetails(col);\n  };\n  \n  const handleCloseColDetails = () => {\n    closeColDetails();\n  };\n  \n  const handleSaveChallenge = () => {\n    saveChallenge();\n  };\n  \n  const handleMarkAsCompleted = (colId) => {\n    markColAsCompleted(colId);\n  };\n  \n  const handleScheduleAscent = (date) => {\n    scheduleAscent(date);\n  };\n  \n  const handleOpenScheduleDialog = (colId, colName) => {\n    openScheduleDialog(colId, colName);\n  };\n  \n  const handleDeleteChallenge = (challengeId) => {\n    deleteChallenge(challengeId);\n  };\n  \n  const handleLikeChallenge = (challengeId) => {\n    likeChallenge(challengeId);\n  };\n  \n  const handleLoadPredefinedChallenge = (challenge) => {\n    loadChallenge(challenge);\n  };\n  \n  const handleLoadUserChallenge = (challenge) => {\n    loadChallenge(challenge);\n  };\n  \n  const handleCloseNotification = () => {\n    clearNotification();\n  };\n  \n  const handleExportTrack = (colId) => {\n    exportTrack(colId, exportFormat);\n  };\n  \n  const handleExportFormatChange = (format) => {\n    setExportFormat(format);\n  };\n  \n  const handleShareChallenge = () => {\n    // La fonctionnalité de partage serait implémentée ici\n  };\n  \n  return (\n    <Box sx={{ \n      width: '100%', \n      backgroundColor: 'background.paper',\n      borderRadius: 2,\n      overflow: 'hidden',\n      boxShadow: 3\n    }}>\n      <Paper elevation={0}>\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          aria-label=\"Challenge tabs\"\n          variant=\"fullWidth\"\n          scrollButtons=\"auto\"\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n          sx={{\n            borderBottom: 1,\n            borderColor: 'divider',\n            mb: 2\n          }}\n        >\n          <Tab \n            icon={<SearchIcon />} \n            label={t('challenge.search_cols')} \n            id=\"tab-0\" \n            aria-controls=\"tabpanel-0\" \n          />\n          <Tab \n            icon={<TrophyIcon />} \n            label={t('challenge.my_challenge')} \n            id=\"tab-1\" \n            aria-controls=\"tabpanel-1\" \n          />\n          <Tab \n            icon={<GlobeIcon />} \n            label={t('challenge.predefined')} \n            id=\"tab-2\" \n            aria-controls=\"tabpanel-2\" \n          />\n          <Tab \n            icon={<PersonIcon />} \n            label={t('challenge.community')} \n            id=\"tab-3\" \n            aria-controls=\"tabpanel-3\" \n            disabled={!isAuthenticated}\n          />\n        </Tabs>\n      </Paper>\n      \n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n      \n      <Box sx={{ p: 2 }}>\n        <Box role=\"tabpanel\" hidden={activeTab !== 0} id=\"tabpanel-0\" aria-labelledby=\"tab-0\">\n          {activeTab === 0 && (\n            <ColSearchTab\n              cols={allCols}\n              loading={loading}\n              filters={filters}\n              onFilterChange={handleFilterChange}\n              onSelectCol={handleSelectCol}\n              onViewDetails={handleViewColDetails}\n              selectedColIds={selectedCols.map(col => col.id)}\n              maxColsReached={selectedCols.length >= 7}\n            />\n          )}\n          \n          {loading && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n              <CircularProgress />\n            </Box>\n          )}\n          \n          {!loading && allCols.length === 0 && (\n            <Alert severity=\"info\" sx={{ mt: 2 }}>\n              {t('challenge.no_cols_found')}\n            </Alert>\n          )}\n          \n          {!loading && allCols.length > 0 && (\n            <>\n              <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\n                <Pagination\n                  count={Math.ceil(totalItems / rowsPerPage)}\n                  page={page}\n                  onChange={handlePageChange}\n                  color=\"primary\"\n                  showFirstButton\n                  showLastButton\n                />\n              </Box>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                {t('common.showing_items', { \n                  start: Math.min((page - 1) * rowsPerPage + 1, totalItems), \n                  end: Math.min(page * rowsPerPage, totalItems), \n                  total: totalItems \n                })}\n              </Typography>\n            </>\n          )}\n        </Box>\n        \n        <Box role=\"tabpanel\" hidden={activeTab !== 1} id=\"tabpanel-1\" aria-labelledby=\"tab-1\">\n          {activeTab === 1 && (\n            <MyChallenge \n              selectedCols={selectedCols}\n              challengeName={challengeName}\n              onChallengeTitleChange={handleChallengeTitleChange}\n              onRemoveCol={handleRemoveCol}\n              onViewCol={handleViewColDetails}\n              onSaveChallenge={handleSaveChallenge}\n              onMarkAsCompleted={handleMarkAsCompleted}\n              onScheduleAscent={handleOpenScheduleDialog}\n              onShareChallenge={handleShareChallenge}\n              isPublic={isPublic}\n              onTogglePublic={handleTogglePublic}\n              isAuthenticated={isAuthenticated}\n              completedCols={userCompletedCols}\n              scheduledAscents={scheduledAscents}\n            />\n          )}\n        </Box>\n        \n        <Box role=\"tabpanel\" hidden={activeTab !== 2} id=\"tabpanel-2\" aria-labelledby=\"tab-2\">\n          {activeTab === 2 && (\n            <PredefinedChallenges \n              challenges={predefinedChallenges}\n              loading={loading}\n              error={error}\n              onLoadChallenge={handleLoadPredefinedChallenge}\n              onViewColDetails={handleViewColDetails}\n            />\n          )}\n        </Box>\n        \n        <Box role=\"tabpanel\" hidden={activeTab !== 3} id=\"tabpanel-3\" aria-labelledby=\"tab-3\">\n          {activeTab === 3 && isAuthenticated && (\n            <UserChallenges \n              challenges={userChallenges}\n              loading={loading}\n              onLoadChallenge={handleLoadUserChallenge}\n              onDeleteChallenge={handleDeleteChallenge}\n              onLikeChallenge={handleLikeChallenge}\n              onViewColDetails={handleViewColDetails}\n              onShareChallenge={handleShareChallenge}\n              userLikes={likeChallenge}\n            />\n          )}\n        </Box>\n        \n        {/* Boîte de dialogue des détails du col */}\n        <ColDetailsDialog \n          open={showColDetails}\n          col={selectedCol}\n          onClose={handleCloseColDetails}\n          onExportTrack={handleExportTrack}\n          onMarkAsCompleted={handleMarkAsCompleted}\n          onAddToChallenge={handleSelectCol}\n          isSelected={selectedCol ? selectedCols.findIndex(col => col.id === selectedCol.id) !== -1 : false}\n          isCompleted={selectedCol ? userCompletedCols.includes(selectedCol.id) : false}\n          maxColsReached={selectedCols.length >= 7}\n          exportFormat={exportFormat}\n          onExportFormatChange={handleExportFormatChange}\n          weatherData={selectedCol ? weatherData[selectedCol.id] : null}\n        />\n        \n        {/* Boîte de dialogue pour planifier une ascension */}\n        <ScheduleDialog \n          open={showScheduleDialog}\n          onClose={closeScheduleDialog}\n          onSchedule={handleScheduleAscent}\n          selectedColId={scheduleColId}\n          selectedColName={scheduleColName}\n        />\n        \n        {/* Notifications */}\n        <Snackbar\n          open={Boolean(notification)}\n          autoHideDuration={6000}\n          onClose={handleCloseNotification}\n          message={notification?.message}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          {notification && (\n            <Alert \n              onClose={handleCloseNotification} \n              severity={notification.severity || 'info'} \n              sx={{ width: '100%' }}\n            >\n              {notification.message}\n            </Alert>\n          )}\n        </Snackbar>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SevenMajorsChallenge;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39\"\n}), 'Public');"],"names":["createSvgIcon","_jsx","d","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_ref","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useDefaultProps","children","className","component","image","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined","ChallengeContext","createContext","cols","loading","filters","onFilterChange","onResetFilters","onSelectCol","onViewDetails","selectedColsIds","t","useTranslation","filteredResults","setFilteredResults","useState","uniqueCountries","useMemo","Set","map","col","country","sort","uniqueRegions","region","useEffect","results","filter","minAltitude","altitude","parseInt","maxAltitude","difficulty","searchQuery","query","toLowerCase","includes","renderColCard","isSelected","id","_jsxs","Card","elevation","sx","height","flexDirection","CardMedia","alt","CardContent","flexGrow","Typography","variant","gutterBottom","noWrap","Box","alignItems","mb","GlobeIcon","fontSize","mr","color","TerrainIcon","length","gradient","flexWrap","gap","Chip","size","label","isPopular","CardActions","justifyContent","p","Tooltip","title","IconButton","onClick","VisibilityIcon","Button","startIcon","AddIcon","disabled","Paper","Grid","container","spacing","item","xs","sm","md","TextField","fullWidth","value","onChange","InputProps","startAdornment","SearchIcon","FormControl","InputLabel","Select","labelId","MenuItem","type","inputProps","min","FilterIcon","py","CircularProgress","lg","Alert","severity","mt","selectedCols","challengeName","onChallengeTitleChange","onRemoveCol","onViewCol","onSaveChallenge","onMarkAsCompleted","onScheduleAscent","onShareChallenge","isPublic","onTogglePublic","isAuthenticated","completedCols","scheduledAscents","stats","totalAltitude","reduce","sum","totalLength","difficultyMap","avgDifficulty","avgDifficultyCategory","avgGradient","completionPercentage","_Fragment","FormControlLabel","control","Switch","checked","SaveIcon","ShareIcon","TrophyIcon","verticalAlign","LinearProgress","borderRadius","toFixed","position","top","right","bgcolor","CheckCircleIcon","CalendarIcon","Date","toLocaleDateString","DeleteIcon","Array","from","Math","max","_","index","minHeight","border","borderColor","align","count","challenges","error","onLoadChallenge","onViewColDetails","challenge","paragraph","description","Divider","my","onDeleteChallenge","onLikeChallenge","userLikes","searchTerm","setSearchTerm","showConfirmDelete","setShowConfirmDelete","challengeToDelete","setChallengeToDelete","filteredChallenges","createdBy","placeholder","e","target","InputAdornment","icon","FavoriteIcon","likes","slice","FavoriteBorderIcon","isSelf","handleDeleteClick","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","confirmDelete","onExportTrack","onAddToChallenge","isCompleted","maxColsReached","exportFormat","onExportFormatChange","weatherData","maxWidth","CloseIcon","dividers","TimelineIcon","maxGradient","isGoodWeather","SunnyIcon","CloudIcon","condition","temperature","wind","humidity","stories","story","pointsOfInterest","List","dense","poi","ListItem","ListItemText","primary","secondary","ColVisualization3D","colId","colData","elevationData","ToggleButtonGroup","exclusive","newFormat","ToggleButton","DownloadIcon","onSchedule","selectedColId","selectedColName","selectedDate","setSelectedDate","dateError","setDateError","validateDate","date","today","selected","isNaN","getTime","helperText","InputLabelProps","shrink","toISOString","split","handleSubmit","SevenMajorsChallenge","useTheme","useAuth","allCols","totalItems","page","rowsPerPage","activeTab","predefinedChallenges","userChallenges","selectedCol","showColDetails","showScheduleDialog","scheduleColId","scheduleColName","userCompletedCols","notification","setActiveTab","setPage","setFilters","selectCol","removeCol","setChallengeName","setIsPublic","viewColDetails","closeColDetails","saveChallenge","markColAsCompleted","scheduleAscent","openScheduleDialog","closeScheduleDialog","deleteChallenge","likeChallenge","loadChallenge","clearNotification","exportTrack","setExportFormat","useChallenge","context","useContext","Error","handleSelectCol","handleViewColDetails","handleMarkAsCompleted","handleCloseNotification","handleShareChallenge","backgroundColor","overflow","boxShadow","Tabs","handleTabChange","newValue","scrollButtons","textColor","indicatorColor","borderBottom","Tab","PersonIcon","hidden","ColSearchTab","newFilters","selectedColIds","Pagination","ceil","handlePageChange","newPage","showFirstButton","showLastButton","start","end","total","MyChallenge","newTitle","handleSaveChallenge","handleOpenScheduleDialog","colName","handleTogglePublic","PredefinedChallenges","UserChallenges","challengeId","ColDetailsDialog","handleCloseColDetails","findIndex","format","ScheduleDialog","Snackbar","Boolean","autoHideDuration","message","anchorOrigin","vertical","horizontal"],"sourceRoot":""}