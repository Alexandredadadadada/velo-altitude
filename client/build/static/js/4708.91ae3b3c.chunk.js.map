{"version":3,"file":"static/js/4708.91ae3b3c.chunk.js","mappings":"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","sources":["components/animations/PageTransition.js","components/visualization/Pass3DViewer.js","components/visualization/PassVisualizer.js","components/visualization/PassComparison.js","components/visualization/RouteAlternatives.js","components/visualization/VisualizationCard.js","components/visualization/VisualizationGrid.js","components/visualization/VisualizationCarousel.js","pages/VisualizationDashboard.js"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Box } from '@mui/material';\n\nconst PageTransition = ({ children, transition = 'fade' }) => {\n  // Définition des différentes animations de transition\n  const transitions = {\n    fade: {\n      initial: { opacity: 0 },\n      animate: { opacity: 1 },\n      exit: { opacity: 0 },\n      transition: { duration: 0.4 }\n    },\n    slide: {\n      initial: { opacity: 0, x: 100 },\n      animate: { opacity: 1, x: 0 },\n      exit: { opacity: 0, x: -100 },\n      transition: { type: 'spring', stiffness: 300, damping: 30 }\n    },\n    scale: {\n      initial: { opacity: 0, scale: 0.9 },\n      animate: { opacity: 1, scale: 1 },\n      exit: { opacity: 0, scale: 0.95 },\n      transition: { duration: 0.5 }\n    },\n    slideUp: {\n      initial: { opacity: 0, y: 50 },\n      animate: { opacity: 1, y: 0 },\n      exit: { opacity: 0, y: -50 },\n      transition: { type: 'spring', stiffness: 500, damping: 30 }\n    }\n  };\n  \n  // Utiliser la transition demandée ou la transition par défaut\n  const currentTransition = transitions[transition] || transitions.fade;\n  \n  return (\n    <motion.div\n      initial={currentTransition.initial}\n      animate={currentTransition.animate}\n      exit={currentTransition.exit}\n      transition={currentTransition.transition}\n      style={{ width: '100%' }}\n    >\n      <Box sx={{ overflow: 'hidden' }}>\n        {children}\n      </Box>\n    </motion.div>\n  );\n};\n\nexport default PageTransition;\n","import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { Canvas, useThree, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Text, Line } from '@react-three/drei';\nimport axios from 'axios';\nimport './Pass3DViewer.css';\n\n// Composant pour afficher un marqueur dans la scène 3D\nconst Marker = ({ position, name, type, onClick }) => {\n  const color = type === 'start' ? '#4CAF50' : \n                type === 'summit' ? '#F44336' : \n                type === 'panorama' ? '#2196F3' : \n                type === 'ravitaillement' ? '#FF9800' : \n                '#9C27B0';\n                \n  return (\n    <group position={position} onClick={onClick}>\n      <mesh>\n        <sphereGeometry args={[5, 16, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text\n        position={[0, 8, 0]}\n        color=\"white\"\n        fontSize={5}\n        maxWidth={100}\n        textAlign=\"center\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n        outlineWidth={0.5}\n        outlineColor=\"#000000\"\n      >\n        {name}\n      </Text>\n    </group>\n  );\n};\n\n// Composant pour créer la route 3D\nconst Route3D = ({ coordinates }) => {\n  const points = coordinates.map(coord => \n    new THREE.Vector3(coord.position[0], coord.position[2], coord.position[1])\n  );\n\n  return (\n    <Line\n      points={points}\n      color=\"#E91E63\"\n      lineWidth={5}\n    />\n  );\n};\n\n// Composant principal pour la visualisation 3D\nconst Pass3DViewer = ({ passId }) => {\n  const [passData, setPassData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [cameraPosition, setCameraPosition] = useState([0, 100, 200]);\n  \n  // Charger les données du col\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`/api/visualization/passes/${passId}/visualization-3d`)\n      .then(response => {\n        if (response.data.status === 'success') {\n          setPassData(response.data.data);\n          // Définir la position initiale de la caméra à partir des données\n          if (response.data.data.camera && response.data.data.camera.initialPosition) {\n            setCameraPosition(response.data.data.camera.initialPosition);\n          }\n        } else {\n          setError('Erreur lors du chargement des données');\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des données 3D', err);\n        setError(`Erreur lors de la récupération des données: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [passId]);\n\n  // Gérer la sélection d'un marqueur\n  const handleMarkerClick = (marker) => {\n    setSelectedMarker(marker);\n  };\n\n  // Fonction pour fermer le panneau d'info\n  const closeInfoPanel = () => {\n    setSelectedMarker(null);\n  };\n\n  if (loading) {\n    return <div className=\"pass-3d-loading\">Chargement de la visualisation 3D...</div>;\n  }\n\n  if (error) {\n    return <div className=\"pass-3d-error\">Erreur: {error}</div>;\n  }\n\n  if (!passData) {\n    return <div className=\"pass-3d-error\">Aucune donnée disponible pour ce col</div>;\n  }\n\n  return (\n    <div className=\"pass-3d-container\">\n      <div className=\"pass-3d-header\">\n        <h2>{passData.name} - Visualisation 3D</h2>\n        <div className=\"pass-3d-controls\">\n          <button onClick={() => setCameraPosition(passData.camera.initialPosition)}>\n            Vue par défaut\n          </button>\n          <button onClick={() => setCameraPosition([0, 200, 0])}>\n            Vue aérienne\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"pass-3d-viewer\">\n        <Canvas camera={{ position: cameraPosition, fov: 45 }}>\n          <ambientLight intensity={0.5} />\n          <directionalLight position={[10, 10, 5]} intensity={1} />\n          \n          {/* Terrain 3D */}\n          <Route3D coordinates={passData.coordinates3D} />\n          \n          {/* Marqueurs */}\n          {passData.markers && passData.markers.map((marker, idx) => (\n            <Marker\n              key={marker.id || idx}\n              position={marker.position}\n              name={marker.name}\n              type={marker.type}\n              onClick={() => handleMarkerClick(marker)}\n            />\n          ))}\n          \n          {/* Contrôles de caméra */}\n          <OrbitControls target={passData.camera.lookAt || [0, 0, 0]} />\n        </Canvas>\n      </div>\n      \n      {/* Panneau d'information sur le marqueur sélectionné */}\n      {selectedMarker && (\n        <div className=\"pass-3d-info-panel\">\n          <div className=\"pass-3d-info-header\">\n            <h3>{selectedMarker.name}</h3>\n            <button onClick={closeInfoPanel}>×</button>\n          </div>\n          <div className=\"pass-3d-info-content\">\n            <p>{selectedMarker.description || 'Pas de description disponible'}</p>\n            {selectedMarker.type === 'start' && (\n              <div className=\"pass-3d-elevation-info\">\n                <p>Altitude de départ: {selectedMarker.position[2]}m</p>\n              </div>\n            )}\n            {selectedMarker.type === 'summit' && (\n              <div className=\"pass-3d-elevation-info\">\n                <p>Altitude au sommet: {selectedMarker.position[2]}m</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"pass-3d-legend\">\n        <h3>Légende</h3>\n        <div className=\"pass-3d-legend-item\">\n          <span className=\"legend-color start\"></span>\n          <span>Départ</span>\n        </div>\n        <div className=\"pass-3d-legend-item\">\n          <span className=\"legend-color summit\"></span>\n          <span>Sommet</span>\n        </div>\n        <div className=\"pass-3d-legend-item\">\n          <span className=\"legend-color panorama\"></span>\n          <span>Point de vue</span>\n        </div>\n        <div className=\"pass-3d-legend-item\">\n          <span className=\"legend-color ravitaillement\"></span>\n          <span>Ravitaillement</span>\n        </div>\n      </div>\n      \n      <div className=\"pass-3d-instructions\">\n        <p>\n          <strong>Navigation :</strong> Cliquez et faites glisser pour pivoter la vue. \n          Utilisez la molette de la souris pour zoomer et dézoomer. \n          Cliquez sur un marqueur pour afficher plus d'informations.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pass3DViewer;\n","import React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport axios from 'axios';\nimport Pass3DViewer from './Pass3DViewer';\nimport './PassVisualizer.css';\n\n// Constantes pour les styles de carte\nconst MAPBOX_TOKEN = 'YOUR_MAPBOX_TOKEN'; // À remplacer par une clé réelle dans un environnement de production\nconst mapStyle = 'mapbox://styles/mapbox/outdoors-v11';\n\n// Constantes pour les types de vues\nconst VIEW_TYPES = {\n  MAP_2D: '2d',\n  PROFILE: 'profile',\n  VIEW_3D: '3d'\n};\n\n// Composant principal pour la visualisation intégrée des cols\nconst PassVisualizer = ({ passId }) => {\n  const [passData, setPassData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeView, setActiveView] = useState(VIEW_TYPES.MAP_2D);\n  const [viewState, setViewState] = useState({\n    longitude: 2.3488,\n    latitude: 46.8534,\n    zoom: 9\n  });\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const [annotations, setAnnotations] = useState([]);\n\n  // Charger les données du col\n  useEffect(() => {\n    setLoading(true);\n    \n    // Récupérer les données de visualisation du col\n    axios.get(`/api/visualization/passes/${passId}/visualization`)\n      .then(response => {\n        if (response.data.status === 'success') {\n          setPassData(response.data.data);\n          \n          // Centrer la carte sur le col\n          if (response.data.data.coordinates) {\n            const middlePoint = Math.floor(response.data.data.coordinates.length / 2);\n            setViewState({\n              longitude: response.data.data.coordinates[middlePoint][0],\n              latitude: response.data.data.coordinates[middlePoint][1],\n              zoom: 12\n            });\n          }\n        } else {\n          setError('Erreur lors du chargement des données');\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des données du col:', err);\n        setError(`Erreur lors de la récupération des données: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [passId]);\n\n  // Préparer les données pour le graphique d'élévation\n  const prepareElevationData = () => {\n    if (!passData || !passData.elevationProfile) return [];\n    \n    return passData.elevationProfile.map(point => ({\n      distance: point[0],\n      elevation: point[1],\n      gradient: point[2] || 0\n    }));\n  };\n\n  // Gérer le clic sur un point du profil d'élévation\n  const handleProfilePointClick = (data) => {\n    setSelectedPoint(data);\n    \n    // Trouver les coordonnées correspondantes sur la carte pour centrer la vue\n    if (passData && passData.coordinates) {\n      const closestPoint = passData.coordinates.reduce((closest, point, index) => {\n        const distance = Math.abs(point[2] - data.distance);\n        if (distance < closest.distance) {\n          return { index, distance, coords: [point[0], point[1]] };\n        }\n        return closest;\n      }, { index: 0, distance: Infinity, coords: [0, 0] });\n      \n      // Centrer la carte sur ce point\n      setViewState({\n        ...viewState,\n        longitude: closestPoint.coords[0],\n        latitude: closestPoint.coords[1],\n        zoom: 14\n      });\n    }\n  };\n\n  // Gérer le changement de type de vue\n  const handleViewChange = (newView) => {\n    setActiveView(newView);\n  };\n\n  // Définir la couleur en fonction de la pente\n  const getColorForGradient = (gradient) => {\n    if (gradient <= 4) return '#4CAF50'; // Vert\n    if (gradient <= 7) return '#FFC107'; // Jaune\n    if (gradient <= 10) return '#FF9800'; // Orange\n    if (gradient <= 15) return '#F44336'; // Rouge\n    return '#9C27B0'; // Violet\n  };\n\n  if (loading) {\n    return <div className=\"pass-visualizer-loading\">Chargement des données...</div>;\n  }\n\n  if (error) {\n    return <div className=\"pass-visualizer-error\">Erreur: {error}</div>;\n  }\n\n  if (!passData) {\n    return <div className=\"pass-visualizer-error\">Aucune donnée disponible pour ce col</div>;\n  }\n\n  return (\n    <div className=\"pass-visualizer-container\">\n      <div className=\"pass-visualizer-header\">\n        <h2>{passData.name}</h2>\n        <div className=\"pass-visualizer-info\">\n          <div className=\"info-item\">\n            <span className=\"info-label\">Distance</span>\n            <span className=\"info-value\">{passData.length} km</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Dénivelé</span>\n            <span className=\"info-value\">{passData.summary?.elevationGain || 0} m</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Pente moyenne</span>\n            <span className=\"info-value\">{passData.summary?.averageGradient.toFixed(1) || 0}%</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Pente max</span>\n            <span className=\"info-value\">{passData.summary?.maxGradient.toFixed(1) || 0}%</span>\n          </div>\n          <div className=\"info-item\">\n            <span className=\"info-label\">Difficulté</span>\n            <span className=\"info-value\">{passData.difficulty}</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"pass-visualizer-tabs\">\n        <button\n          className={activeView === VIEW_TYPES.MAP_2D ? 'active' : ''}\n          onClick={() => handleViewChange(VIEW_TYPES.MAP_2D)}\n        >\n          <i className=\"fas fa-map\"></i> Carte 2D\n        </button>\n        <button\n          className={activeView === VIEW_TYPES.PROFILE ? 'active' : ''}\n          onClick={() => handleViewChange(VIEW_TYPES.PROFILE)}\n        >\n          <i className=\"fas fa-chart-line\"></i> Profil d'élévation\n        </button>\n        <button\n          className={activeView === VIEW_TYPES.VIEW_3D ? 'active' : ''}\n          onClick={() => handleViewChange(VIEW_TYPES.VIEW_3D)}\n        >\n          <i className=\"fas fa-cube\"></i> Visualisation 3D\n        </button>\n      </div>\n      \n      <TransitionGroup>\n        <CSSTransition key={activeView} timeout={300} classNames=\"fade\">\n          <div className=\"pass-visualizer-content\">\n            {activeView === VIEW_TYPES.MAP_2D && (\n              <div className=\"pass-visualizer-map\">\n                <ReactMapGL\n                  {...viewState}\n                  onMove={evt => setViewState(evt.viewState)}\n                  style={{ width: '100%', height: '100%' }}\n                  mapStyle={mapStyle}\n                  mapboxAccessToken={MAPBOX_TOKEN}\n                >\n                  {/* Dans une implémentation réelle, nous ajouterions des couches\n                      pour visualiser le col sur la carte */}\n                  \n                  {/* Points d'intérêt */}\n                  {passData.keyPoints && passData.keyPoints.map((point, idx) => (\n                    <div \n                      key={idx}\n                      className=\"map-marker\"\n                      style={{\n                        left: `${point.x}px`,\n                        top: `${point.y}px`,\n                        backgroundColor: point.type === 'start' ? '#4CAF50' :\n                                         point.type === 'summit' ? '#F44336' :\n                                         '#2196F3'\n                      }}\n                    >\n                      <div className=\"map-marker-label\">{point.name}</div>\n                    </div>\n                  ))}\n                </ReactMapGL>\n                \n                {/* Légende */}\n                <div className=\"map-legend\">\n                  <h3>Légende</h3>\n                  <div className=\"legend-items\">\n                    {passData.colorScale && passData.colorScale.map((item, idx) => (\n                      <div key={idx} className=\"legend-item\">\n                        <span className=\"legend-color\" style={{ backgroundColor: item.color }}></span>\n                        <span className=\"legend-label\">{item.gradient} - {item.difficulty}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                {/* Annotations superposées */}\n                {annotations.map((annotation, idx) => (\n                  <div key={idx} className={`map-annotation ${annotation.type}`} style={{ left: annotation.x, top: annotation.y }}>\n                    <div className=\"annotation-marker\"></div>\n                    <div className=\"annotation-content\">\n                      <h4>{annotation.title}</h4>\n                      <p>{annotation.content}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {activeView === VIEW_TYPES.PROFILE && (\n              <div className=\"pass-visualizer-profile\">\n                <div className=\"profile-chart\">\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart\n                      data={prepareElevationData()}\n                      margin={{ top: 20, right: 30, left: 20, bottom: 30 }}\n                      onClick={(data) => {\n                        if (data && data.activePayload && data.activePayload[0]) {\n                          handleProfilePointClick(data.activePayload[0].payload);\n                        }\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis \n                        dataKey=\"distance\" \n                        label={{ value: 'Distance (km)', position: 'insideBottom', offset: -10 }} \n                      />\n                      <YAxis \n                        label={{ value: 'Altitude (m)', angle: -90, position: 'insideLeft' }} \n                      />\n                      <Tooltip \n                        formatter={(value, name, props) => {\n                          if (name === 'elevation') return [`${value} m`, 'Altitude'];\n                          if (name === 'gradient') return [`${value}%`, 'Pente'];\n                          return [value, name];\n                        }}\n                      />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"elevation\" \n                        stroke=\"#8884d8\" \n                        dot={false} \n                        strokeWidth={3} \n                        isAnimationActive={false} \n                      />\n                      {/* Ajouter des marques pour les segments colorés selon la pente */}\n                      {passData.segmentsByDifficulty && passData.segmentsByDifficulty.flatMap(diffCategory => \n                        diffCategory.segments.map((segment, idx) => (\n                          <Line \n                            key={`${diffCategory.difficulty}-${idx}`}\n                            type=\"monotone\" \n                            dataKey=\"elevation\" \n                            stroke={diffCategory.color} \n                            strokeWidth={5}\n                            dot={false}\n                            activeDot={false}\n                            isAnimationActive={false}\n                            name={`${diffCategory.difficulty} (${segment.avgGradient.toFixed(1)}%)`}\n                            // Dans une implémentation réelle, nous filtrerions les points pour n'inclure que ceux du segment\n                          />\n                        ))\n                      )}\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n                \n                {/* Informations sur le point sélectionné */}\n                {selectedPoint && (\n                  <div className=\"profile-point-info\">\n                    <h3>Point sélectionné</h3>\n                    <div className=\"point-details\">\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Distance</span>\n                        <span className=\"detail-value\">{selectedPoint.distance.toFixed(1)} km</span>\n                      </div>\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Altitude</span>\n                        <span className=\"detail-value\">{selectedPoint.elevation} m</span>\n                      </div>\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Pente</span>\n                        <span className=\"detail-value\">{selectedPoint.gradient.toFixed(1)}%</span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Segments clés */}\n                <div className=\"profile-key-segments\">\n                  <h3>Segments clés</h3>\n                  <div className=\"segments-list\">\n                    {passData.keyPoints && passData.keyPoints.filter(p => p.type === 'key_segment').map((segment, idx) => (\n                      <div key={idx} className={`segment-item severity-${segment.severity}`}>\n                        <div className=\"segment-header\">\n                          <h4>{segment.name}</h4>\n                          <span className=\"segment-gradient\">{segment.gradient.toFixed(1)}%</span>\n                        </div>\n                        <div className=\"segment-details\">\n                          <span>Du km {segment.distanceStart.toFixed(1)} au km {segment.distanceEnd.toFixed(1)}</span>\n                          <span>Longueur: {segment.length.toFixed(1)} km</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {activeView === VIEW_TYPES.VIEW_3D && (\n              <div className=\"pass-visualizer-3d\">\n                <Pass3DViewer passId={passId} />\n              </div>\n            )}\n          </div>\n        </CSSTransition>\n      </TransitionGroup>\n      \n      <div className=\"pass-visualizer-actions\">\n        <button className=\"btn-secondary\" onClick={() => window.history.back()}>\n          Retour à la liste\n        </button>\n        <button className=\"btn-primary\">\n          Ajouter à mon itinéraire\n        </button>\n        <button className=\"btn-secondary\">\n          Télécharger GPX\n        </button>\n        <button className=\"btn-secondary\">\n          Comparer avec un autre col\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PassVisualizer;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { \n  BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, \n  Tooltip as RechartsTooltip, Legend, ResponsiveContainer, ReferenceLine\n} from 'recharts';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from \"jspdf\";\nimport { \n  Box, \n  Paper, \n  Typography, \n  Button, \n  ButtonGroup, \n  Tabs, \n  Tab, \n  CircularProgress, \n  Alert, \n  Table, \n  TableHead, \n  TableBody, \n  TableRow, \n  TableCell,\n  Divider,\n  Stack,\n  Grid\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\n\nconst PassComparison = ({ passId1, passId2 }) => {\n  const [comparisonData, setComparisonData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('elevation');\n  const comparisonRef = useRef(null);\n  const [exportLoading, setExportLoading] = useState(false);\n  const [selectedDataPoint, setSelectedDataPoint] = useState(null);\n  \n  // Charger les données de comparaison\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`/api/visualization/passes/compare/${passId1}/${passId2}`)\n      .then(response => {\n        if (response.data.status === 'success') {\n          setComparisonData(response.data.data);\n        } else {\n          setError('Erreur lors du chargement des données');\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des données de comparaison', err);\n        setError(`Erreur lors de la récupération des données: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [passId1, passId2]);\n\n  // Préparer les données pour les graphiques d'élévation\n  const prepareElevationChartData = () => {\n    if (!comparisonData) return [];\n    \n    const pass1 = comparisonData.pass1;\n    const pass2 = comparisonData.pass2;\n    \n    // Normaliser les profils d'élévation pour avoir le même nombre de points\n    const normalize = (profile, count) => {\n      if (!profile || profile.length === 0) return [];\n      \n      const result = [];\n      const step = profile.length / count;\n      \n      for (let i = 0; i < count; i++) {\n        const idx = Math.floor(i * step);\n        if (profile[idx]) {\n          result.push(profile[idx]);\n        }\n      }\n      \n      return result;\n    };\n    \n    const normalizedCount = 100; // Nombre de points à afficher\n    const profile1 = normalize(pass1.visualization.elevationProfile, normalizedCount);\n    const profile2 = normalize(pass2.visualization.elevationProfile, normalizedCount);\n    \n    // Créer les données pour le graphique\n    return Array.from({ length: normalizedCount }, (_, i) => {\n      const point1 = profile1[i] || [0, 0];\n      const point2 = profile2[i] || [0, 0];\n      \n      return {\n        distance: (i / normalizedCount * 100).toFixed(1) + '%', // Distance en pourcentage\n        elevation1: point1[1],\n        elevation2: point2[1]\n      };\n    });\n  };\n  \n  // Préparer les données pour le graphique de segments par difficulté\n  const prepareSegmentChartData = () => {\n    if (!comparisonData) return [];\n    \n    const comparison = comparisonData.comparison.segmentsByDifficulty;\n    \n    return Object.keys(comparison).map(difficulty => ({\n      difficulty,\n      pass1: comparison[difficulty].percentagePass1,\n      pass2: comparison[difficulty].percentagePass2\n    }));\n  };\n  \n  // Préparer les données pour le graphique de métriques\n  const prepareMetricsChartData = () => {\n    if (!comparisonData) return [];\n    \n    const { length, elevationGain, averageGradient, maxGradient } = comparisonData.comparison;\n    \n    return [\n      {\n        name: 'Longueur (km)',\n        pass1: length.pass1,\n        pass2: length.pass2\n      },\n      {\n        name: 'Dénivelé (m)',\n        pass1: elevationGain.pass1,\n        pass2: elevationGain.pass2\n      },\n      {\n        name: 'Pente moy. (%)',\n        pass1: averageGradient.pass1,\n        pass2: averageGradient.pass2\n      },\n      {\n        name: 'Pente max. (%)',\n        pass1: maxGradient.pass1,\n        pass2: maxGradient.pass2\n      }\n    ];\n  };\n  \n  // Exporter au format PDF\n  const exportToPDF = () => {\n    if (!comparisonRef.current) return;\n    \n    html2canvas(comparisonRef.current, {\n      scale: 2,\n      logging: false,\n      useCORS: true\n    }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('l', 'mm', 'a4');\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = pdf.internal.pageSize.getHeight();\n      const imgWidth = canvas.width;\n      const imgHeight = canvas.height;\n      const ratio = Math.min(pdfWidth / imgWidth, pdfHeight / imgHeight);\n      const imgX = (pdfWidth - imgWidth * ratio) / 2;\n      const imgY = 30;\n      \n      // Ajouter le titre\n      pdf.setFontSize(18);\n      pdf.text(`Comparaison: ${comparisonData.pass1.name} vs. ${comparisonData.pass2.name}`, 14, 20);\n      \n      // Ajouter l'image\n      pdf.addImage(imgData, 'PNG', imgX, imgY, imgWidth * ratio, imgHeight * ratio);\n      \n      pdf.save(`Comparaison-${comparisonData.pass1.name}-${comparisonData.pass2.name}.pdf`);\n    });\n  };\n  \n  // Exporter au format image\n  const exportToImage = () => {\n    if (!comparisonRef.current) return;\n    \n    html2canvas(comparisonRef.current, {\n      scale: 2,\n      logging: false,\n      useCORS: true\n    }).then(canvas => {\n      const link = document.createElement('a');\n      link.download = `Comparaison-${comparisonData.pass1.name}-${comparisonData.pass2.name}.png`;\n      link.href = canvas.toDataURL('image/png');\n      link.click();\n    });\n  };\n  \n  // Styled components pour un design plus moderne\n  const ComparisonContainer = styled(Box)(({ theme }) => ({\n    padding: theme.spacing(1),\n  }));\n\n  const ChartContainer = styled(Box)(({ theme }) => ({\n    height: '400px',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    borderRadius: theme.shape.borderRadius,\n    overflow: 'hidden',\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',\n    backgroundColor: theme.palette.background.paper,\n  }));\n\n  const TabPanel = styled(Box)(({ theme }) => ({\n    padding: theme.spacing(3, 0),\n  }));\n\n  const StyledTabs = styled(Tabs)(({ theme }) => ({\n    marginBottom: theme.spacing(2),\n    '& .MuiTabs-indicator': {\n      height: 3,\n      borderTopLeftRadius: 3,\n      borderTopRightRadius: 3,\n    },\n  }));\n\n  const TableStyled = styled(Table)(({ theme }) => ({\n    '.positive': {\n      color: theme.palette.success.main,\n      fontWeight: 'bold',\n    },\n    '.negative': {\n      color: theme.palette.error.main,\n      fontWeight: 'bold',\n    },\n    'th': {\n      fontWeight: 'bold',\n      backgroundColor: theme.palette.mode === 'light' \n        ? theme.palette.grey[100] \n        : theme.palette.grey[800],\n    }\n  }));\n\n  const ExportButtonsContainer = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    justifyContent: 'flex-end',\n    gap: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  }));\n\n  const PassInfoCard = styled(Paper)(({ theme }) => ({\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.05)',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  }));\n\n  const KeyMetric = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(1),\n  }));\n\n  // Si chargement en cours\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Si erreur\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ my: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  // Si pas de données\n  if (!comparisonData) {\n    return (\n      <Alert severity=\"info\" sx={{ my: 2 }}>\n        Données non disponibles pour la comparaison\n      </Alert>\n    );\n  }\n\n  const { pass1, pass2, comparison } = comparisonData;\n  \n  // Texte d'analyse\n  const analysisText = [\n    `${pass1.name} ${comparison.length.difference > 0 ? 'est plus long de' : 'est plus court de'} ${Math.abs(comparison.length.difference).toFixed(1)} km par rapport à ${pass2.name}.`,\n    `Le dénivelé de ${pass1.name} est ${comparison.elevationGain.difference > 0 ? 'supérieur de' : 'inférieur de'} ${Math.abs(comparison.elevationGain.difference)} m.`,\n    `${comparison.difficulty.comparison}`,\n    `${pass1.name} présente des segments ${Object.keys(comparison.segmentsByDifficulty).length > 0 ? Object.keys(comparison.segmentsByDifficulty).reduce((acc, key) => {\n      if (comparison.segmentsByDifficulty[key].percentagePass1 > comparison.segmentsByDifficulty[key].percentagePass2) {\n        return `${acc}${acc ? ' et ' : ''}plus ${key}`;\n      }\n      return acc;\n    }, '') : ''}.`\n  ];\n\n  return (\n    <ComparisonContainer ref={comparisonRef}>\n      <Typography variant=\"h4\" gutterBottom>\n        Comparaison : {pass1.name} vs {pass2.name}\n      </Typography>\n      \n      <ExportButtonsContainer>\n        <ButtonGroup variant=\"outlined\" size=\"small\">\n          <Button startIcon={<PictureAsPdfIcon />} onClick={exportToPDF}>\n            Exporter en PDF\n          </Button>\n          <Button startIcon={<ImageIcon />} onClick={exportToImage}>\n            Exporter en image\n          </Button>\n        </ButtonGroup>\n      </ExportButtonsContainer>\n      \n      <StyledTabs \n        value={activeTab} \n        onChange={(e, newValue) => setActiveTab(newValue)}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n        aria-label=\"onglets de comparaison\"\n        sx={{ mb: 3 }}\n      >\n        <Tab \n          label=\"Profil d'élévation\" \n          value=\"elevation\" \n          icon={<TimelineIcon />} \n          iconPosition=\"start\"\n        />\n        <Tab \n          label=\"Segments\" \n          value=\"segments\" \n          icon={<BarChartIcon />} \n          iconPosition=\"start\"\n        />\n        <Tab \n          label=\"Métriques\" \n          value=\"metrics\" \n          icon={<AssessmentIcon />} \n          iconPosition=\"start\"\n        />\n      </StyledTabs>\n      \n      {activeTab === 'elevation' && (\n        <ChartContainer>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={prepareElevationChartData()}\n              margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\n              onMouseMove={(data) => {\n                if (data && data.activePayload) {\n                  setSelectedDataPoint(data.activePayload[0].payload);\n                }\n              }}\n              onMouseLeave={() => setSelectedDataPoint(null)}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" opacity={0.5} />\n              <XAxis \n                dataKey=\"distance\" \n                label={{ \n                  value: 'Progression (%)', \n                  position: 'insideBottomRight', \n                  offset: -5 \n                }} \n              />\n              <YAxis \n                label={{ \n                  value: 'Altitude (m)', \n                  angle: -90, \n                  position: 'insideLeft',\n                  style: { textAnchor: 'middle' }\n                }} \n              />\n              <RechartsTooltip \n                content={({ active, payload }) => {\n                  if (active && payload && payload.length) {\n                    return (\n                      <Paper \n                        elevation={3} \n                        sx={{ \n                          p: 1.5, \n                          backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                          borderRadius: 1,\n                          boxShadow: '0 3px 14px rgba(0, 0, 0, 0.15)',\n                          borderLeft: '4px solid',\n                          borderColor: 'primary.main'\n                        }}\n                      >\n                        <Typography variant=\"subtitle2\">\n                          Distance: {payload[0].payload.distance}\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#8884d8', fontWeight: 'bold' }}>\n                          {pass1.name}: {payload[0].value} m\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#82ca9d', fontWeight: 'bold' }}>\n                          {pass2.name}: {payload[1].value} m\n                        </Typography>\n                        <Typography variant=\"caption\" sx={{ color: 'text.secondary', pt: 0.5, display: 'block' }}>\n                          Différence: {Math.abs(payload[0].value - payload[1].value)} m\n                        </Typography>\n                      </Paper>\n                    );\n                  }\n                  return null;\n                }}\n              />\n              <Legend \n                payload={[\n                  { value: pass1.name, type: 'line', color: '#8884d8' },\n                  { value: pass2.name, type: 'line', color: '#82ca9d' }\n                ]}\n                wrapperStyle={{ paddingTop: 10 }}\n              />\n              <Line \n                type=\"monotone\" \n                dataKey=\"elevation1\" \n                stroke=\"#8884d8\" \n                strokeWidth={3}\n                activeDot={{ r: 8, strokeWidth: 0, fill: '#8884d8' }} \n                dot={false}\n                name={pass1.name}\n              />\n              <Line \n                type=\"monotone\" \n                dataKey=\"elevation2\" \n                stroke=\"#82ca9d\" \n                strokeWidth={3} \n                activeDot={{ r: 8, strokeWidth: 0, fill: '#82ca9d' }} \n                dot={false} \n                name={pass2.name}\n              />\n              \n              {/* Points critiques */}\n              {comparisonData && comparisonData.comparison.criticalPoints && comparisonData.comparison.criticalPoints.map((point, index) => (\n                <ReferenceLine \n                  key={index}\n                  x={point.distance + '%'} \n                  stroke=\"#ff7300\"\n                  strokeWidth={2}\n                  strokeDasharray=\"5 5\"\n                  label={{ \n                    value: point.name, \n                    position: 'top',\n                    fill: '#ff7300',\n                    fontSize: 12,\n                    fontWeight: 'bold'\n                  }}\n                />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </ChartContainer>\n      )}\n      \n      {activeTab === 'segments' && (\n        <ChartContainer>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={prepareSegmentChartData()}\n              margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" opacity={0.5} />\n              <XAxis \n                dataKey=\"difficulty\" \n                label={{ \n                  value: 'Niveau de difficulté', \n                  position: 'insideBottomRight', \n                  offset: -5 \n                }} \n              />\n              <YAxis \n                label={{ \n                  value: 'Pourcentage du parcours (%)', \n                  angle: -90, \n                  position: 'insideLeft',\n                  style: { textAnchor: 'middle' }\n                }} \n              />\n              <RechartsTooltip \n                content={({ active, payload, label }) => {\n                  if (active && payload && payload.length) {\n                    return (\n                      <Paper \n                        elevation={3} \n                        sx={{ \n                          p: 1.5, \n                          backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                          borderRadius: 1,\n                          boxShadow: '0 3px 14px rgba(0, 0, 0, 0.15)',\n                          borderLeft: '4px solid',\n                          borderColor: 'primary.main'\n                        }}\n                      >\n                        <Typography variant=\"subtitle2\">\n                          Difficulté: {label}\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#8884d8', fontWeight: 'bold' }}>\n                          {pass1.name}: {payload[0].value.toFixed(1)}%\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#82ca9d', fontWeight: 'bold' }}>\n                          {pass2.name}: {payload[1].value.toFixed(1)}%\n                        </Typography>\n                        <Typography variant=\"caption\" sx={{ color: 'text.secondary', pt: 0.5, display: 'block' }}>\n                          Différence: {Math.abs(payload[0].value - payload[1].value).toFixed(1)}%\n                        </Typography>\n                      </Paper>\n                    );\n                  }\n                  return null;\n                }}\n              />\n              <Legend \n                payload={[\n                  { value: pass1.name, type: 'rect', color: '#8884d8' },\n                  { value: pass2.name, type: 'rect', color: '#82ca9d' }\n                ]}\n              />\n              <Bar \n                dataKey=\"pass1\" \n                fill=\"#8884d8\" \n                name={pass1.name} \n                radius={[4, 4, 0, 0]}\n              />\n              <Bar \n                dataKey=\"pass2\" \n                fill=\"#82ca9d\" \n                name={pass2.name} \n                radius={[4, 4, 0, 0]}\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </ChartContainer>\n      )}\n      \n      {activeTab === 'metrics' && (\n        <ChartContainer>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={prepareMetricsChartData()}\n              margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              layout=\"vertical\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" opacity={0.5} horizontal={true} vertical={false} />\n              <XAxis type=\"number\" />\n              <YAxis \n                type=\"category\" \n                dataKey=\"name\" \n                width={150}\n                tickLine={false}\n                axisLine={false}\n              />\n              <RechartsTooltip \n                content={({ active, payload, label }) => {\n                  if (active && payload && payload.length) {\n                    let unit = \"\";\n                    if (label.includes(\"Longueur\")) unit = \" km\";\n                    else if (label.includes(\"Dénivelé\")) unit = \" m\";\n                    else if (label.includes(\"Pente\")) unit = \"%\";\n                    \n                    return (\n                      <Paper \n                        elevation={3} \n                        sx={{ \n                          p: 1.5, \n                          backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                          borderRadius: 1,\n                          boxShadow: '0 3px 14px rgba(0, 0, 0, 0.15)',\n                          borderLeft: '4px solid',\n                          borderColor: 'primary.main'\n                        }}\n                      >\n                        <Typography variant=\"subtitle2\">\n                          {label}\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#8884d8', fontWeight: 'bold' }}>\n                          {pass1.name}: {payload[0].value}{unit}\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#82ca9d', fontWeight: 'bold' }}>\n                          {pass2.name}: {payload[1].value}{unit}\n                        </Typography>\n                        <Typography variant=\"caption\" sx={{ color: 'text.secondary', pt: 0.5, display: 'block' }}>\n                          Différence: {Math.abs(payload[0].value - payload[1].value).toFixed(1)}{unit}\n                        </Typography>\n                      </Paper>\n                    );\n                  }\n                  return null;\n                }}\n              />\n              <Legend \n                payload={[\n                  { value: pass1.name, type: 'rect', color: '#8884d8' },\n                  { value: pass2.name, type: 'rect', color: '#82ca9d' }\n                ]}\n              />\n              <Bar dataKey=\"pass1\" fill=\"#8884d8\" name={pass1.name} radius={[0, 4, 4, 0]} />\n              <Bar dataKey=\"pass2\" fill=\"#82ca9d\" name={pass2.name} radius={[0, 4, 4, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        </ChartContainer>\n      )}\n      \n      <Grid container spacing={3} sx={{ mt: 2 }}>\n        <Grid item xs={12} md={6}>\n          <PassInfoCard>\n            <Typography variant=\"h6\" component=\"h3\" gutterBottom color=\"primary\">\n              {pass1.name}\n            </Typography>\n            \n            <KeyMetric>\n              <Box sx={{ bgcolor: 'primary.light', p: 1, borderRadius: 2, minWidth: 40, textAlign: 'center' }}>\n                <Typography variant=\"body2\" fontWeight=\"bold\" color=\"primary.contrastText\">\n                  {comparison.difficulty.pass1}\n                </Typography>\n              </Box>\n              <Typography variant=\"body1\">\n                Difficulté globale\n              </Typography>\n            </KeyMetric>\n            \n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, my: 1 }}>\n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <i className=\"fas fa-ruler-combined\" style={{ marginRight: '8px' }} />\n                {comparison.length.pass1} km\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <i className=\"fas fa-mountain\" style={{ marginRight: '8px' }} />\n                {comparison.elevationGain.pass1} m D+\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <i className=\"fas fa-angle-up\" style={{ marginRight: '8px' }} />\n                {comparison.averageGradient.pass1.toFixed(1)}% moyenne\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center' }}>\n                <i className=\"fas fa-angle-double-up\" style={{ marginRight: '8px' }} />\n                {comparison.maxGradient.pass1.toFixed(1)}% max\n              </Typography>\n            </Box>\n            \n            {pass1.keyPoints && (\n              <Box mt={1}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Points clés:\n                </Typography>\n                <Box component=\"ul\" sx={{ pl: 2, mb: 0, mt: 0.5 }}>\n                  {pass1.keyPoints.map((point, idx) => (\n                    <Typography component=\"li\" key={idx} variant=\"body2\">\n                      {point}\n                    </Typography>\n                  ))}\n                </Box>\n              </Box>\n            )}\n          </PassInfoCard>\n        </Grid>\n        \n        <Grid item xs={12} md={6}>\n          <PassInfoCard>\n            <Typography variant=\"h6\" component=\"h3\" gutterBottom color=\"secondary\">\n              {pass2.name}\n            </Typography>\n            \n            <KeyMetric>\n              <Box sx={{ bgcolor: 'secondary.light', p: 1, borderRadius: 2, minWidth: 40, textAlign: 'center' }}>\n                <Typography variant=\"body2\" fontWeight=\"bold\" color=\"secondary.contrastText\">\n                  {comparison.difficulty.pass2}\n                </Typography>\n              </Box>\n              <Typography variant=\"body1\">\n                Difficulté globale\n              </Typography>\n            </KeyMetric>\n            \n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, my: 1 }}>\n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <i className=\"fas fa-ruler-combined\" style={{ marginRight: '8px' }} />\n                {comparison.length.pass2} km\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <i className=\"fas fa-mountain\" style={{ marginRight: '8px' }} />\n                {comparison.elevationGain.pass2} m D+\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <i className=\"fas fa-angle-up\" style={{ marginRight: '8px' }} />\n                {comparison.averageGradient.pass2.toFixed(1)}% moyenne\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center' }}>\n                <i className=\"fas fa-angle-double-up\" style={{ marginRight: '8px' }} />\n                {comparison.maxGradient.pass2.toFixed(1)}% max\n              </Typography>\n            </Box>\n            \n            {pass2.keyPoints && (\n              <Box mt={1}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Points clés:\n                </Typography>\n                <Box component=\"ul\" sx={{ pl: 2, mb: 0, mt: 0.5 }}>\n                  {pass2.keyPoints.map((point, idx) => (\n                    <Typography component=\"li\" key={idx} variant=\"body2\">\n                      {point}\n                    </Typography>\n                  ))}\n                </Box>\n              </Box>\n            )}\n          </PassInfoCard>\n        </Grid>\n      </Grid>\n      \n      <Box mt={4} mb={3}>\n        <Typography variant=\"h6\" gutterBottom>\n          Tableau comparatif\n        </Typography>\n        <TableStyled>\n          <TableHead>\n            <TableRow>\n              <TableCell>Métrique</TableCell>\n              <TableCell>{pass1.name}</TableCell>\n              <TableCell>{pass2.name}</TableCell>\n              <TableCell>Différence</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>Longueur</TableCell>\n              <TableCell>{comparison.length.pass1} km</TableCell>\n              <TableCell>{comparison.length.pass2} km</TableCell>\n              <TableCell className={comparison.length.difference > 0 ? 'positive' : 'negative'}>\n                {Math.abs(comparison.length.difference).toFixed(1)} km {comparison.length.difference > 0 ? 'de plus' : 'de moins'}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Dénivelé</TableCell>\n              <TableCell>{comparison.elevationGain.pass1} m</TableCell>\n              <TableCell>{comparison.elevationGain.pass2} m</TableCell>\n              <TableCell className={comparison.elevationGain.difference > 0 ? 'positive' : 'negative'}>\n                {Math.abs(comparison.elevationGain.difference)} m {comparison.elevationGain.difference > 0 ? 'de plus' : 'de moins'}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Pente moyenne</TableCell>\n              <TableCell>{comparison.averageGradient.pass1.toFixed(1)} %</TableCell>\n              <TableCell>{comparison.averageGradient.pass2.toFixed(1)} %</TableCell>\n              <TableCell className={comparison.averageGradient.difference > 0 ? 'positive' : 'negative'}>\n                {Math.abs(comparison.averageGradient.difference).toFixed(1)} % {comparison.averageGradient.difference > 0 ? 'de plus' : 'de moins'}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Pente maximale</TableCell>\n              <TableCell>{comparison.maxGradient.pass1.toFixed(1)} %</TableCell>\n              <TableCell>{comparison.maxGradient.pass2.toFixed(1)} %</TableCell>\n              <TableCell className={comparison.maxGradient.difference > 0 ? 'positive' : 'negative'}>\n                {Math.abs(comparison.maxGradient.difference).toFixed(1)} % {comparison.maxGradient.difference > 0 ? 'de plus' : 'de moins'}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Difficulté</TableCell>\n              <TableCell>{comparison.difficulty.pass1}</TableCell>\n              <TableCell>{comparison.difficulty.pass2}</TableCell>\n              <TableCell>{comparison.difficulty.comparison}</TableCell>\n            </TableRow>\n          </TableBody>\n        </TableStyled>\n      </Box>\n      \n      <Box mt={4}>\n        <Typography variant=\"h6\" gutterBottom>\n          Analyse comparative pour cyclistes\n        </Typography>\n        <Paper elevation={1} sx={{ p: 3, backgroundColor: 'background.paper', borderRadius: 2 }}>\n          {analysisText.map((text, index) => (\n            <Typography key={index} paragraph mb={index === analysisText.length - 1 ? 0 : 2}>\n              {text}\n            </Typography>\n          ))}\n          \n          <Box mt={3} p={2} sx={{ backgroundColor: 'action.hover', borderRadius: 1, border: '1px solid', borderColor: 'divider' }}>\n            <Typography variant=\"subtitle2\" gutterBottom>\n              Recommandation pour cyclistes:\n            </Typography>\n            <Typography variant=\"body2\">\n              {pass1.name} est {comparison.recommendedFor.pass1}\n            </Typography>\n            <Typography variant=\"body2\">\n              {pass2.name} est {comparison.recommendedFor.pass2}\n            </Typography>\n          </Box>\n        </Paper>\n      </Box>\n    </ComparisonContainer>\n  );\n};\n\nexport default PassComparison;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './RouteAlternatives.css';\n\n// Constantes pour les styles de carte\nconst MAPBOX_TOKEN = 'YOUR_MAPBOX_TOKEN'; // À remplacer par une clé réelle dans un environnement de production\nconst mapStyle = 'mapbox://styles/mapbox/outdoors-v11';\n\n// Icônes pour les conditions météo\nconst weatherIcons = {\n  rain: { icon: '🌧️', color: '#3498db', text: 'Pluie' },\n  wind: { icon: '💨', color: '#7f8c8d', text: 'Vent' },\n  cold: { icon: '❄️', color: '#9b59b6', text: 'Froid' },\n  heat: { icon: '🔥', color: '#e74c3c', text: 'Chaleur' },\n  storm: { icon: '⚡', color: '#f39c12', text: 'Orage' }\n};\n\n// Composant pour les conditions météo\nconst WeatherConditions = ({ issues }) => {\n  if (!issues || issues.length === 0) {\n    return (\n      <div className=\"route-weather-conditions favorable\">\n        <div className=\"weather-icon\">☀️</div>\n        <div className=\"weather-info\">\n          <h4>Conditions favorables</h4>\n          <p>Aucun problème météo identifié pour cet itinéraire</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"route-weather-conditions unfavorable\">\n      <div className=\"weather-icons\">\n        {issues.map((issue, index) => (\n          <div \n            key={index} \n            className=\"weather-icon\" \n            style={{ backgroundColor: weatherIcons[issue.type]?.color }}\n          >\n            {weatherIcons[issue.type]?.icon}\n          </div>\n        ))}\n      </div>\n      <div className=\"weather-info\">\n        <h4>Conditions défavorables</h4>\n        <ul>\n          {issues.map((issue, index) => (\n            <li key={index} className={`severity-${issue.severity}`}>{issue.description}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\n// Composant principal pour les itinéraires alternatifs\nconst RouteAlternatives = ({ routeId }) => {\n  const [alternatives, setAlternatives] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('weather');\n  const [selectedRouteIndex, setSelectedRouteIndex] = useState(0);\n  const [viewState, setViewState] = useState({\n    longitude: 2.3488,  // Centre de la France\n    latitude: 46.8534,\n    zoom: 6\n  });\n\n  // Simuler les conditions météo (dans une application réelle, ces données viendraient d'une API météo)\n  const [weatherConditions, setWeatherConditions] = useState({\n    precipitation: 18,\n    temperature: 28,\n    windSpeed: 35,\n    stormRisk: false\n  });\n\n  // Profil utilisateur (dans une application réelle, ces données viendraient du profil authentifié)\n  const [userProfile, setUserProfile] = useState({\n    level: 'intermediate', // beginner, intermediate, advanced, expert\n    withChildren: false,\n    preferences: ['cultural', 'landscape']\n  });\n\n  // Charger les alternatives basées sur la météo\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`/api/route-alternatives/${routeId}/weather-alternatives`, {\n      params: weatherConditions\n    })\n      .then(response => {\n        if (response.data.status === 'success') {\n          setAlternatives(prev => ({ ...prev, weather: response.data.data }));\n        } else {\n          console.error('Erreur dans la réponse:', response.data);\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des alternatives météo:', err);\n        setError(`Erreur lors de la récupération des alternatives: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [routeId, weatherConditions]);\n\n  // Charger les variantes basées sur le profil\n  useEffect(() => {\n    setLoading(true);\n    axios.post(`/api/route-alternatives/${routeId}/profile-variants`, userProfile)\n      .then(response => {\n        if (response.data.status === 'success') {\n          setAlternatives(prev => ({ ...prev, profile: response.data.data }));\n        } else {\n          console.error('Erreur dans la réponse:', response.data);\n        }\n      })\n      .catch(err => {\n        console.error('Erreur lors de la récupération des variantes de profil:', err);\n        setError(`Erreur lors de la récupération des variantes: ${err.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [routeId, userProfile]);\n\n  // Fonction pour mettre à jour les conditions météo\n  const updateWeatherCondition = (condition, value) => {\n    setWeatherConditions(prev => ({ ...prev, [condition]: value }));\n  };\n\n  // Fonction pour mettre à jour le profil utilisateur\n  const updateUserProfile = (field, value) => {\n    setUserProfile(prev => {\n      if (field === 'preferences') {\n        // Si la préférence existe déjà, la retirer, sinon l'ajouter\n        const updatedPreferences = prev.preferences.includes(value)\n          ? prev.preferences.filter(pref => pref !== value)\n          : [...prev.preferences, value];\n        \n        return { ...prev, preferences: updatedPreferences };\n      }\n      return { ...prev, [field]: value };\n    });\n  };\n\n  // Sélectionner le bon tableau de routes à afficher selon l'onglet actif\n  const getRoutesToDisplay = () => {\n    if (!alternatives) return [];\n    \n    if (activeTab === 'weather') {\n      return [\n        alternatives.weather?.originalRoute,\n        ...(alternatives.weather?.alternatives || [])\n      ].filter(Boolean);\n    }\n    \n    if (activeTab === 'profile') {\n      return [\n        alternatives.profile?.originalRoute,\n        ...(alternatives.profile?.variants || [])\n      ].filter(Boolean);\n    }\n    \n    return [];\n  };\n\n  const routes = getRoutesToDisplay();\n  const selectedRoute = routes[selectedRouteIndex] || null;\n\n  // Centrer la carte sur l'itinéraire sélectionné\n  useEffect(() => {\n    if (selectedRoute && selectedRoute.boundingBox) {\n      setViewState({\n        longitude: (selectedRoute.boundingBox[0] + selectedRoute.boundingBox[2]) / 2,\n        latitude: (selectedRoute.boundingBox[1] + selectedRoute.boundingBox[3]) / 2,\n        zoom: 10\n      });\n    }\n  }, [selectedRouteIndex, selectedRoute]);\n\n  if (loading && !alternatives) {\n    return <div className=\"route-alternatives-loading\">Chargement des alternatives...</div>;\n  }\n\n  if (error) {\n    return <div className=\"route-alternatives-error\">Erreur: {error}</div>;\n  }\n\n  return (\n    <div className=\"route-alternatives-container\">\n      <div className=\"route-alternatives-header\">\n        <h2>Alternatives d'itinéraires</h2>\n        <div className=\"route-alternatives-tabs\">\n          <button\n            className={activeTab === 'weather' ? 'active' : ''}\n            onClick={() => setActiveTab('weather')}\n          >\n            Alternatives météo\n          </button>\n          <button\n            className={activeTab === 'profile' ? 'active' : ''}\n            onClick={() => setActiveTab('profile')}\n          >\n            Variantes de profil\n          </button>\n        </div>\n      </div>\n\n      {activeTab === 'weather' && (\n        <div className=\"weather-controls\">\n          <h3>Conditions météo actuelles</h3>\n          <div className=\"weather-sliders\">\n            <div className=\"weather-slider\">\n              <label>Précipitation (mm): {weatherConditions.precipitation}mm</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"50\"\n                value={weatherConditions.precipitation}\n                onChange={(e) => updateWeatherCondition('precipitation', parseInt(e.target.value))}\n              />\n            </div>\n            <div className=\"weather-slider\">\n              <label>Température (°C): {weatherConditions.temperature}°C</label>\n              <input\n                type=\"range\"\n                min=\"-10\"\n                max=\"40\"\n                value={weatherConditions.temperature}\n                onChange={(e) => updateWeatherCondition('temperature', parseInt(e.target.value))}\n              />\n            </div>\n            <div className=\"weather-slider\">\n              <label>Vitesse du vent (km/h): {weatherConditions.windSpeed}km/h</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                value={weatherConditions.windSpeed}\n                onChange={(e) => updateWeatherCondition('windSpeed', parseInt(e.target.value))}\n              />\n            </div>\n            <div className=\"weather-checkbox\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={weatherConditions.stormRisk}\n                  onChange={(e) => updateWeatherCondition('stormRisk', e.target.checked)}\n                />\n                Risque d'orage\n              </label>\n            </div>\n          </div>\n\n          {alternatives?.weather && (\n            <WeatherConditions issues={alternatives.weather.weatherIssues || []} />\n          )}\n        </div>\n      )}\n\n      {activeTab === 'profile' && (\n        <div className=\"profile-controls\">\n          <h3>Votre profil</h3>\n          <div className=\"profile-selectors\">\n            <div className=\"profile-selector\">\n              <label>Niveau</label>\n              <div className=\"profile-buttons\">\n                {['beginner', 'intermediate', 'advanced', 'expert'].map(level => (\n                  <button\n                    key={level}\n                    className={userProfile.level === level ? 'active' : ''}\n                    onClick={() => updateUserProfile('level', level)}\n                  >\n                    {level === 'beginner' ? 'Débutant' : \n                     level === 'intermediate' ? 'Intermédiaire' :\n                     level === 'advanced' ? 'Avancé' : 'Expert'}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <div className=\"profile-selector\">\n              <label>Voyagez-vous avec des enfants?</label>\n              <div className=\"profile-buttons\">\n                <button\n                  className={userProfile.withChildren ? 'active' : ''}\n                  onClick={() => updateUserProfile('withChildren', true)}\n                >\n                  Oui\n                </button>\n                <button\n                  className={!userProfile.withChildren ? 'active' : ''}\n                  onClick={() => updateUserProfile('withChildren', false)}\n                >\n                  Non\n                </button>\n              </div>\n            </div>\n            <div className=\"profile-selector\">\n              <label>Préférences (sélectionnez-en plusieurs)</label>\n              <div className=\"profile-buttons\">\n                {[\n                  { id: 'cultural', label: 'Culture' },\n                  { id: 'performance', label: 'Performance' },\n                  { id: 'relaxed', label: 'Détente' },\n                  { id: 'landscape', label: 'Paysages' }\n                ].map(pref => (\n                  <button\n                    key={pref.id}\n                    className={userProfile.preferences.includes(pref.id) ? 'active' : ''}\n                    onClick={() => updateUserProfile('preferences', pref.id)}\n                  >\n                    {pref.label}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {alternatives?.profile && (\n            <div className=\"recommended-profile\">\n              <h4>Profil recommandé pour vous: </h4>\n              <span className=\"recommended-type\">\n                {alternatives.profile.recommendedType === 'sportive' ? 'Sportif' : \n                 alternatives.profile.recommendedType === 'touristic' ? 'Touristique' : 'Famille'}\n              </span>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"route-comparison-container\">\n        <div className=\"route-list\">\n          <h3>Itinéraires disponibles</h3>\n          <div className=\"route-buttons\">\n            {routes.map((route, index) => (\n              <button\n                key={route.id || index}\n                className={`route-button ${selectedRouteIndex === index ? 'active' : ''} ${route.type || ''}`}\n                onClick={() => setSelectedRouteIndex(index)}\n              >\n                <span className=\"route-name\">{route.name}</span>\n                {route.reason && <span className=\"route-reason\">{route.reason}</span>}\n                {route.suitability && (\n                  <div className=\"route-suitability\">\n                    <div className=\"suitability-bar\" style={{ width: `${route.suitability.score}%` }}></div>\n                    <span className=\"suitability-text\">{route.suitability.description}</span>\n                  </div>\n                )}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"route-details\">\n          {selectedRoute ? (\n            <>\n              <div className=\"route-map\">\n                <ReactMapGL\n                  {...viewState}\n                  onMove={evt => setViewState(evt.viewState)}\n                  style={{ width: '100%', height: '100%' }}\n                  mapStyle={mapStyle}\n                  mapboxAccessToken={MAPBOX_TOKEN}\n                >\n                  {/* Dans une implémentation réelle, nous ajouterions des couches\n                      pour visualiser les itinéraires sur la carte */}\n                </ReactMapGL>\n              </div>\n\n              <div className=\"route-info-panel\">\n                <h3>{selectedRoute.name}</h3>\n                <p>{selectedRoute.description}</p>\n                \n                <div className=\"route-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Distance</span>\n                    <span className=\"stat-value\">{selectedRoute.totalDistance} km</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Dénivelé</span>\n                    <span className=\"stat-value\">{selectedRoute.totalElevation} m</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Durée estimée</span>\n                    <span className=\"stat-value\">\n                      {Math.floor(selectedRoute.estimatedTime / 60)}h{selectedRoute.estimatedTime % 60 ? ` ${selectedRoute.estimatedTime % 60}min` : ''}\n                    </span>\n                  </div>\n                  {selectedRoute.difficultyChange && (\n                    <div className=\"stat-item\">\n                      <span className=\"stat-label\">Changement de difficulté</span>\n                      <span className=\"stat-value\">{selectedRoute.difficultyChange}</span>\n                    </div>\n                  )}\n                </div>\n\n                {selectedRoute.highlights && selectedRoute.highlights.length > 0 && (\n                  <div className=\"route-highlights\">\n                    <h4>Points forts</h4>\n                    <ul>\n                      {selectedRoute.highlights.map((highlight, idx) => (\n                        <li key={idx}>{highlight}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n\n                {selectedRoute.safetyPoints && selectedRoute.safetyPoints.length > 0 && (\n                  <div className=\"route-safety\">\n                    <h4>Points de sécurité</h4>\n                    <ul>\n                      {selectedRoute.safetyPoints.map((point, idx) => (\n                        <li key={idx}>{point.name} - {point.description}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                \n                <div className=\"route-actions\">\n                  <button className=\"btn-primary\">Utiliser cet itinéraire</button>\n                  <button className=\"btn-secondary\">Télécharger GPX</button>\n                  <button className=\"btn-secondary\">Voir détails</button>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"no-route-selected\">\n              Sélectionnez un itinéraire pour voir ses détails\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RouteAlternatives;\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Typography,\n  Button,\n  Chip,\n  Divider,\n  Box,\n  IconButton,\n  Collapse,\n  useTheme,\n  alpha,\n  Link,\n  Tooltip\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n  ExpandMore as ExpandMoreIcon,\n  Favorite as FavoriteIcon,\n  FavoriteBorder as FavoriteBorderIcon,\n  Share as ShareIcon,\n  Terrain as TerrainIcon,\n  Route as RouteIcon,\n  Visibility as VisibilityIcon,\n  BookmarkBorder as BookmarkBorderIcon,\n  Bookmark as BookmarkIcon,\n  ArrowForward as ArrowForwardIcon\n} from '@mui/icons-material';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// Styled components\nconst StyledCard = styled(Card)(({ theme, variant }) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  transition: 'transform 0.3s, box-shadow 0.3s',\n  borderRadius: '16px',\n  ...variant === 'compact' && {\n    maxWidth: 345,\n    height: '100%',\n  },\n  ...variant === 'expanded' && {\n    maxWidth: '100%',\n    marginBottom: theme.spacing(3),\n  },\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: theme.shadows[10],\n  }\n}));\n\nconst CardOverlay = styled(Box)(({ theme, overlay }) => ({\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  background: overlay === 'dark' \n    ? 'linear-gradient(to top, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.4) 50%, rgba(0,0,0,0) 100%)'\n    : 'linear-gradient(to top, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 50%, rgba(255,255,255,0) 100%)',\n  padding: theme.spacing(2),\n  transition: 'opacity 0.3s',\n  color: overlay === 'dark' ? '#fff' : theme.palette.text.primary,\n}));\n\nconst ExpandButton = styled(IconButton)(({ theme, expanded }) => ({\n  transform: expanded ? 'rotate(180deg)' : 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nconst StatsChip = styled(Chip)(({ theme }) => ({\n  margin: theme.spacing(0.5),\n  '& .MuiChip-icon': {\n    color: 'inherit',\n  },\n}));\n\nconst ActionButton = styled(Button)(({ theme }) => ({\n  textTransform: 'none',\n  fontWeight: 600,\n  paddingLeft: theme.spacing(1),\n  paddingRight: theme.spacing(1),\n  minWidth: 0,\n}));\n\nconst StyledCardMedia = styled(CardMedia)(({ theme, variant }) => ({\n  height: variant === 'compact' ? 140 : 300,\n  position: 'relative',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n}));\n\n// Animation variants\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { \n    opacity: 1, \n    y: 0,\n    transition: { \n      duration: 0.6,\n      ease: 'easeOut'\n    }\n  },\n  hover: {\n    scale: 1.03,\n    boxShadow: '0px 10px 30px rgba(0, 0, 0, 0.1)',\n    transition: { \n      duration: 0.3\n    }\n  }\n};\n\nconst detailsVariants = {\n  collapsed: { height: 0, opacity: 0 },\n  expanded: { \n    height: 'auto',\n    opacity: 1,\n    transition: {\n      height: {\n        duration: 0.3\n      },\n      opacity: {\n        delay: 0.1,\n        duration: 0.3\n      }\n    }\n  }\n};\n\n/**\n * VisualizationCard - Composant de carte pour afficher les visualisations de cols et itinéraires\n * \n * @param {Object} props - Propriétés du composant\n * @param {string} props.id - Identifiant unique de la visualisation\n * @param {string} props.title - Titre de la visualisation\n * @param {string} props.subtitle - Sous-titre ou description courte\n * @param {string} props.image - URL de l'image d'aperçu\n * @param {string} props.type - Type de visualisation ('col' ou 'route')\n * @param {string} props.location - Localisation de la visualisation\n * @param {Object} props.stats - Statistiques (difficulté, distance, dénivelé, etc.)\n * @param {Object[]} props.details - Détails supplémentaires à afficher dans la section expandable\n * @param {string} props.detailsUrl - URL pour afficher la visualisation complète\n * @param {string} props.variant - Variante d'affichage ('compact' ou 'expanded')\n * @param {boolean} props.isFavorite - Si la visualisation est dans les favoris\n * @param {boolean} props.isBookmarked - Si la visualisation est enregistrée\n * @param {Function} props.onFavoriteToggle - Fonction appelée lors du clic sur le bouton favori\n * @param {Function} props.onBookmarkToggle - Fonction appelée lors du clic sur le bouton enregistrement\n * @param {Function} props.onShare - Fonction appelée lors du clic sur le bouton partage\n */\nconst VisualizationCard = ({\n  id,\n  title,\n  subtitle,\n  image,\n  type = 'col', // 'col' ou 'route'\n  location,\n  stats = {},\n  details = [],\n  detailsUrl,\n  variant = 'compact', // 'compact' ou 'expanded'\n  isFavorite = false,\n  isBookmarked = false,\n  onFavoriteToggle,\n  onBookmarkToggle,\n  onShare,\n}) => {\n  const theme = useTheme();\n  const [expanded, setExpanded] = useState(false);\n  const [hovered, setHovered] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  \n  const getDifficultyColor = (difficulty) => {\n    if (!difficulty) return theme.palette.grey[500];\n    \n    const difficultyMap = {\n      'facile': theme.palette.success.main,\n      'moyen': theme.palette.warning.main,\n      'difficile': theme.palette.error.main,\n      'très difficile': theme.palette.error.dark,\n      'extrême': '#8B0000', // Dark red\n    };\n    \n    return difficultyMap[difficulty.toLowerCase()] || theme.palette.grey[500];\n  };\n\n  return (\n    <motion.div\n      initial=\"hidden\"\n      animate=\"visible\"\n      whileHover=\"hover\"\n      variants={cardVariants}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <StyledCard variant={variant} elevation={hovered ? 8 : 2}>\n        <StyledCardMedia\n          component=\"div\"\n          image={image}\n          title={title}\n          variant={variant}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: 12,\n              right: 12,\n              display: 'flex',\n              gap: 1\n            }}\n          >\n            <Tooltip title={isFavorite ? \"Retirer des favoris\" : \"Ajouter aux favoris\"}>\n              <IconButton\n                aria-label={isFavorite ? \"Retirer des favoris\" : \"Ajouter aux favoris\"}\n                onClick={() => onFavoriteToggle && onFavoriteToggle(id)}\n                sx={{\n                  color: '#fff',\n                  background: alpha(theme.palette.common.black, 0.4),\n                  '&:hover': {\n                    background: alpha(theme.palette.common.black, 0.6),\n                  }\n                }}\n                size=\"small\"\n              >\n                {isFavorite ? <FavoriteIcon color=\"error\" /> : <FavoriteBorderIcon />}\n              </IconButton>\n            </Tooltip>\n            \n            <Tooltip title={isBookmarked ? \"Retirer des enregistrements\" : \"Enregistrer\"}>\n              <IconButton\n                aria-label={isBookmarked ? \"Retirer des enregistrements\" : \"Enregistrer\"}\n                onClick={() => onBookmarkToggle && onBookmarkToggle(id)}\n                sx={{\n                  color: '#fff',\n                  background: alpha(theme.palette.common.black, 0.4),\n                  '&:hover': {\n                    background: alpha(theme.palette.common.black, 0.6),\n                  }\n                }}\n                size=\"small\"\n              >\n                {isBookmarked ? <BookmarkIcon color=\"primary\" /> : <BookmarkBorderIcon />}\n              </IconButton>\n            </Tooltip>\n          </Box>\n          \n          {/* Type badge */}\n          <Box sx={{ position: 'absolute', top: 12, left: 12 }}>\n            <Chip\n              icon={type === 'col' ? <TerrainIcon /> : <RouteIcon />}\n              label={type === 'col' ? 'Col' : 'Parcours'}\n              sx={{\n                bgcolor: type === 'col' ? theme.palette.primary.main : theme.palette.secondary.main,\n                color: '#fff',\n                fontWeight: 600,\n              }}\n              size=\"small\"\n            />\n          </Box>\n          \n          {/* Overlay for compact cards */}\n          {variant === 'compact' && (\n            <CardOverlay overlay=\"dark\">\n              <Typography variant=\"h6\" component=\"h3\" sx={{ fontWeight: 700, mb: 0.5 }}>\n                {title}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.9 }}>\n                {location}\n              </Typography>\n            </CardOverlay>\n          )}\n        </StyledCardMedia>\n        \n        {variant === 'expanded' && (\n          <CardContent>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n              <Box>\n                <Typography variant=\"h5\" component=\"h2\" sx={{ fontWeight: 700, mb: 0.5 }}>\n                  {title}\n                </Typography>\n                <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                  {location}\n                </Typography>\n              </Box>\n              \n              {stats.difficulty && (\n                <Chip \n                  label={`Difficulté: ${stats.difficulty}`}\n                  sx={{\n                    bgcolor: alpha(getDifficultyColor(stats.difficulty), 0.1),\n                    color: getDifficultyColor(stats.difficulty),\n                    fontWeight: 600,\n                    border: `1px solid ${alpha(getDifficultyColor(stats.difficulty), 0.3)}`,\n                  }}\n                />\n              )}\n            </Box>\n            \n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 2 }}>\n              {subtitle}\n            </Typography>\n            \n            <Box sx={{ display: 'flex', flexWrap: 'wrap', mb: 2 }}>\n              {stats.distance && (\n                <StatsChip \n                  icon={<RouteIcon />} \n                  label={`${stats.distance} km`}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              )}\n              {stats.elevation && (\n                <StatsChip \n                  icon={<TerrainIcon />} \n                  label={`${stats.elevation} m D+`}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              )}\n              {stats.views && (\n                <StatsChip \n                  icon={<VisibilityIcon />} \n                  label={`${stats.views} vues`}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              )}\n            </Box>\n          </CardContent>\n        )}\n        \n        <Divider sx={{ opacity: 0.6 }} />\n        \n        <CardActions disableSpacing>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%', px: 1 }}>\n            <Box>\n              {variant === 'expanded' && (\n                <>\n                  <ActionButton\n                    aria-label={isFavorite ? \"Retirer des favoris\" : \"Ajouter aux favoris\"}\n                    onClick={() => onFavoriteToggle && onFavoriteToggle(id)}\n                    startIcon={isFavorite ? <FavoriteIcon color=\"error\" /> : <FavoriteBorderIcon />}\n                    size=\"small\"\n                  >\n                    {isFavorite ? 'Favori' : 'Favori'}\n                  </ActionButton>\n                  \n                  <ActionButton\n                    aria-label=\"Partager\"\n                    onClick={() => onShare && onShare(id)}\n                    startIcon={<ShareIcon />}\n                    size=\"small\"\n                  >\n                    Partager\n                  </ActionButton>\n                </>\n              )}\n            </Box>\n            \n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              {details.length > 0 && (\n                <ExpandButton\n                  expanded={expanded ? 1 : 0}\n                  onClick={handleExpandClick}\n                  aria-expanded={expanded}\n                  aria-label=\"Afficher plus\"\n                  size=\"small\"\n                >\n                  <ExpandMoreIcon />\n                </ExpandButton>\n              )}\n              \n              {detailsUrl && (\n                <Button\n                  component={RouterLink}\n                  to={detailsUrl}\n                  endIcon={<ArrowForwardIcon />}\n                  size=\"small\"\n                  sx={{ ml: 1 }}\n                  color=\"primary\"\n                >\n                  Détails\n                </Button>\n              )}\n            </Box>\n          </Box>\n        </CardActions>\n        \n        {details.length > 0 && (\n          <motion.div\n            initial=\"collapsed\"\n            animate={expanded ? \"expanded\" : \"collapsed\"}\n            variants={detailsVariants}\n          >\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                {details.map((detail, index) => (\n                  <Box key={index} sx={{ mb: index < details.length - 1 ? 2 : 0 }}>\n                    {detail.title && (\n                      <Typography variant=\"subtitle2\" sx={{ fontWeight: 600, mb: 0.5 }}>\n                        {detail.title}\n                      </Typography>\n                    )}\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {detail.content}\n                    </Typography>\n                  </Box>\n                ))}\n              </CardContent>\n            </Collapse>\n          </motion.div>\n        )}\n      </StyledCard>\n    </motion.div>\n  );\n};\n\nexport default VisualizationCard;\n","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  Grid,\n  Box,\n  Typography,\n  Skeleton,\n  InputAdornment,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Pagination,\n  useTheme,\n  useMediaQuery,\n  Chip,\n  Button\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n  Search as SearchIcon,\n  FilterList as FilterListIcon,\n  Clear as ClearIcon,\n  TerrainOutlined as TerrainIcon,\n  RouteOutlined as RouteIcon,\n  TuneOutlined as TuneIcon\n} from '@mui/icons-material';\nimport VisualizationCard from './VisualizationCard';\n\nconst AnimatedGrid = styled(motion.div)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(4),\n}));\n\nconst FilterContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n  marginBottom: theme.spacing(3),\n  [theme.breakpoints.down('md')]: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n}));\n\nconst SearchField = styled(TextField)(({ theme }) => ({\n  flexGrow: 1,\n  maxWidth: '100%',\n  [theme.breakpoints.up('md')]: {\n    maxWidth: 300,\n  },\n}));\n\nconst FilterForm = styled(Box)(({ theme, expanded }) => ({\n  display: expanded ? 'flex' : 'none',\n  flexWrap: 'wrap',\n  alignItems: 'center', \n  gap: theme.spacing(2),\n  padding: expanded ? theme.spacing(2) : 0,\n  marginTop: expanded ? theme.spacing(2) : 0,\n  marginBottom: expanded ? theme.spacing(2) : 0,\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: expanded ? theme.shadows[1] : 'none',\n  [theme.breakpoints.down('sm')]: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n}));\n\nconst FilterChipsContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1),\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n\nconst NoResultsContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: theme.spacing(6),\n  textAlign: 'center',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: theme.shadows[1],\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(4),\n}));\n\nconst StyledPagination = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(2),\n}));\n\n// Animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\n/**\n * VisualizationGrid - Composant de grille pour afficher des cartes de visualisation avec filtres et pagination\n * \n * @param {Object} props - Propriétés du composant\n * @param {Array} props.items - Liste des éléments à afficher\n * @param {boolean} props.loading - Indique si les données sont en cours de chargement\n * @param {string} props.title - Titre de la grille\n * @param {Object} props.filters - Filtres disponibles (types, difficultés, régions, etc.)\n * @param {Function} props.onFilterChange - Fonction appelée lorsque les filtres changent\n * @param {Function} props.onSearch - Fonction appelée lors d'une recherche\n * @param {Function} props.onFavoriteToggle - Fonction appelée lors du clic sur le bouton favori\n * @param {Function} props.onBookmarkToggle - Fonction appelée lors du clic sur le bouton enregistrement\n * @param {Function} props.onShare - Fonction appelée lors du clic sur le bouton partage\n * @param {number} props.itemsPerPage - Nombre d'éléments par page\n * @param {string} props.emptyStateMessage - Message à afficher quand il n'y a pas de résultats\n */\nconst VisualizationGrid = ({\n  items = [],\n  loading = false,\n  title = 'Visualisations',\n  filters = {},\n  onFilterChange,\n  onSearch,\n  onFavoriteToggle,\n  onBookmarkToggle,\n  onShare,\n  itemsPerPage = 12,\n  emptyStateMessage = \"Aucune visualisation trouvée correspondant à vos critères de recherche.\"\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\n  \n  const [searchQuery, setSearchQuery] = useState('');\n  const [filtersExpanded, setFiltersExpanded] = useState(false);\n  const [activeFilters, setActiveFilters] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  \n  // Pagination\n  const totalPages = Math.ceil(items.length / itemsPerPage);\n  const paginatedItems = items.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n  \n  // Réinitialiser la page lorsque les filtres changent\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [activeFilters, searchQuery]);\n  \n  const handleSearchChange = (e) => {\n    setSearchQuery(e.target.value);\n    if (onSearch) {\n      onSearch(e.target.value);\n    }\n  };\n  \n  const handleFilterChange = (filterName, value) => {\n    const newFilters = {\n      ...activeFilters,\n      [filterName]: value\n    };\n    \n    // Si la valeur est vide, supprimer le filtre\n    if (value === '') {\n      delete newFilters[filterName];\n    }\n    \n    setActiveFilters(newFilters);\n    \n    if (onFilterChange) {\n      onFilterChange(newFilters);\n    }\n  };\n  \n  const clearAllFilters = () => {\n    setActiveFilters({});\n    setSearchQuery('');\n    \n    if (onFilterChange) {\n      onFilterChange({});\n    }\n    \n    if (onSearch) {\n      onSearch('');\n    }\n  };\n  \n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n    // Scroll to top when changing page\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n  \n  const getFilterChips = () => {\n    if (!Object.keys(activeFilters).length && !searchQuery) {\n      return null;\n    }\n    \n    return (\n      <FilterChipsContainer>\n        {searchQuery && (\n          <Chip\n            label={`Recherche: ${searchQuery}`}\n            onDelete={() => {\n              setSearchQuery('');\n              if (onSearch) onSearch('');\n            }}\n            color=\"primary\"\n            variant=\"outlined\"\n          />\n        )}\n        \n        {Object.entries(activeFilters).map(([key, value]) => {\n          // Skip empty values\n          if (!value) return null;\n          \n          let label = '';\n          let chipColor = 'primary';\n          \n          // Format the label based on filter type\n          if (key === 'type') {\n            label = `Type: ${value === 'col' ? 'Col' : 'Parcours'}`;\n            chipColor = value === 'col' ? 'primary' : 'secondary';\n          } else if (key === 'difficulty') {\n            label = `Difficulté: ${value}`;\n          } else if (key === 'region') {\n            label = `Région: ${value}`;\n          } else {\n            label = `${key}: ${value}`;\n          }\n          \n          return (\n            <Chip\n              key={key}\n              label={label}\n              onDelete={() => handleFilterChange(key, '')}\n              color={chipColor}\n              variant=\"outlined\"\n            />\n          );\n        })}\n        \n        <Chip\n          label=\"Effacer tout\"\n          onDelete={clearAllFilters}\n          deleteIcon={<ClearIcon />}\n          variant=\"outlined\"\n          color=\"error\"\n        />\n      </FilterChipsContainer>\n    );\n  };\n  \n  const renderFilters = () => {\n    return (\n      <>\n        <FilterContainer>\n          <SearchField\n            placeholder=\"Rechercher...\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth={isMobile}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon color=\"action\" />\n                </InputAdornment>\n              ),\n              endAdornment: searchQuery ? (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    size=\"small\"\n                    aria-label=\"clear search\"\n                    onClick={() => {\n                      setSearchQuery('');\n                      if (onSearch) onSearch('');\n                    }}\n                  >\n                    <ClearIcon fontSize=\"small\" />\n                  </IconButton>\n                </InputAdornment>\n              ) : null,\n            }}\n          />\n          \n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={<FilterListIcon />}\n            onClick={() => setFiltersExpanded(!filtersExpanded)}\n            size=\"small\"\n          >\n            Filtres\n          </Button>\n          \n          {!isTablet && filters.type && (\n            <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 120 }}>\n              <InputLabel id=\"type-filter-label\">Type</InputLabel>\n              <Select\n                labelId=\"type-filter-label\"\n                id=\"type-filter\"\n                value={activeFilters.type || ''}\n                onChange={(e) => handleFilterChange('type', e.target.value)}\n                label=\"Type\"\n                IconComponent={TuneIcon}\n              >\n                <MenuItem value=\"\">Tous</MenuItem>\n                <MenuItem value=\"col\">\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <TerrainIcon sx={{ mr: 1 }} /> Cols\n                  </Box>\n                </MenuItem>\n                <MenuItem value=\"route\">\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <RouteIcon sx={{ mr: 1 }} /> Parcours\n                  </Box>\n                </MenuItem>\n              </Select>\n            </FormControl>\n          )}\n        </FilterContainer>\n        \n        <FilterForm expanded={filtersExpanded ? 1 : 0}>\n          {filters.type && isTablet && (\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\n              <InputLabel id=\"mobile-type-filter-label\">Type</InputLabel>\n              <Select\n                labelId=\"mobile-type-filter-label\"\n                id=\"mobile-type-filter\"\n                value={activeFilters.type || ''}\n                onChange={(e) => handleFilterChange('type', e.target.value)}\n                label=\"Type\"\n              >\n                <MenuItem value=\"\">Tous</MenuItem>\n                <MenuItem value=\"col\">Cols</MenuItem>\n                <MenuItem value=\"route\">Parcours</MenuItem>\n              </Select>\n            </FormControl>\n          )}\n          \n          {filters.difficulty && (\n            <FormControl sx={{ minWidth: 150 }} size=\"small\" fullWidth={isMobile}>\n              <InputLabel id=\"difficulty-filter-label\">Difficulté</InputLabel>\n              <Select\n                labelId=\"difficulty-filter-label\"\n                id=\"difficulty-filter\"\n                value={activeFilters.difficulty || ''}\n                onChange={(e) => handleFilterChange('difficulty', e.target.value)}\n                label=\"Difficulté\"\n              >\n                <MenuItem value=\"\">Toutes</MenuItem>\n                {filters.difficulty.map((diff) => (\n                  <MenuItem key={diff} value={diff}>{diff}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          )}\n          \n          {filters.region && (\n            <FormControl sx={{ minWidth: 200 }} size=\"small\" fullWidth={isMobile}>\n              <InputLabel id=\"region-filter-label\">Région</InputLabel>\n              <Select\n                labelId=\"region-filter-label\"\n                id=\"region-filter\"\n                value={activeFilters.region || ''}\n                onChange={(e) => handleFilterChange('region', e.target.value)}\n                label=\"Région\"\n              >\n                <MenuItem value=\"\">Toutes</MenuItem>\n                {filters.region.map((region) => (\n                  <MenuItem key={region} value={region}>{region}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          )}\n          \n          {/* Boutons d'action pour les filtres */}\n          <Box sx={{ display: 'flex', gap: 1, mt: isMobile ? 2 : 0, ml: 'auto' }}>\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={clearAllFilters}\n              startIcon={<ClearIcon />}\n            >\n              Réinitialiser\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={() => setFiltersExpanded(false)}\n              color=\"primary\"\n            >\n              Appliquer\n            </Button>\n          </Box>\n        </FilterForm>\n        \n        {getFilterChips()}\n      </>\n    );\n  };\n  \n  // Loading skeletons\n  const renderSkeletons = () => {\n    return Array.from(new Array(itemsPerPage)).map((_, index) => (\n      <Grid item xs={12} sm={6} md={4} lg={3} key={`skeleton-${index}`}>\n        <Box sx={{ width: '100%' }}>\n          <Skeleton variant=\"rectangular\" height={140} sx={{ borderRadius: '16px 16px 0 0' }} />\n          <Skeleton variant=\"text\" height={40} sx={{ mt: 1 }} />\n          <Skeleton variant=\"text\" height={20} width=\"60%\" />\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n            <Skeleton variant=\"text\" width={60} height={30} />\n            <Skeleton variant=\"text\" width={60} height={30} />\n          </Box>\n        </Box>\n      </Grid>\n    ));\n  };\n  \n  // Empty state\n  const renderEmptyState = () => {\n    return (\n      <NoResultsContainer>\n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          Aucun résultat\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n          {emptyStateMessage}\n        </Typography>\n        <Button \n          variant=\"outlined\" \n          color=\"primary\" \n          onClick={clearAllFilters}\n          startIcon={<ClearIcon />}\n        >\n          Effacer les filtres\n        </Button>\n      </NoResultsContainer>\n    );\n  };\n  \n  return (\n    <Box>\n      {title && (\n        <Typography \n          variant=\"h4\" \n          component=\"h2\" \n          gutterBottom \n          sx={{ \n            fontWeight: 700,\n            mb: 3,\n            borderBottom: `3px solid ${theme.palette.primary.main}`,\n            pb: 1,\n            display: 'inline-block'\n          }}\n        >\n          {title}\n        </Typography>\n      )}\n      \n      {renderFilters()}\n      \n      <AnimatedGrid\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <Grid container spacing={3}>\n          {loading ? (\n            renderSkeletons()\n          ) : paginatedItems.length > 0 ? (\n            paginatedItems.map((item) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} key={item.id}>\n                <VisualizationCard\n                  id={item.id}\n                  title={item.title}\n                  subtitle={item.subtitle}\n                  image={item.image}\n                  type={item.type}\n                  location={item.location}\n                  stats={item.stats}\n                  details={item.details}\n                  detailsUrl={item.detailsUrl}\n                  isFavorite={item.isFavorite}\n                  isBookmarked={item.isBookmarked}\n                  onFavoriteToggle={onFavoriteToggle}\n                  onBookmarkToggle={onBookmarkToggle}\n                  onShare={onShare}\n                />\n              </Grid>\n            ))\n          ) : (\n            <Grid item xs={12}>\n              {renderEmptyState()}\n            </Grid>\n          )}\n        </Grid>\n      </AnimatedGrid>\n      \n      {!loading && totalPages > 1 && (\n        <StyledPagination>\n          <Pagination \n            count={totalPages} \n            page={currentPage} \n            onChange={handlePageChange} \n            color=\"primary\"\n            size={isMobile ? \"small\" : \"medium\"}\n            showFirstButton\n            showLastButton\n          />\n        </StyledPagination>\n      )}\n    </Box>\n  );\n};\n\nexport default VisualizationGrid;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Box,\n  Typography,\n  IconButton,\n  Paper,\n  useTheme,\n  useMediaQuery,\n  Button,\n  Skeleton,\n  alpha\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n  ArrowBackIos as ArrowBackIcon,\n  ArrowForwardIos as ArrowForwardIcon,\n  FiberManualRecord as DotIcon\n} from '@mui/icons-material';\nimport VisualizationCard from './VisualizationCard';\n\n// Styled components\nconst CarouselContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  padding: theme.spacing(2, 0),\n  marginBottom: theme.spacing(6),\n}));\n\nconst SlideContainer = styled(motion.div)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: theme.spacing(0, 2),\n  width: '100%',\n  height: '100%',\n}));\n\nconst NavigationArrow = styled(IconButton)(({ theme, direction }) => ({\n  position: 'absolute',\n  top: '50%',\n  transform: 'translateY(-50%)',\n  zIndex: 10,\n  backgroundColor: alpha(theme.palette.background.paper, 0.8),\n  color: theme.palette.text.primary,\n  boxShadow: theme.shadows[2],\n  '&:hover': {\n    backgroundColor: theme.palette.background.paper,\n  },\n  ...(direction === 'left' && {\n    left: theme.spacing(1),\n  }),\n  ...(direction === 'right' && {\n    right: theme.spacing(1),\n  }),\n}));\n\nconst DotsContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: theme.spacing(2),\n}));\n\nconst DotButton = styled(IconButton)(({ theme, active }) => ({\n  padding: theme.spacing(0.5),\n  color: active ? theme.palette.primary.main : theme.palette.text.disabled,\n  transform: active ? 'scale(1.2)' : 'scale(1)',\n  transition: theme.transitions.create(['transform', 'color'], {\n    duration: 300,\n  }),\n}));\n\nconst HeaderContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: theme.spacing(2),\n  [theme.breakpoints.down('sm')]: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > *:not(:last-child)': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n}));\n\n// Animation variants\nconst fadeVariants = {\n  enter: (direction) => ({\n    x: direction > 0 ? 1000 : -1000,\n    opacity: 0,\n  }),\n  center: {\n    x: 0,\n    opacity: 1,\n  },\n  exit: (direction) => ({\n    x: direction < 0 ? 1000 : -1000,\n    opacity: 0,\n  }),\n};\n\n/**\n * VisualizationCarousel - Composant de carrousel pour visualisations\n * \n * @param {Object} props - Propriétés du composant\n * @param {Array} props.items - Liste des éléments à afficher dans le carrousel\n * @param {string} props.title - Titre du carrousel\n * @param {boolean} props.loading - État de chargement\n * @param {boolean} props.autoPlay - Activer le défilement automatique\n * @param {number} props.autoPlayInterval - Intervalle de défilement automatique en ms\n * @param {boolean} props.showDots - Afficher les points de navigation\n * @param {boolean} props.showArrows - Afficher les flèches de navigation\n * @param {boolean} props.loop - Activer la lecture en boucle\n * @param {string} props.variant - Variante du carrousel (compact ou expanded)\n * @param {string} props.viewAllUrl - URL pour voir tous les éléments\n * @param {Function} props.onFavoriteToggle - Fonction appelée lors du clic sur le bouton favori\n * @param {Function} props.onBookmarkToggle - Fonction appelée lors du clic sur le bouton enregistrement\n * @param {Function} props.onShare - Fonction appelée lors du clic sur le bouton partage\n */\nconst VisualizationCarousel = ({\n  items = [],\n  title = 'Visualisations recommandées',\n  loading = false,\n  autoPlay = true,\n  autoPlayInterval = 5000,\n  showDots = true,\n  showArrows = true,\n  loop = true,\n  variant = 'compact',\n  viewAllUrl,\n  onFavoriteToggle,\n  onBookmarkToggle,\n  onShare,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  \n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [direction, setDirection] = useState(0);\n  const autoPlayRef = useRef(null);\n  \n  // Reset index when items change\n  useEffect(() => {\n    setCurrentIndex(0);\n  }, [items]);\n  \n  // Gestion du défilement automatique\n  useEffect(() => {\n    if (autoPlay && items.length > 1) {\n      autoPlayRef.current = setInterval(() => {\n        if (currentIndex === items.length - 1 && !loop) {\n          clearInterval(autoPlayRef.current);\n        } else {\n          goToNext();\n        }\n      }, autoPlayInterval);\n    }\n    \n    return () => {\n      if (autoPlayRef.current) {\n        clearInterval(autoPlayRef.current);\n      }\n    };\n  }, [autoPlay, currentIndex, items.length, loop, autoPlayInterval]);\n  \n  const goToPrevious = () => {\n    setDirection(-1);\n    if (currentIndex === 0) {\n      if (loop) {\n        setCurrentIndex(items.length - 1);\n      }\n    } else {\n      setCurrentIndex((prev) => prev - 1);\n    }\n  };\n  \n  const goToNext = () => {\n    setDirection(1);\n    if (currentIndex === items.length - 1) {\n      if (loop) {\n        setCurrentIndex(0);\n      }\n    } else {\n      setCurrentIndex((prev) => prev + 1);\n    }\n  };\n  \n  const goToSlide = (index) => {\n    setDirection(index > currentIndex ? 1 : -1);\n    setCurrentIndex(index);\n  };\n  \n  // Skeletons pour le chargement\n  const renderSkeletons = () => (\n    <Box sx={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n      <Box sx={{ width: isMobile ? '100%' : '80%', maxWidth: 700 }}>\n        <Skeleton variant=\"rectangular\" height={250} sx={{ borderRadius: theme.shape.borderRadius }} />\n        <Skeleton variant=\"text\" height={40} sx={{ mt: 2 }} />\n        <Skeleton variant=\"text\" height={20} width=\"60%\" />\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n          <Skeleton variant=\"text\" width={80} height={40} />\n          <Skeleton variant=\"text\" width={80} height={40} />\n        </Box>\n      </Box>\n    </Box>\n  );\n  \n  return (\n    <Box>\n      <HeaderContainer>\n        <Typography \n          variant=\"h5\" \n          component=\"h2\" \n          sx={{ \n            fontWeight: 700,\n            borderBottom: `3px solid ${theme.palette.primary.main}`,\n            paddingBottom: theme.spacing(0.5),\n            display: 'inline-block'\n          }}\n        >\n          {title}\n        </Typography>\n        \n        {viewAllUrl && (\n          <Button \n            component=\"a\" \n            href={viewAllUrl} \n            color=\"primary\"\n            endIcon={<ArrowForwardIcon />}\n          >\n            Voir tout\n          </Button>\n        )}\n      </HeaderContainer>\n      \n      <CarouselContainer>\n        {loading ? (\n          renderSkeletons()\n        ) : items.length > 0 ? (\n          <>\n            <AnimatePresence initial={false} custom={direction} mode=\"wait\">\n              <SlideContainer\n                key={currentIndex}\n                custom={direction}\n                variants={fadeVariants}\n                initial=\"enter\"\n                animate=\"center\"\n                exit=\"exit\"\n                transition={{\n                  x: { type: \"spring\", stiffness: 300, damping: 30 },\n                  opacity: { duration: 0.2 }\n                }}\n              >\n                <Box \n                  sx={{ \n                    width: isMobile ? '100%' : variant === 'compact' ? '70%' : '85%',\n                    maxWidth: variant === 'compact' ? 500 : 900\n                  }}\n                >\n                  <VisualizationCard\n                    id={items[currentIndex].id}\n                    title={items[currentIndex].title}\n                    subtitle={items[currentIndex].subtitle}\n                    image={items[currentIndex].image}\n                    type={items[currentIndex].type}\n                    location={items[currentIndex].location}\n                    stats={items[currentIndex].stats}\n                    details={items[currentIndex].details}\n                    detailsUrl={items[currentIndex].detailsUrl}\n                    variant={variant}\n                    isFavorite={items[currentIndex].isFavorite}\n                    isBookmarked={items[currentIndex].isBookmarked}\n                    onFavoriteToggle={onFavoriteToggle}\n                    onBookmarkToggle={onBookmarkToggle}\n                    onShare={onShare}\n                  />\n                </Box>\n              </SlideContainer>\n            </AnimatePresence>\n            \n            {showArrows && items.length > 1 && (\n              <>\n                <NavigationArrow\n                  direction=\"left\"\n                  onClick={goToPrevious}\n                  aria-label=\"Précédent\"\n                  disabled={currentIndex === 0 && !loop}\n                >\n                  <ArrowBackIcon />\n                </NavigationArrow>\n                \n                <NavigationArrow\n                  direction=\"right\"\n                  onClick={goToNext}\n                  aria-label=\"Suivant\"\n                  disabled={currentIndex === items.length - 1 && !loop}\n                >\n                  <ArrowForwardIcon />\n                </NavigationArrow>\n              </>\n            )}\n            \n            {showDots && items.length > 1 && (\n              <DotsContainer>\n                {items.map((_, index) => (\n                  <DotButton\n                    key={index}\n                    active={index === currentIndex ? 1 : 0}\n                    onClick={() => goToSlide(index)}\n                    aria-label={`Aller à la diapositive ${index + 1}`}\n                    size=\"small\"\n                  >\n                    <DotIcon fontSize=\"small\" />\n                  </DotButton>\n                ))}\n              </DotsContainer>\n            )}\n          </>\n        ) : (\n          <Paper\n            sx={{\n              padding: theme.spacing(3),\n              textAlign: 'center',\n              backgroundColor: theme.palette.background.paper,\n            }}\n            elevation={1}\n          >\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              Aucune visualisation disponible.\n            </Typography>\n          </Paper>\n        )}\n      </CarouselContainer>\n    </Box>\n  );\n};\n\nexport default VisualizationCarousel;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Grid, \n  Paper, \n  Button, \n  CircularProgress,\n  Alert,\n  Tabs,\n  Tab,\n  Card,\n  CardContent,\n  Divider,\n  useTheme,\n  useMediaQuery,\n  alpha\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { \n  Terrain as TerrainIcon, \n  Compare as CompareIcon, \n  Route as RouteIcon,\n  Dashboard as DashboardIcon,\n  ThreeDRotation as ThreeDIcon,\n  Insights as InsightsIcon,\n  ExploreOutlined as ExploreIcon,\n  BookmarkBorder as BookmarkIcon,\n  Favorite as FavoriteIcon\n} from '@mui/icons-material';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\n\n// Components\nimport PageTransition from '../components/animations/PageTransition';\nimport PassVisualizer from '../components/visualization/PassVisualizer';\nimport PassComparison from '../components/visualization/PassComparison';\nimport RouteAlternatives from '../components/visualization/RouteAlternatives';\nimport ColVisualization3D from '../components/visualization/ColVisualization3D';\nimport VisualizationGrid from '../components/visualization/VisualizationGrid';\nimport VisualizationCarousel from '../components/visualization/VisualizationCarousel';\nimport './VisualizationDashboard.css';\nimport '../i18n'; // Ensure i18n is initialized\n\n// Styled Components\nconst DashboardHeader = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(4, 0),\n  marginBottom: theme.spacing(4),\n  background: `linear-gradient(120deg, ${theme.palette.primary.main}, ${theme.palette.primary.dark})`,\n  color: theme.palette.primary.contrastText,\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',\n  position: 'relative',\n  overflow: 'hidden',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: `url('/images/topography-pattern.svg')`,\n    opacity: 0.1,\n    zIndex: 1,\n  }\n}));\n\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  marginBottom: theme.spacing(3),\n  '& .MuiTabs-indicator': {\n    height: 3,\n    borderRadius: '3px 3px 0 0',\n  },\n  '& .MuiTab-root': {\n    minHeight: 64,\n    fontSize: '0.9rem',\n    fontWeight: 'medium',\n    textTransform: 'none',\n    '&.Mui-selected': {\n      fontWeight: 'bold',\n    },\n  },\n}));\n\nconst StyledTab = styled(Tab)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  '& .MuiSvgIcon-root': {\n    marginRight: theme.spacing(1),\n    fontSize: '1.2rem',\n  },\n}));\n\nconst VisualizationContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(4),\n  padding: theme.spacing(3),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: '0 2px 12px rgba(0, 0, 0, 0.08)',\n  minHeight: '60vh',\n}));\n\nconst FeatureCard = styled(Card)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',\n  transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 20px rgba(0, 0, 0, 0.1)',\n  },\n}));\n\nconst FeatureIcon = styled(Box)(({ theme, color }) => ({\n  width: 60,\n  height: 60,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  borderRadius: '50%',\n  backgroundColor: alpha(theme.palette[color || 'primary'].main, 0.1),\n  color: theme.palette[color || 'primary'].main,\n  marginBottom: theme.spacing(2),\n}));\n\nconst VisualizationDashboard = () => {\n  const [passes, setPasses] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedPassId, setSelectedPassId] = useState(null);\n  const [comparePassId1, setComparePassId1] = useState(null);\n  const [comparePassId2, setComparePassId2] = useState(null);\n  const [selectedRouteId, setSelectedRouteId] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [featuredItems, setFeaturedItems] = useState([]);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const isTablet = useMediaQuery(theme.breakpoints.down('lg'));\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        duration: 0.5,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.5 },\n    },\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Simulation d'appel API - à remplacer par de vrais appels en production\n        // const [passesResponse, routesResponse] = await Promise.all([\n        //   axios.get('/api/passes'),\n        //   axios.get('/api/routes')\n        // ]);\n        \n        // Données fictives pour développement\n        const mockPasses = [\n          {\n            id: 'col-1',\n            title: 'Col du Galibier',\n            subtitle: 'Un des plus beaux cols des Alpes',\n            image: 'https://images.unsplash.com/photo-1519681393784-d120267933ba',\n            type: 'col',\n            location: 'Alpes, France',\n            stats: {\n              difficulty: 'difficile',\n              distance: '23',\n              elevation: '1245',\n              views: '3248'\n            },\n            details: [\n              { title: 'Histoire', content: 'Le Col du Galibier est un col mythique du Tour de France...' },\n              { title: 'Conseils', content: 'Prévoyez des vêtements chauds même en été.' }\n            ],\n            detailsUrl: '/cols/galibier',\n            isFavorite: false,\n            isBookmarked: true\n          },\n          {\n            id: 'col-2',\n            title: 'Col du Tourmalet',\n            subtitle: 'Le géant des Pyrénées',\n            image: 'https://images.unsplash.com/photo-1455156218388-7a8e488e8606',\n            type: 'col',\n            location: 'Pyrénées, France',\n            stats: {\n              difficulty: 'très difficile',\n              distance: '19',\n              elevation: '1404',\n              views: '5248'\n            },\n            details: [\n              { title: 'Histoire', content: 'Le Col du Tourmalet est le plus haut col routier des Pyrénées...' },\n              { title: 'Conseils', content: 'Prévoyez de l\\'eau en quantité suffisante.' }\n            ],\n            detailsUrl: '/cols/tourmalet',\n            isFavorite: true,\n            isBookmarked: false\n          },\n          {\n            id: 'col-3',\n            title: 'Col de la Bonette',\n            subtitle: 'La route la plus haute d\\'Europe',\n            image: 'https://images.unsplash.com/photo-1464822759023-fed622ff2c3b',\n            type: 'col',\n            location: 'Alpes-Maritimes, France',\n            stats: {\n              difficulty: 'extrême',\n              distance: '26',\n              elevation: '1652',\n              views: '2789'\n            },\n            detailsUrl: '/cols/bonette',\n            isFavorite: false,\n            isBookmarked: false\n          },\n          {\n            id: 'col-4',\n            title: 'Col d\\'Aubisque',\n            subtitle: 'Un paysage exceptionnel',\n            image: 'https://images.unsplash.com/photo-1519681393784-d120267933ba',\n            type: 'col',\n            location: 'Pyrénées, France',\n            stats: {\n              difficulty: 'difficile',\n              distance: '16',\n              elevation: '1190',\n              views: '3102'\n            },\n            detailsUrl: '/cols/aubisque',\n            isFavorite: false,\n            isBookmarked: true\n          }\n        ];\n        \n        const mockRoutes = [\n          {\n            id: 'route-1',\n            title: 'Route des Crêtes',\n            subtitle: 'Un parcours panoramique',\n            image: 'https://images.unsplash.com/photo-1500534623283-312aade485b7',\n            type: 'route',\n            location: 'Vosges, France',\n            stats: {\n              difficulty: 'moyen',\n              distance: '38',\n              elevation: '980',\n              views: '2187'\n            },\n            detailsUrl: '/routes/cretes',\n            isFavorite: false,\n            isBookmarked: false\n          },\n          {\n            id: 'route-2',\n            title: 'Route des Grandes Alpes',\n            subtitle: 'Une traversée mythique',\n            image: 'https://images.unsplash.com/photo-1454496522488-7a8e488e8606',\n            type: 'route',\n            location: 'Alpes, France',\n            stats: {\n              difficulty: 'extrême',\n              distance: '684',\n              elevation: '15700',\n              views: '5347'\n            },\n            detailsUrl: '/routes/grandes-alpes',\n            isFavorite: true,\n            isBookmarked: true\n          }\n        ];\n        \n        setPasses(mockPasses);\n        setRoutes(mockRoutes);\n        \n        // Sélectionner des éléments mis en avant\n        setFeaturedItems([\n          ...mockPasses.filter(pass => pass.isFavorite).slice(0, 2),\n          ...mockRoutes.filter(route => route.isFavorite).slice(0, 1)\n        ]);\n        \n        setSelectedPassId(mockPasses[0]?.id);\n        setComparePassId1(mockPasses[0]?.id);\n        setComparePassId2(mockPasses[1]?.id);\n        setSelectedRouteId(mockRoutes[0]?.id);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Impossible de charger les données. Veuillez réessayer plus tard.');\n      } finally {\n        // Simuler un temps de chargement pour montrer les états de chargement\n        setTimeout(() => {\n          setLoading(false);\n        }, 1000);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  \n  // Actions pour les nouveaux composants de visualisation\n  const handleFavoriteToggle = (id) => {\n    // Mettre à jour les passes\n    setPasses(prevPasses => \n      prevPasses.map(pass => \n        pass.id === id ? { ...pass, isFavorite: !pass.isFavorite } : pass\n      )\n    );\n    \n    // Mettre à jour les routes\n    setRoutes(prevRoutes => \n      prevRoutes.map(route => \n        route.id === id ? { ...route, isFavorite: !route.isFavorite } : route\n      )\n    );\n    \n    // Mettre à jour les éléments mis en avant\n    setFeaturedItems(prevItems => \n      prevItems.map(item => \n        item.id === id ? { ...item, isFavorite: !item.isFavorite } : item\n      )\n    );\n  };\n  \n  const handleBookmarkToggle = (id) => {\n    // Mettre à jour les passes\n    setPasses(prevPasses => \n      prevPasses.map(pass => \n        pass.id === id ? { ...pass, isBookmarked: !pass.isBookmarked } : pass\n      )\n    );\n    \n    // Mettre à jour les routes\n    setRoutes(prevRoutes => \n      prevRoutes.map(route => \n        route.id === id ? { ...route, isBookmarked: !route.isBookmarked } : route\n      )\n    );\n    \n    // Mettre à jour les éléments mis en avant\n    setFeaturedItems(prevItems => \n      prevItems.map(item => \n        item.id === id ? { ...item, isBookmarked: !item.isBookmarked } : item\n      )\n    );\n  };\n  \n  const handleShare = (id) => {\n    // Simuler un partage\n    console.log(`Partage de l'élément ${id}`);\n    // En production, cela ouvrirait une boîte de dialogue de partage\n  };\n\n  // Filtres disponibles pour la grille de visualisation\n  const availableFilters = {\n    type: ['col', 'route'],\n    difficulty: ['facile', 'moyen', 'difficile', 'très difficile', 'extrême'],\n    region: ['Alpes', 'Pyrénées', 'Vosges', 'Jura', 'Massif central', 'Alsace', 'Provence']\n  };\n\n  const renderTabContent = () => {\n    if (loading) {\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      );\n    }\n\n    switch (activeTab) {\n      case 0: // Visualisation 3D\n        return (\n          <ColVisualization3D \n            passId={selectedPassId} \n            passes={passes}\n            onPassChange={(id) => setSelectedPassId(id)}\n          />\n        );\n      case 1: // Visualisation Standard\n        return (\n          <PassVisualizer \n            passId={selectedPassId} \n            passes={passes}\n            onPassChange={(id) => setSelectedPassId(id)}\n          />\n        );\n      case 2: // Comparaison\n        return (\n          <PassComparison \n            passId1={comparePassId1} \n            passId2={comparePassId2}\n            passes={passes}\n            onPassChange1={(id) => setComparePassId1(id)}\n            onPassChange2={(id) => setComparePassId2(id)}\n          />\n        );\n      case 3: // Alternatives\n        return (\n          <RouteAlternatives \n            routeId={selectedRouteId} \n            routes={routes}\n            onRouteChange={(id) => setSelectedRouteId(id)}\n          />\n        );\n      case 4: // Explorer (nouveau)\n        return (\n          <VisualizationGrid\n            items={[...passes, ...routes]}\n            loading={loading}\n            title=\"Toutes les visualisations\"\n            filters={availableFilters}\n            onFavoriteToggle={handleFavoriteToggle}\n            onBookmarkToggle={handleBookmarkToggle}\n            onShare={handleShare}\n          />\n        );\n      case 5: // Favoris (nouveau)\n        return (\n          <VisualizationGrid\n            items={[...passes, ...routes].filter(item => item.isFavorite)}\n            loading={loading}\n            title=\"Mes favoris\"\n            filters={availableFilters}\n            onFavoriteToggle={handleFavoriteToggle}\n            onBookmarkToggle={handleBookmarkToggle}\n            onShare={handleShare}\n            emptyStateMessage=\"Vous n'avez pas encore de favoris. Explorez les cols et parcours pour en ajouter.\"\n          />\n        );\n      case 6: // Enregistrés (nouveau)\n        return (\n          <VisualizationGrid\n            items={[...passes, ...routes].filter(item => item.isBookmarked)}\n            loading={loading}\n            title=\"Mes enregistrements\"\n            filters={availableFilters}\n            onFavoriteToggle={handleFavoriteToggle}\n            onBookmarkToggle={handleBookmarkToggle}\n            onShare={handleShare}\n            emptyStateMessage=\"Vous n'avez pas encore d'éléments enregistrés. Explorez les cols et parcours pour en ajouter.\"\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <PageTransition>\n      <Container maxWidth=\"xl\">\n        <Box component={motion.div} \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          sx={{ my: 4 }}\n        >\n          <DashboardHeader>\n            <Container>\n              <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                Tableau de bord des visualisations\n              </Typography>\n              <Typography variant=\"h6\">\n                Explorez, comparez et planifiez vos aventures cyclistes\n              </Typography>\n            </Container>\n          </DashboardHeader>\n          \n          {/* Section Carrousel - Nouveau */}\n          <Box sx={{ mb: 6 }}>\n            <VisualizationCarousel\n              items={featuredItems}\n              title=\"Découvertes recommandées\"\n              loading={loading}\n              variant={isTablet ? \"compact\" : \"expanded\"}\n              onFavoriteToggle={handleFavoriteToggle}\n              onBookmarkToggle={handleBookmarkToggle}\n              onShare={handleShare}\n            />\n          </Box>\n\n          <Grid container spacing={4}>\n            <Grid item xs={12} md={3}>\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.2, duration: 0.5 }}\n              >\n                <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 600 }}>\n                  <DashboardIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  Visualisations\n                </Typography>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                  Découvrez nos différentes méthodes de visualisation pour explorer les cols et parcours cyclistes.\n                </Typography>\n                \n                <Grid container spacing={2} sx={{ mb: 4 }}>\n                  <Grid item xs={12}>\n                    <motion.div\n                      whileHover={{ y: -5, transition: { duration: 0.2 } }}\n                    >\n                      <FeatureCard>\n                        <CardContent>\n                          <FeatureIcon color=\"primary\">\n                            <ThreeDIcon fontSize=\"large\" />\n                          </FeatureIcon>\n                          <Typography variant=\"h6\" gutterBottom>\n                            Visualisation 3D\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Explorez les cols en trois dimensions et préparez votre ascension avec une vision précise du terrain.\n                          </Typography>\n                        </CardContent>\n                      </FeatureCard>\n                    </motion.div>\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                    <motion.div\n                      whileHover={{ y: -5, transition: { duration: 0.2 } }}\n                    >\n                      <FeatureCard>\n                        <CardContent>\n                          <FeatureIcon color=\"secondary\">\n                            <CompareIcon fontSize=\"large\" />\n                          </FeatureIcon>\n                          <Typography variant=\"h6\" gutterBottom>\n                            Comparaison de cols\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Comparez les profils de différents cols pour mieux planifier vos défis et votre entraînement.\n                          </Typography>\n                        </CardContent>\n                      </FeatureCard>\n                    </motion.div>\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                    <motion.div\n                      whileHover={{ y: -5, transition: { duration: 0.2 } }}\n                    >\n                      <FeatureCard>\n                        <CardContent>\n                          <FeatureIcon color=\"info\">\n                            <RouteIcon fontSize=\"large\" />\n                          </FeatureIcon>\n                          <Typography variant=\"h6\" gutterBottom>\n                            Alternatives de parcours\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Découvrez des variantes de parcours adaptées à vos préférences et aux conditions météo.\n                          </Typography>\n                        </CardContent>\n                      </FeatureCard>\n                    </motion.div>\n                  </Grid>\n                </Grid>\n              </motion.div>\n            </Grid>\n\n            <Grid item xs={12} md={9}>\n              <StyledTabs \n                value={activeTab} \n                onChange={handleTabChange}\n                variant={isMobile ? \"scrollable\" : \"standard\"}\n                scrollButtons={isMobile ? \"auto\" : false}\n                textColor=\"primary\"\n                indicatorColor=\"primary\"\n                aria-label=\"visualisation tabs\"\n                sx={{ borderBottom: 1, borderColor: 'divider' }}\n              >\n                <StyledTab icon={<ThreeDIcon />} label=\"Visualisation 3D\" />\n                <StyledTab icon={<TerrainIcon />} label=\"Visualisation Standard\" />\n                <StyledTab icon={<CompareIcon />} label=\"Comparaison\" />\n                <StyledTab icon={<RouteIcon />} label=\"Alternatives\" />\n                <StyledTab icon={<ExploreIcon />} label=\"Explorer\" />\n                <StyledTab icon={<FavoriteIcon />} label=\"Favoris\" />\n                <StyledTab icon={<BookmarkIcon />} label=\"Enregistrés\" />\n              </StyledTabs>\n              \n              <VisualizationContainer>\n                {renderTabContent()}\n              </VisualizationContainer>\n              \n              <Paper elevation={1} sx={{ p: 3, mt: 2, borderRadius: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  <InsightsIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  Fonctionnalités Premium\n                </Typography>\n                <Typography variant=\"body2\" paragraph>\n                  Nos visualisations avancées vous offrent une expérience complète pour préparer vos sorties cyclistes. \n                  Explorez les cols et itinéraires en 3D, analysez chaque segment et comparez les différentes options pour choisir \n                  le parcours qui correspond parfaitement à votre niveau.\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"subtitle2\" gutterBottom color=\"primary\">\n                        Visualisations 3D complètes\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Explorez chaque détail des cols\n                      </Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"subtitle2\" gutterBottom color=\"primary\">\n                        Comparaison détaillée\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Analysez les différences entre les cols\n                      </Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"subtitle2\" gutterBottom color=\"primary\">\n                        Alternatives d'itinéraires\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Adaptées à la météo et votre profil\n                      </Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"subtitle2\" gutterBottom color=\"primary\">\n                        Export des données\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Pour vos appareils GPS et smartphones\n                      </Typography>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </PageTransition>\n  );\n};\n\nexport default VisualizationDashboard;\n"],"names":["_ref","children","transition","transitions","fade","initial","opacity","animate","exit","duration","slide","x","type","stiffness","damping","scale","slideUp","y","currentTransition","_jsx","motion","div","style","width","Box","sx","overflow","Marker","position","name","onClick","color","_jsxs","args","Text","fontSize","maxWidth","textAlign","anchorX","anchorY","outlineWidth","outlineColor","Route3D","_ref2","coordinates","points","map","coord","THREE","Line","lineWidth","_ref3","passId","passData","setPassData","useState","loading","setLoading","error","setError","selectedMarker","setSelectedMarker","cameraPosition","setCameraPosition","useEffect","axios","get","then","response","data","status","camera","initialPosition","catch","err","console","message","finally","className","Canvas","fov","intensity","coordinates3D","markers","marker","idx","handleMarkerClick","id","OrbitControls","target","lookAt","closeInfoPanel","description","VIEW_TYPES","_passData$summary","_passData$summary2","_passData$summary3","activeView","setActiveView","viewState","setViewState","longitude","latitude","zoom","selectedPoint","setSelectedPoint","annotations","setAnnotations","middlePoint","Math","floor","length","handleViewChange","newView","summary","elevationGain","averageGradient","toFixed","maxGradient","difficulty","TransitionGroup","CSSTransition","timeout","classNames","ReactMapGL","onMove","evt","height","mapStyle","mapboxAccessToken","keyPoints","point","left","top","backgroundColor","colorScale","item","gradient","annotation","title","content","ResponsiveContainer","LineChart","elevationProfile","distance","elevation","margin","right","bottom","activePayload","closestPoint","reduce","closest","index","abs","coords","Infinity","handleProfilePointClick","payload","CartesianGrid","strokeDasharray","XAxis","dataKey","label","value","offset","YAxis","angle","Tooltip","formatter","props","stroke","dot","strokeWidth","isAnimationActive","segmentsByDifficulty","flatMap","diffCategory","segments","segment","activeDot","avgGradient","filter","p","severity","distanceStart","distanceEnd","Pass3DViewer","window","history","back","passId1","passId2","comparisonData","setComparisonData","activeTab","setActiveTab","comparisonRef","useRef","exportLoading","setExportLoading","selectedDataPoint","setSelectedDataPoint","ComparisonContainer","styled","theme","padding","spacing","ChartContainer","marginTop","marginBottom","borderRadius","shape","boxShadow","palette","background","paper","StyledTabs","_ref4","Tabs","_ref5","borderTopLeftRadius","borderTopRightRadius","TableStyled","Table","_ref6","success","main","fontWeight","mode","grey","ExportButtonsContainer","_ref7","display","justifyContent","gap","PassInfoCard","Paper","_ref8","flexDirection","KeyMetric","_ref9","alignItems","CircularProgress","Alert","my","pass1","pass2","comparison","analysisText","difference","Object","keys","acc","key","percentagePass1","percentagePass2","ref","Typography","variant","gutterBottom","ButtonGroup","size","Button","startIcon","PictureAsPdfIcon","exportToPDF","current","html2canvas","logging","useCORS","canvas","imgData","toDataURL","pdf","jsPDF","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","imgWidth","imgHeight","ratio","min","imgX","setFontSize","text","addImage","save","ImageIcon","exportToImage","link","document","createElement","download","href","click","onChange","e","newValue","indicatorColor","textColor","mb","Tab","icon","TimelineIcon","iconPosition","BarChartIcon","AssessmentIcon","prepareElevationChartData","normalize","profile","count","result","step","i","push","normalizedCount","profile1","visualization","profile2","Array","from","_","point1","point2","elevation1","elevation2","onMouseMove","onMouseLeave","textAnchor","RechartsTooltip","_ref10","active","borderLeft","borderColor","pt","Legend","wrapperStyle","paddingTop","r","fill","criticalPoints","ReferenceLine","BarChart","prepareSegmentChartData","_ref11","Bar","radius","prepareMetricsChartData","layout","horizontal","vertical","tickLine","axisLine","_ref12","unit","includes","Grid","container","mt","xs","md","component","bgcolor","minWidth","flexWrap","mr","marginRight","pl","TableHead","TableRow","TableCell","TableBody","paragraph","border","recommendedFor","weatherIcons","rain","wind","cold","heat","storm","WeatherConditions","issues","issue","_weatherIcons$issue$t","_weatherIcons$issue$t2","routeId","alternatives","setAlternatives","selectedRouteIndex","setSelectedRouteIndex","weatherConditions","setWeatherConditions","precipitation","temperature","windSpeed","stormRisk","userProfile","setUserProfile","level","withChildren","preferences","params","prev","weather","post","updateWeatherCondition","condition","updateUserProfile","field","updatedPreferences","pref","routes","getRoutesToDisplay","_alternatives$weather","originalRoute","_alternatives$weather2","Boolean","_alternatives$profile","_alternatives$profile2","variants","selectedRoute","boundingBox","max","parseInt","checked","weatherIssues","recommendedType","route","reason","suitability","score","_Fragment","totalDistance","totalElevation","estimatedTime","difficultyChange","highlights","highlight","safetyPoints","StyledCard","Card","transform","shadows","CardOverlay","overlay","primary","ExpandButton","IconButton","expanded","create","shortest","StatsChip","Chip","ActionButton","textTransform","paddingLeft","paddingRight","StyledCardMedia","CardMedia","backgroundSize","backgroundPosition","cardVariants","hidden","visible","ease","hover","detailsVariants","collapsed","delay","subtitle","image","location","stats","details","detailsUrl","isFavorite","isBookmarked","onFavoriteToggle","onBookmarkToggle","onShare","useTheme","setExpanded","hovered","setHovered","getDifficultyColor","warning","dark","toLowerCase","whileHover","onMouseEnter","alpha","common","black","FavoriteIcon","FavoriteBorderIcon","BookmarkIcon","BookmarkBorderIcon","TerrainIcon","RouteIcon","secondary","CardContent","views","VisibilityIcon","Divider","CardActions","disableSpacing","px","ShareIcon","handleExpandClick","ExpandMoreIcon","RouterLink","to","endIcon","ArrowForwardIcon","ml","Collapse","in","unmountOnExit","detail","AnimatedGrid","FilterContainer","breakpoints","down","SearchField","TextField","flexGrow","up","FilterForm","FilterChipsContainer","NoResultsContainer","StyledPagination","containerVariants","staggerChildren","items","filters","onFilterChange","onSearch","itemsPerPage","emptyStateMessage","isMobile","useMediaQuery","isTablet","searchQuery","setSearchQuery","filtersExpanded","setFiltersExpanded","activeFilters","setActiveFilters","currentPage","setCurrentPage","totalPages","ceil","paginatedItems","slice","handleSearchChange","handleFilterChange","filterName","newFilters","clearAllFilters","borderBottom","pb","placeholder","fullWidth","InputProps","startAdornment","InputAdornment","SearchIcon","endAdornment","ClearIcon","FilterListIcon","FormControl","InputLabel","Select","labelId","IconComponent","TuneIcon","MenuItem","diff","region","onDelete","entries","chipColor","deleteIcon","sm","lg","Skeleton","VisualizationCard","Pagination","page","handlePageChange","event","scrollTo","behavior","showFirstButton","showLastButton","CarouselContainer","SlideContainer","NavigationArrow","direction","zIndex","DotsContainer","DotButton","disabled","HeaderContainer","fadeVariants","enter","center","autoPlay","autoPlayInterval","showDots","showArrows","loop","viewAllUrl","currentIndex","setCurrentIndex","setDirection","autoPlayRef","setInterval","goToNext","clearInterval","paddingBottom","AnimatePresence","custom","goToPrevious","ArrowBackIcon","goToSlide","DotIcon","DashboardHeader","contrastText","minHeight","StyledTab","VisualizationContainer","FeatureCard","FeatureIcon","VisualizationDashboard","passes","setPasses","setRoutes","selectedPassId","setSelectedPassId","comparePassId1","setComparePassId1","comparePassId2","setComparePassId2","selectedRouteId","setSelectedRouteId","featuredItems","setFeaturedItems","async","_mockPasses$","_mockPasses$2","_mockPasses$3","_mockRoutes$","mockPasses","mockRoutes","pass","setTimeout","fetchData","handleFavoriteToggle","prevPasses","prevRoutes","prevItems","handleBookmarkToggle","handleShare","log","availableFilters","PageTransition","Container","VisualizationCarousel","DashboardIcon","verticalAlign","ThreeDIcon","CompareIcon","handleTabChange","scrollButtons","ExploreIcon","renderTabContent","ColVisualization3D","onPassChange","PassVisualizer","PassComparison","onPassChange1","onPassChange2","RouteAlternatives","onRouteChange","VisualizationGrid","InsightsIcon"],"sourceRoot":""}