{"version":3,"file":"static/js/6025.07ced1fa.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Speed.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/MonitorWeight.js","../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/icons-material/esm/TrendingDown.js","../node_modules/@mui/icons-material/esm/CalendarToday.js","components/nutrition/NutritionDashboard.js","../node_modules/@mui/icons-material/esm/LocalDrink.js","../node_modules/@mui/icons-material/esm/Restaurant.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20.38 8.57-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83\"\n}), 'Speed');","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-7 9c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 8.5h1v1h-1zm1.5 0h1v1h-1zm1.5 0h1v1h-1z\"\n}, \"1\")], 'MonitorWeight');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 18 2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z\"\n}), 'TrendingDown');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 18H4V8h16z\"\n}), 'CalendarToday');","import React, { useState, useEffect } from 'react';\nimport { \n  Grid, \n  Paper, \n  Typography, \n  Box, \n  Divider, \n  CircularProgress, \n  Button, \n  Card, \n  CardContent, \n  LinearProgress,\n  IconButton,\n  Tooltip,\n  Alert\n} from '@mui/material';\nimport { \n  DirectionsBike, \n  Restaurant, \n  LocalDrink, \n  Timeline, \n  Info, \n  CalendarToday,\n  TrendingUp,\n  TrendingDown,\n  Speed,\n  MonitorWeight,\n  Add,\n  Refresh\n} from '@mui/icons-material';\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, registerables } from 'chart.js';\nimport nutritionService from '../../services/nutritionService';\n\n// Enregistrer les composants Chart.js\nChartJS.register(...registerables);\n\n/**\n * Tableau de bord de nutrition pour afficher les métriques principales\n * et l'historique nutritionnel du cycliste\n */\nconst NutritionDashboard = ({ nutritionData, userId, onRefresh }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [dateRange, setDateRange] = useState('week'); // week, month, year\n\n  // Utiliser les données passées en props ou les récupérer si non disponibles\n  useEffect(() => {\n    if (nutritionData) {\n      setDashboardData(nutritionData);\n    } else {\n      fetchDashboardData();\n    }\n  }, [nutritionData, userId]);\n\n  // Récupérer les données de tableau de bord si nécessaire\n  const fetchDashboardData = async () => {\n    if (!userId) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await nutritionService.getUserNutritionData(userId);\n      \n      // Valider les structures de données essentielles\n      if (!data || typeof data !== 'object') {\n        throw new Error('Format de données invalide');\n      }\n      \n      // S'assurer que les structures de données nécessaires existent\n      if (!data.dailyIntake) data.dailyIntake = { calories: 0, carbs: 0, protein: 0, fat: 0, hydration: 0 };\n      if (!data.metrics) data.metrics = { weight: 70, height: 175, bodyFat: 15, basalMetabolicRate: 1600 };\n      if (!data.goals) data.goals = { type: 'performance', weeklyCalories: 0 };\n      if (!data.activityLog) data.activityLog = [];\n      \n      setDashboardData(data);\n    } catch (err) {\n      console.error('Erreur lors de la récupération des données du tableau de bord:', err);\n      setError('Impossible de charger les données du tableau de bord.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Rafraîchir manuellement les données\n  const handleRefresh = () => {\n    fetchDashboardData();\n    if (onRefresh) onRefresh();\n  };\n\n  // Changer la plage de dates pour les graphiques\n  const handleDateRangeChange = (range) => {\n    setDateRange(range);\n  };\n\n  // Formatter les données de macronutriments pour le graphique en anneau\n  const getMacroData = () => {\n    if (!dashboardData || !dashboardData.dailyIntake) {\n      return {\n        labels: ['Glucides', 'Protéines', 'Lipides'],\n        datasets: [{\n          data: [60, 20, 20], // Valeurs par défaut\n          backgroundColor: ['#4CAF50', '#2196F3', '#FF9800'],\n          borderWidth: 1\n        }]\n      };\n    }\n\n    const { carbs = 0, protein = 0, fat = 0 } = dashboardData.dailyIntake;\n    const totalGrams = carbs + protein + fat;\n    \n    if (totalGrams === 0) {\n      return {\n        labels: ['Glucides', 'Protéines', 'Lipides'],\n        datasets: [{\n          data: [60, 20, 20], // Valeurs par défaut\n          backgroundColor: ['#4CAF50', '#2196F3', '#FF9800'],\n          borderWidth: 1\n        }]\n      };\n    }\n    \n    return {\n      labels: ['Glucides', 'Protéines', 'Lipides'],\n      datasets: [{\n        data: [\n          Math.round((carbs / totalGrams) * 100),\n          Math.round((protein / totalGrams) * 100),\n          Math.round((fat / totalGrams) * 100)\n        ],\n        backgroundColor: ['#4CAF50', '#2196F3', '#FF9800'],\n        borderWidth: 1\n      }]\n    };\n  };\n\n  // Options pour le graphique en anneau\n  const macroChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          boxWidth: 12,\n          padding: 15\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `${context.label}: ${context.raw}%`;\n          }\n        }\n      }\n    },\n    cutout: '70%'\n  };\n\n  // Formatter les données de calories pour le graphique en ligne\n  const getCalorieData = () => {\n    if (!dashboardData || !dashboardData.activityLog || !dashboardData.activityLog.length) {\n      return {\n        labels: Array.from({ length: 7 }, (_, i) => {\n          const date = new Date();\n          date.setDate(date.getDate() - 6 + i);\n          return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\n        }),\n        datasets: [\n          {\n            label: 'Calories consommées',\n            data: Array(7).fill(0),\n            borderColor: '#4CAF50',\n            backgroundColor: 'rgba(76, 175, 80, 0.1)',\n            tension: 0.4,\n            fill: true\n          },\n          {\n            label: 'Calories dépensées',\n            data: Array(7).fill(0),\n            borderColor: '#f44336',\n            backgroundColor: 'rgba(244, 67, 54, 0.1)',\n            tension: 0.4,\n            fill: true\n          }\n        ]\n      };\n    }\n\n    // Prendre les 7 derniers jours pour la semaine, 30 pour le mois, etc.\n    const limit = dateRange === 'week' ? 7 : (dateRange === 'month' ? 30 : 365);\n    \n    // Trier les entrées par date et limiter au nombre requis\n    const sortedEntries = [...dashboardData.activityLog]\n      .sort((a, b) => new Date(a.date) - new Date(b.date))\n      .slice(-limit);\n\n    // Si le nombre d'entrées est inférieur à la limite, ajouter des entrées vides pour compléter\n    const labels = [];\n    const consumedData = [];\n    const burnedData = [];\n    \n    const today = new Date();\n    \n    for (let i = 0; i < limit; i++) {\n      const date = new Date();\n      date.setDate(today.getDate() - (limit - 1) + i);\n      const dateString = date.toISOString().split('T')[0];\n      \n      const entry = sortedEntries.find(e => e.date === dateString);\n      \n      labels.push(date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' }));\n      consumedData.push(entry ? entry.calories.consumed : null);\n      burnedData.push(entry ? entry.calories.burned : null);\n    }\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Calories consommées',\n          data: consumedData,\n          borderColor: '#4CAF50',\n          backgroundColor: 'rgba(76, 175, 80, 0.1)',\n          tension: 0.4,\n          fill: true\n        },\n        {\n          label: 'Calories dépensées',\n          data: burnedData,\n          borderColor: '#f44336',\n          backgroundColor: 'rgba(244, 67, 54, 0.1)',\n          tension: 0.4,\n          fill: true\n        }\n      ]\n    };\n  };\n\n  // Options pour le graphique en ligne\n  const calorieChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: 'Calories'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  // Formatter les données d'hydratation pour le graphique en barre\n  const getHydrationData = () => {\n    if (!dashboardData || !dashboardData.activityLog || !dashboardData.activityLog.length) {\n      return {\n        labels: Array.from({ length: 7 }, (_, i) => {\n          const date = new Date();\n          date.setDate(date.getDate() - 6 + i);\n          return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\n        }),\n        datasets: [\n          {\n            label: 'Hydratation (litres)',\n            data: Array(7).fill(0),\n            backgroundColor: '#2196F3',\n            borderColor: '#1976D2',\n            borderWidth: 1\n          }\n        ]\n      };\n    }\n\n    // Prendre les 7 derniers jours pour la semaine, 30 pour le mois, etc.\n    const limit = dateRange === 'week' ? 7 : (dateRange === 'month' ? 30 : 365);\n    \n    // Générer les données d'hydratation avec la même logique que pour les calories\n    const labels = [];\n    const hydrationData = [];\n    \n    const today = new Date();\n    \n    for (let i = 0; i < limit; i++) {\n      const date = new Date();\n      date.setDate(today.getDate() - (limit - 1) + i);\n      const dateString = date.toISOString().split('T')[0];\n      \n      const entry = dashboardData.activityLog.find(e => e.date === dateString);\n      \n      labels.push(date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' }));\n      hydrationData.push(entry ? entry.hydration : null);\n    }\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Hydratation (litres)',\n          data: hydrationData,\n          backgroundColor: '#2196F3',\n          borderColor: '#1976D2',\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n\n  // Options pour le graphique en barre\n  const hydrationChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Litres'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  };\n\n  // Calculer le pourcentage d'avancement vers l'objectif calorique\n  const getCalorieProgress = () => {\n    if (!dashboardData || !dashboardData.dailyIntake || !dashboardData.goals) {\n      return 0;\n    }\n\n    // Valeur par défaut si les données sont manquantes\n    const currentCalories = dashboardData.dailyIntake.calories || 0;\n    \n    let targetCalories = 2000; // Valeur par défaut\n    \n    // Calculer la cible calorique en fonction de l'objectif\n    if (dashboardData.metrics && dashboardData.metrics.basalMetabolicRate) {\n      const bmr = dashboardData.metrics.basalMetabolicRate;\n      if (dashboardData.goals.type === 'weight-loss') {\n        targetCalories = Math.round(bmr * 0.85);\n      } else if (dashboardData.goals.type === 'performance') {\n        targetCalories = Math.round(bmr * 1.1);\n      } else {\n        targetCalories = bmr;\n      }\n    }\n\n    if (targetCalories === 0) return 0;\n    \n    return Math.min(100, Math.round((currentCalories / targetCalories) * 100));\n  };\n\n  // Obtenir la valeur de protéines en g/kg de poids corporel\n  const getProteinPerKg = () => {\n    if (!dashboardData || !dashboardData.dailyIntake || !dashboardData.metrics) {\n      return 0;\n    }\n    \n    const protein = dashboardData.dailyIntake.protein || 0;\n    const weight = dashboardData.metrics.weight || 70;\n    \n    if (weight === 0) return 0;\n    \n    return Math.round((protein / weight) * 10) / 10;\n  };\n\n  // Calculer le pourcentage d'hydratation par rapport à l'objectif\n  const getHydrationProgress = () => {\n    if (!dashboardData || !dashboardData.dailyIntake || !dashboardData.metrics) {\n      return 0;\n    }\n    \n    const hydration = dashboardData.dailyIntake.hydration || 0;\n    const weight = dashboardData.metrics.weight || 70;\n    \n    // Recommandation d'hydratation: 35ml par kg de poids corporel\n    const targetHydration = (weight * 0.035);\n    \n    if (targetHydration === 0) return 0;\n    \n    return Math.min(100, Math.round((hydration / targetHydration) * 100));\n  };\n\n  // Calculer l'Indice de Masse Corporelle (IMC)\n  const calculateBMI = () => {\n    if (!dashboardData || !dashboardData.metrics) {\n      return 0;\n    }\n    \n    const weight = dashboardData.metrics.weight || 70;\n    const height = dashboardData.metrics.height || 175;\n    \n    if (height === 0) return 0;\n    \n    // IMC = poids (kg) / taille² (m)\n    return Math.round((weight / Math.pow(height / 100, 2)) * 10) / 10;\n  };\n\n  // Rendu du composant\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert \n        severity=\"error\" \n        sx={{ mb: 3 }}\n        action={\n          <Button color=\"inherit\" size=\"small\" onClick={handleRefresh}>\n            Réessayer\n          </Button>\n        }\n      >\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!dashboardData) {\n    return (\n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Aucune donnée nutritionnelle disponible. Commencez à enregistrer vos repas pour voir les statistiques.\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n        <Button \n          startIcon={<Refresh />} \n          size=\"small\" \n          onClick={handleRefresh}\n        >\n          Actualiser\n        </Button>\n      </Box>\n      \n      {/* Cartes métriques */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        {/* Carte calories */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Restaurant sx={{ color: '#4CAF50', mr: 1 }} />\n              <Typography variant=\"h6\">Calories</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.dailyIntake?.calories || 0}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Objectif: {Math.round(dashboardData.metrics?.basalMetabolicRate * (dashboardData.goals?.type === 'weight-loss' ? 0.85 : 1.1)) || 0} kcal\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={getCalorieProgress()} \n              sx={{ mt: 1, mb: 0.5, height: 8, borderRadius: 4 }}\n            />\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {getCalorieProgress()}% de l'objectif\n              </Typography>\n              {dashboardData.activityLog && dashboardData.activityLog.length > 0 && (\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center' }}>\n                  {dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance > 0 ? (\n                    <>+{dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance} <TrendingUp fontSize=\"small\" color=\"success\" sx={{ ml: 0.5 }} /></>\n                  ) : (\n                    <>{dashboardData.activityLog[dashboardData.activityLog.length-1].calories.balance} <TrendingDown fontSize=\"small\" color=\"error\" sx={{ ml: 0.5 }} /></>\n                  )}\n                </Typography>\n              )}\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Carte protéines */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Speed sx={{ color: '#2196F3', mr: 1 }} />\n              <Typography variant=\"h6\">Protéines</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.dailyIntake?.protein || 0}g\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {Math.round(((dashboardData.dailyIntake?.protein || 0) / dashboardData.dailyIntake?.calories) * 400) || 0} kcal\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={Math.min(100, ((dashboardData.dailyIntake?.protein || 0) / ((dashboardData.metrics?.weight || 70) * 1.6)) * 100)} \n              sx={{ mt: 1, mb: 0.5, height: 8, borderRadius: 4, '& .MuiLinearProgress-bar': { backgroundColor: '#2196F3' } }}\n            />\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {getProteinPerKg()}g/kg (recommandé: 1.6-2.0g/kg)\n            </Typography>\n          </Paper>\n        </Grid>\n\n        {/* Carte hydratation */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <LocalDrink sx={{ color: '#03A9F4', mr: 1 }} />\n              <Typography variant=\"h6\">Hydratation</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.dailyIntake?.hydration || 0}L\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Objectif: {Math.round((dashboardData.metrics?.weight || 70) * 0.035 * 100) / 100}L\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={getHydrationProgress()} \n              sx={{ mt: 1, mb: 0.5, height: 8, borderRadius: 4, '& .MuiLinearProgress-bar': { backgroundColor: '#03A9F4' } }}\n            />\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {getHydrationProgress()}% de l'objectif\n            </Typography>\n          </Paper>\n        </Grid>\n\n        {/* Carte poids */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <MonitorWeight sx={{ color: '#9C27B0', mr: 1 }} />\n              <Typography variant=\"h6\">Poids</Typography>\n            </Box>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {dashboardData.metrics?.weight || 0}kg\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              IMC: {calculateBMI()}\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center' }}>\n                Masse grasse: {dashboardData.metrics?.bodyFat || 0}%\n              </Typography>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Graphiques */}\n      <Grid container spacing={3}>\n        {/* Graphique des calories */}\n        <Grid item xs={12} md={8}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Historique calorique</Typography>\n              <Box>\n                <Button \n                  size=\"small\" \n                  variant={dateRange === 'week' ? 'contained' : 'outlined'} \n                  onClick={() => handleDateRangeChange('week')}\n                  sx={{ mr: 1 }}\n                >\n                  Semaine\n                </Button>\n                <Button \n                  size=\"small\" \n                  variant={dateRange === 'month' ? 'contained' : 'outlined'} \n                  onClick={() => handleDateRangeChange('month')}\n                  sx={{ mr: 1 }}\n                >\n                  Mois\n                </Button>\n                <Button \n                  size=\"small\" \n                  variant={dateRange === 'year' ? 'contained' : 'outlined'} \n                  onClick={() => handleDateRangeChange('year')}\n                >\n                  Année\n                </Button>\n              </Box>\n            </Box>\n            <Box sx={{ height: 300 }}>\n              <Line data={getCalorieData()} options={calorieChartOptions} />\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Graphique des macronutriments */}\n        <Grid item xs={12} md={4}>\n          <Paper elevation={2} sx={{ p: 2, height: '100%' }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>Répartition des macros</Typography>\n            <Box sx={{ height: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Doughnut data={getMacroData()} options={macroChartOptions} />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={4}>\n                  <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">Glucides</Typography>\n                  <Typography variant=\"h6\" align=\"center\">{dashboardData.dailyIntake?.carbs || 0}g</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">Protéines</Typography>\n                  <Typography variant=\"h6\" align=\"center\">{dashboardData.dailyIntake?.protein || 0}g</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">Lipides</Typography>\n                  <Typography variant=\"h6\" align=\"center\">{dashboardData.dailyIntake?.fat || 0}g</Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Graphique d'hydratation */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>Historique d'hydratation</Typography>\n            <Box sx={{ height: 250 }}>\n              <Bar data={getHydrationData()} options={hydrationChartOptions} />\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Dernières notes */}\n      {dashboardData.activityLog && dashboardData.activityLog.length > 0 ? (\n        <Paper elevation={2} sx={{ p: 2, mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>Dernières notes</Typography>\n          <Grid container spacing={2}>\n            {dashboardData.activityLog.slice(-3).reverse().map((log, index) => (\n              <Grid item xs={12} md={4} key={index}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                        <CalendarToday fontSize=\"small\" sx={{ mr: 0.5, verticalAlign: 'middle' }} />\n                        {new Date(log.date).toLocaleDateString()}\n                      </Typography>\n                      <Typography \n                        variant=\"subtitle2\" \n                        color={log.calories.balance > 0 ? 'success.main' : 'error.main'}\n                      >\n                        {log.calories.balance > 0 ? '+' : ''}{log.calories.balance} kcal\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"body2\">{log.notes || 'Aucune note'}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      ) : (\n        <Box sx={{ mt: 3, textAlign: 'center' }}>\n          <Alert severity=\"info\" sx={{ display: 'inline-flex', textAlign: 'left' }}>\n            Aucun historique d'activité disponible. Commencez à enregistrer vos repas et activités.\n          </Alert>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default NutritionDashboard;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m3 2 2.01 18.23C5.13 21.23 5.97 22 7 22h10c1.03 0 1.87-.77 1.99-1.77L21 2zm9 17c-1.66 0-3-1.34-3-3 0-2 3-5.4 3-5.4s3 3.4 3 5.4c0 1.66-1.34 3-3 3m6.33-11H5.67l-.44-4h13.53z\"\n}), 'LocalDrink');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 9H9V2H7v7H5V2H3v7c0 2.12 1.66 3.84 3.75 3.97V22h2.5v-9.03C11.34 12.84 13 11.12 13 9V2h-2zm5-3v8h2.5v8H21V2c-2.76 0-5 2.24-5 4\"\n}), 'Restaurant');"],"names":["createSvgIcon","_jsx","d","defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Doughnut","DoughnutController","Pie","PieController","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","inProps","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","ChartJS","_ref","_dashboardData$dailyI","_dashboardData$metric","_dashboardData$goals","_dashboardData$dailyI2","_dashboardData$dailyI3","_dashboardData$dailyI4","_dashboardData$dailyI5","_dashboardData$metric2","_dashboardData$dailyI6","_dashboardData$metric3","_dashboardData$metric4","_dashboardData$metric5","_dashboardData$dailyI7","_dashboardData$dailyI8","_dashboardData$dailyI9","nutritionData","userId","onRefresh","loading","setLoading","useState","error","setError","dashboardData","setDashboardData","dateRange","setDateRange","fetchDashboardData","async","nutritionService","getUserNutritionData","Error","dailyIntake","calories","carbs","protein","fat","hydration","metrics","weight","bodyFat","basalMetabolicRate","goals","weeklyCalories","activityLog","err","console","handleRefresh","handleDateRangeChange","range","getCalorieProgress","currentCalories","targetCalories","bmr","Math","round","min","getHydrationProgress","targetHydration","Box","sx","display","justifyContent","my","children","CircularProgress","Alert","severity","mb","action","Button","color","size","onClick","_jsxs","startIcon","Refresh","Grid","container","spacing","item","xs","sm","md","p","alignItems","Restaurant","mr","Typography","variant","LinearProgress","mt","borderRadius","balance","_Fragment","TrendingUp","fontSize","ml","TrendingDown","Speed","backgroundColor","getProteinPerKg","LocalDrink","MonitorWeight","calculateBMI","pow","getCalorieData","Array","from","_","i","date","Date","setDate","getDate","toLocaleDateString","month","day","label","fill","borderColor","tension","limit","sortedEntries","sort","a","b","slice","consumedData","burnedData","today","dateString","toISOString","split","entry","e","consumed","burned","responsive","maintainAspectRatio","scales","y","beginAtZero","title","text","x","grid","legend","position","tooltip","mode","intersect","getMacroData","borderWidth","totalGrams","boxWidth","callbacks","context","raw","cutout","align","getHydrationData","hydrationData","reverse","log","index","Card","CardContent","CalendarToday","verticalAlign","notes","textAlign"],"sourceRoot":""}