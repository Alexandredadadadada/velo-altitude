{"version":3,"file":"static/js/6961.5e729060.chunk.js","mappings":";qMAGA,QAAgBA,GAA0BC,EAAAA,YAAiB,CAACC,EAAGC,KAAqBC,EAAAA,EAAAA,KAAK,MAAO,IAC3FF,EACHC,IAAKA,EACLH,UAAWK,IAAWH,EAAEF,UAAWA,sDCHrC,MAAMM,WAAuBL,cAAoB,MACjDK,EAAQC,YAAc,oBACtB,6FCLA,MAAMC,EAAY,CAAC,KAAM,YAOlB,SAASC,EAAcC,GAU3B,IAV4B,QAC7BC,EAAO,SACPC,EAAQ,KACRC,EAAI,OACJC,EAAM,IACNC,EAAG,KACHC,EAAI,QACJC,EAAO,SACPC,EAAW,EAAC,KACZC,GACDT,EACMC,IAEDA,EADU,MAARE,GAA0B,MAAVC,GAAyB,MAAPC,EAC1B,IAEA,UAGd,MAAMK,EAAO,CACXT,WAEF,GAAgB,WAAZA,EACF,MAAO,CAAC,CACNQ,KAAMA,GAAQ,SACdP,YACCQ,GAEL,MAAMC,EAAcC,KACdV,GAAwB,MAAZD,GA/Bb,SAAuBE,GAC5B,OAAQA,GAAwB,MAAhBA,EAAKU,MACvB,CA6BuCC,CAAcX,KAC/CS,EAAMG,iBAEJb,EACFU,EAAMI,kBAGG,MAAXT,GAA2BA,EAAQK,EAAM,EAe3C,MAPgB,MAAZX,IAEFE,IAASA,EAAO,KACZD,IACFC,OAAOc,IAGJ,CAAC,CACNX,KAAc,MAARA,EAAeA,EAAO,SAG5BJ,cAAUe,EACVT,SAAUN,OAAWe,EAAYT,EACjCL,OACAC,OAAoB,MAAZH,EAAkBG,OAASa,EACnC,gBAAkBf,QAAWe,EAC7BZ,IAAiB,MAAZJ,EAAkBI,OAAMY,EAC7BV,QAASI,EACTO,UAxBoBN,IACF,MAAdA,EAAMO,MACRP,EAAMG,iBACNJ,EAAYC,GACd,GAqBCF,EACL,CACA,MAAMU,EAAsB7B,EAAAA,YAAiB,CAAC8B,EAAM5B,KAClD,IACI6B,GAAIC,EAAM,SACVrB,GACEmB,EACJG,EA3EJ,SAAuCC,EAAGC,GAAK,GAAI,MAAQD,EAAG,MAAO,CAAC,EAAG,IAAIE,EAAI,CAAC,EAAG,IAAK,IAAIC,KAAKH,EAAG,GAAI,CAAC,EAAEI,eAAeC,KAAKL,EAAGG,GAAI,CAAE,GAAIF,EAAEK,QAAQH,IAAM,EAAG,SAAUD,EAAEC,GAAKH,EAAEG,EAAI,CAAE,OAAOD,CAAG,CA2ExLK,CAA8BX,EAAMvB,GAC9C,MAAOmC,GACLhC,QAASiC,IACNnC,EAAeoC,OAAOC,OAAO,CAChCnC,QAASsB,EACTrB,YACCsB,IACH,OAAoB9B,EAAAA,EAAAA,KAAKwC,EAAWC,OAAOC,OAAO,CAAC,EAAGZ,EAAOS,EAAa,CACxExC,IAAKA,IACJ,IAEL2B,EAAOvB,YAAc,SACrB,6HCjFA,MAAMuB,EAAsB7B,EAAAA,YAAiB,CAAA8B,EAS1C5B,KAAQ,IATmC,GAC5C6B,EAAE,SACFe,EAAQ,QACRC,EAAU,UAAS,KACnBC,EAAI,OACJC,GAAS,EAAK,SACdtC,GAAW,EAAK,UAChBZ,KACGkC,GACJH,EACC,MAAMoB,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,QACrCJ,GAAa,QAClBhC,KACGF,EAAAA,EAAAA,IAAe,CAClBE,QAASqB,EACTpB,cACGsB,IAECU,EAAYjC,EAClB,OAAoBP,EAAAA,EAAAA,KAAKwC,EAAW,IAC/BD,KACAT,EACH/B,IAAKA,EACLS,SAAUA,EACVZ,UAAWK,IAAWL,EAAWmD,EAAQD,GAAU,SAAUF,GAAW,GAAGG,KAAUH,IAAWC,GAAQ,GAAGE,KAAUF,IAAQf,EAAMrB,MAAQD,GAAY,aACvJ,IAEJkB,EAAOvB,YAAc,SACrB,kHC7BA,MAAM8C,EAAwBpD,EAAAA,YAAiB,CAAA8B,EAK5C5B,KAAQ,IALqC,UAC9CH,EAAS,SACT+C,EACAf,GAAIY,EAAY,SACbV,GACJH,EAEC,OADAgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,cACpB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAWL,EAAW+C,MAC9Bb,GACH,IAEJmB,EAAS9C,YAAc,WACvB,UCdM+C,EAA0BrD,EAAAA,YAAiB,CAAA8B,EAK9C5B,KAAQ,IALuC,UAChDH,EAAS,SACT+C,EACAf,GAAIY,EAAY,SACbV,GACJH,EAEC,OADAgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,gBACpB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAWL,EAAW+C,MAC9Bb,GACH,IAEJoB,EAAW/C,YAAc,aACzB,yBCZA,MAAMgD,EAA0BtD,EAAAA,YAAiB,CAAA8B,EAM9C5B,KAAQ,IANuC,SAChD4C,EAAQ,UACR/C,EAEAgC,GAAIY,EAAY,SACbV,GACJH,EACC,MAAMoB,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,eACtCS,GAAeC,EAAAA,EAAAA,UAAQ,KAAM,CACjCC,mBAAoBP,KAClB,CAACA,IACL,OAAoB/C,EAAAA,EAAAA,KAAKuD,EAAAA,EAAkBC,SAAU,CACnDC,MAAOL,EACPM,UAAuB1D,EAAAA,EAAAA,KAAKwC,EAAW,CACrCzC,IAAKA,KACF+B,EACHlC,UAAWK,IAAWL,EAAWmD,MAEnC,IAEJI,EAAWhD,YAAc,aACzB,UCvBMwD,EAAuB9D,EAAAA,YAE7B,CAAA8B,EAMG5B,KAAQ,IANV,SACC4C,EAAQ,UACR/C,EAAS,QACTgD,EACAhB,GAAIY,EAAY,SACbV,GACJH,EACC,MAAMoB,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,YAC5C,OAAoB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAW2C,EAAU,GAAGG,KAAUH,IAAYG,EAAQnD,MAC9DkC,GACH,IAEJ6B,EAAQxD,YAAc,UACtB,UCjBMyD,EAA8B/D,EAAAA,YAAiB,CAAA8B,EAKlD5B,KAAQ,IAL2C,UACpDH,EAAS,SACT+C,EACAf,GAAIY,EAAY,SACbV,GACJH,EAEC,OADAgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,qBACpB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAWL,EAAW+C,MAC9Bb,GACH,IAEJ8B,EAAezD,YAAc,iBAC7B,UCdM0D,EAAwBhE,EAAAA,YAAiB,CAAA8B,EAK5C5B,KAAQ,IALqC,UAC9CH,EAAS,SACT+C,EACAf,GAAIY,EAAY,OACbV,GACJH,EAEC,OADAgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,cACpB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAWL,EAAW+C,MAC9Bb,GACH,IAEJ+B,EAAS1D,YAAc,WACvB,wBCbA,MAAM2D,GAAgBC,EAAAA,EAAAA,GAAiB,MACjCC,EAA4BnE,EAAAA,YAAiB,CAAA8B,EAKhD5B,KAAQ,IALyC,UAClDH,EAAS,SACT+C,EACAf,GAAIY,EAAYsB,KACbhC,GACJH,EAEC,OADAgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,kBACpB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAWL,EAAW+C,MAC9Bb,GACH,IAEJkC,EAAa7D,YAAc,eAC3B,UChBM8D,EAAwBpE,EAAAA,YAAiB,CAAA8B,EAK5C5B,KAAQ,IALqC,UAC9CH,EAAS,SACT+C,EACAf,GAAIY,EAAY,OACbV,GACJH,EAEC,OADAgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,cACpB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAWL,EAAW+C,MAC9Bb,GACH,IAEJmC,EAAS9D,YAAc,WACvB,UCbM+D,GAAgBH,EAAAA,EAAAA,GAAiB,MACjCI,EAAyBtE,EAAAA,YAAiB,CAAA8B,EAK7C5B,KAAQ,IALsC,UAC/CH,EAAS,SACT+C,EACAf,GAAIY,EAAY0B,KACbpC,GACJH,EAEC,OADAgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,eACpB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,EACLH,UAAWK,IAAWL,EAAW+C,MAC9Bb,GACH,IAEJqC,EAAUhE,YAAc,YACxB,UCPMiE,EAAoBvE,EAAAA,YAAiB,CAAA8B,EAWxC5B,KAAQ,IAXiC,SAC1C4C,EAAQ,UACR/C,EAAS,GACTyE,EAAE,KACFC,EAAI,OACJC,EAAM,KACNC,GAAO,EAAK,SACZd,EAEA9B,GAAIY,EAAY,SACbV,GACJH,EACC,MAAMoB,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,QAC5C,OAAoB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,KACF+B,EACHlC,UAAWK,IAAWL,EAAWmD,EAAQsB,GAAM,MAAMA,IAAMC,GAAQ,QAAQA,IAAQC,GAAU,UAAUA,KACvGb,SAAUc,GAAoBxE,EAAAA,EAAAA,KAAKiD,EAAU,CAC3CS,SAAUA,IACPA,GACL,IAEJU,EAAKjE,YAAc,OACnB,QAAesC,OAAOC,OAAO0B,EAAM,CACjCK,IAAKd,EACLe,MAAOP,EACPQ,SAAUX,EACVY,KAAM3B,EACN4B,KAAMhB,EACNiB,KAAMb,EACNc,OAAQ5B,EACR6B,OAAQ9B,EACR+B,WAAYrB,8FC1CP,MAAMsB,EAAsB,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MACtDC,EAAyB,KAChCC,EAA4BvF,EAAAA,cAAoB,CACpDwF,SAAU,CAAC,EACXC,YAAaJ,EACbK,cAAeJ,KAEX,SACJK,EAAQ,SACRhC,GACE4B,EAqBG,SAASpC,EAAmBD,EAAQ0C,GACzC,MAAM,SACJJ,IACEK,EAAAA,EAAAA,YAAWN,GACf,OAAOrC,GAAUsC,EAASI,IAAkBA,CAC9C,CACO,SAASE,IACd,MAAM,YACJL,IACEI,EAAAA,EAAAA,YAAWN,GACf,OAAOE,CACT,CACO,SAASM,IACd,MAAM,cACJL,IACEG,EAAAA,EAAAA,YAAWN,GACf,OAAOG,CACT,wJCdA,SAASM,EAAcC,EAAKC,EAAKC,GAC/B,MAAMC,GAAcH,EAAMC,IAAQC,EAAMD,GAAO,IAC/C,OAAOG,KAAKC,MAjCU,IAiCJF,GAjCI,GAkCxB,CACA,SAASG,EAAiBzE,EAavB5B,GAAK,IAbmB,IACzBgG,EAAG,IACHD,EAAG,IACHE,EAAG,MACHK,EAAK,eACLC,EAAc,QACdC,EAAO,SACPC,EAAQ,UACR5G,EAAS,MACT6G,EAAK,QACL7D,EAAO,SACPD,KACGb,GACJH,EACC,OAAoB3B,EAAAA,EAAAA,KAAK,MAAO,CAC9BD,IAAKA,KACF+B,EACHlB,KAAM,cACNhB,UAAWK,IAAWL,EAAW,GAAG+C,QAAgB,CAClD,CAAC,MAAMC,KAAYA,EACnB,CAAC,GAAGD,kBAA0B6D,EAC9B,CAAC,GAAG7D,iBAAyB6D,GAAYD,IAE3CE,MAAO,CACLC,MAAO,GAAGb,EAAcC,EAAKC,EAAKC,SAC/BS,GAEL,gBAAiBX,EACjB,gBAAiBC,EACjB,gBAAiBC,EACjBtC,SAAU4C,GAA8BtG,EAAAA,EAAAA,KAAK,OAAQ,CACnDJ,UAAW,kBACX8D,SAAU2C,IACPA,GAET,CACA,MAAMM,EAA2B9G,EAAAA,YAAiB,CAAAS,EAG/CP,KAAQ,IAHwC,QACjD6G,GAAU,KACPC,GACJvG,EACC,MAAMwB,EAAQ,CACZiE,IAAK,EACLC,IAAK,IACLQ,UAAU,EACVF,gBAAgB,EAChBC,SAAS,KACNM,GAGL,GADA/E,EAAMa,UAAWK,EAAAA,EAAAA,IAAmBlB,EAAMa,SAAU,YAChDiE,EACF,OAAOR,EAAkBtE,EAAO/B,GAElC,MAAM,IACJgG,EAAG,IACHD,EAAG,IACHE,EAAG,MACHK,EAAK,eACLC,EAAc,QACdC,EAAO,SACPC,EAAQ,SACR7D,EAAQ,QACRC,EAAO,UACPhD,EAAS,SACT8D,KACGoD,GACDhF,EACJ,OAAoB9B,EAAAA,EAAAA,KAAK,MAAO,CAC9BD,IAAKA,KACF+G,EACHlH,UAAWK,IAAWL,EAAW+C,GACjCe,SAAUA,GAAWqD,EAAAA,EAAAA,IAAIrD,GAAUsD,IAAsBC,EAAAA,EAAAA,cAAaD,EAAO,CAC3EJ,SAAS,MACLR,EAAkB,CACtBL,MACAD,MACAE,MACAK,QACAC,iBACAC,UACAC,WACA7D,WACAC,WACC7C,IACH,IAEJ4G,EAAYxG,YAAc,cAC1B,yFC/HA+G,EAAAA,GAAMC,YAAYC,EAAAA,IAGlB,QAAeF,EAAK,kBCOpB,MAogBA,EApgBuBvF,IAAsC,IAArC,QAAE0F,EAAO,WAAEC,EAAU,OAAEC,GAAQ5F,EACrD,MAAM,EAAEM,IAAMuF,EAAAA,EAAAA,OACR,OAAEC,IAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAgBD,EAAAA,EAAAA,QAAO,OACtBE,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,IAChDG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACxCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,IACpCO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,OAChCS,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,CAC/CW,IAAK,EACLC,GAAI,EACJC,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAI5BC,EAAcC,IAClB,MACMC,EAAUD,EAAgB,GAChC,MAAO,GAFS7C,KAAK+C,MAAMF,EAAgB,IAEzBG,WAAWC,SAAS,EAAG,QAAQH,EAAQE,WAAWC,SAAS,EAAG,MAAM,GAIxFC,EAAAA,EAAAA,YAAU,KACR,GAAK/B,EAKL,IACE,IAAKA,EAAQgC,YAAcC,MAAMC,QAAQlC,EAAQgC,WAE/C,YADA5B,EAAO+B,MAAM,2CAKf,MAAMC,EAAQpC,EAAQgC,UAAUK,QAC9B,CAACC,EAAKC,IAAaD,GAAOC,EAASC,UAAY,IAC/C,GAGF,GAAIJ,GAAS,EAEX,YADAhC,EAAO+B,MAAM,uCAIflB,EAAamB,GAGbK,GACF,CAAE,MAAON,GACPO,QAAQP,MAAM,uDAAqDA,GACnE/B,EAAO+B,MAAM,kCAAmCA,EAAMQ,QACxD,MA5BEvC,EAAO+B,MAAM,0CA4Bf,GACC,CAACnC,EAASI,IAGb,MAAMqC,EAAkBA,KACtB,IAAKzC,IAAYA,EAAQgC,YAAc1B,EAASsC,QAAS,OAGrDpC,EAAcoC,SAChBpC,EAAcoC,QAAQC,UAIxB,MAAMC,EAAS,GACTC,EAAY,GAClB,IAAIC,EAAc,EAElBhD,EAAQgC,UAAUiB,SAAQV,IACxB,MAAMW,EAAkBX,EAASC,SAAW,GACvBD,EAAS7I,KAG9B,IAAK,IAAIyJ,EAAI,EAAGA,EAAID,EAAiBC,IACnCH,GAAe,GACfF,EAAOM,KAAK3B,EAAWuB,IACvBD,EAAUK,KAAKb,EAASc,MAC1B,IAIF,MAAMC,EAAMtD,EAAQuD,aAAe,IAG7BC,EAAMlD,EAASsC,QAAQa,WAAW,MACxCjD,EAAcoC,QAAU,IAAI/C,EAAM2D,EAAK,CACrC9J,KAAM,OACNgK,KAAM,CACJZ,OAAQA,EACRa,SAAU,CACR,CACE3E,MAAO,0BACP0E,KAAMX,EACNa,YAAa,oBACbC,QAAS,GACTC,MAAM,EACNC,gBAAiB,2BAEnB,CACE/E,MAAO,MACP0E,KAAMzB,MAAMa,EAAOkB,QAAQF,KAAKR,GAChCM,YAAa,0BACbK,WAAY,CAAC,EAAG,GAChBC,YAAa,EACbC,YAAa,KAInBC,QAAS,CACPC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,MAAO,CACLC,SAAS,EACT1H,KAAM,UAGV2H,EAAG,CACDF,MAAO,CACLC,SAAS,EACT1H,KAAM,qBAIZ4H,QAAS,CACPC,QAAS,CACPC,UAAW,CACTL,MAAQ7L,GACC,UAAUA,EAAQ,GAAGmG,QAE9BA,MAAQnG,IACN,MAAMwK,EAAQxK,EAAQmM,IAEtB,MAAO,CACL,cAAc3B,MACd,GAHmBxE,KAAKC,MAAOuE,EAAQC,EAAO,eAI/C,OAMX,EAqDE2B,EAAsBjC,IAC1B,IAAKhD,IAAYA,EAAQgC,UAAW,OAGpC,IAAIkD,EAAsB,EACtBC,EAAsB,KAE1B,IAAK,MAAM5C,KAAYvC,EAAQgC,UAE7B,GADAkD,GAAuB3C,EAASC,SAC5BQ,GAAekC,EAAqB,CACtCC,EAAsB5C,EACtB,KACF,CAGG4C,GAGL9D,GAAgB+D,IAEd,MACMC,EAAQD,EAAK7D,GAAM4D,EAAoB9B,OADxB,EAAI,MAInBC,EAAMtD,EAAQuD,aAAe,IAC7B+B,EAAkBH,EAAoB9B,MAAQC,EAG9CiC,EAAiB,IAAIH,EAAK5D,aAC5B8D,GAAmB,IAAMC,EAAe,KACnCD,GAAmB,IAAMC,EAAe,KACxCD,GAAmB,GAAKC,EAAe,KACvCD,GAAmB,KAAMC,EAAe,KACxCD,GAAmB,IAAKC,EAAe,KACvCD,GAAmB,IAAKC,EAAe,KAC3CA,EAAe,KAMpB,MAAMC,EACH,EAAIL,EAAoB9B,OAAS8B,EAAoB9B,MAAQC,IACvD,GAANA,GAEH,MAAO,CACLhC,IAAK8D,EAAK9D,IAAMkE,EAChBjE,GAAI8D,EACJ7D,YAAa+D,EACd,GACD,EAUEE,EAAgBA,KACpBC,cAAcxE,GACdR,GAAY,GAGZ,MAAMiF,EAAa,CACjBrE,IAAKzC,KAAKC,MAAMsC,EAAaE,KAC7BC,GAAI1C,KAAKC,MAAMsC,EAAaG,IAC5BC,YAAaJ,EAAaI,YAC1BgB,SAAU1B,EACV8E,UAAW9E,GAAeE,GAI5BZ,EAAOyF,QAAQ,+BACb,QAAQF,EAAWrE,mCAA0BqE,EAAWpE,SAItDtB,GACFA,EAAW0F,EACb,EAoDF,IAAK3F,EACH,OACErH,EAAAA,EAAAA,KAACoE,EAAAA,EAAI,CAACxE,UAAU,mBAAkB8D,UAChCyJ,EAAAA,EAAAA,MAAC/I,EAAAA,EAAKQ,KAAI,CAAAlB,SAAA,EACR1D,EAAAA,EAAAA,KAACoE,EAAAA,EAAKM,MAAK,CAAAhB,SAAC,6CACZ1D,EAAAA,EAAAA,KAACoE,EAAAA,EAAKU,KAAI,CAAApB,SAAC,gFASnB,MAAM0J,EAvCyBC,MAC7B,IAAKhG,IAAYA,EAAQgC,WAA0C,IAA7BhC,EAAQgC,UAAUgC,OACtD,MAAO,CAAEtK,KAAM,UAAW2J,MAAO,EAAGb,SAAU,GAGhD,MAAMyD,EAAgBpH,KAAKH,IAAIkC,EAAiBZ,EAAQgC,UAAUgC,OAAS,GAC3E,OAAOhE,EAAQgC,UAAUiE,EAAc,EAiCbD,GACtBE,EA9BoBxM,KACxB,MAAMyM,EAAS,CACbC,OAAQ,CAAEC,MAAO,OAAQC,KAAMC,EAAAA,KAC/BC,OAAQ,CAAEH,MAAO,UAAWC,KAAMG,EAAAA,KAClCC,UAAW,CAAEL,MAAO,UAAWC,KAAMK,EAAAA,KACrCC,OAAQ,CAAEP,MAAO,SAAUC,KAAMK,EAAAA,KACjCE,SAAU,CAAER,MAAO,OAAQC,KAAMQ,EAAAA,IACjCC,SAAU,CAAEV,MAAO,UAAWC,KAAMQ,EAAAA,IACpCE,QAAS,CAAEX,MAAO,YAAaC,KAAMG,EAAAA,MAGvC,OAAON,EAAOzM,IAASyM,EAAOa,OAAO,EAmBjBC,CAAiBlB,EAAoBrM,MACrDwN,EAAkBrI,KAAKH,IAAI,IAAMoC,EAAcE,EAAa,KAElE,OACErI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,kBAAiB8D,UAC9ByJ,EAAAA,EAAAA,MAAC/I,EAAAA,EAAI,CAACxE,UAAU,OAAM8D,SAAA,EACpByJ,EAAAA,EAAAA,MAAC/I,EAAAA,EAAKW,OAAM,CAACnF,UAAU,oDAAmD8D,SAAA,EACxE1D,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,OAAM8D,SAAE2D,EAAQmH,QAC9BrB,EAAAA,EAAAA,MAACsB,EAAAA,EAAK,CAACpK,GAAG,UAASX,SAAA,CAAEoF,EAAWX,GAAa,MAAIW,EAAWT,UAG9D8E,EAAAA,EAAAA,MAAC/I,EAAAA,EAAKQ,KAAI,CAAAlB,SAAA,EACR1D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,OAAM8D,UACnB1D,EAAAA,EAAAA,KAAC2G,EAAW,CACVb,IAAKyI,EACL3L,QAAQ,UACRyD,MAAO,GAAGH,KAAKC,MAAMoI,MACrB3O,UAAU,OACV6G,MAAO,CAAEiI,OAAQ,aAIrBvB,EAAAA,EAAAA,MAACwB,EAAAA,EAAG,CAAC/O,UAAU,OAAM8D,SAAA,EACnB1D,EAAAA,EAAAA,KAAC4O,EAAAA,EAAG,CAACC,GAAI,EAAEnL,UACTyJ,EAAAA,EAAAA,MAAC/I,EAAAA,EAAI,CAACxE,UAAU,yBAAwB8D,SAAA,EACtCyJ,EAAAA,EAAAA,MAAC/I,EAAAA,EAAKW,OAAM,CAACnF,UAAW,MAAM2N,EAAcG,mBAAmBhK,SAAA,EAC7D1D,EAAAA,EAAAA,KAAC8O,EAAAA,EAAe,CAACnB,KAAMJ,EAAcI,KAAM/N,UAAU,SAAS,sBAC1CqC,EAAE,aAAamL,EAAoBrM,SAAWqM,EAAoBrM,SAExFoM,EAAAA,EAAAA,MAAC/I,EAAAA,EAAKQ,KAAI,CAAChF,UAAU,cAAa8D,SAAA,EAChCyJ,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,qBAAoB8D,SAAA,EACjC1D,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,cAAa8D,SAAE0J,EAAoB1C,SACjD1K,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,aAAY8D,SAAC,cAG/ByJ,EAAAA,EAAAA,MAACwB,EAAAA,EAAG,CAAC/O,UAAU,mBAAkB8D,SAAA,EAC/B1D,EAAAA,EAAAA,KAAC4O,EAAAA,EAAG,CAACG,GAAI,EAAErL,UACTyJ,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,cAAa8D,SAAA,EAC1B1D,EAAAA,EAAAA,KAAC8O,EAAAA,EAAe,CAACnB,KAAMQ,EAAAA,GAASvO,UAAU,oBACzCkJ,EAAWsE,EAAoBvD,gBAGpC7J,EAAAA,EAAAA,KAAC4O,EAAAA,EAAG,CAACG,GAAI,EAAErL,UACTyJ,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,cAAa8D,SAAA,EAC1B1D,EAAAA,EAAAA,KAAC8O,EAAAA,EAAe,CAACnB,KAAMK,EAAAA,IAAQpO,UAAU,oBACxCyH,EAAQuD,YAAc,GAAG1E,KAAKC,MAAOiH,EAAoB1C,MAAQrD,EAAQuD,YAAe,YAAc,gCAQnH5K,EAAAA,EAAAA,KAAC4O,EAAAA,EAAG,CAACC,GAAI,EAAEnL,UACTyJ,EAAAA,EAAAA,MAAC/I,EAAAA,EAAI,CAACxE,UAAU,sBAAqB8D,SAAA,EACnC1D,EAAAA,EAAAA,KAACoE,EAAAA,EAAKW,OAAM,CAAArB,SAAC,gCACbyJ,EAAAA,EAAAA,MAAC/I,EAAAA,EAAKQ,KAAI,CAAAlB,SAAA,EACRyJ,EAAAA,EAAAA,MAACwB,EAAAA,EAAG,CAAAjL,SAAA,EACFyJ,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAACG,GAAI,EAAGnP,UAAU,OAAM8D,SAAA,EAC1B1D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAY8D,SAAC,SAC5B1D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAY8D,SAAEwC,KAAKC,MAAMsC,EAAaE,WAEvDwE,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAACG,GAAI,EAAGnP,UAAU,OAAM8D,SAAA,EAC1B1D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAY8D,SAAC,gBAC5ByJ,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,aAAY8D,SAAA,CAAEwC,KAAKC,MAAMsC,EAAaG,IAAI,gBAI7DuE,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,qBAAoB8D,SAAA,EACjC1D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,kBAAiB8D,SAAC,0BACjC1D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAY8D,SACxB+E,EAAaI,YAAY9B,KAAI,CAACiI,EAAMC,KACnC9B,EAAAA,EAAAA,MAAA,OAAiBvN,UAAU,0BAAyB8D,SAAA,EAClDyJ,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,YAAW8D,SAAA,CAAC,IAAEuL,EAAQ,MACrCjP,EAAAA,EAAAA,KAAC2G,EAAW,CACVb,IAAKkJ,EACLhJ,IAAKqC,EACLzF,QACY,IAAVqM,EAAc,OACJ,IAAVA,EAAc,UACJ,IAAVA,EAAc,UACJ,IAAVA,EAAc,UACJ,IAAVA,EAAc,SACJ,IAAVA,EAAc,OAAS,YAEzBrP,UAAU,iBAEZuN,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,YAAW8D,SAAA,CAAEwC,KAAKC,MAAM6I,GAAM,SAfrCC,sBAyBxBjP,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,kBAAkB6G,MAAO,CAAEiI,OAAQ,SAAUhL,UAC1D1D,EAAAA,EAAAA,KAAA,UAAQD,IAAK4H,OAGfwF,EAAAA,EAAAA,MAAA,OAAKvN,UAAU,sDAAqD8D,SAAA,CAChEoE,GAWAqF,EAAAA,EAAAA,MAACzL,EAAAA,EAAM,CACLkB,QAAQ,UACRC,KAAK,KACLhC,QAlNOqO,KACnBnC,cAAcxE,GACdR,GAAY,EAAM,EAiNNnI,UAAU,OAAM8D,SAAA,EAEhB1D,EAAAA,EAAAA,KAAC8O,EAAAA,EAAe,CAACnB,KAAMwB,EAAAA,IAASvP,UAAU,SAAS,YAhBrDuN,EAAAA,EAAAA,MAACzL,EAAAA,EAAM,CACLkB,QAAQ,UACRC,KAAK,KACLhC,QA/SOuO,KACnB,GAAItH,EAAU,OAEdC,GAAY,GAGZ,MAAMsH,EAAKC,aAAY,KACrBlH,GAAeqE,IACb,MAAM8C,EAAU9C,EAAO,EAGvB,IAAI+C,EAAgB,EAChBC,EAAoB,EAExB,IAAK,IAAIjF,EAAI,EAAGA,EAAInD,EAAQgC,UAAUgC,OAAQb,IAE5C,GADAgF,GAAiBnI,EAAQgC,UAAUmB,GAAGX,SAClC0F,GAAWC,EAAe,CAC5BC,EAAoBjF,EACpB,KACF,CAGF,GAAIiF,IAAsBxH,EAAiB,CACzCC,EAAmBuH,GAGnB,MAAMC,EAAerI,EAAQgC,UAAUoG,GAAmB1O,KACpD2J,EAAQrD,EAAQgC,UAAUoG,GAAmB/E,MACnDjD,EAAOkI,KAAK,sBAAsBD,MAAiBhF,KACrD,CAMA,OAHA4B,EAAmBiD,GAGfA,GAAWlH,GACb0E,cAAcxE,GACduE,IACOzE,GAGFkH,CAAO,GACd,GACD,KAEH/G,EAAW6G,EAAG,EAmQFzP,UAAU,OAAM8D,SAAA,EAEhB1D,EAAAA,EAAAA,KAAC8O,EAAAA,EAAe,CAACnB,KAAMC,EAAAA,IAAQhO,UAAU,SACxCuI,EAAc,EAAI,YAAc,kBAcrCgF,EAAAA,EAAAA,MAACzL,EAAAA,EAAM,CACLkB,QAAQ,SACRC,KAAK,KACLhC,QAASiM,EACTlN,UAAU,OAAM8D,SAAA,EAEhB1D,EAAAA,EAAAA,KAAC8O,EAAAA,EAAe,CAACnB,KAAMiC,EAAAA,IAAQhQ,UAAU,SAAS,eAIpDI,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CACLkB,QAAQ,YACRC,KAAK,KACLhC,QAxMQgP,KAClB,GAAKxI,EAEL,IACE,GAAIE,EAAQ,CACV,MAAMuI,EAAc,IACfzI,EACH0I,MAAOtH,EACPuH,cAAe7H,EACf8H,gBAAgB,IAAIC,MAAOC,cAC3BlD,UAAW9E,GAAeE,GAG5Bd,EAAOuI,GACPrI,EAAOyF,QAAQ,kCACjB,CACF,CAAE,MAAO1D,GACPO,QAAQP,MAAM,+BAAgCA,GAC9C/B,EAAO+B,MAAM,8CAA4CA,EAAMQ,QACjE,GAqL+BtG,SACtB,0BAMH,0GClfV,MAAMiL,EAAmB9O,EAAAA,YAAiB,CAAA8B,EAMvC5B,KAAQ,IANgC,SACzC4C,EAAQ,UACR/C,EAEAgC,GAAIY,EAAY,SACbV,GACJH,EACC,MAAMyO,GAAoBpN,EAAAA,EAAAA,IAAmBL,EAAU,OACjD2C,GAAcK,EAAAA,EAAAA,MACdJ,GAAgBK,EAAAA,EAAAA,MAChByK,EAAa,GAAGD,SAChBE,EAAU,GAehB,OAdAhL,EAAYgF,SAAQiG,IAClB,MAAMC,EAAY1O,EAAMyO,GAExB,IAAIE,SADG3O,EAAMyO,GAEI,MAAbC,GAA0C,kBAAdA,IAE5BC,QACED,GAEJC,EAAOD,EAET,MAAME,EAAQH,IAAahL,EAAgB,IAAIgL,IAAa,GAChD,MAARE,GAAcH,EAAQ7F,KAAK,GAAG4F,IAAaK,KAASD,IAAO,KAE7CzQ,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,KACF+B,EACHlC,UAAWK,IAAWL,EAAWwQ,KAAsBE,IACvD,IAEJ3B,EAAIxO,YAAc,MAClB,2FC7BA,SAAS4G,EAAIrD,EAAUiN,GACrB,IAAI1B,EAAQ,EACZ,OAAOpP,EAAAA,SAAekH,IAAIrD,GAAUsD,GAAsBnH,EAAAA,eAAqBmH,GAAS2J,EAAK3J,EAAOiI,KAAWjI,GACjH,CAQA,SAASsD,EAAQ5G,EAAUiN,GACzB,IAAI1B,EAAQ,EACZpP,EAAAA,SAAeyK,QAAQ5G,GAAUsD,IACbnH,EAAAA,eAAqBmH,IAAQ2J,EAAK3J,EAAOiI,IAAQ,GAEvE,CAMA,SAAS2B,EAAelN,EAAU3C,GAChC,OAAOlB,EAAAA,SAAegR,QAAQnN,GAAUoN,MAAK9J,GAAsBnH,EAAAA,eAAqBmH,IAAUA,EAAMjG,OAASA,GACnH,0GCYA,MAAM6N,EAAmB/O,EAAAA,YAEzB,CAACiC,EAAO/B,KACN,OAAO,UACLH,KACGmR,IAEHnP,GAAIY,EAAY,MAAK,SACrBG,EAAQ,MACRqO,IAjDG,SAAerP,GAKnB,IALoB,GACrBC,EAAE,SACFe,EAAQ,UACR/C,KACGkC,GACJH,EACCgB,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,OACxC,MAAM2C,GAAcK,EAAAA,EAAAA,MACdJ,GAAgBK,EAAAA,EAAAA,MAChBoL,EAAQ,GACRV,EAAU,GAqBhB,OApBAhL,EAAYgF,SAAQiG,IAClB,MAAMC,EAAY1O,EAAMyO,GAExB,IAAIU,EACAC,EACAC,SAHGrP,EAAMyO,GAIY,kBAAdC,GAAuC,MAAbA,IAEjCS,OACAC,SACAC,SACEX,GAEJS,EAAOT,EAET,MAAME,EAAQH,IAAahL,EAAgB,IAAIgL,IAAa,GACxDU,GAAMD,EAAMvG,MAAc,IAATwG,EAAgB,GAAGtO,IAAW+N,IAAU,GAAG/N,IAAW+N,KAASO,KACvE,MAATE,GAAeb,EAAQ7F,KAAK,QAAQiG,KAASS,KACnC,MAAVD,GAAgBZ,EAAQ7F,KAAK,SAASiG,KAASQ,IAAS,IAEvD,CAAC,IACHpP,EACHlC,UAAWK,IAAWL,KAAcoR,KAAUV,IAC7C,CACD1O,KACAe,WACAqO,SAEJ,CAWOI,CAAOtP,GACZ,OAAoB9B,EAAAA,EAAAA,KAAKwC,EAAW,IAC/BuO,EACHhR,IAAKA,EACLH,UAAWK,IAAWL,GAAYoR,EAAM3F,QAAU1I,IAClD,IAEJiM,EAAIzO,YAAc,MAClB,kHC1DA,MAAMsO,EAAqB5O,EAAAA,YAAiB,CAAA8B,EAQzC5B,KAAQ,IARkC,SAC3C4C,EAAQ,GACR0B,EAAK,UAAS,KACdgN,GAAO,EAAK,KACZ/M,EAAI,UACJ1E,EACAgC,GAAIY,EAAY,UACbV,GACJH,EACC,MAAMoB,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,SAC5C,OAAoB3C,EAAAA,EAAAA,KAAKwC,EAAW,CAClCzC,IAAKA,KACF+B,EACHlC,UAAWK,IAAWL,EAAWmD,EAAQsO,GAAQ,eAAgB/M,GAAQ,QAAQA,IAAQD,GAAM,MAAMA,MACrG,IAEJoK,EAAMtO,YAAc,QACpB,yBCvBA,OAOC,WACA,aAEA,IAAImR,EAAS,CAAC,EAAEnP,eAEhB,SAASlC,IAGR,IAFA,IAAIqQ,EAAU,GAEL9F,EAAI,EAAGA,EAAI+G,UAAUlG,OAAQb,IAAK,CAC1C,IAAIgH,EAAMD,UAAU/G,GAChBgH,IACHlB,EAAUmB,EAAYnB,EAASoB,EAAWF,IAE5C,CAEA,OAAOlB,CACR,CAEA,SAASoB,EAAYF,GACpB,GAAmB,kBAARA,GAAmC,kBAARA,EACrC,OAAOA,EAGR,GAAmB,kBAARA,EACV,MAAO,GAGR,GAAIlI,MAAMC,QAAQiI,GACjB,OAAOvR,EAAW0R,MAAM,KAAMH,GAG/B,GAAIA,EAAItI,WAAazG,OAAOmP,UAAU1I,WAAasI,EAAItI,SAASA,WAAW2I,SAAS,iBACnF,OAAOL,EAAItI,WAGZ,IAAIoH,EAAU,GAEd,IAAK,IAAI7O,KAAO+P,EACXF,EAAOlP,KAAKoP,EAAK/P,IAAQ+P,EAAI/P,KAChC6O,EAAUmB,EAAYnB,EAAS7O,IAIjC,OAAO6O,CACR,CAEA,SAASmB,EAAahO,EAAOqO,GAC5B,OAAKA,EAIDrO,EACIA,EAAQ,IAAMqO,EAGfrO,EAAQqO,EAPPrO,CAQT,CAEqCsO,EAAOC,SAC3C/R,EAAWoO,QAAUpO,EACrB8R,EAAOC,QAAU/R,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIF,CArEA","sources":["../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/chart.js/auto/auto.js","components/training/HIITVisualizer.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/classnames/index.js"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Row, Col, Badge, ProgressBar, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop, faClock, faChartLine, faFire } from '@fortawesome/free-solid-svg-icons';\nimport { useTranslation } from 'react-i18next';\nimport Chart from 'chart.js/auto';\nimport { useNotification } from '../common/NotificationSystem';\n\n/**\n * Composant pour visualiser et suivre un entraînement HIIT\n */\nconst HIITVisualizer = ({ workout, onComplete, onSave }) => {\n  const { t } = useTranslation();\n  const { notify } = useNotification();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  const [isActive, setIsActive] = useState(false);\n  const [currentInterval, setCurrentInterval] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n  const [timerID, setTimerID] = useState(null);\n  const [sessionStats, setSessionStats] = useState({\n    tss: 0,          // Training Stress Score\n    kj: 0,           // Kilojoules\n    timeInZones: [0, 0, 0, 0, 0, 0, 0],  // Temps passé dans chaque zone\n  });\n\n  // Convertir le temps en format mm:ss\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Validation de l'entraînement\n  useEffect(() => {\n    if (!workout) {\n      notify.error(\"Données d'entraînement manquantes\");\n      return;\n    }\n\n    try {\n      if (!workout.intervals || !Array.isArray(workout.intervals)) {\n        notify.error(\"Intervalles d'entraînement invalides\");\n        return;\n      }\n\n      // Calculer la durée totale de l'entraînement\n      const total = workout.intervals.reduce(\n        (sum, interval) => sum + (interval.duration || 0), \n        0\n      );\n      \n      if (total <= 0) {\n        notify.error(\"Durée d'entraînement invalide\");\n        return;\n      }\n      \n      setTotalTime(total);\n      \n      // Initialiser la visualisation\n      initializeChart();\n    } catch (error) {\n      console.error(\"Erreur lors de l'initialisation de l'entraînement\", error);\n      notify.error(\"Erreur lors de l'initialisation\", error.message);\n    }\n  }, [workout, notify]);\n\n  // Création et mise à jour du graphique\n  const initializeChart = () => {\n    if (!workout || !workout.intervals || !chartRef.current) return;\n\n    // Détruire le graphique existant s'il y en a un\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    // Préparer les données pour le graphique\n    const labels = [];\n    const powerData = [];\n    let currentTime = 0;\n\n    workout.intervals.forEach(interval => {\n      const durationMinutes = interval.duration / 60;\n      const intervalType = interval.type || 'steady';\n      \n      // Pour chaque minute de l'intervalle\n      for (let i = 0; i < durationMinutes; i++) {\n        currentTime += 60;\n        labels.push(formatTime(currentTime));\n        powerData.push(interval.power);\n      }\n    });\n\n    // Référence à la FTP pour déterminer les zones de puissance\n    const ftp = workout.targetPower || 200;\n\n    // Créer le graphique\n    const ctx = chartRef.current.getContext('2d');\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Puissance Cible (Watts)',\n            data: powerData,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1,\n            fill: true,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\n          },\n          {\n            label: 'FTP',\n            data: Array(labels.length).fill(ftp),\n            borderColor: 'rgba(255, 99, 132, 0.8)',\n            borderDash: [5, 5],\n            borderWidth: 2,\n            pointRadius: 0\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Watts'\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: 'Temps (minutes)'\n            }\n          }\n        },\n        plugins: {\n          tooltip: {\n            callbacks: {\n              title: (context) => {\n                return `Temps: ${context[0].label}`;\n              },\n              label: (context) => {\n                const power = context.raw;\n                const percentOfFTP = Math.round((power / ftp) * 100);\n                return [\n                  `Puissance: ${power} W`,\n                  `${percentOfFTP}% de FTP`\n                ];\n              }\n            }\n          }\n        }\n      }\n    });\n  };\n\n  // Démarrer/Reprendre l'entraînement\n  const startWorkout = () => {\n    if (isActive) return;\n    \n    setIsActive(true);\n    \n    // Démarrer le chronomètre\n    const id = setInterval(() => {\n      setElapsedTime(prev => {\n        const newTime = prev + 1;\n        \n        // Vérifier si on doit passer à l'intervalle suivant\n        let totalDuration = 0;\n        let nextIntervalIndex = 0;\n        \n        for (let i = 0; i < workout.intervals.length; i++) {\n          totalDuration += workout.intervals[i].duration;\n          if (newTime <= totalDuration) {\n            nextIntervalIndex = i;\n            break;\n          }\n        }\n        \n        if (nextIntervalIndex !== currentInterval) {\n          setCurrentInterval(nextIntervalIndex);\n          \n          // Annoncer le changement d'intervalle\n          const intervalType = workout.intervals[nextIntervalIndex].type;\n          const power = workout.intervals[nextIntervalIndex].power;\n          notify.info(`Nouvel intervalle: ${intervalType}, ${power}W`);\n        }\n        \n        // Calculer les statistiques de la séance\n        updateSessionStats(newTime);\n        \n        // Vérifier si l'entraînement est terminé\n        if (newTime >= totalTime) {\n          clearInterval(timerID);\n          finishWorkout();\n          return totalTime;\n        }\n        \n        return newTime;\n      });\n    }, 1000);\n    \n    setTimerID(id);\n  };\n\n  // Mettre à jour les statistiques de la séance\n  const updateSessionStats = (currentTime) => {\n    if (!workout || !workout.intervals) return;\n    \n    // Trouver l'intervalle actuel\n    let accumulatedDuration = 0;\n    let currentIntervalData = null;\n    \n    for (const interval of workout.intervals) {\n      accumulatedDuration += interval.duration;\n      if (currentTime <= accumulatedDuration) {\n        currentIntervalData = interval;\n        break;\n      }\n    }\n    \n    if (!currentIntervalData) return;\n    \n    // Calculer les statistiques supplémentaires\n    setSessionStats(prev => {\n      // Calculer les kilojoules (kJ = Watts * heures)\n      const hourFraction = 1 / 3600; // une seconde en heures\n      const newKj = prev.kj + (currentIntervalData.power * hourFraction);\n      \n      // Déterminer la zone de puissance\n      const ftp = workout.targetPower || 200;\n      const powerPercentage = currentIntervalData.power / ftp;\n      \n      // Incrémenter le temps passé dans la zone appropriée\n      const newTimeInZones = [...prev.timeInZones];\n      if (powerPercentage <= 0.55) newTimeInZones[0]++;\n      else if (powerPercentage <= 0.75) newTimeInZones[1]++;\n      else if (powerPercentage <= 0.9) newTimeInZones[2]++;\n      else if (powerPercentage <= 1.05) newTimeInZones[3]++;\n      else if (powerPercentage <= 1.3) newTimeInZones[4]++;\n      else if (powerPercentage <= 1.5) newTimeInZones[5]++;\n      else newTimeInZones[6]++;\n      \n      // Calculer le TSS approximatif (Training Stress Score)\n      // TSS = (durée_en_secondes * NP * IF) / (FTP * 36)\n      // Pour simplifier, on utilise la puissance de l'intervalle au lieu de NP (Normalized Power)\n      // et IF (Intensity Factor) = puissance / FTP\n      const tssIncrement = \n        (1 * currentIntervalData.power * (currentIntervalData.power / ftp)) / \n        (ftp * 36);\n      \n      return {\n        tss: prev.tss + tssIncrement,\n        kj: newKj,\n        timeInZones: newTimeInZones\n      };\n    });\n  };\n\n  // Mettre en pause l'entraînement\n  const pauseWorkout = () => {\n    clearInterval(timerID);\n    setIsActive(false);\n  };\n\n  // Terminer l'entraînement\n  const finishWorkout = () => {\n    clearInterval(timerID);\n    setIsActive(false);\n    \n    // Arrondir les statistiques\n    const finalStats = {\n      tss: Math.round(sessionStats.tss),\n      kj: Math.round(sessionStats.kj),\n      timeInZones: sessionStats.timeInZones,\n      duration: elapsedTime,\n      completed: elapsedTime >= totalTime\n    };\n    \n    // Notifier l'utilisateur\n    notify.success(\"Entraînement terminé !\", \n      `TSS: ${finalStats.tss}, Énergie dépensée: ${finalStats.kj} kJ`\n    );\n    \n    // Appeler le callback de fin\n    if (onComplete) {\n      onComplete(finalStats);\n    }\n  };\n\n  // Sauvegarder l'entraînement\n  const saveWorkout = () => {\n    if (!workout) return;\n    \n    try {\n      if (onSave) {\n        const workoutData = {\n          ...workout,\n          stats: sessionStats,\n          completedTime: elapsedTime,\n          completionDate: new Date().toISOString(),\n          completed: elapsedTime >= totalTime\n        };\n        \n        onSave(workoutData);\n        notify.success(\"Entraînement sauvegardé !\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la sauvegarde\", error);\n      notify.error(\"Impossible de sauvegarder l'entraînement\", error.message);\n    }\n  };\n\n  // Obtenir les informations sur l'intervalle actuel\n  const getCurrentIntervalInfo = () => {\n    if (!workout || !workout.intervals || workout.intervals.length === 0) {\n      return { type: 'inconnu', power: 0, duration: 0 };\n    }\n    \n    const intervalIndex = Math.min(currentInterval, workout.intervals.length - 1);\n    return workout.intervals[intervalIndex];\n  };\n\n  // Determiner le style de l'intervalle actuel\n  const getIntervalStyle = (type) => {\n    const styles = {\n      warmup: { color: 'info', icon: faPlay },\n      steady: { color: 'success', icon: faChartLine },\n      threshold: { color: 'warning', icon: faFire },\n      vo2max: { color: 'danger', icon: faFire },\n      recovery: { color: 'info', icon: faClock },\n      cooldown: { color: 'primary', icon: faClock },\n      default: { color: 'secondary', icon: faChartLine }\n    };\n    \n    return styles[type] || styles.default;\n  };\n\n  // Si aucun entraînement n'est fourni\n  if (!workout) {\n    return (\n      <Card className=\"text-center my-4\">\n        <Card.Body>\n          <Card.Title>Aucun entraînement sélectionné</Card.Title>\n          <Card.Text>\n            Veuillez sélectionner un entraînement pour commencer la session.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  // Informations sur l'intervalle actuel\n  const currentIntervalInfo = getCurrentIntervalInfo();\n  const intervalStyle = getIntervalStyle(currentIntervalInfo.type);\n  const percentComplete = Math.min(100, (elapsedTime / totalTime) * 100);\n\n  return (\n    <div className=\"hiit-visualizer\">\n      <Card className=\"mb-4\">\n        <Card.Header className=\"d-flex justify-content-between align-items-center\">\n          <h4 className=\"mb-0\">{workout.name}</h4>\n          <Badge bg=\"primary\">{formatTime(elapsedTime)} / {formatTime(totalTime)}</Badge>\n        </Card.Header>\n        \n        <Card.Body>\n          <div className=\"mb-4\">\n            <ProgressBar \n              now={percentComplete} \n              variant=\"primary\" \n              label={`${Math.round(percentComplete)}%`} \n              className=\"mb-2\"\n              style={{ height: '25px' }}\n            />\n          </div>\n          \n          <Row className=\"mb-4\">\n            <Col md={6}>\n              <Card className=\"h-100 current-interval\">\n                <Card.Header className={`bg-${intervalStyle.color} text-white`}>\n                  <FontAwesomeIcon icon={intervalStyle.icon} className=\"me-2\" />\n                  Intervalle Actuel: {t(`intervals.${currentIntervalInfo.type}`) || currentIntervalInfo.type}\n                </Card.Header>\n                <Card.Body className=\"text-center\">\n                  <div className=\"power-display mb-3\">\n                    <h1 className=\"power-value\">{currentIntervalInfo.power}</h1>\n                    <span className=\"power-unit\">watts</span>\n                  </div>\n                  \n                  <Row className=\"interval-details\">\n                    <Col xs={6}>\n                      <div className=\"detail-item\">\n                        <FontAwesomeIcon icon={faClock} className=\"me-2 text-muted\" />\n                        {formatTime(currentIntervalInfo.duration)}\n                      </div>\n                    </Col>\n                    <Col xs={6}>\n                      <div className=\"detail-item\">\n                        <FontAwesomeIcon icon={faFire} className=\"me-2 text-muted\" />\n                        {workout.targetPower ? `${Math.round((currentIntervalInfo.power / workout.targetPower) * 100)}% FTP` : 'FTP inconnue'}\n                      </div>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n            \n            <Col md={6}>\n              <Card className=\"h-100 session-stats\">\n                <Card.Header>Statistiques de la Session</Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col xs={6} className=\"mb-3\">\n                      <div className=\"stat-label\">TSS</div>\n                      <div className=\"stat-value\">{Math.round(sessionStats.tss)}</div>\n                    </Col>\n                    <Col xs={6} className=\"mb-3\">\n                      <div className=\"stat-label\">Kilojoules</div>\n                      <div className=\"stat-value\">{Math.round(sessionStats.kj)} kJ</div>\n                    </Col>\n                  </Row>\n                  \n                  <div className=\"zones-distribution\">\n                    <div className=\"stat-label mb-2\">Temps dans les zones</div>\n                    <div className=\"zones-bars\">\n                      {sessionStats.timeInZones.map((time, index) => (\n                        <div key={index} className=\"zone-bar-container mb-1\">\n                          <div className=\"zone-name\">Z{index + 1}</div>\n                          <ProgressBar \n                            now={time} \n                            max={totalTime} \n                            variant={\n                              index === 0 ? 'info' :\n                              index === 1 ? 'success' :\n                              index === 2 ? 'primary' :\n                              index === 3 ? 'warning' :\n                              index === 4 ? 'danger' :\n                              index === 5 ? 'dark' : 'secondary'\n                            } \n                            className=\"flex-grow-1\"\n                          />\n                          <div className=\"zone-time\">{Math.round(time)}s</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          \n          <div className=\"chart-container\" style={{ height: '300px' }}>\n            <canvas ref={chartRef} />\n          </div>\n          \n          <div className=\"workout-controls mt-4 d-flex justify-content-center\">\n            {!isActive ? (\n              <Button \n                variant=\"success\" \n                size=\"lg\" \n                onClick={startWorkout}\n                className=\"me-2\"\n              >\n                <FontAwesomeIcon icon={faPlay} className=\"me-2\" />\n                {elapsedTime > 0 ? 'Reprendre' : 'Démarrer'}\n              </Button>\n            ) : (\n              <Button \n                variant=\"warning\" \n                size=\"lg\" \n                onClick={pauseWorkout}\n                className=\"me-2\"\n              >\n                <FontAwesomeIcon icon={faPause} className=\"me-2\" />\n                Pause\n              </Button>\n            )}\n            \n            <Button \n              variant=\"danger\" \n              size=\"lg\" \n              onClick={finishWorkout}\n              className=\"me-2\"\n            >\n              <FontAwesomeIcon icon={faStop} className=\"me-2\" />\n              Terminer\n            </Button>\n            \n            <Button \n              variant=\"secondary\" \n              size=\"lg\" \n              onClick={saveWorkout}\n            >\n              Sauvegarder\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nHIITVisualizer.propTypes = {\n  workout: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    description: PropTypes.string,\n    duration: PropTypes.number,\n    targetPower: PropTypes.number, // FTP ou puissance cible en watts\n    intervals: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        duration: PropTypes.number.isRequired, // en secondes\n        power: PropTypes.number.isRequired // en watts\n      })\n    ).isRequired\n  }),\n  onComplete: PropTypes.func,\n  onSave: PropTypes.func\n};\n\nexport default HIITVisualizer;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["className","React","p","ref","_jsx","classNames","context","displayName","_excluded","useButtonProps","_ref2","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","_ref","as","asProp","props","r","e","t","n","hasOwnProperty","call","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","Object","assign","bsPrefix","variant","size","active","prefix","useBootstrapPrefix","CardBody","CardFooter","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","defaultPrefix","useContext","useBootstrapBreakpoints","useBootstrapMinBreakpoint","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","label","visuallyHidden","striped","animated","style","width","ProgressBar","isChild","rest","wrapperProps","map","child","cloneElement","Chart","register","registerables","workout","onComplete","onSave","useTranslation","notify","useNotification","chartRef","useRef","chartInstance","isActive","setIsActive","useState","currentInterval","setCurrentInterval","elapsedTime","setElapsedTime","totalTime","setTotalTime","timerID","setTimerID","sessionStats","setSessionStats","tss","kj","timeInZones","formatTime","timeInSeconds","seconds","floor","toString","padStart","useEffect","intervals","Array","isArray","error","total","reduce","sum","interval","duration","initializeChart","console","message","current","destroy","labels","powerData","currentTime","forEach","durationMinutes","i","push","power","ftp","targetPower","ctx","getContext","data","datasets","borderColor","tension","fill","backgroundColor","length","borderDash","borderWidth","pointRadius","options","responsive","maintainAspectRatio","scales","y","beginAtZero","title","display","x","plugins","tooltip","callbacks","raw","updateSessionStats","accumulatedDuration","currentIntervalData","prev","newKj","powerPercentage","newTimeInZones","tssIncrement","finishWorkout","clearInterval","finalStats","completed","success","_jsxs","currentIntervalInfo","getCurrentIntervalInfo","intervalIndex","intervalStyle","styles","warmup","color","icon","faPlay","steady","faChartLine","threshold","faFire","vo2max","recovery","faClock","cooldown","default","getIntervalStyle","percentComplete","name","Badge","height","Row","Col","md","FontAwesomeIcon","xs","time","index","pauseWorkout","faPause","startWorkout","id","setInterval","newTime","totalDuration","nextIntervalIndex","intervalType","info","faStop","saveWorkout","workoutData","stats","completedTime","completionDate","Date","toISOString","decoratedBsPrefix","sizePrefix","classes","brkPoint","propValue","cols","infix","func","hasChildOfType","toArray","some","colProps","spans","span","offset","order","useCol","pill","hasOwn","arguments","arg","appendClass","parseValue","apply","prototype","includes","newClass","module","exports"],"sourceRoot":""}