{"version":3,"file":"static/js/3802.a174048f.chunk.js","mappings":"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","sources":["components/cols/ColCard.js","components/cols/ColFilters.js","utils/weatherCache.js","data/popular-locations.js","utils/weatherPreloader.js","pages/hooks/useColsExplorer.js","hooks/useLocalStorage.js","pages/ColsExplorer.js","components/common/Breadcrumbs.js"],"sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardActionArea, CardContent,\n  Typography, Box, Chip, Grid, Skeleton, useMediaQuery, useTheme\n} from '@mui/material';\nimport {\n  Terrain as TerrainIcon,\n  LocationOn as LocationIcon,\n  DirectionsBike as BikeIcon,\n  Straighten as DistanceIcon,\n  ArrowUpward as ElevationIcon,\n  Favorite as FavoriteIcon\n} from '@mui/icons-material';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\n/**\n * Composant de carte pour afficher un col cycliste\n * Utilise les composants Material-UI avec une structure standardisée\n */\nconst ColCard = ({ col, isSelected, onClick, isFavorite, onToggleFavorite }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));\n\n  // Obtenir la couleur de la difficulté\n  const getDifficultyColor = (level) => {\n    switch (level.toLowerCase()) {\n      case 'difficile':\n      case 'hard':\n        return 'error';\n      case 'modéré':\n      case 'moyen':\n      case 'medium':\n        return 'warning';\n      case 'facile':\n      case 'easy':\n        return 'success';\n      default:\n        return 'info';\n    }\n  };\n\n  // Déterminer la classe de catégorie\n  const getCategoryClass = (category) => {\n    switch (category) {\n      case 'HC':\n        return 'category-hc';\n      case '1':\n        return 'category-1';\n      case '2':\n        return 'category-2';\n      case '3':\n        return 'category-3';\n      case '4':\n        return 'category-4';\n      default:\n        return '';\n    }\n  };\n\n  // Déterminer la hauteur de l'image en fonction du breakpoint\n  const getImageHeight = () => {\n    if (isMobile) return 100;\n    if (isTablet) return 110;\n    return 120;\n  };\n\n  const handleFavoriteClick = (e) => {\n    e.stopPropagation(); // Éviter que le clic se propage au CardActionArea\n    if (onToggleFavorite) {\n      onToggleFavorite(col.id);\n    }\n  };\n\n  return (\n    <Card \n      elevation={isSelected ? 3 : 1}\n      sx={{ \n        mb: 2, \n        border: isSelected ? '2px solid #1976d2' : 'none',\n        transition: 'all 0.2s ease-in-out',\n        '&:hover': {\n          transform: 'translateY(-4px)',\n          boxShadow: 4\n        },\n        position: 'relative'\n      }}\n      role=\"article\"\n      aria-label={`Col ${col.name}, altitude ${col.elevation} mètres, difficulté ${col.difficulty}`}\n    >\n      <CardActionArea \n        onClick={onClick}\n        aria-pressed={isSelected}\n      >\n        <Grid container>\n          <Grid \n            item \n            xs={5} \n            sm={4} \n            md={4}\n            sx={{ \n              position: 'relative',\n              height: getImageHeight()\n            }}\n          >\n            <Box\n              sx={{\n                height: '100%',\n                width: '100%',\n                position: 'relative',\n                overflow: 'hidden'\n              }}\n            >\n              <LazyLoadImage\n                src={col.imageUrl || '/images/cols/default-col.jpg'}\n                alt={`Vue du col ${col.name}`}\n                effect=\"blur\"\n                height={getImageHeight()}\n                width=\"100%\"\n                style={{\n                  objectFit: 'cover',\n                  objectPosition: 'center',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0\n                }}\n                placeholder={\n                  <Skeleton \n                    variant=\"rectangular\" \n                    width=\"100%\" \n                    height={getImageHeight()} \n                    animation=\"wave\" \n                  />\n                }\n              />\n              {col.category && (\n                <Box \n                  className={getCategoryClass(col.category)}\n                  sx={{\n                    position: 'absolute',\n                    top: 8,\n                    left: 8,\n                    bgcolor: 'rgba(0, 0, 0, 0.7)',\n                    color: 'white',\n                    borderRadius: '50%',\n                    width: 28,\n                    height: 28,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    fontWeight: 'bold',\n                    fontSize: isMobile ? '0.7rem' : '0.8rem',\n                    zIndex: 1\n                  }}\n                  aria-label={`Catégorie ${col.category}`}\n                >\n                  {col.category}\n                </Box>\n              )}\n            </Box>\n          </Grid>\n          <Grid item xs={7} sm={8} md={8}>\n            <CardContent \n              sx={{ \n                pb: '12px !important', \n                pt: isMobile ? 1 : 2,\n                px: isMobile ? 1.5 : 2\n              }}\n            >\n              <Typography \n                variant={isMobile ? \"subtitle1\" : \"h6\"} \n                component=\"h3\" \n                noWrap\n                sx={{ \n                  fontWeight: isSelected ? 600 : 500,\n                  fontSize: isMobile ? '0.9rem' : undefined\n                }}\n              >\n                {col.name}\n              </Typography>\n              \n              <Box \n                display=\"flex\" \n                alignItems=\"center\" \n                mt={isMobile ? 0.5 : 1}\n                sx={{ \n                  flexWrap: isMobile ? 'wrap' : 'nowrap' \n                }}\n              >\n                <LocationIcon \n                  fontSize=\"small\" \n                  color=\"action\" \n                  sx={{ \n                    mr: 0.5,\n                    fontSize: isMobile ? '0.9rem' : '1rem' \n                  }} \n                />\n                <Typography \n                  variant=\"body2\" \n                  color=\"text.secondary\"\n                  sx={{ fontSize: isMobile ? '0.75rem' : '0.875rem' }}\n                  noWrap\n                >\n                  {col.region || 'Région non spécifiée'}\n                </Typography>\n              </Box>\n              \n              <Box \n                display=\"flex\" \n                alignItems=\"center\" \n                mt={0.5}\n                flexWrap={isMobile ? 'wrap' : 'nowrap'}\n              >\n                <Box display=\"flex\" alignItems=\"center\" mr={1}>\n                  <TerrainIcon \n                    fontSize=\"small\" \n                    color=\"action\" \n                    sx={{ \n                      mr: 0.5,\n                      fontSize: isMobile ? '0.9rem' : '1rem' \n                    }} \n                  />\n                  <Typography \n                    variant=\"body2\" \n                    color=\"text.secondary\"\n                    sx={{ fontSize: isMobile ? '0.75rem' : '0.875rem' }}\n                  >\n                    {col.elevation} m\n                  </Typography>\n                </Box>\n                \n                {col.length && (\n                  <Box display=\"flex\" alignItems=\"center\" mr={1}>\n                    <DistanceIcon \n                      fontSize=\"small\" \n                      color=\"action\" \n                      sx={{ \n                        mr: 0.5,\n                        fontSize: isMobile ? '0.9rem' : '1rem',\n                        ml: isMobile ? 0 : 1\n                      }} \n                    />\n                    <Typography \n                      variant=\"body2\" \n                      color=\"text.secondary\"\n                      sx={{ fontSize: isMobile ? '0.75rem' : '0.875rem' }}\n                    >\n                      {col.length} km\n                    </Typography>\n                  </Box>\n                )}\n              </Box>\n              \n              {col.gradient && (\n                <Box display=\"flex\" alignItems=\"center\" mt={0.5}>\n                  <ElevationIcon \n                    fontSize=\"small\" \n                    color=\"action\" \n                    sx={{ \n                      mr: 0.5,\n                      fontSize: isMobile ? '0.9rem' : '1rem'\n                    }} \n                  />\n                  <Typography \n                    variant=\"body2\" \n                    color=\"text.secondary\"\n                    sx={{ fontSize: isMobile ? '0.75rem' : '0.875rem' }}\n                  >\n                    {col.gradient}% moyen\n                  </Typography>\n                </Box>\n              )}\n              \n              <Box \n                display=\"flex\" \n                flexWrap=\"wrap\" \n                mt={isMobile ? 0.5 : 1} \n                gap={0.5}\n                sx={{ alignItems: 'center' }}\n              >\n                <Chip \n                  size=\"small\"\n                  label={col.difficulty}\n                  color={getDifficultyColor(col.difficulty)}\n                  sx={{ \n                    height: isMobile ? 22 : 24,\n                    '& .MuiChip-label': {\n                      fontSize: isMobile ? '0.65rem' : '0.75rem',\n                      px: isMobile ? 0.8 : 1\n                    }\n                  }}\n                />\n                \n                {col.recommended && (\n                  <Chip \n                    size=\"small\"\n                    icon={<BikeIcon sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }} />}\n                    label=\"Recommandé\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    sx={{ \n                      height: isMobile ? 22 : 24,\n                      '& .MuiChip-label': {\n                        fontSize: isMobile ? '0.65rem' : '0.75rem',\n                        px: isMobile ? 0.8 : 1\n                      }\n                    }}\n                  />\n                )}\n                \n                {onToggleFavorite && (\n                  <Box \n                    onClick={handleFavoriteClick}\n                    sx={{\n                      ml: 'auto',\n                      mr: 0.5,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      cursor: 'pointer',\n                      padding: '4px',\n                      borderRadius: '50%',\n                      '&:hover': {\n                        bgcolor: 'rgba(0, 0, 0, 0.04)'\n                      }\n                    }}\n                    role=\"button\"\n                    aria-label={isFavorite ? \"Retirer des favoris\" : \"Ajouter aux favoris\"}\n                    aria-pressed={isFavorite}\n                    tabIndex={0}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        handleFavoriteClick(e);\n                      }\n                    }}\n                  >\n                    <FavoriteIcon \n                      color={isFavorite ? \"error\" : \"action\"} \n                      fontSize=\"small\"\n                      sx={{ \n                        fontSize: isMobile ? '1.1rem' : '1.2rem',\n                        transition: 'color 0.3s ease, transform 0.2s ease',\n                        transform: isFavorite ? 'scale(1.1)' : 'scale(1)'\n                      }}\n                    />\n                  </Box>\n                )}\n              </Box>\n            </CardContent>\n          </Grid>\n        </Grid>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nColCard.propTypes = {\n  // Données du col\n  col: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.string.isRequired,\n    region: PropTypes.string,\n    elevation: PropTypes.number.isRequired,\n    difficulty: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string,\n    category: PropTypes.string,\n    length: PropTypes.number,\n    gradient: PropTypes.number,\n    recommended: PropTypes.bool\n  }).isRequired,\n  \n  // État de sélection\n  isSelected: PropTypes.bool,\n  \n  // Fonction de callback lors du clic\n  onClick: PropTypes.func.isRequired,\n  \n  // Favoris\n  isFavorite: PropTypes.bool,\n  onToggleFavorite: PropTypes.func\n};\n\nColCard.defaultProps = {\n  isSelected: false,\n  isFavorite: false,\n  onToggleFavorite: null\n};\n\n// Utiliser memo pour éviter les re-rendus inutiles\nexport default memo(ColCard);\n","import React, { useState, useCallback, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper, Box, Typography, Divider, Button, \n  Stack, FormControl, InputLabel, Select, MenuItem, \n  Slider, TextField, InputAdornment, IconButton,\n  useTheme, useMediaQuery, Chip, Tooltip,\n  FormGroup, FormControlLabel, Checkbox\n} from '@mui/material';\nimport {\n  FilterList as FilterIcon,\n  Clear as ClearIcon,\n  Search as SearchIcon,\n  ExpandMore as ExpandIcon,\n  ExpandLess as ExpandLessIcon,\n  Info as InfoIcon,\n  Terrain as TerrainIcon,\n  WbSunny as SunnyIcon,\n  CalendarMonth as CalendarIcon\n} from '@mui/icons-material';\n\n// Liste des régions disponibles\nconst regions = ['Vosges', 'Jura', 'Alpes', 'Massif Central', 'Pyrénées'];\n\n// Niveaux de difficulté\nconst difficulties = ['Facile', 'Modéré', 'Difficile'];\n\n// Types de surface\nconst surfaces = ['Asphalte', 'Gravier', 'Mixte'];\n\n// Niveaux de difficulté technique\nconst technicalDifficulties = ['1', '2', '3', '4', '5'];\n\n// Saisons recommandées\nconst seasons = ['Printemps', 'Été', 'Automne', 'Hiver'];\n\n/**\n * Composant de filtres pour les cols\n * Permet de rechercher, filtrer et trier les cols selon différents critères\n * Optimisé avec memo et useCallback pour éviter les re-renders inutiles\n */\nconst ColFilters = memo(({ \n  searchTerm, \n  filterRegion, \n  filterDifficulty, \n  filterElevation, \n  filtersOpen,\n  filterSurface = [],\n  filterTechnicalDifficulty = '',\n  filterSeasons = [],\n  onSearchChange,\n  onRegionChange,\n  onDifficultyChange, \n  onElevationChange,\n  onFiltersOpenChange,\n  onResetFilters,\n  onSurfaceChange,\n  onTechnicalDifficultyChange,\n  onSeasonsChange,\n  isMobile = false // Nouveau paramètre pour le mode mobile\n}) => {\n  // Déterminer si les filtres avancés sont ouverts\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const theme = useTheme();\n  \n  // Vérifier si des filtres sont actifs\n  const hasActiveFilters = filterRegion || filterDifficulty || \n    filterElevation[0] > 0 || filterElevation[1] < 3000 ||\n    filterSurface.length > 0 || filterTechnicalDifficulty || filterSeasons.length > 0;\n\n  // Gestion du changement de recherche\n  const handleSearchChange = useCallback((e) => {\n    onSearchChange(e.target.value);\n  }, [onSearchChange]);\n\n  // Gestion du changement de région\n  const handleRegionChange = useCallback((e) => {\n    onRegionChange(e.target.value);\n  }, [onRegionChange]);\n\n  // Gestion du changement de difficulté\n  const handleDifficultyChange = useCallback((e) => {\n    onDifficultyChange(e.target.value);\n  }, [onDifficultyChange]);\n\n  // Gestion du changement d'altitude\n  const handleElevationChange = useCallback((e, newValue) => {\n    onElevationChange(newValue);\n  }, [onElevationChange]);\n\n  // Gestion de la réinitialisation des filtres\n  const handleResetFilters = useCallback(() => {\n    onResetFilters();\n  }, [onResetFilters]);\n\n  // Gestion du changement de surface\n  const handleSurfaceChange = useCallback((surface) => {\n    const newSurfaces = [...filterSurface];\n    const index = newSurfaces.indexOf(surface);\n    \n    if (index === -1) {\n      newSurfaces.push(surface);\n    } else {\n      newSurfaces.splice(index, 1);\n    }\n    \n    onSurfaceChange(newSurfaces);\n  }, [filterSurface, onSurfaceChange]);\n\n  // Gestion du changement de difficulté technique\n  const handleTechnicalDifficultyChange = useCallback((e) => {\n    onTechnicalDifficultyChange(e.target.value);\n  }, [onTechnicalDifficultyChange]);\n\n  // Gestion du changement de saisons\n  const handleSeasonChange = useCallback((season) => {\n    const newSeasons = [...filterSeasons];\n    const index = newSeasons.indexOf(season);\n    \n    if (index === -1) {\n      newSeasons.push(season);\n    } else {\n      newSeasons.splice(index, 1);\n    }\n    \n    onSeasonsChange(newSeasons);\n  }, [filterSeasons, onSeasonsChange]);\n\n  // Gestion de l'affichage/masquage des filtres avancés\n  const toggleAdvancedFilters = useCallback(() => {\n    setShowAdvanced(prev => !prev);\n  }, []);\n\n  // Styles communs pour les papers\n  const paperStyle = {\n    p: isMobile ? 1.5 : 2, \n    mb: isMobile ? 2 : 3,\n    borderRadius: '8px'\n  };\n\n  return (\n    <>\n      {/* Champ de recherche */}\n      <Paper \n        elevation={2} \n        sx={paperStyle}\n        aria-label=\"Recherche de cols\"\n      >\n        <TextField\n          fullWidth\n          placeholder=\"Rechercher un col...\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n            endAdornment: searchTerm && (\n              <InputAdornment position=\"end\">\n                <IconButton \n                  size=\"small\" \n                  onClick={() => onSearchChange('')}\n                  edge=\"end\"\n                  aria-label=\"Effacer la recherche\"\n                >\n                  <ClearIcon fontSize=\"small\" />\n                </IconButton>\n              </InputAdornment>\n            )\n          }}\n          variant=\"outlined\"\n          size={isMobile ? \"small\" : \"medium\"}\n          aria-label=\"Rechercher par nom ou région\"\n        />\n      </Paper>\n      \n      {/* Section de filtres */}\n      <Paper \n        elevation={2} \n        sx={paperStyle}\n        aria-label=\"Filtres des cols\"\n      >\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={isMobile ? 1 : 2}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <FilterIcon sx={{ \n              verticalAlign: 'middle', \n              mr: 1,\n              fontSize: isMobile ? '1.2rem' : '1.5rem'\n            }} />\n            <Typography variant={isMobile ? \"subtitle1\" : \"h6\"} component=\"h2\">\n              Filtres\n            </Typography>\n            {hasActiveFilters && (\n              <Chip \n                size=\"small\" \n                color=\"primary\" \n                label=\"Actifs\" \n                sx={{ ml: 1 }}\n                aria-label=\"Filtres actifs\"\n              />\n            )}\n          </Box>\n          <Button \n            size=\"small\" \n            onClick={handleResetFilters}\n            startIcon={<ClearIcon />}\n            aria-label=\"Réinitialiser tous les filtres\"\n            disabled={!hasActiveFilters}\n          >\n            {isMobile ? 'Reset' : 'Réinitialiser'}\n          </Button>\n        </Box>\n        \n        <Divider sx={{ mb: isMobile ? 1.5 : 2 }} />\n        \n        <Stack spacing={isMobile ? 2 : 3}>\n          <FormControl fullWidth size={isMobile ? \"small\" : \"medium\"}>\n            <InputLabel id=\"region-label\">Région</InputLabel>\n            <Select\n              labelId=\"region-label\"\n              value={filterRegion}\n              label=\"Région\"\n              onChange={handleRegionChange}\n              aria-label=\"Filtrer par région\"\n            >\n              <MenuItem value=\"\">Toutes les régions</MenuItem>\n              {regions.map(region => (\n                <MenuItem key={region} value={region}>{region}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <FormControl fullWidth size={isMobile ? \"small\" : \"medium\"}>\n            <InputLabel id=\"difficulty-label\">Difficulté</InputLabel>\n            <Select\n              labelId=\"difficulty-label\"\n              value={filterDifficulty}\n              label=\"Difficulté\"\n              onChange={handleDifficultyChange}\n              aria-label=\"Filtrer par difficulté\"\n            >\n              <MenuItem value=\"\">Toutes les difficultés</MenuItem>\n              {difficulties.map(difficulty => (\n                <MenuItem key={difficulty} value={difficulty}>{difficulty}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography gutterBottom variant={isMobile ? \"body2\" : \"body1\"}>\n                Altitude (m)\n              </Typography>\n              <Tooltip title=\"Filtrer les cols par plage d'altitude\">\n                <IconButton size=\"small\" sx={{ ml: 0.5 }} aria-label=\"Info sur l'altitude\">\n                  <InfoIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </Box>\n            <Slider\n              value={filterElevation}\n              onChange={handleElevationChange}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={3000}\n              step={100}\n              aria-label=\"Filtrer par altitude\"\n              size={isMobile ? \"small\" : \"medium\"}\n            />\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {filterElevation[0]} m\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {filterElevation[1]} m\n              </Typography>\n            </Box>\n          </Box>\n          \n          {/* Bouton pour afficher/masquer les filtres avancés */}\n          <Button\n            variant=\"text\"\n            color=\"primary\"\n            onClick={toggleAdvancedFilters}\n            endIcon={showAdvanced ? <ExpandLessIcon /> : <ExpandIcon />}\n            sx={{ alignSelf: 'flex-start' }}\n            aria-expanded={showAdvanced}\n            aria-controls=\"advanced-filters\"\n          >\n            {isMobile \n              ? (showAdvanced ? 'Masquer avancés' : 'Filtres avancés')\n              : (showAdvanced ? 'Masquer les filtres avancés' : 'Afficher les filtres avancés')\n            }\n          </Button>\n          \n          {/* Filtres avancés */}\n          {showAdvanced && (\n            <Box mt={2} id=\"advanced-filters\" role=\"region\" aria-label=\"Filtres avancés\">\n              <Divider sx={{ mb: isMobile ? 1.5 : 2 }} />\n              <Stack spacing={isMobile ? 2 : 3}>\n                <FormControl fullWidth size={isMobile ? \"small\" : \"medium\"}>\n                  <InputLabel id=\"category-label\">Catégorie</InputLabel>\n                  <Select\n                    labelId=\"category-label\"\n                    value=\"\"\n                    label=\"Catégorie\"\n                    aria-label=\"Filtrer par catégorie\"\n                  >\n                    <MenuItem value=\"\">Toutes les catégories</MenuItem>\n                    <MenuItem value=\"HC\">Hors Catégorie</MenuItem>\n                    <MenuItem value=\"1\">Catégorie 1</MenuItem>\n                    <MenuItem value=\"2\">Catégorie 2</MenuItem>\n                    <MenuItem value=\"3\">Catégorie 3</MenuItem>\n                    <MenuItem value=\"4\">Catégorie 4</MenuItem>\n                  </Select>\n                </FormControl>\n                \n                <Box>\n                  <Typography gutterBottom variant={isMobile ? \"body2\" : \"body1\"}>\n                    Longueur (km)\n                  </Typography>\n                  <Slider\n                    value={[0, 30]}\n                    valueLabelDisplay=\"auto\"\n                    min={0}\n                    max={30}\n                    step={1}\n                    size={isMobile ? \"small\" : \"medium\"}\n                    aria-label=\"Filtrer par longueur\"\n                  />\n                </Box>\n                \n                <Box>\n                  <Typography gutterBottom variant={isMobile ? \"body2\" : \"body1\"}>\n                    Pente moyenne (%)\n                  </Typography>\n                  <Slider\n                    value={[0, 15]}\n                    valueLabelDisplay=\"auto\"\n                    min={0}\n                    max={15}\n                    step={0.5}\n                    size={isMobile ? \"small\" : \"medium\"}\n                    aria-label=\"Filtrer par pente moyenne\"\n                  />\n                </Box>\n\n                {/* Nouveau filtre: Type de surface */}\n                <Box>\n                  <Typography \n                    gutterBottom \n                    variant={isMobile ? \"body2\" : \"body1\"}\n                    sx={{ display: 'flex', alignItems: 'center' }}\n                  >\n                    <TerrainIcon sx={{ mr: 1, fontSize: isMobile ? '1rem' : '1.25rem' }} />\n                    Type de surface\n                  </Typography>\n                  <FormGroup row>\n                    {surfaces.map(surface => (\n                      <FormControlLabel\n                        key={surface}\n                        control={\n                          <Checkbox \n                            checked={filterSurface.includes(surface)}\n                            onChange={() => handleSurfaceChange(surface)}\n                            size={isMobile ? \"small\" : \"medium\"}\n                          />\n                        }\n                        label={surface}\n                      />\n                    ))}\n                  </FormGroup>\n                </Box>\n\n                {/* Nouveau filtre: Difficulté technique */}\n                <FormControl fullWidth size={isMobile ? \"small\" : \"medium\"}>\n                  <InputLabel id=\"technical-difficulty-label\">Difficulté technique</InputLabel>\n                  <Select\n                    labelId=\"technical-difficulty-label\"\n                    value={filterTechnicalDifficulty}\n                    onChange={handleTechnicalDifficultyChange}\n                    label=\"Difficulté technique\"\n                    aria-label=\"Filtrer par difficulté technique\"\n                  >\n                    <MenuItem value=\"\">Toutes</MenuItem>\n                    {technicalDifficulties.map(diff => (\n                      <MenuItem key={diff} value={diff}>\n                        {diff === '1' ? '1 - Facile' : \n                         diff === '2' ? '2 - Simple' :\n                         diff === '3' ? '3 - Modérée' :\n                         diff === '4' ? '4 - Difficile' :\n                         '5 - Très difficile'}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                {/* Nouveau filtre: Saisons recommandées */}\n                <Box>\n                  <Typography \n                    gutterBottom \n                    variant={isMobile ? \"body2\" : \"body1\"}\n                    sx={{ display: 'flex', alignItems: 'center' }}\n                  >\n                    <CalendarIcon sx={{ mr: 1, fontSize: isMobile ? '1rem' : '1.25rem' }} />\n                    Saisons recommandées\n                  </Typography>\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                    {seasons.map(season => (\n                      <Chip\n                        key={season}\n                        label={season}\n                        onClick={() => handleSeasonChange(season)}\n                        color={filterSeasons.includes(season) ? \"primary\" : \"default\"}\n                        variant={filterSeasons.includes(season) ? \"filled\" : \"outlined\"}\n                        size={isMobile ? \"small\" : \"medium\"}\n                        icon={season === 'Été' ? <SunnyIcon /> : undefined}\n                      />\n                    ))}\n                  </Box>\n                </Box>\n              </Stack>\n            </Box>\n          )}\n        </Stack>\n      </Paper>\n    </>\n  );\n});\n\nColFilters.propTypes = {\n  // État des filtres\n  searchTerm: PropTypes.string.isRequired,\n  filterRegion: PropTypes.string.isRequired,\n  filterDifficulty: PropTypes.string.isRequired,\n  filterElevation: PropTypes.arrayOf(PropTypes.number).isRequired,\n  filtersOpen: PropTypes.bool.isRequired,\n  filterSurface: PropTypes.arrayOf(PropTypes.string),\n  filterTechnicalDifficulty: PropTypes.string,\n  filterSeasons: PropTypes.arrayOf(PropTypes.string),\n  \n  // Fonctions de callback\n  onSearchChange: PropTypes.func.isRequired,\n  onRegionChange: PropTypes.func.isRequired,\n  onDifficultyChange: PropTypes.func.isRequired,\n  onElevationChange: PropTypes.func.isRequired,\n  onFiltersOpenChange: PropTypes.func.isRequired,\n  onResetFilters: PropTypes.func.isRequired,\n  onSurfaceChange: PropTypes.func,\n  onTechnicalDifficultyChange: PropTypes.func,\n  onSeasonsChange: PropTypes.func,\n  \n  // Option pour le mode mobile\n  isMobile: PropTypes.bool\n};\n\nexport default ColFilters;\n","/**\n * Utilitaire de mise en cache des données météo\n * Optimise les performances en évitant les requêtes répétées pour les mêmes données\n * Utilise localStorage pour la persistance entre les sessions\n */\n\n// Durée de validité du cache en millisecondes (1 heure)\nconst CACHE_DURATION = 60 * 60 * 1000;\n\n// Durée maximale avant purge forcée (24 heures)\nconst CACHE_MAX_AGE = 24 * 60 * 60 * 1000;\n\n// Clé utilisée dans localStorage\nconst STORAGE_KEY = 'grand-est-cyclisme:weather-cache';\n\n// Structure de cache\nconst weatherCache = {\n  data: new Map(),\n  \n  /**\n   * Initialise le cache au démarrage, charge les données depuis localStorage\n   */\n  init() {\n    try {\n      const storedCache = localStorage.getItem(STORAGE_KEY);\n      if (storedCache) {\n        const parsedCache = JSON.parse(storedCache);\n        \n        // Convertir l'objet en Map\n        this.data = new Map();\n        Object.keys(parsedCache).forEach(key => {\n          this.data.set(key, parsedCache[key]);\n        });\n        \n        console.log(`[WeatherCache] Chargement du cache depuis localStorage: ${this.data.size} entrées`);\n        \n        // Purger les entrées trop anciennes\n        this.purgeExpiredEntries();\n      }\n    } catch (error) {\n      console.error('[WeatherCache] Erreur lors du chargement du cache:', error);\n      this.data = new Map();\n    }\n    \n    // Planifier une purge automatique toutes les heures\n    setInterval(() => this.purgeExpiredEntries(), 60 * 60 * 1000);\n  },\n  \n  /**\n   * Sauvegarde le cache dans localStorage\n   */\n  saveToLocalStorage() {\n    try {\n      // Convertir Map en objet pour stockage\n      const cacheObject = {};\n      this.data.forEach((value, key) => {\n        cacheObject[key] = value;\n      });\n      \n      localStorage.setItem(STORAGE_KEY, JSON.stringify(cacheObject));\n      console.log(`[WeatherCache] Cache sauvegardé dans localStorage: ${this.data.size} entrées`);\n    } catch (error) {\n      console.error('[WeatherCache] Erreur lors de la sauvegarde du cache:', error);\n    }\n  },\n  \n  /**\n   * Supprime les entrées expirées du cache\n   */\n  purgeExpiredEntries() {\n    const now = Date.now();\n    let purgedCount = 0;\n    \n    this.data.forEach((value, key) => {\n      if (now - value.timestamp > CACHE_MAX_AGE) {\n        this.data.delete(key);\n        purgedCount++;\n      }\n    });\n    \n    if (purgedCount > 0) {\n      console.log(`[WeatherCache] Purge automatique: ${purgedCount} entrées supprimées`);\n      this.saveToLocalStorage();\n    }\n    \n    return purgedCount;\n  },\n  \n  /**\n   * Récupère les données météo depuis le cache ou via l'API\n   * @param {string} latitude - Latitude de la position\n   * @param {string} longitude - Longitude de la position\n   * @param {Function} fetchFunction - Fonction de récupération des données depuis l'API\n   * @returns {Promise<Object>} Données météo\n   */\n  async getWeatherData(latitude, longitude, fetchFunction) {\n    const cacheKey = `${latitude},${longitude}`;\n    const cachedData = this.data.get(cacheKey);\n    \n    // Vérifier si les données sont dans le cache et toujours valides\n    if (cachedData && (Date.now() - cachedData.timestamp < CACHE_DURATION)) {\n      console.log(`[WeatherCache] ✅ Utilisation des données météo en cache pour ${cacheKey}`);\n      return cachedData.data;\n    }\n    \n    try {\n      // Récupérer de nouvelles données\n      console.log(`[WeatherCache] 🔄 Récupération de nouvelles données météo pour ${cacheKey}`);\n      const weatherData = await fetchFunction(latitude, longitude);\n      \n      // Stocker dans le cache\n      this.data.set(cacheKey, {\n        data: weatherData,\n        timestamp: Date.now()\n      });\n      \n      // Sauvegarder dans localStorage\n      this.saveToLocalStorage();\n      \n      return weatherData;\n    } catch (error) {\n      console.error(`[WeatherCache] ❌ Erreur lors de la récupération des données météo pour ${cacheKey}:`, error);\n      \n      // En cas d'erreur, utiliser les données en cache même si elles sont expirées\n      if (cachedData) {\n        console.log(`[WeatherCache] ⚠️ Utilisation des données en cache expirées pour ${cacheKey}`);\n        return cachedData.data;\n      }\n      \n      // Si pas de données en cache, renvoyer des données par défaut\n      console.log(`[WeatherCache] ⚠️ Utilisation des données météo par défaut pour ${cacheKey}`);\n      return this.getDefaultWeatherData();\n    }\n  },\n  \n  /**\n   * Fournit des données météo par défaut en cas d'échec de récupération\n   * @returns {Object} Données météo par défaut\n   */\n  getDefaultWeatherData() {\n    return {\n      current: {\n        temp: 15,\n        weather: [\n          {\n            main: 'Clouds',\n            description: 'Information météo non disponible',\n            icon: 'unknown'\n          }\n        ],\n        humidity: 50,\n        wind_speed: 10,\n        visibility: 10000,\n        pressure: 1013\n      },\n      daily: Array(5).fill().map((_, i) => ({\n        dt: Date.now() / 1000 + i * 86400,\n        temp: {\n          min: 10,\n          max: 20\n        },\n        weather: [\n          {\n            main: 'Clouds',\n            description: 'Information prévision non disponible',\n            icon: 'unknown'\n          }\n        ]\n      }))\n    };\n  },\n  \n  /**\n   * Vide le cache complet\n   */\n  clearCache() {\n    this.data.clear();\n    localStorage.removeItem(STORAGE_KEY);\n    console.log('[WeatherCache] 🧹 Cache entièrement vidé');\n  },\n  \n  /**\n   * Obtient des statistiques sur l'état du cache\n   * @returns {Object} Statistiques du cache\n   */\n  getStats() {\n    const now = Date.now();\n    let validEntries = 0;\n    let expiredEntries = 0;\n    \n    this.data.forEach((value) => {\n      if (now - value.timestamp < CACHE_DURATION) {\n        validEntries++;\n      } else {\n        expiredEntries++;\n      }\n    });\n    \n    return {\n      totalEntries: this.data.size,\n      validEntries,\n      expiredEntries,\n      oldestEntryAge: this.getOldestEntryAge()\n    };\n  },\n  \n  /**\n   * Obtient l'âge de l'entrée la plus ancienne en minutes\n   * @returns {number} Âge en minutes\n   */\n  getOldestEntryAge() {\n    let oldestTimestamp = Date.now();\n    \n    this.data.forEach((value) => {\n      if (value.timestamp < oldestTimestamp) {\n        oldestTimestamp = value.timestamp;\n      }\n    });\n    \n    return Math.round((Date.now() - oldestTimestamp) / (60 * 1000));\n  }\n};\n\n// Initialiser le cache au chargement du module\nweatherCache.init();\n\nexport default weatherCache;\n","/**\n * Données des localisations populaires pour le préchargement météo\n * Contient les coordonnées des cols et itinéraires les plus consultés\n */\n\nexport const popular_locations = [\n  // Cols emblématiques des Vosges\n  {\n    id: \"col_ballon_alsace\",\n    name: \"Col du Ballon d'Alsace\",\n    lat: 47.8239,\n    lng: 6.8368,\n    elevation: 1178,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 9.5\n  },\n  {\n    id: \"col_schlucht\",\n    name: \"Col de la Schlucht\",\n    lat: 48.0556,\n    lng: 7.0067,\n    elevation: 1139,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 9.8\n  },\n  {\n    id: \"grand_ballon\",\n    name: \"Grand Ballon\",\n    lat: 47.9017,\n    lng: 7.0983,\n    elevation: 1424,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 10\n  },\n  {\n    id: \"col_platzerwasel\",\n    name: \"Col du Platzerwasel\",\n    lat: 47.9320,\n    lng: 7.0486,\n    elevation: 1182,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 8.2\n  },\n  {\n    id: \"col_bonhomme\",\n    name: \"Col du Bonhomme\",\n    lat: 48.1769,\n    lng: 7.0981,\n    elevation: 949,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 8.5\n  },\n  {\n    id: \"petit_ballon\",\n    name: \"Petit Ballon\",\n    lat: 47.9153,\n    lng: 7.1467,\n    elevation: 1272,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 8.8\n  },\n  {\n    id: \"col_firstplan\",\n    name: \"Col du Firstplan\",\n    lat: 47.9333,\n    lng: 7.1167,\n    elevation: 722,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 7.5\n  },\n  {\n    id: \"col_hundsruck\",\n    name: \"Col du Hundsruck\",\n    lat: 47.9897,\n    lng: 7.0731,\n    elevation: 748,\n    category: \"col\",\n    region: \"vosges\",\n    popularity: 7.2\n  },\n  \n  // Villes principales de la région\n  {\n    id: \"city_strasbourg\",\n    name: \"Strasbourg\",\n    lat: 48.5734,\n    lng: 7.7521,\n    category: \"city\",\n    region: \"alsace\",\n    popularity: 9.5\n  },\n  {\n    id: \"city_colmar\",\n    name: \"Colmar\",\n    lat: 48.0794,\n    lng: 7.3580,\n    category: \"city\",\n    region: \"alsace\",\n    popularity: 8.9\n  },\n  {\n    id: \"city_mulhouse\",\n    name: \"Mulhouse\",\n    lat: 47.7515,\n    lng: 7.3399,\n    category: \"city\",\n    region: \"alsace\",\n    popularity: 8.2\n  },\n  {\n    id: \"city_metz\",\n    name: \"Metz\",\n    lat: 49.1193,\n    lng: 6.1757,\n    category: \"city\",\n    region: \"lorraine\",\n    popularity: 8.7\n  },\n  {\n    id: \"city_nancy\",\n    name: \"Nancy\",\n    lat: 48.6921,\n    lng: 6.1844,\n    category: \"city\",\n    region: \"lorraine\",\n    popularity: 8.8\n  },\n  {\n    id: \"city_gerardmer\",\n    name: \"Gérardmer\",\n    lat: 48.0743,\n    lng: 6.8726,\n    category: \"city\",\n    region: \"vosges\",\n    popularity: 8.6\n  },\n  \n  // Lacs et points d'intérêt\n  {\n    id: \"lake_gerardmer\",\n    name: \"Lac de Gérardmer\",\n    lat: 48.0663,\n    lng: 6.8532,\n    category: \"lake\",\n    region: \"vosges\",\n    popularity: 8.3\n  },\n  {\n    id: \"lake_longemer\",\n    name: \"Lac de Longemer\",\n    lat: 48.0651,\n    lng: 6.9484,\n    category: \"lake\",\n    region: \"vosges\",\n    popularity: 7.8\n  },\n  {\n    id: \"lake_retournemer\",\n    name: \"Lac de Retournemer\",\n    lat: 48.0583,\n    lng: 6.9737,\n    category: \"lake\",\n    region: \"vosges\",\n    popularity: 7.5\n  },\n  \n  // Points de départ d'itinéraires populaires\n  {\n    id: \"route_start_route_des_cretes\",\n    name: \"Départ Route des Crêtes\",\n    lat: 47.9965,\n    lng: 7.0072,\n    category: \"route_start\",\n    region: \"vosges\",\n    popularity: 9.6\n  },\n  {\n    id: \"route_start_route_des_vins\",\n    name: \"Départ Route des Vins\",\n    lat: 47.9112,\n    lng: 7.2356,\n    category: \"route_start\",\n    region: \"alsace\",\n    popularity: 9.2\n  },\n  {\n    id: \"route_start_grand_est_tour\",\n    name: \"Départ Grand Est Tour\",\n    lat: 48.5823,\n    lng: 7.7505,\n    category: \"route_start\",\n    region: \"alsace\",\n    popularity: 8.7\n  }\n];\n\n/**\n * Fonction pour obtenir les localisations les plus populaires\n * @param {number} limit Nombre maximum de résultats à retourner\n * @param {string} category Catégorie de localisation (col, city, lake, route_start)\n * @param {string} region Région (vosges, alsace, lorraine)\n * @returns {Array} Localisations filtrées\n */\nexport const getPopularLocations = (limit = 10, category = null, region = null) => {\n  let filteredLocations = [...popular_locations];\n  \n  // Filtrer par catégorie si spécifié\n  if (category) {\n    filteredLocations = filteredLocations.filter(loc => loc.category === category);\n  }\n  \n  // Filtrer par région si spécifié\n  if (region) {\n    filteredLocations = filteredLocations.filter(loc => loc.region === region);\n  }\n  \n  // Trier par popularité décroissante\n  filteredLocations.sort((a, b) => b.popularity - a.popularity);\n  \n  // Limiter le nombre de résultats\n  return filteredLocations.slice(0, limit);\n};\n\n/**\n * Obtient les coordonnées d'une localisation par son ID\n * @param {string} id Identifiant de la localisation\n * @returns {Object|null} Coordonnées {lat, lng} ou null si non trouvé\n */\nexport const getLocationById = (id) => {\n  const location = popular_locations.find(loc => loc.id === id);\n  return location ? { lat: location.lat, lng: location.lng, name: location.name } : null;\n};\n","/**\n * Utilitaire de préchargement des données météo pour les cols et itinéraires populaires\n * Optimise les performances en chargeant en arrière-plan les données météo pour les destinations fréquentes\n */\nimport axios from 'axios';\nimport weatherCache from './weatherCache';\nimport { popular_locations } from '../data/popular-locations';\n\nclass WeatherPreloader {\n  constructor() {\n    this.isInitialized = false;\n    this.isPreloading = false;\n    this.preloadQueue = [];\n    this.preloadInterval = null;\n    this.syncInProgress = false;\n    this.stats = {\n      totalPreloaded: 0,\n      lastPreloadTime: null,\n      successCount: 0,\n      errorCount: 0\n    };\n  }\n\n  /**\n   * Initialise le préchargeur de données météo\n   * @param {Object} options Options de configuration\n   */\n  initialize(options = {}) {\n    if (this.isInitialized) return;\n    \n    const defaultOptions = {\n      preloadPopularOnStart: true,\n      preloadInterval: 30 * 60 * 1000, // 30 minutes\n      concurrentPreloads: 2,\n      enableSync: true\n    };\n    \n    this.options = { ...defaultOptions, ...options };\n    this.isInitialized = true;\n    \n    console.log('[WeatherPreloader] ⚡ Préchargeur de données météo initialisé');\n    \n    // Précharger les données météo pour les cols populaires au démarrage\n    if (this.options.preloadPopularOnStart) {\n      this.preloadPopularLocations();\n    }\n    \n    // Configurer la synchronisation périodique\n    if (this.options.enableSync && this.options.preloadInterval > 0) {\n      this.preloadInterval = setInterval(() => {\n        this.preloadPopularLocations();\n      }, this.options.preloadInterval);\n      \n      console.log(`[WeatherPreloader] 🔄 Synchronisation planifiée toutes les ${this.options.preloadInterval / 60000} minutes`);\n    }\n  }\n\n  /**\n   * Précharge les données météo pour les cols et itinéraires populaires\n   */\n  async preloadPopularLocations() {\n    if (this.syncInProgress) {\n      console.log('[WeatherPreloader] ⏳ Synchronisation déjà en cours');\n      return;\n    }\n    \n    this.syncInProgress = true;\n    console.log('[WeatherPreloader] 🔄 Démarrage de la synchronisation des données météo');\n    \n    try {\n      // Ajouter les cols populaires à la file d'attente de préchargement\n      this.preloadQueue = [...popular_locations];\n      \n      // Mélanger la file pour éviter de toujours précharger les mêmes données en premier\n      this.shuffleQueue();\n      \n      // Démarrer le préchargement\n      await this.startPreloading();\n      \n      this.stats.lastPreloadTime = new Date();\n      console.log(`[WeatherPreloader] ✅ Synchronisation terminée avec ${this.stats.successCount} succès et ${this.stats.errorCount} erreurs`);\n    } catch (error) {\n      console.error('[WeatherPreloader] ❌ Erreur lors de la synchronisation:', error);\n    } finally {\n      this.syncInProgress = false;\n    }\n  }\n\n  /**\n   * Précharge les données météo pour une location spécifique\n   * @param {Object} location Objet contenant latitude, longitude et nom\n   */\n  async preloadLocation(location) {\n    if (!location || !location.lat || !location.lng) {\n      console.error('[WeatherPreloader] ❌ Données de localisation invalides');\n      return;\n    }\n    \n    try {\n      console.log(`[WeatherPreloader] 🔍 Préchargement des données météo pour ${location.name || 'lieu inconnu'}`);\n      \n      // Récupérer les données météo actuelles\n      const currentWeather = await axios.get(`/api/weather/current?lat=${location.lat}&lon=${location.lng}`);\n      \n      // Stocker dans le cache\n      weatherCache.getWeatherData(\n        location.lat.toString(),\n        location.lng.toString(),\n        async () => currentWeather.data\n      );\n      \n      // Récupérer également les prévisions\n      const forecast = await axios.get(`/api/weather/forecast?lat=${location.lat}&lon=${location.lng}`);\n      \n      // Stocker dans le cache avec une clé différente pour les prévisions\n      weatherCache.getWeatherData(\n        `forecast_${location.lat}`,\n        `forecast_${location.lng}`,\n        async () => forecast.data\n      );\n      \n      this.stats.successCount++;\n      this.stats.totalPreloaded++;\n      \n      return true;\n    } catch (error) {\n      console.error(`[WeatherPreloader] ❌ Erreur lors du préchargement pour ${location.name || 'lieu inconnu'}:`, error);\n      this.stats.errorCount++;\n      return false;\n    }\n  }\n\n  /**\n   * Démarre le processus de préchargement en parallèle\n   * @returns {Promise<void>}\n   */\n  async startPreloading() {\n    this.isPreloading = true;\n    \n    // Réinitialiser les compteurs\n    this.stats.successCount = 0;\n    this.stats.errorCount = 0;\n    \n    // Précharger en parallèle avec une limite de concurrence\n    const concurrentPreloads = this.options.concurrentPreloads || 2;\n    const tasks = [];\n    \n    for (let i = 0; i < concurrentPreloads && this.preloadQueue.length > 0; i++) {\n      tasks.push(this.processPreloadQueue());\n    }\n    \n    await Promise.all(tasks);\n    this.isPreloading = false;\n  }\n\n  /**\n   * Traite la file d'attente de préchargement, un élément à la fois\n   * @returns {Promise<void>}\n   */\n  async processPreloadQueue() {\n    while (this.preloadQueue.length > 0) {\n      const location = this.preloadQueue.shift();\n      await this.preloadLocation(location);\n      \n      // Petite pause entre les requêtes pour éviter les limitations d'API\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n  }\n\n  /**\n   * Mélange la file d'attente de préchargement\n   */\n  shuffleQueue() {\n    for (let i = this.preloadQueue.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [this.preloadQueue[i], this.preloadQueue[j]] = [this.preloadQueue[j], this.preloadQueue[i]];\n    }\n  }\n\n  /**\n   * Ajoute une location à la file de préchargement\n   * @param {Object} location Objet contenant latitude, longitude et nom\n   */\n  addToPreloadQueue(location) {\n    if (!location || !location.lat || !location.lng) return;\n    \n    this.preloadQueue.push(location);\n    \n    // Si le préchargement n'est pas en cours, le démarrer\n    if (!this.isPreloading && !this.syncInProgress) {\n      this.startPreloading();\n    }\n  }\n\n  /**\n   * Arrête le préchargeur et nettoie les ressources\n   */\n  shutdown() {\n    if (this.preloadInterval) {\n      clearInterval(this.preloadInterval);\n    }\n    \n    this.isInitialized = false;\n    this.preloadQueue = [];\n    console.log('[WeatherPreloader] 🛑 Préchargeur de données météo arrêté');\n  }\n\n  /**\n   * Obtient les statistiques du préchargeur\n   * @returns {Object} Statistiques\n   */\n  getStats() {\n    return {\n      ...this.stats,\n      queueLength: this.preloadQueue.length,\n      isPreloading: this.isPreloading,\n      isSyncing: this.syncInProgress\n    };\n  }\n}\n\n// Créer une instance singleton\nconst weatherPreloader = new WeatherPreloader();\n\nexport default weatherPreloader;\n","import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport ColService from '../../services/colService';\nimport weatherPreloader from '../../utils/weatherPreloader';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\n\n/**\n * Hook personnalisé pour gérer la logique de l'explorateur de cols\n * @returns {Object} État et fonctions pour l'explorateur de cols\n */\nconst useColsExplorer = () => {\n  const [cols, setCols] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedColId, setSelectedColId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRegion, setFilterRegion] = useState('');\n  const [filterDifficulty, setFilterDifficulty] = useState('');\n  const [filterElevation, setFilterElevation] = useState([0, 3000]);\n  const [filterSurface, setFilterSurface] = useState([]);\n  const [filterTechnicalDifficulty, setFilterTechnicalDifficulty] = useState('');\n  const [filterSeasons, setFilterSeasons] = useState([]);\n  const [filtersOpen, setFiltersOpen] = useState(false);\n  const [page, setPage] = useState(1);\n  const [favorites, setFavorites] = useLocalStorage('colFavorites', []);\n  const itemsPerPage = 10;\n  \n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  /**\n   * Déterminer la section active basée sur l'URL\n   */\n  const getActiveSection = useCallback(() => {\n    if (location.pathname.includes('/seven-majors')) {\n      return 'seven-majors';\n    }\n    return 'explorer';\n  }, [location.pathname]);\n  \n  const activeSection = useMemo(() => getActiveSection(), [getActiveSection]);\n  \n  /**\n   * Charger les cols avec filtres - optimisé avec debounce\n   */\n  const fetchCols = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      // Préparation des options de filtrage\n      const options = {\n        region: filterRegion || undefined,\n        difficulty: filterDifficulty || undefined,\n        minElevation: filterElevation[0] || undefined,\n        maxElevation: filterElevation[1] || undefined,\n        surface: filterSurface.length > 0 ? filterSurface : undefined,\n        technicalDifficulty: filterTechnicalDifficulty || undefined,\n        seasons: filterSeasons.length > 0 ? filterSeasons : undefined\n      };\n\n      const data = await ColService.getAllCols(options);\n      setCols(data);\n      \n      // Sélectionner le premier col si aucun n'est sélectionné\n      if (data.length > 0 && !selectedColId) {\n        setSelectedColId(data[0].id);\n        \n        // Précharger les données météo pour ce col\n        if (data[0].latitude && data[0].longitude) {\n          weatherPreloader.addToPreloadQueue({\n            lat: data[0].latitude,\n            lng: data[0].longitude,\n            name: data[0].name\n          });\n        }\n      }\n      \n      setError(null);\n    } catch (err) {\n      console.error('Erreur lors du chargement des cols:', err);\n      setError('Impossible de charger la liste des cols. Veuillez réessayer plus tard.');\n    } finally {\n      setLoading(false);\n    }\n  }, [filterRegion, filterDifficulty, filterElevation, filterSurface, filterTechnicalDifficulty, filterSeasons, selectedColId]);\n  \n  // Effectuer le chargement initial et à chaque changement de filtre\n  useEffect(() => {\n    // Utiliser un délai pour éviter les requêtes trop fréquentes\n    const debounceTimer = setTimeout(() => {\n      fetchCols();\n    }, 300);\n    \n    return () => clearTimeout(debounceTimer);\n  }, [fetchCols]);\n  \n  /**\n   * Filtrer les cols par terme de recherche\n   */\n  const filteredCols = useMemo(() => \n    cols.filter(col => {\n      // Si le terme de recherche est vide, ne pas filtrer\n      if (!searchTerm.trim()) return true;\n      \n      const searchLower = searchTerm.toLowerCase();\n      return (\n        col.name.toLowerCase().includes(searchLower) ||\n        (col.region && col.region.toLowerCase().includes(searchLower)) ||\n        (col.location && col.location.toLowerCase().includes(searchLower))\n      );\n    }),\n    [cols, searchTerm]\n  );\n  \n  /**\n   * Calculer la pagination\n   */\n  const paginatedCols = useMemo(() => {\n    const startIndex = (page - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return filteredCols.slice(startIndex, endIndex);\n  }, [filteredCols, page, itemsPerPage]);\n  \n  const pageCount = useMemo(() => \n    Math.ceil(filteredCols.length / itemsPerPage),\n    [filteredCols.length, itemsPerPage]\n  );\n  \n  // Réinitialiser la page quand les filtres changent\n  useEffect(() => {\n    setPage(1);\n  }, [searchTerm, filterRegion, filterDifficulty, filterElevation, filterSurface, filterTechnicalDifficulty, filterSeasons]);\n  \n  /**\n   * Gérer la sélection d'un col\n   */\n  const handleColSelect = useCallback((colId) => {\n    setSelectedColId(colId);\n    \n    // Précharger les données météo lorsqu'un col est sélectionné\n    const selectedCol = cols.find(col => col.id === colId);\n    if (selectedCol && selectedCol.latitude && selectedCol.longitude) {\n      weatherPreloader.addToPreloadQueue({\n        lat: selectedCol.latitude,\n        lng: selectedCol.longitude,\n        name: selectedCol.name\n      });\n    }\n  }, [cols]);\n  \n  /**\n   * Ajouter/retirer un col des favoris\n   */\n  const toggleFavorite = useCallback((colId) => {\n    setFavorites(prevFavorites => {\n      if (prevFavorites.includes(colId)) {\n        return prevFavorites.filter(id => id !== colId);\n      } else {\n        return [...prevFavorites, colId];\n      }\n    });\n  }, [setFavorites]);\n  \n  /**\n   * Réinitialiser tous les filtres\n   */\n  const resetFilters = useCallback(() => {\n    setSearchTerm('');\n    setFilterRegion('');\n    setFilterDifficulty('');\n    setFilterElevation([0, 3000]);\n    setFilterSurface([]);\n    setFilterTechnicalDifficulty('');\n    setFilterSeasons([]);\n  }, []);\n  \n  /**\n   * Naviguer vers une section spécifique\n   */\n  const navigateToSection = useCallback((section) => {\n    if (section === 'explorer') {\n      navigate('/cols');\n    } else if (section === 'seven-majors') {\n      navigate('/cols/seven-majors');\n    }\n  }, [navigate]);\n  \n  return {\n    cols,\n    loading,\n    error,\n    selectedColId,\n    searchTerm,\n    filterRegion,\n    filterDifficulty,\n    filterElevation,\n    filterSurface,\n    filterTechnicalDifficulty,\n    filterSeasons,\n    filtersOpen,\n    page,\n    activeSection,\n    filteredCols,\n    paginatedCols,\n    pageCount,\n    favorites,\n    toggleFavorite,\n    setSearchTerm,\n    setFilterRegion,\n    setFilterDifficulty,\n    setFilterElevation,\n    setFilterSurface,\n    setFilterTechnicalDifficulty,\n    setFilterSeasons,\n    setFiltersOpen,\n    setPage,\n    handleColSelect,\n    resetFilters,\n    navigateToSection\n  };\n};\n\nexport default useColsExplorer;\n","import { useState, useEffect } from 'react';\n\n/**\n * Hook personnalisé pour persister des données dans le localStorage\n * @param {string} key - Clé pour stocker les données dans localStorage\n * @param {any} initialValue - Valeur initiale si aucune donnée n'existe en localStorage\n * @returns {Array} - [storedValue, setValue] - valeur stockée et fonction pour la mettre à jour\n */\nexport const useLocalStorage = (key, initialValue) => {\n  // État pour stocker la valeur\n  // Passer la fonction d'initialisation à useState pour que la logique ne s'exécute qu'une fois\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Récupérer depuis localStorage par clé\n      const item = window.localStorage.getItem(key);\n      // Parser le JSON stocké ou retourner initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // En cas d'erreur, utiliser la valeur initiale\n      console.error(`Erreur lors de la récupération de ${key} du localStorage:`, error);\n      return initialValue;\n    }\n  });\n\n  // Retourner une fonction wrapped pour mettre à jour localStorage\n  const setValue = (value) => {\n    try {\n      // Permettre à value d'être une fonction pour la même API que useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      \n      // Sauvegarder l'état\n      setStoredValue(valueToStore);\n      \n      // Sauvegarder dans localStorage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      \n      // Déclencher un événement personnalisé pour la synchronisation entre onglets (optionnel)\n      window.dispatchEvent(new Event('local-storage-update'));\n    } catch (error) {\n      console.error(`Erreur lors de la sauvegarde de ${key} dans localStorage:`, error);\n    }\n  };\n\n  // Écouter les changements dans d'autres onglets/fenêtres (optionnel)\n  useEffect(() => {\n    const handleStorageChange = (event) => {\n      if (event.key === key) {\n        try {\n          const newValue = JSON.parse(event.newValue);\n          if (JSON.stringify(newValue) !== JSON.stringify(storedValue)) {\n            setStoredValue(newValue);\n          }\n        } catch (e) {\n          console.error(\"Erreur lors de la synchronisation du localStorage:\", e);\n        }\n      }\n    };\n\n    // Écouter les changements\n    window.addEventListener('storage', handleStorageChange);\n    \n    // Nettoyer\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [key, storedValue]);\n\n  return [storedValue, setValue];\n};\n","import React, { useMemo, lazy, Suspense, useCallback, useState } from 'react';\nimport { \n  Container, Grid, Typography, Box,\n  CircularProgress, Pagination, Card, \n  CardContent, Tabs, Tab, Paper, \n  useMediaQuery, useTheme, Drawer, \n  IconButton, Fab, Tooltip, Skeleton, Alert, Divider,\n  Button\n} from '@mui/material';\nimport { \n  TravelExplore as ExploreIcon,\n  EmojiEvents as TrophyIcon,\n  FilterList as FilterIcon,\n  Close as CloseIcon,\n  KeyboardArrowUp as ArrowUpIcon,\n  Search as SearchIcon\n} from '@mui/icons-material';\nimport { Routes, Route, useLocation } from 'react-router-dom';\nimport { FixedSizeList as VirtualList } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport InfiniteLoader from 'react-window-infinite-loader';\n\n// Composants réguliers\nimport ColDetail from '../components/cols/ColDetail';\nimport ColCard from '../components/cols/ColCard';\nimport ColFilters from '../components/cols/ColFilters';\nimport Breadcrumbs from '../components/common/Breadcrumbs';\nimport useColsExplorer from './hooks/useColsExplorer';\n\n// Chargement paresseux du composant lourd\nconst SevenMajorsChallenge = lazy(() => import('../components/challenges/SevenMajorsChallenge'));\n\n// Composant de chargement pour Suspense\nconst LoadingFallback = () => (\n  <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" py={8}>\n    <CircularProgress size={48} />\n    <Typography variant=\"h6\" sx={{ mt: 2 }}>\n      Chargement du défi Les 7 Majeurs...\n    </Typography>\n  </Box>\n);\n\n/**\n * Page principale d'exploration des cols cyclistes\n * Permet la recherche, le filtrage et la visualisation détaillée des cols\n */\nconst ColsExplorer = () => {\n  const {\n    loading,\n    error,\n    selectedColId,\n    searchTerm,\n    filterRegion,\n    filterDifficulty,\n    filterElevation,\n    filterSurface,\n    filterTechnicalDifficulty,\n    filterSeasons,\n    filtersOpen,\n    page,\n    activeSection,\n    paginatedCols,\n    pageCount,\n    filteredCols,\n    favorites,\n    toggleFavorite,\n    setSearchTerm,\n    setFilterRegion,\n    setFilterDifficulty,\n    setFilterElevation,\n    setFilterSurface,\n    setFilterTechnicalDifficulty,\n    setFilterSeasons,\n    setFiltersOpen,\n    setPage,\n    handleColSelect,\n    resetFilters,\n    navigateToSection\n  } = useColsExplorer();\n  \n  // Media queries pour le responsive\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\n  const location = useLocation();\n  \n  // État pour le bouton de retour en haut et le tiroir de filtres sur mobile\n  const [showScrollTop, setShowScrollTop] = useState(false);\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\n  \n  // Calculer le titre de la page en fonction de la section active\n  const pageTitle = useMemo(() => {\n    if (activeSection === 'seven-majors') {\n      return 'Les 7 Majeurs - Défi Cycliste';\n    }\n    return 'Explorez les Cols Cyclistes';\n  }, [activeSection]);\n  \n  // Gérer le défilement pour afficher/masquer le bouton de retour en haut\n  const handleScroll = useCallback(() => {\n    if (window.scrollY > 300) {\n      setShowScrollTop(true);\n    } else {\n      setShowScrollTop(false);\n    }\n  }, []);\n  \n  // Attacher l'écouteur d'événement de défilement\n  React.useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n  \n  // Fonction pour remonter en haut de la page\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  \n  // Gérer l'ouverture/fermeture du tiroir de filtres sur mobile\n  const toggleMobileFilters = () => {\n    setMobileFiltersOpen(!mobileFiltersOpen);\n  };\n  \n  // Rendu optimisé d'un élément de la liste virtualisée\n  const ColCardItem = React.memo(({ index, style, data }) => {\n    const col = data.items[index];\n    if (!col) {\n      return (\n        <div style={style}>\n          <Skeleton variant=\"rectangular\" height={120} />\n        </div>\n      );\n    }\n    \n    return (\n      <div style={{...style, paddingRight: 16, paddingLeft: 16}}>\n        <ColCard \n          col={col}\n          isSelected={data.selectedId === col.id}\n          onClick={() => data.onSelect(col.id)}\n          isFavorite={data.favorites.includes(col.id)}\n          onToggleFavorite={data.onToggleFavorite}\n        />\n      </div>\n    );\n  });\n  \n  // Configuration pour la virtualisation\n  const itemSize = isMobile ? 160 : 180;\n  const listHeight = isMobile ? 450 : 600;\n  \n  // Rendu du composant\n  return (\n    <Container maxWidth=\"xl\" sx={{ pt: 2, pb: 4 }}>\n      {/* Breadcrumbs avec aria */}\n      <Box mb={2} role=\"navigation\" aria-label=\"Fil d'Ariane\">\n        <Breadcrumbs />\n      </Box>\n      \n      {/* Titre de la page avec aria */}\n      <Typography \n        variant={isMobile ? \"h5\" : \"h4\"} \n        component=\"h1\" \n        gutterBottom\n        sx={{ fontWeight: 'bold' }}\n      >\n        {pageTitle}\n      </Typography>\n      \n      {/* Navigation principale */}\n      <Tabs \n        value={activeSection}\n        onChange={(e, newValue) => navigateToSection(newValue)}\n        sx={{ \n          mb: isMobile ? 2 : 4, \n          borderBottom: 1, \n          borderColor: 'divider',\n          '& .MuiTab-root': {\n            fontSize: isMobile ? '0.8rem' : 'inherit',\n            minHeight: isMobile ? 48 : 'auto'\n          }\n        }}\n        aria-label=\"Sections de l'explorateur de cols\"\n        variant={isMobile ? \"fullWidth\" : \"standard\"}\n      >\n        <Tab \n          value=\"explorer\" \n          label=\"Explorateur de Cols\" \n          icon={isMobile ? null : <ExploreIcon />} \n          iconPosition=\"start\"\n          sx={{ fontWeight: activeSection === 'explorer' ? 'bold' : 'normal' }}\n          aria-controls={activeSection === 'explorer' ? 'cols-explorer-content' : undefined}\n        />\n        <Tab \n          value=\"seven-majors\" \n          label=\"Les 7 Majeurs\" \n          icon={isMobile ? null : <TrophyIcon />} \n          iconPosition=\"start\"\n          sx={{ fontWeight: activeSection === 'seven-majors' ? 'bold' : 'normal' }}\n          aria-controls={activeSection === 'seven-majors' ? 'seven-majors-content' : undefined}\n        />\n      </Tabs>\n      \n      {/* Routes pour les différentes sections */}\n      <Routes>\n        <Route path=\"/\" element={\n          <Box id=\"cols-explorer-content\" role=\"main\">\n            {/* Bouton de filtres visible uniquement sur mobile */}\n            {isMobile && (\n              <Box sx={{ mb: 2 }}>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  startIcon={<FilterIcon />}\n                  onClick={toggleMobileFilters}\n                >\n                  {filtersOpen ? 'Masquer les filtres' : 'Afficher les filtres'}\n                </Button>\n              </Box>\n            )}\n            \n            {/* Tiroir de filtres pour mobile */}\n            {isMobile && (\n              <Drawer\n                anchor=\"left\"\n                open={mobileFiltersOpen}\n                onClose={toggleMobileFilters}\n                sx={{ zIndex: 1200 }}\n              >\n                <Box sx={{ minWidth: 280, maxWidth: '95vw', p: 1 }}>\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n                    <Typography variant=\"h6\">Filtres</Typography>\n                    <IconButton onClick={toggleMobileFilters} aria-label=\"Fermer les filtres\">\n                      <CloseIcon />\n                    </IconButton>\n                  </Box>\n                  <ColFilters\n                    searchTerm={searchTerm}\n                    filterRegion={filterRegion}\n                    filterDifficulty={filterDifficulty}\n                    filterElevation={filterElevation}\n                    filterSurface={filterSurface}\n                    filterTechnicalDifficulty={filterTechnicalDifficulty}\n                    filterSeasons={filterSeasons}\n                    filtersOpen={filtersOpen}\n                    onSearchChange={setSearchTerm}\n                    onRegionChange={setFilterRegion}\n                    onDifficultyChange={setFilterDifficulty}\n                    onElevationChange={setFilterElevation}\n                    onSurfaceChange={setFilterSurface}\n                    onTechnicalDifficultyChange={setFilterTechnicalDifficulty}\n                    onSeasonsChange={setFilterSeasons}\n                    onFiltersOpenChange={setFiltersOpen}\n                    onResetFilters={resetFilters}\n                    isMobile={true}\n                  />\n                </Box>\n              </Drawer>\n            )}\n            \n            <Grid container spacing={3}>\n              {/* Partie gauche: recherche et filtres */}\n              <Grid item xs={12} md={4} lg={3}>\n                {/* Filtres sur desktop et tablet */}\n                {!isMobile && (\n                  <ColFilters\n                    searchTerm={searchTerm}\n                    filterRegion={filterRegion}\n                    filterDifficulty={filterDifficulty}\n                    filterElevation={filterElevation}\n                    filterSurface={filterSurface}\n                    filterTechnicalDifficulty={filterTechnicalDifficulty}\n                    filterSeasons={filterSeasons}\n                    filtersOpen={filtersOpen}\n                    onSearchChange={setSearchTerm}\n                    onRegionChange={setFilterRegion}\n                    onDifficultyChange={setFilterDifficulty}\n                    onElevationChange={setFilterElevation}\n                    onSurfaceChange={setFilterSurface}\n                    onTechnicalDifficultyChange={setFilterTechnicalDifficulty}\n                    onSeasonsChange={setFilterSeasons}\n                    onFiltersOpenChange={setFiltersOpen}\n                    onResetFilters={resetFilters}\n                  />\n                )}\n                \n                {/* Liste des cols */}\n                <Paper \n                  elevation={3} \n                  sx={{ \n                    overflow: 'hidden',\n                    mt: !isMobile ? 3 : 0\n                  }}\n                  aria-label=\"Liste des cols\"\n                >\n                  <CardContent \n                    sx={{ \n                      bgcolor: 'background.paper', \n                      py: isMobile ? 1.5 : 2,\n                      px: isMobile ? 2 : 3\n                    }}\n                  >\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                      <Typography variant={isMobile ? \"subtitle1\" : \"h6\"}>\n                        <ExploreIcon sx={{ verticalAlign: 'middle', mr: 1, fontSize: isMobile ? '1.2rem' : '1.5rem' }} />\n                        {filteredCols.length} cols trouvés\n                      </Typography>\n                      {isMobile && (\n                        <IconButton \n                          size=\"small\" \n                          color=\"primary\"\n                          onClick={toggleMobileFilters}\n                          aria-label=\"Filtrer\"\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      )}\n                    </Box>\n                  </CardContent>\n                  \n                  <Divider />\n                \n                  {loading ? (\n                    <Box display=\"flex\" justifyContent=\"center\" p={3}>\n                      <CircularProgress aria-label=\"Chargement des cols\" />\n                    </Box>\n                  ) : error ? (\n                    <Box p={3}>\n                      <Alert severity=\"error\" variant=\"outlined\">\n                        {error}\n                      </Alert>\n                    </Box>\n                  ) : (\n                    <Box sx={{ overflowY: 'auto' }}>\n                      {filteredCols.length === 0 ? (\n                        <Box p={3}>\n                          <Typography align=\"center\">\n                            Aucun col ne correspond à vos critères\n                          </Typography>\n                        </Box>\n                      ) : (\n                        <Box height={listHeight} width=\"100%\">\n                          <AutoSizer disableHeight>\n                            {({ width }) => (\n                              <VirtualList\n                                height={listHeight}\n                                width={width}\n                                itemCount={paginatedCols.length}\n                                itemSize={itemSize}\n                                itemData={{\n                                  items: paginatedCols,\n                                  selectedId: selectedColId,\n                                  onSelect: handleColSelect,\n                                  favorites: favorites,\n                                  onToggleFavorite: toggleFavorite\n                                }}\n                                overscanCount={3}\n                              >\n                                {ColCardItem}\n                              </VirtualList>\n                            )}\n                          </AutoSizer>\n                        </Box>\n                      )}\n                      \n                      {pageCount > 1 && (\n                        <Box \n                          display=\"flex\" \n                          justifyContent=\"center\" \n                          py={2}\n                          sx={{\n                            borderTop: `1px solid ${theme.palette.divider}`\n                          }}\n                        >\n                          <Pagination \n                            count={pageCount} \n                            page={page}\n                            onChange={(e, value) => setPage(value)}\n                            color=\"primary\"\n                            siblingCount={isMobile ? 0 : 1}\n                            size={isMobile ? \"small\" : \"medium\"}\n                            showFirstButton={!isMobile}\n                            showLastButton={!isMobile}\n                            aria-label=\"Pagination des cols\"\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                  )}\n                </Paper>\n              </Grid>\n              \n              {/* Visualisation du col sélectionné */}\n              <Grid item xs={12} md={8} lg={9}>\n                <ColDetail colId={selectedColId} />\n              </Grid>\n            </Grid>\n          </Box>\n        } />\n        \n        <Route path=\"/seven-majors/*\" element={\n          <Box id=\"seven-majors-content\" role=\"main\">\n            <Suspense fallback={<LoadingFallback />}>\n              <SevenMajorsChallenge />\n            </Suspense>\n          </Box>\n        } />\n      </Routes>\n      \n      {/* Bouton pour remonter en haut de la page */}\n      {showScrollTop && (\n        <Tooltip title=\"Retour en haut\">\n          <Fab \n            color=\"primary\" \n            size=\"small\" \n            aria-label=\"Retour en haut de la page\"\n            sx={{ \n              position: 'fixed', \n              bottom: 16, \n              right: 16,\n              zIndex: 1000\n            }}\n            onClick={scrollToTop}\n          >\n            <ArrowUpIcon />\n          </Fab>\n        </Tooltip>\n      )}\n    </Container>\n  );\n};\n\nexport default React.memo(ColsExplorer);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Breadcrumbs as MUIBreadcrumbs, Typography, Link as MUILink } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport DirectionsBikeIcon from '@mui/icons-material/DirectionsBike';\nimport TerrainIcon from '@mui/icons-material/Terrain';\nimport RestaurantIcon from '@mui/icons-material/Restaurant';\nimport MapIcon from '@mui/icons-material/Map';\nimport PeopleIcon from '@mui/icons-material/People';\nimport PersonIcon from '@mui/icons-material/Person';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport BugReportIcon from '@mui/icons-material/BugReport';\n\n// Configuration des routes pour les breadcrumbs\nconst routeConfig = {\n  '/': { label: 'Accueil', icon: <HomeIcon fontSize=\"small\" /> },\n  '/cols': { label: 'Cols', icon: <TerrainIcon fontSize=\"small\" /> },\n  '/training': { label: 'Entraînement', icon: <DirectionsBikeIcon fontSize=\"small\" /> },\n  '/nutrition': { label: 'Nutrition', icon: <RestaurantIcon fontSize=\"small\" /> },\n  '/routes': { label: 'Parcours', icon: <MapIcon fontSize=\"small\" /> },\n  '/social': { label: 'Communauté', icon: <PeopleIcon fontSize=\"small\" /> },\n  '/profile': { label: 'Profil', icon: <PersonIcon fontSize=\"small\" /> },\n  '/settings': { label: 'Paramètres', icon: <SettingsIcon fontSize=\"small\" /> },\n  '/error-demo': { label: 'Démo Gestion d\\'Erreurs', icon: <BugReportIcon fontSize=\"small\" /> },\n};\n\n// Configuration des segments spécifiques pour les sous-routes\nconst segmentConfig = {\n  'catalog': { label: 'Catalogue' },\n  'explorer': { label: 'Explorateur' },\n  'detail': { label: 'Détails' },\n  'stats': { label: 'Statistiques' },\n  'calendar': { label: 'Calendrier' },\n  'programs': { label: 'Programmes' },\n  'planner': { label: 'Planificateur' },\n  'community': { label: 'Communauté' },\n  'achievements': { label: 'Réussites' }\n};\n\n/**\n * Composant Breadcrumbs pour la navigation hiérarchique\n * Affiche le chemin de navigation actuel avec des liens interactifs\n */\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const pathnames = location.pathname.split('/').filter(x => x);\n  \n  // Fonction pour générer le libellé à partir d'un segment d'URL\n  const getSegmentLabel = (segment) => {\n    // Vérifier si c'est un segment connu\n    if (segmentConfig[segment]) {\n      return segmentConfig[segment].label;\n    }\n    \n    // Vérifier si c'est un ID numérique ou alphanumérique\n    if (/^\\d+$/.test(segment) || /^[a-zA-Z0-9\\-_]+$/.test(segment)) {\n      return `#${segment}`;\n    }\n    \n    // Formater le segment en titre lisible\n    return segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, ' ');\n  };\n  \n  // Fonction pour générer le chemin complet jusqu'à un segment\n  const getPathUpTo = (index) => {\n    return '/' + pathnames.slice(0, index + 1).join('/');\n  };\n  \n  return (\n    <div className=\"breadcrumbs-container\">\n      <MUIBreadcrumbs \n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"navigation hiérarchique\"\n      >\n        {/* Lien d'accueil toujours affiché */}\n        <MUILink \n          component={Link} \n          to=\"/\"\n          color=\"inherit\"\n          display=\"flex\"\n          alignItems=\"center\"\n          className=\"breadcrumb-link\"\n        >\n          <HomeIcon fontSize=\"small\" style={{ marginRight: '4px' }} />\n          Accueil\n        </MUILink>\n        \n        {/* Liens pour chaque segment du chemin */}\n        {pathnames.map((segment, index) => {\n          const path = getPathUpTo(index);\n          const routeInfo = routeConfig[path] || {};\n          const isLast = index === pathnames.length - 1;\n          \n          // Pour le dernier élément, afficher un texte non cliquable\n          if (isLast) {\n            return (\n              <Typography \n                key={path}\n                color=\"textPrimary\"\n                display=\"flex\"\n                alignItems=\"center\"\n                className=\"breadcrumb-current\"\n              >\n                {routeInfo.icon || null}\n                {routeInfo.label || getSegmentLabel(segment)}\n              </Typography>\n            );\n          }\n          \n          // Pour les autres éléments, afficher un lien\n          return (\n            <MUILink\n              key={path}\n              component={Link}\n              to={path}\n              color=\"inherit\"\n              display=\"flex\"\n              alignItems=\"center\"\n              className=\"breadcrumb-link\"\n            >\n              {routeInfo.icon || null}\n              {routeInfo.label || getSegmentLabel(segment)}\n            </MUILink>\n          );\n        })}\n      </MUIBreadcrumbs>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n"],"names":["ColCard","_ref","col","isSelected","onClick","isFavorite","onToggleFavorite","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","isTablet","between","getImageHeight","handleFavoriteClick","e","stopPropagation","id","_jsx","Card","elevation","sx","mb","border","transition","transform","boxShadow","position","role","name","difficulty","children","CardActionArea","_jsxs","Grid","container","item","xs","sm","md","height","Box","width","overflow","LazyLoadImage","src","imageUrl","alt","effect","style","objectFit","objectPosition","top","left","placeholder","Skeleton","variant","animation","category","className","getCategoryClass","bgcolor","color","borderRadius","display","alignItems","justifyContent","fontWeight","fontSize","zIndex","CardContent","pb","pt","px","Typography","component","noWrap","undefined","mt","flexWrap","LocationIcon","mr","region","TerrainIcon","length","DistanceIcon","ml","gradient","ElevationIcon","gap","Chip","size","label","level","toLowerCase","getDifficultyColor","recommended","icon","BikeIcon","cursor","padding","tabIndex","onKeyDown","key","preventDefault","FavoriteIcon","defaultProps","memo","regions","difficulties","surfaces","technicalDifficulties","seasons","searchTerm","filterRegion","filterDifficulty","filterElevation","filtersOpen","filterSurface","filterTechnicalDifficulty","filterSeasons","onSearchChange","onRegionChange","onDifficultyChange","onElevationChange","onFiltersOpenChange","onResetFilters","onSurfaceChange","onTechnicalDifficultyChange","onSeasonsChange","showAdvanced","setShowAdvanced","useState","hasActiveFilters","handleSearchChange","useCallback","target","value","handleRegionChange","handleDifficultyChange","handleElevationChange","newValue","handleResetFilters","handleSurfaceChange","surface","newSurfaces","index","indexOf","push","splice","handleTechnicalDifficultyChange","handleSeasonChange","season","newSeasons","toggleAdvancedFilters","prev","paperStyle","p","_Fragment","Paper","TextField","fullWidth","onChange","InputProps","startAdornment","InputAdornment","SearchIcon","endAdornment","IconButton","edge","ClearIcon","FilterIcon","verticalAlign","Button","startIcon","disabled","Divider","Stack","spacing","FormControl","InputLabel","Select","labelId","MenuItem","map","gutterBottom","Tooltip","title","InfoIcon","Slider","valueLabelDisplay","min","max","step","endIcon","ExpandLessIcon","ExpandIcon","alignSelf","FormGroup","row","FormControlLabel","control","Checkbox","checked","includes","diff","CalendarIcon","SunnyIcon","CACHE_DURATION","STORAGE_KEY","weatherCache","data","Map","init","storedCache","localStorage","getItem","parsedCache","JSON","parse","this","Object","keys","forEach","set","console","log","purgeExpiredEntries","error","setInterval","saveToLocalStorage","cacheObject","setItem","stringify","now","Date","purgedCount","timestamp","delete","getWeatherData","latitude","longitude","fetchFunction","cacheKey","cachedData","get","weatherData","getDefaultWeatherData","current","temp","weather","main","description","humidity","wind_speed","visibility","pressure","daily","Array","fill","_","i","dt","clearCache","clear","removeItem","getStats","validEntries","expiredEntries","totalEntries","oldestEntryAge","getOldestEntryAge","oldestTimestamp","Math","round","popular_locations","lat","lng","popularity","constructor","isInitialized","isPreloading","preloadQueue","preloadInterval","syncInProgress","stats","totalPreloaded","lastPreloadTime","successCount","errorCount","initialize","options","arguments","preloadPopularOnStart","concurrentPreloads","enableSync","preloadPopularLocations","shuffleQueue","startPreloading","preloadLocation","location","currentWeather","axios","toString","async","forecast","tasks","processPreloadQueue","Promise","all","shift","resolve","setTimeout","j","floor","random","addToPreloadQueue","shutdown","clearInterval","queueLength","isSyncing","useColsExplorer","cols","setCols","loading","setLoading","setError","selectedColId","setSelectedColId","setSearchTerm","setFilterRegion","setFilterDifficulty","setFilterElevation","setFilterSurface","setFilterTechnicalDifficulty","setFilterSeasons","setFiltersOpen","page","setPage","favorites","setFavorites","useLocalStorage","initialValue","storedValue","setStoredValue","window","useEffect","handleStorageChange","event","addEventListener","removeEventListener","valueToStore","Function","dispatchEvent","Event","useLocation","navigate","useNavigate","getActiveSection","pathname","activeSection","useMemo","fetchCols","minElevation","maxElevation","technicalDifficulty","ColService","getAllCols","weatherPreloader","err","debounceTimer","clearTimeout","filteredCols","filter","trim","searchLower","paginatedCols","startIndex","endIndex","slice","pageCount","ceil","handleColSelect","colId","selectedCol","find","toggleFavorite","prevFavorites","resetFilters","navigateToSection","section","SevenMajorsChallenge","lazy","LoadingFallback","flexDirection","py","CircularProgress","ColsExplorer","showScrollTop","setShowScrollTop","mobileFiltersOpen","setMobileFiltersOpen","pageTitle","handleScroll","scrollY","React","passive","toggleMobileFilters","ColCardItem","items","paddingRight","paddingLeft","selectedId","onSelect","itemSize","listHeight","Container","maxWidth","Breadcrumbs","Tabs","borderBottom","borderColor","minHeight","Tab","ExploreIcon","iconPosition","TrophyIcon","Routes","Route","path","element","Drawer","anchor","open","onClose","minWidth","CloseIcon","ColFilters","lg","Alert","severity","overflowY","align","AutoSizer","disableHeight","_ref2","VirtualList","itemCount","itemData","overscanCount","borderTop","palette","divider","Pagination","count","siblingCount","showFirstButton","showLastButton","ColDetail","Suspense","fallback","Fab","bottom","right","scrollToTop","scrollTo","behavior","ArrowUpIcon","routeConfig","HomeIcon","DirectionsBikeIcon","RestaurantIcon","MapIcon","PeopleIcon","PersonIcon","SettingsIcon","BugReportIcon","segmentConfig","pathnames","split","x","getSegmentLabel","segment","test","charAt","toUpperCase","replace","MUIBreadcrumbs","separator","NavigateNextIcon","MUILink","Link","to","marginRight","join","getPathUpTo","routeInfo"],"sourceRoot":""}