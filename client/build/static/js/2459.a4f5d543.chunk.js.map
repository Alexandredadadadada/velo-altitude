{"version":3,"file":"static/js/2459.a4f5d543.chunk.js","mappings":"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","sources":["data/nutritionRecipes.js","data/recipesIndex.js","components/nutrition/NutritionRecipesExplorer.js"],"sourcesContent":["/**\n * Recettes adaptées aux cyclistes avec valeurs nutritionnelles complètes\n * Organisées par catégorie et moment de consommation\n */\n\nconst nutritionRecipes = {\n  preRide: [\n    {\n      id: \"pre-1\",\n      name: \"Porridge énergétique aux fruits rouges\",\n      category: \"Petit-déjeuner\",\n      timing: \"2-3 heures avant l'effort\",\n      prepTime: 10,\n      cookTime: 5,\n      difficulty: \"Facile\",\n      servings: 1,\n      ingredients: [\n        \"80g de flocons d'avoine\",\n        \"250ml de lait (ou alternative végétale)\",\n        \"100g de fruits rouges (frais ou surgelés)\",\n        \"1 cuillère à soupe de miel\",\n        \"1 cuillère à café de cannelle\",\n        \"10g d'amandes effilées\",\n        \"1 cuillère à soupe de graines de chia\"\n      ],\n      instructions: [\n        \"Dans une casserole, mélanger les flocons d'avoine et le lait.\",\n        \"Porter à ébullition puis réduire le feu et laisser mijoter 3-5 minutes en remuant.\",\n        \"Retirer du feu et ajouter le miel et la cannelle.\",\n        \"Verser dans un bol et garnir avec les fruits rouges, les amandes et les graines de chia.\"\n      ],\n      nutritionalInfo: {\n        calories: 490,\n        macros: {\n          carbs: 75,\n          protein: 17,\n          fat: 12,\n          fiber: 11\n        },\n        micros: {\n          sodium: 120,\n          potassium: 650,\n          calcium: 300,\n          iron: 3.5\n        }\n      },\n      benefits: [\n        \"Libération progressive d'énergie grâce aux glucides complexes\",\n        \"Bon apport de fibres pour la satiété\",\n        \"Riche en antioxydants grâce aux fruits rouges\",\n        \"Bon apport de protéines pour préserver la masse musculaire\"\n      ],\n      tips: \"Préparez la veille et réchauffez le matin pour gagner du temps. Ajustez la quantité de flocons selon l'intensité prévue de votre sortie.\",\n      image: \"porridge.jpg\"\n    },\n    {\n      id: \"pre-2\",\n      name: \"Pancakes banane et avoine sans gluten\",\n      category: \"Petit-déjeuner\",\n      timing: \"2 heures avant l'effort\",\n      prepTime: 5,\n      cookTime: 10,\n      difficulty: \"Facile\",\n      servings: 2,\n      ingredients: [\n        \"1 banane bien mûre\",\n        \"2 œufs\",\n        \"60g de flocons d'avoine moulus (ou farine d'avoine)\",\n        \"120ml de lait d'amande\",\n        \"1 cuillère à café de levure chimique\",\n        \"1 pincée de sel\",\n        \"1 cuillère à café d'extrait de vanille\",\n        \"Huile de coco pour la cuisson\"\n      ],\n      instructions: [\n        \"Écraser la banane dans un saladier.\",\n        \"Ajouter les œufs et fouetter.\",\n        \"Incorporer les flocons d'avoine moulus, la levure, le sel et la vanille.\",\n        \"Ajouter le lait d'amande progressivement jusqu'à obtenir une pâte fluide.\",\n        \"Chauffer une poêle à feu moyen avec un peu d'huile de coco.\",\n        \"Verser des petites louches de pâte et cuire 2-3 minutes de chaque côté.\"\n      ],\n      nutritionalInfo: {\n        calories: 380,\n        macros: {\n          carbs: 55,\n          protein: 14,\n          fat: 11,\n          fiber: 6\n        },\n        micros: {\n          sodium: 320,\n          potassium: 550,\n          calcium: 200,\n          iron: 2\n        }\n      },\n      benefits: [\n        \"Sans gluten, facile à digérer avant l'effort\",\n        \"Bon équilibre entre glucides complexes et protéines\",\n        \"Apport modéré en fibres pour limiter les problèmes digestifs\",\n        \"Faible index glycémique pour une énergie soutenue\"\n      ],\n      tips: \"Servir avec un peu de miel ou de sirop d'érable pour un apport en glucides simples supplémentaires. Peut se préparer à l'avance et se réchauffer.\",\n      image: \"pancakes.jpg\"\n    },\n    {\n      id: \"pre-3\",\n      name: \"Wrap au poulet et patate douce\",\n      category: \"Repas principal\",\n      timing: \"3 heures avant l'effort\",\n      prepTime: 15,\n      cookTime: 20,\n      difficulty: \"Moyen\",\n      servings: 2,\n      ingredients: [\n        \"2 tortillas de blé complet (ou sans gluten)\",\n        \"150g de blanc de poulet\",\n        \"1 patate douce moyenne (environ 200g)\",\n        \"1 cuillère à soupe d'huile d'olive\",\n        \"1 cuillère à café de paprika\",\n        \"1/2 cuillère à café de cumin\",\n        \"1 poignée de roquette\",\n        \"2 cuillères à soupe de yaourt grec\",\n        \"1 cuillère à café de jus de citron\",\n        \"Sel et poivre\"\n      ],\n      instructions: [\n        \"Préchauffer le four à 200°C.\",\n        \"Couper la patate douce en cubes de 1cm et les mélanger avec l'huile d'olive, le paprika, le cumin, le sel et le poivre.\",\n        \"Disposer sur une plaque de cuisson et cuire 15-20 minutes jusqu'à ce qu'ils soient tendres.\",\n        \"Pendant ce temps, cuire le poulet dans une poêle avec un peu d'huile d'olive, puis le couper en lanières.\",\n        \"Mélanger le yaourt grec avec le jus de citron, le sel et le poivre pour faire une sauce.\",\n        \"Réchauffer les tortillas, puis garnir avec la roquette, le poulet, les cubes de patate douce et la sauce au yaourt.\",\n        \"Rouler les wraps et couper en deux.\"\n      ],\n      nutritionalInfo: {\n        calories: 420,\n        macros: {\n          carbs: 45,\n          protein: 35,\n          fat: 12,\n          fiber: 7\n        },\n        micros: {\n          sodium: 550,\n          potassium: 820,\n          calcium: 150,\n          iron: 3\n        }\n      },\n      benefits: [\n        \"Apport équilibré en macronutriments pour une sortie longue\",\n        \"Patate douce riche en glucides complexes et en potassium\",\n        \"Protéines de haute qualité du poulet pour préserver la masse musculaire\",\n        \"Facile à digérer avec un niveau modéré en fibres et en graisses\"\n      ],\n      tips: \"Préparez les ingrédients la veille pour un montage rapide le jour J. Pour les sorties très longues, augmentez la portion de patate douce.\",\n      image: \"wrap.jpg\"\n    }\n  ],\n  duringRide: [\n    {\n      id: \"during-1\",\n      name: \"Barres énergétiques maison aux dattes et noix\",\n      category: \"En-cas\",\n      timing: \"Pendant l'effort, toutes les 45-60 minutes\",\n      prepTime: 15,\n      cookTime: 0,\n      difficulty: \"Facile\",\n      servings: 8,\n      ingredients: [\n        \"200g de dattes dénoyautées\",\n        \"50g d'amandes\",\n        \"50g de noix de cajou non salées\",\n        \"40g de flocons d'avoine\",\n        \"2 cuillères à soupe de miel\",\n        \"1 cuillère à soupe de beurre d'amande\",\n        \"1 pincée de sel de mer\",\n        \"Zeste d'un citron (optionnel)\"\n      ],\n      instructions: [\n        \"Faire tremper les dattes dans de l'eau chaude pendant 10 minutes si elles sont sèches, puis égoutter.\",\n        \"Mixer les amandes et les noix de cajou jusqu'à obtenir des morceaux de taille moyenne.\",\n        \"Ajouter les dattes, le miel, le beurre d'amande, le sel et le zeste de citron, puis mixer à nouveau jusqu'à obtenir une pâte collante.\",\n        \"Incorporer les flocons d'avoine et mélanger à la main.\",\n        \"Étaler le mélange dans un moule rectangulaire tapissé de papier cuisson, en pressant fermement.\",\n        \"Réfrigérer pendant au moins 2 heures, puis découper en 8 barres.\",\n        \"Emballer individuellement dans du papier sulfurisé pour faciliter le transport.\"\n      ],\n      nutritionalInfo: {\n        calories: 180,\n        macros: {\n          carbs: 32,\n          protein: 4,\n          fat: 5,\n          fiber: 4\n        },\n        micros: {\n          sodium: 20,\n          potassium: 240,\n          magnesium: 45,\n          iron: 1\n        }\n      },\n      benefits: [\n        \"Mélange idéal de glucides rapides (dattes) et plus lents (flocons d'avoine)\",\n        \"Apport modéré en protéines et acides gras essentiels grâce aux noix\",\n        \"Format compact et pratique pour le transport en poche de maillot\",\n        \"Sans additifs ni conservateurs contrairement aux barres commerciales\"\n      ],\n      tips: \"Ces barres se conservent 1 semaine au réfrigérateur et 1 mois au congélateur. Pour les sorties chaudes, ajoutez une pincée de sel supplémentaire.\",\n      image: \"energy_bars.jpg\"\n    },\n    {\n      id: \"during-2\",\n      name: \"Gâteau de riz énergétique\",\n      category: \"En-cas\",\n      timing: \"Pendant l'effort, pour les sorties longues\",\n      prepTime: 5,\n      cookTime: 20,\n      difficulty: \"Facile\",\n      servings: 6,\n      ingredients: [\n        \"150g de riz à risotto\",\n        \"500ml de lait\",\n        \"50g de sucre\",\n        \"1 cuillère à café d'extrait de vanille\",\n        \"Zeste d'orange\",\n        \"1 pincée de sel\",\n        \"30g de raisins secs\"\n      ],\n      instructions: [\n        \"Dans une casserole, porter à ébullition le lait avec le zeste d'orange et la vanille.\",\n        \"Ajouter le riz et cuire à feu doux pendant 15-20 minutes en remuant régulièrement.\",\n        \"Ajouter le sucre, le sel et les raisins secs, puis cuire encore 2-3 minutes.\",\n        \"Verser dans un moule carré et laisser refroidir complètement.\",\n        \"Découper en 6 portions et emballer individuellement pour le transport.\"\n      ],\n      nutritionalInfo: {\n        calories: 190,\n        macros: {\n          carbs: 38,\n          protein: 5,\n          fat: 2,\n          fiber: 1\n        },\n        micros: {\n          sodium: 55,\n          potassium: 150,\n          calcium: 120,\n          iron: 0.5\n        }\n      },\n      benefits: [\n        \"Très riche en glucides facilement assimilables\",\n        \"Texture moelleuse facile à consommer pendant l'effort\",\n        \"Apport en sodium et potassium pour l'équilibre électrolytique\",\n        \"Peut remplacer les gels énergétiques commerciaux\"\n      ],\n      tips: \"Se conserve 2-3 jours au réfrigérateur. Idéal pour les ascensions de cols ou les sorties de plus de 3 heures.\",\n      image: \"rice_cake.jpg\"\n    }\n  ],\n  postRide: [\n    {\n      id: \"post-1\",\n      name: \"Smoothie récupération framboise-banane\",\n      category: \"Boisson\",\n      timing: \"Dans les 30 minutes après l'effort\",\n      prepTime: 5,\n      cookTime: 0,\n      difficulty: \"Facile\",\n      servings: 1,\n      ingredients: [\n        \"1 banane\",\n        \"100g de framboises (fraîches ou surgelées)\",\n        \"250ml de lait (ou alternative végétale)\",\n        \"30g de protéine de whey (ou protéine végétale)\",\n        \"1 cuillère à soupe de miel\",\n        \"1 cuillère à soupe de graines de chia\",\n        \"Quelques glaçons (optionnel)\"\n      ],\n      instructions: [\n        \"Placer tous les ingrédients dans un blender.\",\n        \"Mixer jusqu'à obtenir une consistance lisse.\",\n        \"Servir immédiatement.\"\n      ],\n      nutritionalInfo: {\n        calories: 380,\n        macros: {\n          carbs: 50,\n          protein: 30,\n          fat: 6,\n          fiber: 8\n        },\n        micros: {\n          sodium: 160,\n          potassium: 750,\n          calcium: 350,\n          iron: 2\n        }\n      },\n      benefits: [\n        \"Ratio optimal glucides/protéines (5:3) pour la récupération musculaire\",\n        \"Riche en antioxydants grâce aux framboises pour lutter contre l'inflammation\",\n        \"Apport de potassium important pour la récupération neuromusculaire\",\n        \"Facilement digestible et rapidement assimilable\"\n      ],\n      tips: \"Consommez dans les 30 minutes suivant l'effort pour maximiser la resynthèse du glycogène. Ajoutez des glaçons pour les sorties par temps chaud.\",\n      image: \"recovery_smoothie.jpg\"\n    },\n    {\n      id: \"post-2\",\n      name: \"Bowl de récupération au saumon et quinoa\",\n      category: \"Repas principal\",\n      timing: \"1-2 heures après l'effort\",\n      prepTime: 15,\n      cookTime: 20,\n      difficulty: \"Moyen\",\n      servings: 2,\n      ingredients: [\n        \"120g de quinoa\",\n        \"200g de filet de saumon\",\n        \"1 avocat\",\n        \"100g d'épinards frais\",\n        \"1 betterave cuite\",\n        \"1 cuillère à soupe d'huile d'olive\",\n        \"1 citron\",\n        \"2 cuillères à soupe de graines de courge\",\n        \"Sel et poivre\"\n      ],\n      instructions: [\n        \"Rincer le quinoa et le cuire dans 2 fois son volume d'eau salée pendant 15 minutes.\",\n        \"Cuire le saumon au four à 180°C pendant 15 minutes avec un filet d'huile d'olive, du sel et du poivre.\",\n        \"Couper l'avocat et la betterave en dés.\",\n        \"Dresser le bol avec le quinoa, les épinards, le saumon émietté, l'avocat et la betterave.\",\n        \"Arroser d'huile d'olive et de jus de citron, puis parsemer de graines de courge.\"\n      ],\n      nutritionalInfo: {\n        calories: 580,\n        macros: {\n          carbs: 45,\n          protein: 35,\n          fat: 28,\n          fiber: 12\n        },\n        micros: {\n          sodium: 320,\n          potassium: 1200,\n          calcium: 150,\n          iron: 6,\n          omega3: 2.5\n        }\n      },\n      benefits: [\n        \"Riche en protéines complètes pour la réparation musculaire\",\n        \"Apport d'acides gras oméga-3 anti-inflammatoires\",\n        \"Charge glycémique modérée pour restaurer les réserves sans pic d'insuline\",\n        \"Riche en antioxydants et nitrates (betterave) pour favoriser la récupération\"\n      ],\n      tips: \"Ce repas est idéal après une sortie intense ou longue. Les restes se conservent bien pour le lendemain.\",\n      image: \"salmon_bowl.jpg\"\n    }\n  ],\n  colSpecific: [\n    {\n      id: \"col-1\",\n      name: \"Barres énergétiques spéciales cols\",\n      category: \"En-cas\",\n      timing: \"Avant et pendant l'ascension\",\n      prepTime: 20,\n      cookTime: 10,\n      difficulty: \"Moyen\",\n      servings: 10,\n      ingredients: [\n        \"150g de dattes dénoyautées\",\n        \"100g de flocons d'avoine\",\n        \"50g de riz soufflé\",\n        \"50g d'amandes effilées\",\n        \"30g de graines de tournesol\",\n        \"2 cuillères à soupe de miel\",\n        \"2 cuillères à soupe de sirop d'érable\",\n        \"30g de beurre\",\n        \"1/2 cuillère à café de sel de mer\",\n        \"1 cuillère à café de gingembre moulu\"\n      ],\n      instructions: [\n        \"Préchauffer le four à 160°C.\",\n        \"Mixer les dattes jusqu'à obtenir une pâte.\",\n        \"Faire fondre le beurre avec le miel et le sirop d'érable dans une casserole.\",\n        \"Mélanger tous les ingrédients secs dans un grand bol.\",\n        \"Ajouter la pâte de dattes et le mélange de beurre/miel, puis bien mélanger.\",\n        \"Presser fermement le mélange dans un moule rectangulaire tapissé de papier cuisson.\",\n        \"Cuire au four pendant 10 minutes, puis laisser refroidir complètement avant de découper en 10 barres.\"\n      ],\n      nutritionalInfo: {\n        calories: 200,\n        macros: {\n          carbs: 30,\n          protein: 5,\n          fat: 8,\n          fiber: 3\n        },\n        micros: {\n          sodium: 120,\n          potassium: 220,\n          magnesium: 60,\n          iron: 1.5\n        }\n      },\n      benefits: [\n        \"Enrichies en sodium et magnésium pour prévenir les crampes en montée\",\n        \"Mélange de sources de glucides pour une énergie immédiate et soutenue\",\n        \"Texture moins collante que les barres classiques pour faciliter la consommation en effort\",\n        \"Le gingembre aide à réduire les nausées parfois ressenties en altitude\"\n      ],\n      tips: \"Ces barres sont spécialement conçues pour résister à la chaleur et fournir des électrolytes. Idéales pour les cols comme l'Alpe d'Huez ou le Tourmalet.\",\n      colRecommendations: [\n        \"Ventoux - Consommer aux chalets Reynard\",\n        \"Tourmalet - Idéal à La Mongie\",\n        \"Galibier - Recommandé après le Plan Lachat\"\n      ],\n      image: \"col_bars.jpg\"\n    }\n  ]\n};\n\nexport default nutritionRecipes;\n","/**\n * Index centralisé de toutes les recettes disponibles sur Dashboard-Velo\n * Organise et catégorise les recettes pour permettre une navigation et recherche efficace\n */\n\nimport nutritionRecipes from './nutritionRecipes';\n\n// Importer d'autres ensembles de recettes ici\n// import additionalRecipes from './additionalRecipes';\n// import seasonalRecipes from './seasonalRecipes';\n\n/**\n * Catégories principales de recettes\n */\nconst categories = {\n  preRide: {\n    id: 'preRide',\n    name: 'Avant l\\'effort',\n    description: 'Recettes idéales pour préparer votre organisme à l\\'effort, avec un focus sur les glucides complexes et une bonne digestibilité',\n    icon: 'breakfast',\n    recipes: nutritionRecipes.preRide || []\n  },\n  duringRide: {\n    id: 'duringRide',\n    name: 'Pendant l\\'effort',\n    description: 'Aliments et en-cas pratiques pour vous ravitailler pendant vos sorties vélo',\n    icon: 'energy',\n    recipes: nutritionRecipes.duringRide || []\n  },\n  postRide: {\n    id: 'postRide',\n    name: 'Récupération',\n    description: 'Recettes riches en protéines et nutriments pour optimiser votre récupération après l\\'effort',\n    icon: 'recovery',\n    recipes: nutritionRecipes.postRide || []\n  },\n  colSpecific: {\n    id: 'colSpecific',\n    name: 'Spécial cols',\n    description: 'Recettes spécialement conçues pour la préparation et le ravitaillement lors des ascensions de cols',\n    icon: 'mountain',\n    recipes: nutritionRecipes.colSpecific || []\n  }\n};\n\n/**\n * Objectifs nutritionnels et leurs recettes associées\n */\nconst objectives = {\n  endurance: {\n    id: 'endurance',\n    name: 'Endurance',\n    description: 'Recettes riches en glucides complexes pour les efforts de longue durée',\n    icon: 'timer',\n    recipes: [] // Sera rempli ci-dessous\n  },\n  performance: {\n    id: 'performance',\n    name: 'Performance',\n    description: 'Nutrition optimisée pour les efforts intenses et la compétition',\n    icon: 'speed',\n    recipes: [] // Sera rempli ci-dessous\n  },\n  weightLoss: {\n    id: 'weightLoss',\n    name: 'Perte de poids',\n    description: 'Recettes équilibrées pour perdre du poids sans compromettre vos performances',\n    icon: 'scale',\n    recipes: [] // Sera rempli ci-dessous\n  },\n  recovery: {\n    id: 'recovery',\n    name: 'Récupération optimale',\n    description: 'Focus sur les protéines et antioxydants pour accélérer la récupération',\n    icon: 'healing',\n    recipes: [] // Sera rempli ci-dessous\n  }\n};\n\n/**\n * Propriétés diététiques spéciales\n */\nconst dietaryProperties = {\n  glutenFree: {\n    id: 'glutenFree',\n    name: 'Sans gluten',\n    description: 'Recettes sans gluten adaptées aux cyclistes sensibles ou intolérants',\n    icon: 'glutenFree',\n    recipes: [] // Sera rempli ci-dessous\n  },\n  vegetarian: {\n    id: 'vegetarian',\n    name: 'Végétarien',\n    description: 'Recettes végétariennes complètes pour les cyclistes',\n    icon: 'vegetarian',\n    recipes: [] // Sera rempli ci-dessous\n  },\n  vegan: {\n    id: 'vegan',\n    name: 'Végétalien',\n    description: 'Recettes 100% végétales adaptées aux besoins des cyclistes',\n    icon: 'vegan',\n    recipes: [] // Sera rempli ci-dessous\n  },\n  dairyFree: {\n    id: 'dairyFree',\n    name: 'Sans lactose',\n    description: 'Recettes sans produits laitiers pour les cyclistes intolérants',\n    icon: 'dairyFree',\n    recipes: [] // Sera rempli ci-dessous\n  },\n  highProtein: {\n    id: 'highProtein',\n    name: 'Riche en protéines',\n    description: 'Recettes concentrées en protéines pour la récupération et le développement musculaire',\n    icon: 'protein',\n    recipes: [] // Sera rempli ci-dessous\n  }\n};\n\n/**\n * Toutes les recettes disponibles dans l'application\n */\nconst allRecipes = [\n  ...nutritionRecipes.preRide || [],\n  ...nutritionRecipes.duringRide || [],\n  ...nutritionRecipes.postRide || [],\n  ...nutritionRecipes.colSpecific || []\n  // Ajouter d'autres collections ici au besoin\n];\n\n// Classification des recettes par objectif\nallRecipes.forEach(recipe => {\n  // Cette classification est simplifiée, dans un système réel\n  // elle pourrait être basée sur des métadonnées explicites dans chaque recette\n  \n  // Classification par objectif\n  if (recipe.nutritionalInfo && recipe.nutritionalInfo.macros) {\n    const macros = recipe.nutritionalInfo.macros;\n    \n    // Recettes pour l'endurance (riches en glucides)\n    if (macros.carbs > 60 || (macros.carbs / (macros.protein + macros.fat) > 2)) {\n      objectives.endurance.recipes.push(recipe);\n    }\n    \n    // Recettes pour la performance (équilibrées)\n    if (macros.protein >= 20 && macros.carbs >= 40) {\n      objectives.performance.recipes.push(recipe);\n    }\n    \n    // Recettes pour la perte de poids (pauvres en calories, riches en protéines)\n    if (recipe.nutritionalInfo.calories < 400 && macros.protein / macros.carbs > 0.5) {\n      objectives.weightLoss.recipes.push(recipe);\n    }\n    \n    // Recettes pour la récupération (riches en protéines)\n    if (macros.protein > 25 || macros.protein / recipe.nutritionalInfo.calories > 0.15) {\n      objectives.recovery.recipes.push(recipe);\n    }\n    \n    // Recettes riches en protéines\n    if (macros.protein > 20) {\n      dietaryProperties.highProtein.recipes.push(recipe);\n    }\n  }\n  \n  // Classification par propriétés diététiques\n  if (recipe.ingredients) {\n    const ingredients = recipe.ingredients.join(' ').toLowerCase();\n    \n    // Recettes sans gluten (détection simplifiée)\n    if (!ingredients.includes('blé') && \n        !ingredients.includes('gluten') && \n        !ingredients.includes('orge') && \n        !ingredients.includes('seigle') &&\n        !(ingredients.includes('avoine') && !ingredients.includes('sans gluten'))) {\n      dietaryProperties.glutenFree.recipes.push(recipe);\n    }\n    \n    // Recettes végétariennes\n    if (!ingredients.includes('viande') && \n        !ingredients.includes('poulet') && \n        !ingredients.includes('bœuf') && \n        !ingredients.includes('porc') &&\n        !ingredients.includes('jambon') &&\n        !ingredients.includes('bacon') &&\n        !ingredients.includes('saucisse')) {\n      dietaryProperties.vegetarian.recipes.push(recipe);\n      \n      // Vérification supplémentaire pour les recettes végétaliennes\n      if (!ingredients.includes('œuf') && \n          !ingredients.includes('lait') && \n          !ingredients.includes('fromage') && \n          !ingredients.includes('yaourt') &&\n          !ingredients.includes('beurre') &&\n          !ingredients.includes('crème')) {\n        dietaryProperties.vegan.recipes.push(recipe);\n      }\n    }\n    \n    // Recettes sans lactose\n    if (!ingredients.includes('lait') && \n        !ingredients.includes('fromage') && \n        !ingredients.includes('yaourt') && \n        !ingredients.includes('crème') &&\n        !ingredients.includes('beurre')) {\n      dietaryProperties.dairyFree.recipes.push(recipe);\n    }\n  }\n});\n\n/**\n * Moteur de recherche pour trouver des recettes par mots-clés\n * @param {string} query - Termes de recherche\n * @param {number} limit - Nombre maximum de résultats\n * @returns {Array} - Recettes correspondantes\n */\nconst search = (query, limit = 20) => {\n  if (!query || query.trim() === '') return allRecipes.slice(0, limit);\n  \n  const searchTerms = query.toLowerCase().split(' ');\n  const results = allRecipes.filter(recipe => {\n    const searchString = `${recipe.name.toLowerCase()} ${recipe.category?.toLowerCase() || ''} ${recipe.ingredients?.join(' ').toLowerCase() || ''}`;\n    \n    return searchTerms.some(term => searchString.includes(term));\n  });\n  \n  return results.slice(0, limit);\n};\n\n/**\n * Système de recommandation de recettes basé sur le profil utilisateur\n * @param {Object} userProfile - Profil de l'utilisateur\n * @param {number} limit - Nombre maximum de recettes à recommander\n * @returns {Array} - Recettes recommandées\n */\nconst recommend = (userProfile, limit = 10) => {\n  if (!userProfile) return allRecipes.slice(0, limit);\n  \n  // Algorithme simplifié de recommandation\n  let recommendedRecipes = [];\n  \n  // Recommandations basées sur l'objectif principal\n  if (userProfile.goal === 'endurance') {\n    recommendedRecipes = [...objectives.endurance.recipes];\n  } else if (userProfile.goal === 'weightLoss') {\n    recommendedRecipes = [...objectives.weightLoss.recipes];\n  } else if (userProfile.goal === 'performance') {\n    recommendedRecipes = [...objectives.performance.recipes];\n  } else if (userProfile.goal === 'recovery') {\n    recommendedRecipes = [...objectives.recovery.recipes];\n  }\n  \n  // Recommandations basées sur les restrictions alimentaires\n  if (userProfile.dietaryRestrictions) {\n    if (userProfile.dietaryRestrictions.includes('glutenFree')) {\n      recommendedRecipes = recommendedRecipes.filter(recipe => \n        dietaryProperties.glutenFree.recipes.some(r => r.id === recipe.id)\n      );\n    }\n    \n    if (userProfile.dietaryRestrictions.includes('vegetarian')) {\n      recommendedRecipes = recommendedRecipes.filter(recipe => \n        dietaryProperties.vegetarian.recipes.some(r => r.id === recipe.id)\n      );\n    }\n    \n    if (userProfile.dietaryRestrictions.includes('vegan')) {\n      recommendedRecipes = recommendedRecipes.filter(recipe => \n        dietaryProperties.vegan.recipes.some(r => r.id === recipe.id)\n      );\n    }\n    \n    if (userProfile.dietaryRestrictions.includes('dairyFree')) {\n      recommendedRecipes = recommendedRecipes.filter(recipe => \n        dietaryProperties.dairyFree.recipes.some(r => r.id === recipe.id)\n      );\n    }\n  }\n  \n  // Si le nombre de recettes recommandées est insuffisant,\n  // compléter avec d'autres recettes populaires\n  if (recommendedRecipes.length < limit) {\n    const additionalRecipes = allRecipes\n      .filter(recipe => !recommendedRecipes.some(r => r.id === recipe.id))\n      .slice(0, limit - recommendedRecipes.length);\n    \n    recommendedRecipes = [...recommendedRecipes, ...additionalRecipes];\n  }\n  \n  return recommendedRecipes.slice(0, limit);\n};\n\n/**\n * Récupération de recettes par catégorie\n * @param {string} categoryId - Identifiant de la catégorie\n * @param {number} limit - Nombre maximum de recettes à retourner\n * @returns {Array} - Recettes de la catégorie\n */\nconst getRecipesByCategory = (categoryId, limit = 50) => {\n  if (categories[categoryId]) {\n    return categories[categoryId].recipes.slice(0, limit);\n  }\n  return [];\n};\n\n/**\n * Récupération de recettes par objectif\n * @param {string} objectiveId - Identifiant de l'objectif\n * @param {number} limit - Nombre maximum de recettes à retourner\n * @returns {Array} - Recettes pour l'objectif spécifié\n */\nconst getRecipesByObjective = (objectiveId, limit = 50) => {\n  if (objectives[objectiveId]) {\n    return objectives[objectiveId].recipes.slice(0, limit);\n  }\n  return [];\n};\n\n/**\n * Récupération de recettes par propriété diététique\n * @param {string} propertyId - Identifiant de la propriété\n * @param {number} limit - Nombre maximum de recettes à retourner\n * @returns {Array} - Recettes correspondant à la propriété\n */\nconst getRecipesByDietaryProperty = (propertyId, limit = 50) => {\n  if (dietaryProperties[propertyId]) {\n    return dietaryProperties[propertyId].recipes.slice(0, limit);\n  }\n  return [];\n};\n\nexport default {\n  allRecipes,\n  categories,\n  objectives,\n  dietaryProperties,\n  search,\n  recommend,\n  getRecipesByCategory,\n  getRecipesByObjective,\n  getRecipesByDietaryProperty\n};\n","import React, { useState, useEffect } from 'react';\nimport { \n  Box, Typography, Grid, Paper, Card, CardContent, CardMedia, \n  CardActionArea, CardActions, Chip, TextField, InputAdornment, \n  CircularProgress, FormControl, InputLabel, Select, MenuItem, \n  Divider, Button, Dialog, DialogTitle, DialogContent, DialogActions, \n  IconButton, Tabs, Tab, Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, ListItem, ListItemIcon, ListItemText, Rating,\n  List, Tooltip, Avatar, Badge, Container, Alert\n} from '@mui/material';\nimport { \n  Search, FilterList, Favorite, FavoriteBorder, Print, \n  Restaurant, DirectionsBike, FitnessCenter, Whatshot, AccessTime,\n  Share, BookmarkBorder, Bookmark, Close, PlaylistAdd, Timer,\n  CheckCircle, ExpandMore, ExpandLess, PersonOutline, CheckCircleOutline\n} from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport { useAuth } from '../../contexts/AuthContext';\nimport recipesIndex from '../../data/recipesIndex';\nimport { Link } from 'react-router-dom';\n\n/**\n * Explorateur unifié de recettes adaptées aux cyclistes\n * Permet de consulter, rechercher, filtrer et organiser toutes les recettes disponibles\n * selon différents critères (moment de consommation, objectifs, propriétés diététiques)\n */\nconst NutritionRecipesExplorer = ({ userProfile }) => {\n  const theme = useTheme();\n  const { user } = useAuth();\n  \n  // États pour la gestion des recettes et des filtres\n  const [allRecipes, setAllRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  // États pour les dialogues et interactions utilisateur\n  const [openRecipeDialog, setOpenRecipeDialog] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [activeObjective, setActiveObjective] = useState('all');\n  const [activeDietaryProperty, setActiveDietaryProperty] = useState('all');\n  const [favorites, setFavorites] = useState([]);\n  const [mealPlanOpen, setMealPlanOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedMeal, setSelectedMeal] = useState('');\n  \n  // Filtres avancés\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n  const [advancedFilters, setAdvancedFilters] = useState({\n    difficulty: 'all',\n    prepTime: 'all',\n    cookTime: 'all',\n    calories: 'all'\n  });\n\n  // Options pour les jours et repas (pour l'ajout au plan de repas)\n  const dayOptions = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\n  const mealOptions = ['Petit-déjeuner', 'Collation matin', 'Déjeuner', 'Collation après-midi', 'Dîner'];\n  \n  // Récupération des recettes au chargement du composant\n  useEffect(() => {\n    const loadRecipes = async () => {\n      try {\n        setLoading(true);\n        // Utilisation de notre index centralisé des recettes\n        const recipes = recipesIndex.allRecipes;\n        setAllRecipes(recipes);\n        setFilteredRecipes(recipes);\n        \n        // Chargement des favoris (à implémenter avec un service backend)\n        if (user && user.id) {\n          // Simulation de récupération des favoris\n          // À remplacer par un appel API réel\n          const userFavorites = localStorage.getItem(`favorites_${user.id}`) || '[]';\n          setFavorites(JSON.parse(userFavorites));\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des recettes\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadRecipes();\n  }, [user]);\n  \n  // Mise à jour des recettes filtrées lorsque les filtres changent\n  useEffect(() => {\n    applyFilters();\n  }, [searchTerm, activeTab, activeCategory, activeObjective, activeDietaryProperty, advancedFilters]);\n  \n  /**\n   * Applique tous les filtres sélectionnés aux recettes\n   */\n  const applyFilters = () => {\n    let results = [...allRecipes];\n    \n    // Filtre par onglet (Toutes les recettes / Favoris)\n    if (activeTab === 1) {\n      results = results.filter(recipe => favorites.includes(recipe.id));\n    }\n    \n    // Filtre par terme de recherche\n    if (searchTerm.trim() !== '') {\n      const searchTermLower = searchTerm.toLowerCase();\n      results = results.filter(recipe => {\n        const nameMatch = recipe.name.toLowerCase().includes(searchTermLower);\n        const categoryMatch = recipe.category?.toLowerCase().includes(searchTermLower);\n        const ingredientsMatch = recipe.ingredients?.some(ingredient => \n          ingredient.toLowerCase().includes(searchTermLower)\n        );\n        \n        return nameMatch || categoryMatch || ingredientsMatch;\n      });\n    }\n    \n    // Filtre par catégorie (moment de la journée/effort)\n    if (activeCategory !== 'all') {\n      // Utiliser les catégories de recettes de l'index\n      results = recipesIndex.getRecipesByCategory(activeCategory);\n      \n      // Appliquer les autres filtres actifs si nécessaire\n      if (activeTab === 1) {\n        results = results.filter(recipe => favorites.includes(recipe.id));\n      }\n    }\n    \n    // Filtre par objectif\n    if (activeObjective !== 'all') {\n      // Utiliser les objectifs de l'index\n      results = recipesIndex.getRecipesByObjective(activeObjective);\n      \n      // Appliquer les autres filtres actifs\n      if (activeTab === 1) {\n        results = results.filter(recipe => favorites.includes(recipe.id));\n      }\n    }\n    \n    // Filtre par propriété diététique\n    if (activeDietaryProperty !== 'all') {\n      // Utiliser les propriétés diététiques de l'index\n      results = recipesIndex.getRecipesByDietaryProperty(activeDietaryProperty);\n      \n      // Appliquer les autres filtres actifs\n      if (activeTab === 1) {\n        results = results.filter(recipe => favorites.includes(recipe.id));\n      }\n    }\n    \n    // Filtres avancés\n    if (advancedFilters.difficulty !== 'all') {\n      results = results.filter(recipe => {\n        if (advancedFilters.difficulty === 'easy') return recipe.difficulty?.toLowerCase() === 'facile';\n        if (advancedFilters.difficulty === 'medium') return recipe.difficulty?.toLowerCase() === 'moyen';\n        if (advancedFilters.difficulty === 'hard') return recipe.difficulty?.toLowerCase() === 'complexe' || recipe.difficulty?.toLowerCase() === 'difficile';\n        return true;\n      });\n    }\n    \n    if (advancedFilters.prepTime !== 'all') {\n      results = results.filter(recipe => {\n        if (advancedFilters.prepTime === 'quick') return recipe.prepTime <= 15;\n        if (advancedFilters.prepTime === 'medium') return recipe.prepTime <= 30 && recipe.prepTime > 15;\n        if (advancedFilters.prepTime === 'long') return recipe.prepTime > 30;\n        return true;\n      });\n    }\n    \n    if (advancedFilters.cookTime !== 'all') {\n      results = results.filter(recipe => {\n        if (advancedFilters.cookTime === 'quick') return recipe.cookTime <= 15;\n        if (advancedFilters.cookTime === 'medium') return recipe.cookTime <= 30 && recipe.cookTime > 15;\n        if (advancedFilters.cookTime === 'long') return recipe.cookTime > 30;\n        return true;\n      });\n    }\n    \n    if (advancedFilters.calories !== 'all') {\n      results = results.filter(recipe => {\n        if (advancedFilters.calories === 'low') return recipe.nutritionalInfo?.calories <= 300;\n        if (advancedFilters.calories === 'medium') return recipe.nutritionalInfo?.calories <= 600 && recipe.nutritionalInfo?.calories > 300;\n        if (advancedFilters.calories === 'high') return recipe.nutritionalInfo?.calories > 600;\n        return true;\n      });\n    }\n    \n    setFilteredRecipes(results);\n  };\n\n  /**\n   * Gestion des changements de filtres\n   */\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'category') {\n      setActiveCategory(value);\n      // Réinitialiser les autres filtres principaux pour éviter les conflits\n      setActiveObjective('all');\n      setActiveDietaryProperty('all');\n    } else if (filterType === 'objective') {\n      setActiveObjective(value);\n      // Réinitialiser les autres filtres principaux\n      setActiveCategory('all');\n      setActiveDietaryProperty('all');\n    } else if (filterType === 'dietary') {\n      setActiveDietaryProperty(value);\n      // Réinitialiser les autres filtres principaux\n      setActiveCategory('all');\n      setActiveObjective('all');\n    } else if (filterType === 'advanced') {\n      setAdvancedFilters(prev => ({\n        ...prev,\n        [value.key]: value.value\n      }));\n    }\n  };\n  \n  /**\n   * Gestion du changement de terme de recherche\n   */\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n  \n  /**\n   * Ouvrir le dialogue détaillé d'une recette\n   */\n  const handleRecipeClick = (recipe) => {\n    setSelectedRecipe(recipe);\n    setOpenRecipeDialog(true);\n  };\n  \n  /**\n   * Fermer le dialogue détaillé\n   */\n  const handleCloseRecipeDialog = () => {\n    setOpenRecipeDialog(false);\n  };\n  \n  /**\n   * Changer d'onglet (Toutes les recettes / Favoris)\n   */\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  \n  /**\n   * Ajouter/Retirer une recette des favoris\n   */\n  const handleToggleFavorite = (recipeId) => {\n    let newFavorites = [...favorites];\n    \n    if (newFavorites.includes(recipeId)) {\n      // Retirer des favoris\n      newFavorites = newFavorites.filter(id => id !== recipeId);\n    } else {\n      // Ajouter aux favoris\n      newFavorites.push(recipeId);\n    }\n    \n    setFavorites(newFavorites);\n    \n    // Sauvegarder dans le localStorage (temporaire) ou via API\n    if (user && user.id) {\n      localStorage.setItem(`favorites_${user.id}`, JSON.stringify(newFavorites));\n    }\n  };\n  \n  /**\n   * Ouvrir le dialogue d'ajout au plan de repas\n   */\n  const handleAddToPlan = (recipe) => {\n    setSelectedRecipe(recipe);\n    setMealPlanOpen(true);\n  };\n  \n  /**\n   * Fermer le dialogue d'ajout au plan de repas\n   */\n  const handleCloseMealPlan = () => {\n    setMealPlanOpen(false);\n    setSelectedDay('');\n    setSelectedMeal('');\n  };\n  \n  /**\n   * Ajouter la recette au plan de repas\n   */\n  const handleAddToMealPlan = () => {\n    if (!selectedDay || !selectedMeal) return;\n    \n    // Logique d'ajout au plan de repas (à intégrer avec un service)\n    console.log(`Recette \"${selectedRecipe.name}\" ajoutée au ${selectedMeal} du ${selectedDay}`);\n    \n    // Fermer le dialogue\n    handleCloseMealPlan();\n    \n    // Afficher une notification de succès (à implémenter)\n  };\n  \n  /**\n   * Basculer l'affichage des filtres avancés\n   */\n  const toggleAdvancedFilters = () => {\n    setShowAdvancedFilters(!showAdvancedFilters);\n  };\n  \n  /**\n   * Imprimer une recette\n   */\n  const handlePrintRecipe = (recipe) => {\n    // Créer une fenêtre d'impression avec mise en forme adaptée\n    const printWindow = window.open('', '_blank');\n    \n    if (!printWindow) {\n      alert(\"Veuillez autoriser les popups pour imprimer la recette.\");\n      return;\n    }\n    \n    // Contenu HTML de la recette formatée pour impression\n    const printContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>${recipe.name}</title>\n        <meta charset=\"utf-8\">\n        <style>\n          body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n          }\n          h1 {\n            color: #1976d2;\n            border-bottom: 1px solid #ddd;\n            padding-bottom: 10px;\n          }\n          .recipe-info {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n            font-size: 14px;\n            color: #666;\n          }\n          .ingredients {\n            background-color: #f5f5f5;\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n          }\n          .instructions {\n            margin-bottom: 20px;\n          }\n          .instructions ol {\n            padding-left: 20px;\n          }\n          .nutrition {\n            border: 1px solid #ddd;\n            padding: 15px;\n            border-radius: 5px;\n          }\n          .nutrition-table {\n            width: 100%;\n            border-collapse: collapse;\n          }\n          .nutrition-table td {\n            padding: 5px;\n            border-bottom: 1px solid #eee;\n          }\n          .tips {\n            font-style: italic;\n            border-left: 3px solid #1976d2;\n            padding-left: 15px;\n            margin-top: 20px;\n          }\n          @media print {\n            body {\n              font-size: 12pt;\n            }\n            .no-print {\n              display: none;\n            }\n          }\n        </style>\n      </head>\n      <body>\n        <h1>${recipe.name}</h1>\n        \n        <div class=\"recipe-info\">\n          <span>Catégorie: ${recipe.category || 'Non spécifiée'}</span>\n          <span>Difficulté: ${recipe.difficulty || 'Non spécifiée'}</span>\n          <span>Préparation: ${recipe.prepTime || '0'} min</span>\n          <span>Cuisson: ${recipe.cookTime || '0'} min</span>\n          <span>Portions: ${recipe.servings || '1'}</span>\n        </div>\n        \n        <div class=\"ingredients\">\n          <h2>Ingrédients</h2>\n          <ul>\n            ${recipe.ingredients?.map(ingredient => `<li>${ingredient}</li>`).join('') || 'Aucun ingrédient spécifié'}\n          </ul>\n        </div>\n        \n        <div class=\"instructions\">\n          <h2>Instructions</h2>\n          <ol>\n            ${recipe.instructions?.map(step => `<li>${step}</li>`).join('') || 'Aucune instruction spécifiée'}\n          </ol>\n        </div>\n        \n        ${recipe.nutritionalInfo ? `\n          <div class=\"nutrition\">\n            <h2>Informations nutritionnelles</h2>\n            <p>Par portion</p>\n            <table class=\"nutrition-table\">\n              <tr>\n                <td><strong>Calories</strong></td>\n                <td>${recipe.nutritionalInfo.calories} kcal</td>\n              </tr>\n              ${recipe.nutritionalInfo.macros ? `\n                <tr>\n                  <td><strong>Glucides</strong></td>\n                  <td>${recipe.nutritionalInfo.macros.carbs}g</td>\n                </tr>\n                <tr>\n                  <td><strong>Protéines</strong></td>\n                  <td>${recipe.nutritionalInfo.macros.protein}g</td>\n                </tr>\n                <tr>\n                  <td><strong>Lipides</strong></td>\n                  <td>${recipe.nutritionalInfo.macros.fat}g</td>\n                </tr>\n                <tr>\n                  <td><strong>Fibres</strong></td>\n                  <td>${recipe.nutritionalInfo.macros.fiber}g</td>\n                </tr>\n              ` : ''}\n            </table>\n          </div>\n        ` : ''}\n        \n        ${recipe.tips ? `\n          <div class=\"tips\">\n            <h3>Conseils</h3>\n            <p>${recipe.tips}</p>\n          </div>\n        ` : ''}\n        \n        <div class=\"footer\">\n          <p>Recette proposée par Dashboard-Vélo - Grand Est Cyclisme</p>\n        </div>\n        \n        <script>\n          window.onload = function() {\n            window.print();\n          }\n        </script>\n      </body>\n      </html>\n    `;\n    \n    printWindow.document.open();\n    printWindow.document.write(printContent);\n    printWindow.document.close();\n  };\n\n  /**\n   * Générer des recommandations personnalisées pour l'utilisateur\n   */\n  const getPersonalizedRecommendations = () => {\n    if (!userProfile) return [];\n    \n    // Utiliser le moteur de recommandation de l'index de recettes\n    return recipesIndex.recommend(userProfile, 5);\n  };\n\n  /**\n   * Rendu des cartes de recettes\n   */\n  const renderRecipeCards = () => {\n    if (loading) {\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n    \n    if (filteredRecipes.length === 0) {\n      return (\n        <Alert severity=\"info\" sx={{ my: 2 }}>\n          Aucune recette ne correspond à vos critères. Essayez de modifier vos filtres.\n        </Alert>\n      );\n    }\n    \n    return (\n      <Grid container spacing={3}>\n        {/* Recommandations personnalisées si l'utilisateur est connecté et a un profil */}\n        {userProfile && activeTab === 0 && activeCategory === 'all' && \n         activeObjective === 'all' && activeDietaryProperty === 'all' && searchTerm === '' && (\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 2, mb: 1 }}>\n              Recommandations personnalisées\n            </Typography>\n            <Grid container spacing={2}>\n              {getPersonalizedRecommendations().map(recipe => (\n                <Grid item xs={12} sm={6} md={4} key={`rec-${recipe.id}`}>\n                  <Card \n                    sx={{ \n                      height: '100%', \n                      display: 'flex', \n                      flexDirection: 'column',\n                      boxShadow: 3,\n                      '&:hover': { boxShadow: 6 },\n                      border: `2px solid ${theme.palette.primary.main}`,\n                      position: 'relative'\n                    }}\n                  >\n                    <Badge \n                      badgeContent=\"Recommandé\" \n                      color=\"primary\"\n                      sx={{\n                        position: 'absolute',\n                        top: 10,\n                        right: 10,\n                        '& .MuiBadge-badge': {\n                          fontSize: '0.7rem',\n                          height: 'auto',\n                          padding: '0 8px'\n                        }\n                      }}\n                    />\n                    {renderRecipeCard(recipe)}\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n            <Divider sx={{ mt: 4, mb: 3 }} />\n          </Grid>\n        )}\n        \n        {/* Affichage de toutes les recettes filtrées */}\n        {filteredRecipes.map(recipe => (\n          <Grid item xs={12} sm={6} md={4} key={recipe.id}>\n            <Card \n              sx={{ \n                height: '100%', \n                display: 'flex', \n                flexDirection: 'column',\n                '&:hover': { boxShadow: 3 }\n              }}\n            >\n              {renderRecipeCard(recipe)}\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n  \n  /**\n   * Rendu d'une carte de recette individuelle\n   */\n  const renderRecipeCard = (recipe) => {\n    const isFavorite = favorites.includes(recipe.id);\n    \n    return (\n      <>\n        <CardActionArea \n          onClick={() => handleRecipeClick(recipe)}\n          sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'stretch' }}\n        >\n          <CardMedia\n            component=\"img\"\n            height=\"160\"\n            image={`/images/recipes/${recipe.image || 'default-recipe.jpg'}`}\n            alt={recipe.name}\n            sx={{ objectFit: 'cover' }}\n          />\n          <CardContent sx={{ flexGrow: 1 }}>\n            <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\n              {recipe.name}\n            </Typography>\n            \n            <Box sx={{ mb: 1.5 }}>\n              <Chip \n                size=\"small\" \n                label={recipe.category || 'Non catégorisé'} \n                sx={{ mr: 0.5, mb: 0.5 }}\n                color=\"primary\"\n                variant=\"outlined\"\n              />\n              <Chip \n                size=\"small\" \n                label={recipe.timing || 'Toute occasion'} \n                sx={{ mr: 0.5, mb: 0.5 }}\n                color=\"secondary\"\n                variant=\"outlined\"\n              />\n            </Box>\n            \n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <AccessTime sx={{ fontSize: 16, color: 'text.secondary', mr: 0.5 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {recipe.prepTime + (recipe.cookTime || 0)} min\n              </Typography>\n              <Box sx={{ mx: 1, height: 16, borderLeft: 1, borderColor: 'divider' }} />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {recipe.difficulty || 'Facile'}\n              </Typography>\n            </Box>\n            \n            {recipe.nutritionalInfo && (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                <Chip \n                  size=\"small\" \n                  label={`${recipe.nutritionalInfo.calories || '0'} kcal`} \n                  sx={{ height: 22, fontSize: '0.7rem' }}\n                />\n                {recipe.nutritionalInfo.macros && (\n                  <>\n                    <Chip \n                      size=\"small\" \n                      label={`Glucides: ${recipe.nutritionalInfo.macros.carbs || '0'}g`} \n                      sx={{ height: 22, fontSize: '0.7rem' }}\n                    />\n                    <Chip \n                      size=\"small\" \n                      label={`Protéines: ${recipe.nutritionalInfo.macros.protein || '0'}g`} \n                      sx={{ height: 22, fontSize: '0.7rem' }}\n                    />\n                  </>\n                )}\n              </Box>\n            )}\n          </CardContent>\n        </CardActionArea>\n        \n        <CardActions>\n          <IconButton \n            size=\"small\" \n            onClick={(e) => {\n              e.stopPropagation();\n              handleToggleFavorite(recipe.id);\n            }}\n            color={isFavorite ? 'error' : 'default'}\n          >\n            {isFavorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n          \n          <IconButton \n            size=\"small\"\n            onClick={(e) => {\n              e.stopPropagation();\n              handleAddToPlan(recipe);\n            }}\n          >\n            <PlaylistAdd />\n          </IconButton>\n          \n          <IconButton \n            size=\"small\"\n            onClick={(e) => {\n              e.stopPropagation();\n              handlePrintRecipe(recipe);\n            }}\n          >\n            <Print />\n          </IconButton>\n          \n          <Box sx={{ flexGrow: 1 }} />\n          \n          {userProfile && userProfile.preferences && userProfile.preferences.includes(recipe.id) && (\n            <Tooltip title=\"Recommandé pour votre profil\">\n              <CheckCircleOutline color=\"success\" />\n            </Tooltip>\n          )}\n        </CardActions>\n      </>\n    );\n  };\n  \n  /**\n   * Rendu du dialogue de recette détaillée\n   */\n  const renderRecipeDialog = () => {\n    if (!selectedRecipe) return null;\n    \n    const isFavorite = favorites.includes(selectedRecipe.id);\n    \n    return (\n      <Dialog\n        open={openRecipeDialog}\n        onClose={handleCloseRecipeDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle sx={{ pr: 6 }}>\n          {selectedRecipe.name}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleCloseRecipeDialog}\n            sx={{ position: 'absolute', right: 8, top: 8 }}\n          >\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        \n        <DialogContent dividers>\n          <Grid container spacing={3}>\n            {/* Image et informations générales */}\n            <Grid item xs={12} md={5}>\n              <Box sx={{ position: 'relative' }}>\n                <CardMedia\n                  component=\"img\"\n                  height=\"250\"\n                  image={`/images/recipes/${selectedRecipe.image || 'default-recipe.jpg'}`}\n                  alt={selectedRecipe.name}\n                  sx={{ borderRadius: 1, mb: 2 }}\n                />\n                <IconButton\n                  onClick={() => handleToggleFavorite(selectedRecipe.id)}\n                  sx={{ \n                    position: 'absolute', \n                    top: 8, \n                    right: 8,\n                    backgroundColor: 'rgba(255,255,255,0.7)',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255,255,255,0.9)'\n                    }\n                  }}\n                  color={isFavorite ? 'error' : 'default'}\n                >\n                  {isFavorite ? <Favorite /> : <FavoriteBorder />}\n                </IconButton>\n              </Box>\n              \n              <Paper variant=\"outlined\" sx={{ p: 2, mb: 2 }}>\n                <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\n                  Informations générales\n                </Typography>\n                \n                <List dense disablePadding>\n                  <ListItem disablePadding sx={{ py: 0.5 }}>\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <Restaurant fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Catégorie\" \n                      secondary={selectedRecipe.category || 'Non spécifié'} \n                    />\n                  </ListItem>\n                  <ListItem disablePadding sx={{ py: 0.5 }}>\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <DirectionsBike fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Moment de consommation\" \n                      secondary={selectedRecipe.timing || 'Flexible'} \n                    />\n                  </ListItem>\n                  <ListItem disablePadding sx={{ py: 0.5 }}>\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <AccessTime fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Temps de préparation\" \n                      secondary={`${selectedRecipe.prepTime || '0'} min`} \n                    />\n                  </ListItem>\n                  <ListItem disablePadding sx={{ py: 0.5 }}>\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <Timer fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Temps de cuisson\" \n                      secondary={`${selectedRecipe.cookTime || '0'} min`} \n                    />\n                  </ListItem>\n                  <ListItem disablePadding sx={{ py: 0.5 }}>\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <PersonOutline fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Portions\" \n                      secondary={selectedRecipe.servings || '1'} \n                    />\n                  </ListItem>\n                </List>\n              </Paper>\n              \n              {/* Informations nutritionnelles */}\n              {selectedRecipe.nutritionalInfo && (\n                <Paper variant=\"outlined\" sx={{ p: 2 }}>\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\n                    Valeurs nutritionnelles (par portion)\n                  </Typography>\n                  \n                  <TableContainer>\n                    <Table size=\"small\">\n                      <TableBody>\n                        <TableRow>\n                          <TableCell component=\"th\" scope=\"row\">Calories</TableCell>\n                          <TableCell align=\"right\">{selectedRecipe.nutritionalInfo.calories} kcal</TableCell>\n                        </TableRow>\n                        \n                        {selectedRecipe.nutritionalInfo.macros && (\n                          <>\n                            <TableRow>\n                              <TableCell component=\"th\" scope=\"row\">Glucides</TableCell>\n                              <TableCell align=\"right\">{selectedRecipe.nutritionalInfo.macros.carbs}g</TableCell>\n                            </TableRow>\n                            <TableRow>\n                              <TableCell component=\"th\" scope=\"row\">Protéines</TableCell>\n                              <TableCell align=\"right\">{selectedRecipe.nutritionalInfo.macros.protein}g</TableCell>\n                            </TableRow>\n                            <TableRow>\n                              <TableCell component=\"th\" scope=\"row\">Lipides</TableCell>\n                              <TableCell align=\"right\">{selectedRecipe.nutritionalInfo.macros.fat}g</TableCell>\n                            </TableRow>\n                            <TableRow>\n                              <TableCell component=\"th\" scope=\"row\">Fibres</TableCell>\n                              <TableCell align=\"right\">{selectedRecipe.nutritionalInfo.macros.fiber}g</TableCell>\n                            </TableRow>\n                          </>\n                        )}\n                        \n                        {selectedRecipe.nutritionalInfo.micros && (\n                          <>\n                            {Object.entries(selectedRecipe.nutritionalInfo.micros).map(([key, value]) => (\n                              <TableRow key={key}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                  {key.charAt(0).toUpperCase() + key.slice(1)}\n                                </TableCell>\n                                <TableCell align=\"right\">{value} mg</TableCell>\n                              </TableRow>\n                            ))}\n                          </>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Paper>\n              )}\n            </Grid>\n            \n            {/* Ingrédients et instructions */}\n            <Grid item xs={12} md={7}>\n              <Paper variant=\"outlined\" sx={{ p: 2, mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\n                  Ingrédients\n                </Typography>\n                \n                <List dense>\n                  {selectedRecipe.ingredients?.map((ingredient, index) => (\n                    <ListItem key={index} sx={{ py: 0.5 }}>\n                      <ListItemIcon sx={{ minWidth: 32 }}>\n                        <CheckCircle fontSize=\"small\" color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText primary={ingredient} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n              \n              <Paper variant=\"outlined\" sx={{ p: 2, mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\n                  Instructions\n                </Typography>\n                \n                <List>\n                  {selectedRecipe.instructions?.map((step, index) => (\n                    <ListItem key={index} alignItems=\"flex-start\" sx={{ py: 1 }}>\n                      <ListItemIcon>\n                        <Avatar\n                          sx={{\n                            width: 28,\n                            height: 28,\n                            bgcolor: 'primary.main',\n                            fontSize: '0.875rem'\n                          }}\n                        >\n                          {index + 1}\n                        </Avatar>\n                      </ListItemIcon>\n                      <ListItemText primary={step} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n              \n              {/* Bénéfices et conseils */}\n              {selectedRecipe.benefits && selectedRecipe.benefits.length > 0 && (\n                <Paper variant=\"outlined\" sx={{ p: 2, mb: 3, bgcolor: 'secondary.light' }}>\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\n                    Bénéfices pour les cyclistes\n                  </Typography>\n                  \n                  <List dense>\n                    {selectedRecipe.benefits.map((benefit, index) => (\n                      <ListItem key={index} sx={{ py: 0.5 }}>\n                        <ListItemIcon sx={{ minWidth: 32 }}>\n                          <CheckCircleOutline fontSize=\"small\" color=\"secondary\" />\n                        </ListItemIcon>\n                        <ListItemText primary={benefit} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              )}\n              \n              {selectedRecipe.tips && (\n                <Paper variant=\"outlined\" sx={{ p: 2, borderColor: 'warning.main' }}>\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\n                    Conseils du coach nutrition\n                  </Typography>\n                  <Typography variant=\"body2\">{selectedRecipe.tips}</Typography>\n                </Paper>\n              )}\n            </Grid>\n          </Grid>\n        </DialogContent>\n        \n        <DialogActions>\n          <Button \n            onClick={() => handleAddToPlan(selectedRecipe)}\n            startIcon={<PlaylistAdd />}\n          >\n            Ajouter au plan\n          </Button>\n          <Button \n            onClick={() => handlePrintRecipe(selectedRecipe)}\n            startIcon={<Print />}\n          >\n            Imprimer\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleCloseRecipeDialog}\n          >\n            Fermer\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n  \n  /**\n   * Rendu du dialogue d'ajout au plan de repas\n   */\n  const renderMealPlanDialog = () => {\n    return (\n      <Dialog\n        open={mealPlanOpen}\n        onClose={handleCloseMealPlan}\n        maxWidth=\"xs\"\n        fullWidth\n      >\n        <DialogTitle>\n          Ajouter au plan de repas\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleCloseMealPlan}\n            sx={{ position: 'absolute', right: 8, top: 8 }}\n          >\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        \n        <DialogContent>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            {selectedRecipe?.name}\n          </Typography>\n          \n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Jour</InputLabel>\n            <Select\n              value={selectedDay}\n              onChange={(e) => setSelectedDay(e.target.value)}\n              label=\"Jour\"\n            >\n              {dayOptions.map(day => (\n                <MenuItem key={day} value={day}>{day}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Repas</InputLabel>\n            <Select\n              value={selectedMeal}\n              onChange={(e) => setSelectedMeal(e.target.value)}\n              label=\"Repas\"\n            >\n              {mealOptions.map(meal => (\n                <MenuItem key={meal} value={meal}>{meal}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        \n        <DialogActions>\n          <Button onClick={handleCloseMealPlan}>\n            Annuler\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleAddToMealPlan}\n            disabled={!selectedDay || !selectedMeal}\n          >\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  return (\n    <Box>\n      <Paper elevation={0} sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          Explorateur de recettes\n        </Typography>\n        <Typography variant=\"body1\" paragraph color=\"text.secondary\">\n          Découvrez des recettes spécialement conçues pour les cyclistes, adaptées à vos besoins\n          nutritionnels selon l'intensité et la durée de vos sorties.\n        </Typography>\n        \n        {/* Barre de recherche */}\n        <TextField\n          fullWidth\n          placeholder=\"Rechercher une recette, un ingrédient...\"\n          variant=\"outlined\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n          sx={{ mb: 3 }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            )\n          }}\n        />\n        \n        {/* Onglets principaux */}\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}\n        >\n          <Tab label=\"Toutes les recettes\" />\n          <Tab label=\"Mes favoris\" />\n        </Tabs>\n        \n        {/* Filtres principaux */}\n        <Grid container spacing={2} sx={{ mb: 3 }}>\n          <Grid item xs={12} sm={4}>\n            <FormControl fullWidth>\n              <InputLabel>Catégorie</InputLabel>\n              <Select\n                value={activeCategory}\n                onChange={(e) => handleFilterChange('category', e.target.value)}\n                label=\"Catégorie\"\n              >\n                <MenuItem value=\"all\">Toutes les catégories</MenuItem>\n                {Object.values(recipesIndex.categories).map(category => (\n                  <MenuItem key={category.id} value={category.id}>\n                    {category.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <FormControl fullWidth>\n              <InputLabel>Objectif</InputLabel>\n              <Select\n                value={activeObjective}\n                onChange={(e) => handleFilterChange('objective', e.target.value)}\n                label=\"Objectif\"\n              >\n                <MenuItem value=\"all\">Tous les objectifs</MenuItem>\n                {Object.values(recipesIndex.objectives).map(objective => (\n                  <MenuItem key={objective.id} value={objective.id}>\n                    {objective.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <FormControl fullWidth>\n              <InputLabel>Propriétés diététiques</InputLabel>\n              <Select\n                value={activeDietaryProperty}\n                onChange={(e) => handleFilterChange('dietary', e.target.value)}\n                label=\"Propriétés diététiques\"\n              >\n                <MenuItem value=\"all\">Toutes les propriétés</MenuItem>\n                {Object.values(recipesIndex.dietaryProperties).map(property => (\n                  <MenuItem key={property.id} value={property.id}>\n                    {property.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        \n        {/* Bouton de filtres avancés */}\n        <Box sx={{ mb: 3 }}>\n          <Button\n            startIcon={showAdvancedFilters ? <ExpandLess /> : <ExpandMore />}\n            onClick={toggleAdvancedFilters}\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            Filtres avancés\n          </Button>\n        </Box>\n        \n        {/* Filtres avancés */}\n        {showAdvancedFilters && (\n          <Grid container spacing={2} sx={{ mb: 3 }}>\n            <Grid item xs={12} sm={3}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Difficulté</InputLabel>\n                <Select\n                  value={advancedFilters.difficulty}\n                  onChange={(e) => handleFilterChange('advanced', { key: 'difficulty', value: e.target.value })}\n                  label=\"Difficulté\"\n                >\n                  <MenuItem value=\"all\">Toutes</MenuItem>\n                  <MenuItem value=\"easy\">Facile</MenuItem>\n                  <MenuItem value=\"medium\">Moyenne</MenuItem>\n                  <MenuItem value=\"hard\">Complexe</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Temps de préparation</InputLabel>\n                <Select\n                  value={advancedFilters.prepTime}\n                  onChange={(e) => handleFilterChange('advanced', { key: 'prepTime', value: e.target.value })}\n                  label=\"Temps de préparation\"\n                >\n                  <MenuItem value=\"all\">Tous</MenuItem>\n                  <MenuItem value=\"quick\">Rapide (&lt; 15min)</MenuItem>\n                  <MenuItem value=\"medium\">Moyen (&lt; 30min)</MenuItem>\n                  <MenuItem value=\"long\">Long (&gt; 30min)</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Temps de cuisson</InputLabel>\n                <Select\n                  value={advancedFilters.cookTime}\n                  onChange={(e) => handleFilterChange('advanced', { key: 'cookTime', value: e.target.value })}\n                  label=\"Temps de cuisson\"\n                >\n                  <MenuItem value=\"all\">Tous</MenuItem>\n                  <MenuItem value=\"quick\">Rapide (&lt; 15min)</MenuItem>\n                  <MenuItem value=\"medium\">Moyen (&lt; 30min)</MenuItem>\n                  <MenuItem value=\"long\">Long (&gt; 30min)</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Calories</InputLabel>\n                <Select\n                  value={advancedFilters.calories}\n                  onChange={(e) => handleFilterChange('advanced', { key: 'calories', value: e.target.value })}\n                  label=\"Calories\"\n                >\n                  <MenuItem value=\"all\">Toutes</MenuItem>\n                  <MenuItem value=\"low\">Faible (&lt; 300 kcal)</MenuItem>\n                  <MenuItem value=\"medium\">Moyen (&lt; 600 kcal)</MenuItem>\n                  <MenuItem value=\"high\">Élevé (&gt; 600 kcal)</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        )}\n        \n        {/* Statistiques de filtrage */}\n        <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {filteredRecipes.length} recette{filteredRecipes.length > 1 ? 's' : ''} trouvée{filteredRecipes.length > 1 ? 's' : ''}\n          </Typography>\n        </Box>\n        \n        {/* Affichage des recettes */}\n        {renderRecipeCards()}\n      </Paper>\n      \n      {/* Dialogues */}\n      {renderRecipeDialog()}\n      {renderMealPlanDialog()}\n    </Box>\n  );\n};\n\nexport default NutritionRecipesExplorer;\n"],"names":["preRide","id","name","category","timing","prepTime","cookTime","difficulty","servings","ingredients","instructions","nutritionalInfo","calories","macros","carbs","protein","fat","fiber","micros","sodium","potassium","calcium","iron","benefits","tips","image","duringRide","magnesium","postRide","omega3","colSpecific","colRecommendations","categories","description","icon","recipes","nutritionRecipes","objectives","endurance","performance","weightLoss","recovery","dietaryProperties","glutenFree","vegetarian","vegan","dairyFree","highProtein","allRecipes","forEach","recipe","push","join","toLowerCase","includes","search","query","limit","arguments","length","undefined","trim","slice","searchTerms","split","filter","_recipe$category","_recipe$ingredients","searchString","some","term","recommend","userProfile","recommendedRecipes","goal","dietaryRestrictions","r","additionalRecipes","getRecipesByCategory","categoryId","getRecipesByObjective","objectiveId","getRecipesByDietaryProperty","propertyId","_ref","theme","useTheme","user","useAuth","setAllRecipes","useState","filteredRecipes","setFilteredRecipes","selectedRecipe","setSelectedRecipe","loading","setLoading","searchTerm","setSearchTerm","openRecipeDialog","setOpenRecipeDialog","activeTab","setActiveTab","activeCategory","setActiveCategory","activeObjective","setActiveObjective","activeDietaryProperty","setActiveDietaryProperty","favorites","setFavorites","mealPlanOpen","setMealPlanOpen","selectedDay","setSelectedDay","selectedMeal","setSelectedMeal","showAdvancedFilters","setShowAdvancedFilters","advancedFilters","setAdvancedFilters","dayOptions","mealOptions","useEffect","async","recipesIndex","userFavorites","localStorage","getItem","JSON","parse","error","console","loadRecipes","applyFilters","results","searchTermLower","nameMatch","categoryMatch","ingredientsMatch","ingredient","_recipe$difficulty","_recipe$difficulty2","_recipe$difficulty3","_recipe$difficulty4","_recipe$nutritionalIn","_recipe$nutritionalIn2","_recipe$nutritionalIn3","_recipe$nutritionalIn4","handleFilterChange","filterType","value","prev","key","handleCloseRecipeDialog","handleToggleFavorite","recipeId","newFavorites","setItem","stringify","handleAddToPlan","handleCloseMealPlan","handleAddToMealPlan","log","handlePrintRecipe","_recipe$ingredients2","_recipe$instructions","printWindow","window","open","alert","printContent","map","step","document","write","close","renderRecipeCard","isFavorite","_jsxs","_Fragment","children","CardActionArea","onClick","handleRecipeClick","sx","flexGrow","display","flexDirection","alignItems","_jsx","CardMedia","component","height","alt","objectFit","CardContent","Typography","gutterBottom","variant","noWrap","Box","mb","Chip","size","label","mr","color","AccessTime","fontSize","mx","borderLeft","borderColor","flexWrap","gap","mt","CardActions","IconButton","e","stopPropagation","Favorite","FavoriteBorder","PlaylistAdd","Print","preferences","Tooltip","title","CheckCircleOutline","Paper","elevation","p","paragraph","TextField","fullWidth","placeholder","onChange","event","target","InputProps","startAdornment","InputAdornment","position","Search","Tabs","handleTabChange","newValue","indicatorColor","textColor","borderBottom","Tab","Grid","container","spacing","item","xs","sm","FormControl","InputLabel","Select","MenuItem","Object","values","objective","property","Button","startIcon","ExpandLess","ExpandMore","toggleAdvancedFilters","justifyContent","my","CircularProgress","Alert","severity","md","Card","boxShadow","border","palette","primary","main","Badge","badgeContent","top","right","padding","Divider","renderRecipeDialog","_selectedRecipe$ingre","_selectedRecipe$instr","Dialog","onClose","maxWidth","DialogTitle","pr","Close","DialogContent","dividers","borderRadius","backgroundColor","fontWeight","List","dense","disablePadding","ListItem","py","ListItemIcon","minWidth","Restaurant","ListItemText","secondary","DirectionsBike","Timer","PersonOutline","TableContainer","Table","TableBody","TableRow","TableCell","scope","align","entries","_ref2","charAt","toUpperCase","index","CheckCircle","Avatar","width","bgcolor","benefit","DialogActions","margin","day","meal","disabled"],"sourceRoot":""}