{"version":3,"file":"static/js/9438.575a7c5f.chunk.js","mappings":"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","sources":["components/community/CommunityActivityFeed.js","pages/CommunityDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  Box, \n  Typography, \n  Avatar, \n  Paper, \n  Divider, \n  Button, \n  IconButton, \n  Skeleton,\n  Card, \n  CardHeader, \n  CardContent, \n  CardActions, \n  CardMedia,\n  Chip,\n  Tooltip,\n  CircularProgress,\n  Link,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNotification } from '../common/NotificationSystem';\nimport axios from 'axios';\nimport {\n  ThumbUp, \n  Comment, \n  Share, \n  MoreVert, \n  Favorite, \n  DirectionsBike, \n  Public,\n  EmojiEvents,\n  AccessTime,\n  Send\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { formatDistance, format, parseISO } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\n// Composant de carte d'activité stylisée\nconst ActivityCard = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n  transition: 'transform 0.2s ease',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: theme.shadows[4]\n  }\n}));\n\n// Animation d'entrée pour les cartes d'activité\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: (i) => ({\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: i * 0.1,\n      duration: 0.3\n    }\n  })\n};\n\n/**\n * Flux d'activité pour la section Community\n * Affiche les activités récentes des membres de la communauté\n */\nconst CommunityActivityFeed = ({ limit = 10, filter = 'all' }) => {\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [commentText, setCommentText] = useState('');\n  const [commentDialogOpen, setCommentDialogOpen] = useState(false);\n  const [currentActivityId, setCurrentActivityId] = useState(null);\n  const [commentLoading, setCommentLoading] = useState(false);\n  const { user, token } = useAuth();\n  const { notify } = useNotification();\n\n  // Configuration des en-têtes d'authentification pour les requêtes API\n  const authConfig = useCallback(() => {\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n  }, [token]);\n\n  // Récupérer les activités depuis l'API\n  const fetchActivities = useCallback(async (pageNum = 1, replace = true) => {\n    try {\n      setLoading(true);\n      \n      const response = await axios.get(`/api/community/activity-feed`, {\n        ...authConfig(),\n        params: {\n          limit,\n          page: pageNum,\n          filter\n        }\n      });\n      \n      // Si la réponse est vide ou a moins d'éléments que la limite, il n'y a plus de données\n      if (!response.data || response.data.length === 0 || response.data.length < limit) {\n        setHasMore(false);\n      }\n      \n      // Transformer les données pour correspondre à la structure attendue par le composant\n      const formattedActivities = response.data.map(activity => {\n        let formattedActivity = {\n          id: activity._id,\n          type: activity.type,\n          user: {\n            id: activity.userId._id,\n            name: `${activity.userId.firstName} ${activity.userId.lastName}`,\n            avatar: activity.userId.profilePicture || 'https://via.placeholder.com/40'\n          },\n          title: '',\n          content: '',\n          likes: activity.kudosCount || 0,\n          comments: activity.commentCount || 0,\n          hasLiked: activity.hasGivenKudos || false,\n          timestamp: activity.createdAt\n        };\n        \n        // Adapter le formatage en fonction du type d'activité\n        switch(activity.type) {\n          case 'ride':\n            formattedActivity.title = activity.data.title || 'Nouvelle sortie vélo';\n            formattedActivity.content = activity.data.description || '';\n            formattedActivity.stats = {\n              distance: activity.data.distance || 0,\n              elevation: activity.data.elevation || 0,\n              duration: activity.data.duration ? `${Math.floor(activity.data.duration / 60)}h ${activity.data.duration % 60}m` : '0h 0m',\n              power: activity.data.power || 0\n            };\n            formattedActivity.images = activity.data.images || [];\n            formattedActivity.location = activity.data.location || '';\n            break;\n            \n          case 'comment':\n            formattedActivity.title = 'A commenté une activité';\n            formattedActivity.content = activity.data.comment || '';\n            formattedActivity.targetActivity = activity.data.activityId;\n            break;\n            \n          case 'event_join':\n            formattedActivity.title = 'Participe à un événement';\n            formattedActivity.event = {\n              id: activity.data.eventId,\n              name: activity.data.eventName || 'Événement',\n              date: activity.data.eventDate,\n              location: activity.data.eventLocation || '',\n              distance: activity.data.eventDistance || 0,\n              participants: activity.data.participantCount || 0\n            };\n            break;\n            \n          case 'achievement':\n            formattedActivity.title = 'A obtenu un nouvel accomplissement';\n            formattedActivity.achievement = {\n              name: activity.data.achievementName || 'Accomplissement',\n              improvement: activity.data.improvement || '',\n              position: activity.data.position || ''\n            };\n            break;\n            \n          case 'challenge_completion':\n            formattedActivity.title = 'A terminé un défi';\n            formattedActivity.challenge = {\n              name: activity.data.challengeName || 'Défi',\n              completed: true,\n              totalDistance: activity.data.totalDistance || 0,\n              totalElevation: activity.data.totalElevation || 0\n            };\n            break;\n            \n          case 'follow':\n            formattedActivity.title = 'Suit un nouveau cycliste';\n            formattedActivity.followedUser = {\n              id: activity.data.followedUserId,\n              name: activity.data.followedUserName || 'Cycliste'\n            };\n            break;\n            \n          case 'kudos':\n            formattedActivity.title = 'A aimé une activité';\n            formattedActivity.targetActivity = activity.data.activityId;\n            break;\n            \n          default:\n            formattedActivity.title = 'Nouvelle activité';\n            formattedActivity.content = '';\n        }\n        \n        return formattedActivity;\n      });\n      \n      // Mettre à jour l'état avec les nouvelles activités\n      if (replace) {\n        setActivities(formattedActivities);\n      } else {\n        setActivities(prev => [...prev, ...formattedActivities]);\n      }\n      \n      setPage(pageNum);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des activités:', error);\n      notify({\n        type: 'error',\n        message: 'Impossible de charger les activités. Veuillez réessayer.'\n      });\n      setLoading(false);\n    }\n  }, [authConfig, limit, filter, notify]);\n\n  // Charger les activités lors du premier rendu\n  useEffect(() => {\n    if (user && token) {\n      fetchActivities(1, true);\n    }\n  }, [fetchActivities, user, token, filter]);\n\n  // Gérer le chargement de plus d'activités\n  const handleLoadMore = async () => {\n    if (!loading && hasMore) {\n      await fetchActivities(page + 1, false);\n    }\n  };\n\n  // Gérer les likes (kudos)\n  const handleLike = async (activityId) => {\n    try {\n      const activity = activities.find(a => a.id === activityId);\n      if (!activity) return;\n      \n      const isLiked = activity.hasLiked;\n      \n      // Optimistic update\n      setActivities(prevActivities => \n        prevActivities.map(a => \n          a.id === activityId\n            ? { \n                ...a, \n                hasLiked: !isLiked, \n                likes: isLiked ? a.likes - 1 : a.likes + 1 \n              }\n            : a\n        )\n      );\n      \n      // Envoyer la requête à l'API\n      if (isLiked) {\n        await axios.delete(`/api/community/activity/${activityId}/kudos`, authConfig());\n      } else {\n        await axios.post(`/api/community/activity/${activityId}/kudos`, {}, authConfig());\n      }\n    } catch (error) {\n      console.error('Erreur lors de la gestion du like:', error);\n      notify({\n        type: 'error',\n        message: 'Une erreur est survenue. Veuillez réessayer.'\n      });\n      \n      // Revenir à l'état précédent en cas d'erreur\n      fetchActivities(page, true);\n    }\n  };\n  \n  // Ouvrir la boîte de dialogue de commentaire\n  const handleOpenCommentDialog = (activityId) => {\n    setCurrentActivityId(activityId);\n    setCommentText('');\n    setCommentDialogOpen(true);\n  };\n  \n  // Fermer la boîte de dialogue de commentaire\n  const handleCloseCommentDialog = () => {\n    setCommentDialogOpen(false);\n    setCurrentActivityId(null);\n    setCommentText('');\n  };\n  \n  // Envoyer un commentaire\n  const handleSubmitComment = async () => {\n    if (!commentText.trim() || !currentActivityId) return;\n    \n    try {\n      setCommentLoading(true);\n      \n      await axios.post(`/api/community/activity/${currentActivityId}/comment`, {\n        content: commentText.trim()\n      }, authConfig());\n      \n      // Mettre à jour le compteur de commentaires\n      setActivities(prevActivities => \n        prevActivities.map(a => \n          a.id === currentActivityId\n            ? { ...a, comments: a.comments + 1 }\n            : a\n        )\n      );\n      \n      notify({\n        type: 'success',\n        message: 'Commentaire ajouté avec succès'\n      });\n      \n      handleCloseCommentDialog();\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du commentaire:', error);\n      notify({\n        type: 'error',\n        message: 'Impossible d\\'ajouter le commentaire. Veuillez réessayer.'\n      });\n    } finally {\n      setCommentLoading(false);\n    }\n  };\n\n  // Formater la date relative\n  const formatRelativeTime = (dateString) => {\n    if (!dateString) return '';\n    \n    try {\n      const date = typeof dateString === 'string' ? parseISO(dateString) : new Date(dateString);\n      return formatDistance(date, new Date(), { \n        addSuffix: true,\n        locale: fr \n      });\n    } catch (error) {\n      console.error('Erreur de formatage de date:', error);\n      return '';\n    }\n  };\n\n  return (\n    <Box>\n      {loading && activities.length === 0 ? (\n        // Afficher des skeletons pendant le chargement initial\n        <Box>\n          {Array.from(new Array(3)).map((_, index) => (\n            <Paper key={index} sx={{ p: 2, mb: 2 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Skeleton variant=\"circular\" width={40} height={40} />\n                <Box sx={{ ml: 2 }}>\n                  <Skeleton variant=\"text\" width={120} />\n                  <Skeleton variant=\"text\" width={80} />\n                </Box>\n              </Box>\n              <Skeleton variant=\"text\" />\n              <Skeleton variant=\"text\" />\n              <Skeleton variant=\"rectangular\" height={200} sx={{ my: 2 }} />\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                <Skeleton variant=\"text\" width={60} />\n                <Skeleton variant=\"text\" width={60} />\n                <Skeleton variant=\"text\" width={60} />\n              </Box>\n            </Paper>\n          ))}\n        </Box>\n      ) : (\n        <Box>\n          {activities.length === 0 ? (\n            // Message si aucune activité\n            <Paper sx={{ p: 3, textAlign: 'center' }}>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Aucune activité à afficher pour le moment\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                Suivez plus de cyclistes ou rejoignez des défis pour voir leur activité ici.\n              </Typography>\n            </Paper>\n          ) : (\n            // Affichage des activités\n            <Box>\n              {activities.map((activity, index) => (\n                <Box \n                  component={motion.div}\n                  key={activity.id}\n                  variants={cardVariants}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  custom={index}\n                >\n                  <ActivityCard>\n                    <CardHeader\n                      avatar={\n                        <Avatar src={activity.user.avatar} alt={activity.user.name}>\n                          {activity.user.name.charAt(0)}\n                        </Avatar>\n                      }\n                      action={\n                        <IconButton aria-label=\"settings\">\n                          <MoreVert />\n                        </IconButton>\n                      }\n                      title={\n                        <Typography variant=\"subtitle1\" component=\"span\">\n                          {activity.user.name}\n                        </Typography>\n                      }\n                      subheader={\n                        <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                          {activity.type === 'ride' && <DirectionsBike fontSize=\"small\" color=\"primary\" sx={{ mr: 0.5 }} />}\n                          {activity.type === 'achievement' && <EmojiEvents fontSize=\"small\" color=\"secondary\" sx={{ mr: 0.5 }} />}\n                          {activity.type === 'event_join' && <Public fontSize=\"small\" color=\"info\" sx={{ mr: 0.5 }} />}\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {activity.title} • {formatRelativeTime(activity.timestamp)}\n                          </Typography>\n                        </Box>\n                      }\n                    />\n\n                    <CardContent sx={{ py: 1 }}>\n                      {activity.content && (\n                        <Typography variant=\"body1\" component=\"p\" sx={{ mb: 2 }}>\n                          {activity.content}\n                        </Typography>\n                      )}\n\n                      {/* Stats pour les sorties vélo */}\n                      {activity.type === 'ride' && activity.stats && (\n                        <Box sx={{ \n                          display: 'flex', \n                          flexWrap: 'wrap', \n                          gap: 1,\n                          my: 2\n                        }}>\n                          <Chip \n                            icon={<DirectionsBike />} \n                            label={`${activity.stats.distance} km`} \n                            size=\"small\" \n                            color=\"primary\" \n                            variant=\"outlined\" \n                          />\n                          <Chip \n                            icon={<AccessTime />} \n                            label={activity.stats.duration} \n                            size=\"small\" \n                            color=\"primary\" \n                            variant=\"outlined\" \n                          />\n                          <Chip \n                            label={`${activity.stats.elevation} m D+`} \n                            size=\"small\" \n                            color=\"primary\" \n                            variant=\"outlined\" \n                          />\n                          {activity.stats.power > 0 && (\n                            <Chip \n                              label={`${activity.stats.power} W`} \n                              size=\"small\" \n                              color=\"primary\" \n                              variant=\"outlined\" \n                            />\n                          )}\n                          {activity.location && (\n                            <Chip \n                              icon={<Public />} \n                              label={activity.location} \n                              size=\"small\" \n                              color=\"secondary\" \n                              variant=\"outlined\" \n                            />\n                          )}\n                        </Box>\n                      )}\n\n                      {/* Infos pour les accomplissements */}\n                      {activity.type === 'achievement' && activity.achievement && (\n                        <Box sx={{ \n                          p: 2, \n                          bgcolor: 'warning.light', \n                          borderRadius: 1,\n                          mb: 2,\n                          border: 1,\n                          borderColor: 'warning.main'\n                        }}>\n                          <Typography variant=\"subtitle2\" color=\"warning.dark\">\n                            {activity.achievement.name}\n                          </Typography>\n                          {activity.achievement.improvement && (\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              Amélioration: {activity.achievement.improvement}\n                            </Typography>\n                          )}\n                          {activity.achievement.position && (\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              Classement: {activity.achievement.position}\n                            </Typography>\n                          )}\n                        </Box>\n                      )}\n\n                      {/* Infos pour les événements */}\n                      {activity.type === 'event_join' && activity.event && (\n                        <Box sx={{ \n                          p: 2, \n                          bgcolor: 'info.light', \n                          borderRadius: 1,\n                          mb: 2\n                        }}>\n                          <Typography variant=\"subtitle2\" color=\"info.dark\">\n                            {activity.event.name}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {new Date(activity.event.date).toLocaleDateString('fr-FR', { \n                              weekday: 'long', \n                              year: 'numeric', \n                              month: 'long', \n                              day: 'numeric' \n                            })}\n                            {' • '}\n                            {new Date(activity.event.date).toLocaleTimeString('fr-FR', { \n                              hour: '2-digit', \n                              minute: '2-digit' \n                            })}\n                          </Typography>\n                          <Typography variant=\"body2\">\n                            {activity.event.location} • {activity.event.distance} km • {activity.event.participants} participants\n                          </Typography>\n                          <Button \n                            variant=\"contained\" \n                            size=\"small\" \n                            sx={{ \n                              mt: 1, \n                              bgcolor: 'primary.dark',\n                              '&:hover': {\n                                bgcolor: 'primary.main'\n                              }\n                            }}\n                          >\n                            S'inscrire\n                          </Button>\n                        </Box>\n                      )}\n\n                      {activity.type === 'challenge_completion' && activity.challenge && (\n                        <Box sx={{ \n                          p: 2, \n                          bgcolor: 'secondary.light', \n                          color: 'secondary.contrastText',\n                          borderRadius: 1,\n                          mb: 2\n                        }}>\n                          <Typography variant=\"subtitle2\">\n                            {activity.challenge.name} {activity.challenge.completed ? '✓' : ''}\n                          </Typography>\n                          <Typography variant=\"body2\">\n                            {activity.challenge.totalDistance} km • {activity.challenge.totalElevation} m D+\n                          </Typography>\n                        </Box>\n                      )}\n                    </CardContent>\n\n                    {/* Affichage des images */}\n                    {activity.images && activity.images.length > 0 && (\n                      <CardMedia\n                        component=\"img\"\n                        height=\"240\"\n                        image={activity.images[0]}\n                        alt={activity.title}\n                        sx={{ objectFit: 'cover' }}\n                      />\n                    )}\n\n                    <CardActions disableSpacing>\n                      <Tooltip title={activity.hasLiked ? \"Je n'aime plus\" : \"J'aime\"}>\n                        <IconButton \n                          aria-label=\"like\" \n                          onClick={() => handleLike(activity.id)}\n                          color={activity.hasLiked ? \"primary\" : \"default\"}\n                        >\n                          <ThumbUp />\n                        </IconButton>\n                      </Tooltip>\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mr: 2 }}>\n                        {activity.likes}\n                      </Typography>\n                      \n                      <Tooltip title=\"Commenter\">\n                        <IconButton \n                          aria-label=\"comment\"\n                          onClick={() => handleOpenCommentDialog(activity.id)}\n                        >\n                          <Comment />\n                        </IconButton>\n                      </Tooltip>\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mr: 2 }}>\n                        {activity.comments}\n                      </Typography>\n                      \n                      <Tooltip title=\"Partager\">\n                        <IconButton aria-label=\"share\">\n                          <Share />\n                        </IconButton>\n                      </Tooltip>\n                    </CardActions>\n                  </ActivityCard>\n                </Box>\n              ))}\n\n              {/* Bouton pour charger plus d'activités */}\n              {hasMore && (\n                <Box display=\"flex\" justifyContent=\"center\" mt={2} mb={4}>\n                  <Button \n                    variant=\"outlined\" \n                    onClick={handleLoadMore}\n                    disabled={loading}\n                    startIcon={loading && <CircularProgress size={16} />}\n                  >\n                    {loading ? 'Chargement...' : 'Voir plus d\\'activités'}\n                  </Button>\n                </Box>\n              )}\n            </Box>\n          )}\n        </Box>\n      )}\n      \n      {/* Boîte de dialogue pour ajouter un commentaire */}\n      <Dialog \n        open={commentDialogOpen} \n        onClose={handleCloseCommentDialog}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        <DialogTitle>Ajouter un commentaire</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            multiline\n            rows={4}\n            margin=\"dense\"\n            label=\"Votre commentaire\"\n            fullWidth\n            variant=\"outlined\"\n            value={commentText}\n            onChange={(e) => setCommentText(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseCommentDialog} color=\"primary\">\n            Annuler\n          </Button>\n          <Button \n            onClick={handleSubmitComment} \n            color=\"primary\" \n            variant=\"contained\"\n            disabled={!commentText.trim() || commentLoading}\n            startIcon={commentLoading ? <CircularProgress size={16} /> : <Send />}\n          >\n            Publier\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CommunityActivityFeed;\n","import React, { memo, lazy, Suspense } from 'react';\nimport { Routes, Route, Link, useLocation, Navigate } from 'react-router-dom';\nimport { styled } from '@mui/material/styles';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faHome, faCalendarAlt, faTrophy, faMapMarkedAlt, \n  faUsers, faUserFriends, faAward, faBicycle, faChartLine \n} from '@fortawesome/free-solid-svg-icons';\nimport { \n  Container, Grid, Card, CardContent, Typography, Box, Paper, \n  Tabs, Tab, Button, Avatar, Divider, CircularProgress,\n  LinearProgress, Alert, Chip, Skeleton\n} from '@mui/material';\nimport { useCommunity } from '../contexts/CommunityContext';\nimport { useNotification } from '../components/common/NotificationSystem';\nimport { useFeatureFlags } from '../services/featureFlags';\nimport CommunityActivityFeed from '../components/community/CommunityActivityFeed';\n\n// Lazy loading des sections pour améliorer les performances\nconst EventsSection = lazy(() => import('./community/EventsSection'));\nconst ChallengesSection = lazy(() => import('./community/ChallengesSection'));\nconst RegionSection = lazy(() => import('./community/RegionSection'));\n\n// Composant de chargement\nconst LoadingComponent = () => (\n  <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', p: 4 }}>\n    <CircularProgress />\n    <Typography variant=\"body2\" sx={{ ml: 2 }}>\n      Chargement en cours...\n    </Typography>\n  </Box>\n);\n\n// Styles personnalisés\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  '& .MuiTabs-indicator': {\n    backgroundColor: theme.palette.primary.main,\n    height: 3\n  }\n}));\n\nconst StyledCardHeader = styled('div')(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.default\n}));\n\nconst EventCard = styled(Card)(({ theme, joined }) => ({\n  marginBottom: theme.spacing(2),\n  border: joined ? `1px solid ${theme.palette.success.main}` : `1px solid ${theme.palette.divider}`,\n  '&:hover': {\n    boxShadow: theme.shadows[3]\n  },\n  position: 'relative',\n  '&::before': joined ? {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '4px',\n    height: '100%',\n    backgroundColor: theme.palette.success.main\n  } : {}\n}));\n\n// Component de navigation de l'onglet\nconst TabNavigation = memo(function TabNavigation() {\n  const location = useLocation();\n  const { t } = useTranslation();\n  const { isFeatureEnabled } = useCommunity();\n  \n  const getPath = (path) => {\n    return `/community${path}`;\n  };\n  \n  const isActive = (path) => {\n    return location.pathname === getPath(path) || \n           (path === '' && location.pathname === '/community') ||\n           (path !== '' && location.pathname.startsWith(getPath(path)));\n  };\n\n  return (\n    <Paper elevation={0} sx={{ mb: 3 }}>\n      <StyledTabs \n        value={isActive('') ? 0 : isActive('/events') ? 1 : isActive('/challenges') ? 2 : isActive('/region') ? 3 : 0}\n        aria-label=\"Navigation du tableau de bord communautaire\"\n      >\n        <Tab \n          icon={<FontAwesomeIcon icon={faHome} />} \n          iconPosition=\"start\" \n          label=\"Vue d'ensemble\" \n          component={Link} \n          to={getPath('')}\n          aria-label=\"Vue d'ensemble de la communauté\"\n        />\n        <Tab \n          icon={<FontAwesomeIcon icon={faCalendarAlt} />} \n          iconPosition=\"start\" \n          label=\"Événements\" \n          component={Link} \n          to={getPath('/events')}\n          aria-label=\"Événements cyclistes à venir\"\n        />\n        {isFeatureEnabled('enableMonthlyChallenge') && (\n          <Tab \n            icon={<FontAwesomeIcon icon={faTrophy} />} \n            iconPosition=\"start\" \n            label=\"Défis\" \n            component={Link} \n            to={getPath('/challenges')}\n            aria-label=\"Défis cyclistes\"\n          />\n        )}\n        <Tab \n          icon={<FontAwesomeIcon icon={faMapMarkedAlt} />} \n          iconPosition=\"start\" \n          label=\"Région\" \n          component={Link} \n          to={getPath('/region')}\n          aria-label=\"Informations sur votre région\"\n        />\n      </StyledTabs>\n    </Paper>\n  );\n});\n\n// Main Component\nconst CommunityDashboard = () => {\n  const { t } = useTranslation();\n  const { userProfile, communityStats, loading } = useCommunity();\n  const { notify } = useNotification();\n  const { isEnabled } = useFeatureFlags();\n\n  // Si les données sont en cours de chargement, afficher une interface de chargement\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Tableau de bord communautaire\n        </Typography>\n        \n        <Paper sx={{ p: 2, mb: 3 }}>\n          <Skeleton variant=\"rectangular\" height={150} />\n        </Paper>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Skeleton variant=\"rectangular\" height={350} />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Skeleton variant=\"rectangular\" height={350} />\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n  // Vue principale du tableau de bord communautaire\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Tableau de bord communautaire\n      </Typography>\n      \n      <TabNavigation />\n      \n      <Routes>\n        <Route path=\"/\" element={<OverviewSection userProfile={userProfile} communityStats={communityStats} />} />\n        <Route path=\"/events\" element={\n          <Suspense fallback={<LoadingComponent />}>\n            <EventsSection />\n          </Suspense>\n        } />\n        {isEnabled('enableMonthlyChallenge') && (\n          <Route path=\"/challenges\" element={\n            <Suspense fallback={<LoadingComponent />}>\n              <ChallengesSection />\n            </Suspense>\n          } />\n        )}\n        <Route path=\"/region\" element={\n          <Suspense fallback={<LoadingComponent />}>\n            <RegionSection />\n          </Suspense>\n        } />\n        <Route path=\"*\" element={<Navigate to=\"/community\" replace />} />\n      </Routes>\n    </Container>\n  );\n};\n\n// Section Vue d'ensemble\nconst OverviewSection = memo(({ userProfile, communityStats }) => {\n  const { t } = useTranslation();\n  const { isFeatureEnabled } = useCommunity();\n\n  return (\n    <Grid container spacing={4}>\n      {/* Profile Card */}\n      <Grid item lg={4}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" sx={{ mb: 2 }}>\n              <Avatar \n                src={userProfile.avatar} \n                alt={userProfile.fullName}\n                sx={{ width: 80, height: 80, mb: 2 }}\n              />\n              <Typography variant=\"h6\" component=\"h2\">\n                {userProfile.fullName}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                @{userProfile.username}\n              </Typography>\n              \n              <Box display=\"flex\" sx={{ mt: 1 }}>\n                <Box sx={{ textAlign: 'center', mr: 3 }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Abonnés\n                  </Typography>\n                  <Typography variant=\"h6\">\n                    {userProfile.followers}\n                  </Typography>\n                </Box>\n                \n                <Box sx={{ textAlign: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Abonnements\n                  </Typography>\n                  <Typography variant=\"h6\">\n                    {userProfile.following}\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n            \n            <Divider sx={{ my: 2 }} />\n            \n            <Box>\n              <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mb: 1 }}>\n                <Typography variant=\"body2\">Région</Typography>\n                <Typography variant=\"body2\" fontWeight=\"bold\">{userProfile.region}</Typography>\n              </Box>\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mb: 1 }}>\n                <Typography variant=\"body2\">Niveau</Typography>\n                <Typography variant=\"body2\" fontWeight=\"bold\">{userProfile.level}</Typography>\n              </Box>\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mb: 1 }}>\n                <Typography variant=\"body2\">Points</Typography>\n                <Typography variant=\"body2\" fontWeight=\"bold\">{userProfile.points}</Typography>\n              </Box>\n              \n              <Box display=\"flex\" justifyContent=\"space-between\">\n                <Typography variant=\"body2\">Réussites</Typography>\n                <Typography variant=\"body2\" fontWeight=\"bold\">{userProfile.achievementCount}</Typography>\n              </Box>\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n      \n      {/* Community Stats Card */}\n      <Grid item lg={8}>\n        <Card>\n          <StyledCardHeader\n            title={\n              <Typography variant=\"h6\" component=\"h2\" sx={{ display: 'flex', alignItems: 'center' }}>\n                <FontAwesomeIcon icon={faUsers} style={{ marginRight: '8px' }} />\n                Statistiques communautaires\n              </Typography>\n            }\n          />\n          <CardContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6} md={3}>\n                <Box sx={{ textAlign: 'center', p: 1 }}>\n                  <FontAwesomeIcon icon={faUserFriends} size=\"2x\" style={{ color: '#3f51b5', marginBottom: '8px' }} />\n                  <Typography variant=\"h6\">{communityStats.totalMembers}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Membres</Typography>\n                </Box>\n              </Grid>\n              \n              <Grid item xs={12} sm={6} md={3}>\n                <Box sx={{ textAlign: 'center', p: 1 }}>\n                  <FontAwesomeIcon icon={faBicycle} size=\"2x\" style={{ color: '#4caf50', marginBottom: '8px' }} />\n                  <Typography variant=\"h6\">{communityStats.activeMembers}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Actifs ce mois</Typography>\n                </Box>\n              </Grid>\n              \n              <Grid item xs={12} sm={6} md={3}>\n                <Box sx={{ textAlign: 'center', p: 1 }}>\n                  <FontAwesomeIcon icon={faTrophy} size=\"2x\" style={{ color: '#ff9800', marginBottom: '8px' }} />\n                  <Typography variant=\"h6\">{communityStats.activeChallenges}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Défis actifs</Typography>\n                </Box>\n              </Grid>\n              \n              <Grid item xs={12} sm={6} md={3}>\n                <Box sx={{ textAlign: 'center', p: 1 }}>\n                  <FontAwesomeIcon icon={faAward} size=\"2x\" style={{ color: '#f44336', marginBottom: '8px' }} />\n                  <Typography variant=\"h6\">{communityStats.yourRank}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Votre classement</Typography>\n                </Box>\n              </Grid>\n            </Grid>\n            \n            <Divider sx={{ my: 3 }} />\n            \n            <Typography variant=\"subtitle1\" component=\"h3\" gutterBottom>\n              Activité hebdomadaire\n            </Typography>\n            \n            <Box sx={{ mt: 2 }}>\n              <Grid container spacing={1}>\n                {communityStats.weeklyActivity.map((value, index) => (\n                  <Grid item xs key={index}>\n                    <Box sx={{ height: '100px', position: 'relative' }}>\n                      <Box \n                        sx={{ \n                          position: 'absolute', \n                          bottom: 0, \n                          left: 0, \n                          right: 0,\n                          height: `${(value / Math.max(...communityStats.weeklyActivity)) * 100}%`,\n                          backgroundColor: 'primary.main',\n                          borderTopLeftRadius: '4px',\n                          borderTopRightRadius: '4px',\n                        }}\n                      />\n                    </Box>\n                    <Typography variant=\"body2\" align=\"center\" sx={{ mt: 1 }}>\n                      {['L', 'M', 'M', 'J', 'V', 'S', 'D'][index]}\n                    </Typography>\n                  </Grid>\n                ))}\n              </Grid>\n            </Box>\n            \n            {isFeatureEnabled('enableRealTimeWeather') && (\n              <Box mt={3}>\n                <Alert severity=\"info\">\n                  Prévisions météo pour cyclistes disponibles. Consultez la section Région pour plus de détails.\n                </Alert>\n              </Box>\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n      \n      {/* Upcoming Events Section - Loaded conditionally with Suspense */}\n      <Grid item lg={12}>\n        <Card>\n          <StyledCardHeader\n            title={\n              <Typography variant=\"h6\" component=\"h2\" sx={{ display: 'flex', alignItems: 'center' }}>\n                <FontAwesomeIcon icon={faChartLine} style={{ marginRight: '8px' }} />\n                Activités de la communauté\n              </Typography>\n            }\n          />\n          <CardContent>\n            <CommunityActivityFeed limit={5} />\n          </CardContent>\n        </Card>\n      </Grid>\n      \n      {/* Upcoming Events Section - Loaded conditionally with Suspense */}\n      <Grid item lg={12}>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" height={350} />}>\n          <EventsSection />\n        </Suspense>\n      </Grid>\n    </Grid>\n  );\n});\n\n// Composant pour afficher une carte d'événement\nconst EventCardItem = memo(({ event, formatDate, handleJoinEvent, handleLeaveEvent }) => {\n  const { notify } = useNotification();\n  \n  const handleJoin = (eventId) => {\n    try {\n      handleJoinEvent(eventId);\n    } catch (error) {\n      notify.error('Une erreur est survenue lors de l\\'inscription à l\\'événement', error);\n    }\n  };\n  \n  const handleLeave = (eventId) => {\n    try {\n      handleLeaveEvent(eventId);\n    } catch (error) {\n      notify.error('Une erreur est survenue lors de l\\'annulation de votre participation', error);\n    }\n  };\n  \n  return (\n    <EventCard \n      joined={event.joined}\n      tabIndex={0}\n      aria-label={`Événement: ${event.title} à ${event.location} le ${formatDate(event.date)}`}\n    >\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n          <Box>\n            <Typography variant=\"h6\" component=\"h3\">{event.title}</Typography>\n            <Box sx={{ mb: 2 }}>\n              <Box component=\"span\" sx={{ display: 'inline-flex', alignItems: 'center', mr: 3 }}>\n                <FontAwesomeIcon icon={faCalendarAlt} style={{ marginRight: '4px', color: 'text.secondary' }} />\n                <Typography variant=\"body2\" component=\"span\">{formatDate(event.date)} | {event.time}</Typography>\n              </Box>\n              \n              <Box component=\"span\" sx={{ display: 'inline-flex', alignItems: 'center' }}>\n                <FontAwesomeIcon icon={faMapMarkedAlt} style={{ marginRight: '4px', color: 'text.secondary' }} />\n                <Typography variant=\"body2\" component=\"span\">{event.location}</Typography>\n              </Box>\n            </Box>\n          </Box>\n          <Box sx={{ px: 3, py: 1, bgcolor: 'background.paper', borderRadius: 1, textAlign: 'center' }}>\n            <Typography variant=\"body1\" fontWeight=\"bold\">{event.distance} km</Typography>\n            <Typography variant=\"body2\">{event.participants} participants</Typography>\n          </Box>\n        </Box>\n        \n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" sx={{ mt: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Organisé par {event.organizer}\n          </Typography>\n          \n          {event.joined ? (\n            <Button \n              variant=\"outlined\" \n              color=\"error\" \n              size=\"small\"\n              onClick={() => handleLeave(event.id)}\n              aria-label={`Annuler votre participation à l'événement ${event.title}`}\n            >\n              Annuler participation\n            </Button>\n          ) : (\n            <Button \n              variant=\"outlined\" \n              size=\"small\"\n              onClick={() => handleJoin(event.id)}\n              aria-label={`Participer à l'événement ${event.title}`}\n            >\n              Participer\n            </Button>\n          )}\n        </Box>\n      </CardContent>\n    </EventCard>\n  );\n});\n\nexport default CommunityDashboard;\n"],"names":["ActivityCard","styled","Card","_ref","theme","marginBottom","spacing","transition","transform","boxShadow","shadows","cardVariants","hidden","opacity","y","visible","i","delay","duration","_ref2","limit","filter","activities","setActivities","useState","loading","setLoading","page","setPage","hasMore","setHasMore","commentText","setCommentText","commentDialogOpen","setCommentDialogOpen","currentActivityId","setCurrentActivityId","commentLoading","setCommentLoading","user","token","useAuth","notify","useNotification","authConfig","useCallback","headers","fetchActivities","async","pageNum","arguments","length","undefined","replace","response","axios","get","params","data","formattedActivities","map","activity","formattedActivity","id","_id","type","userId","name","firstName","lastName","avatar","profilePicture","title","content","likes","kudosCount","comments","commentCount","hasLiked","hasGivenKudos","timestamp","createdAt","description","stats","distance","elevation","Math","floor","power","images","location","comment","targetActivity","activityId","event","eventId","eventName","date","eventDate","eventLocation","eventDistance","participants","participantCount","achievement","achievementName","improvement","position","challenge","challengeName","completed","totalDistance","totalElevation","followedUser","followedUserId","followedUserName","prev","error","console","message","useEffect","handleCloseCommentDialog","formatRelativeTime","dateString","parseISO","Date","formatDistance","addSuffix","locale","fr","_jsxs","Box","children","_jsx","Array","from","_","index","Paper","sx","p","mb","display","alignItems","Skeleton","variant","width","height","ml","my","justifyContent","mt","textAlign","Typography","color","component","motion","div","variants","initial","animate","custom","CardHeader","Avatar","src","alt","charAt","action","IconButton","MoreVert","subheader","DirectionsBike","fontSize","mr","EmojiEvents","Public","CardContent","py","flexWrap","gap","Chip","icon","label","size","AccessTime","bgcolor","borderRadius","border","borderColor","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","hour","minute","Button","CardMedia","image","objectFit","CardActions","disableSpacing","Tooltip","onClick","find","a","isLiked","prevActivities","delete","post","handleLike","ThumbUp","handleOpenCommentDialog","Comment","Share","disabled","startIcon","CircularProgress","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","autoFocus","multiline","rows","margin","value","onChange","e","target","DialogActions","trim","Send","EventsSection","lazy","ChallengesSection","RegionSection","LoadingComponent","StyledTabs","Tabs","borderBottom","palette","divider","backgroundColor","primary","main","StyledCardHeader","padding","background","default","TabNavigation","_ref3","joined","success","top","left","memo","useLocation","t","useTranslation","isFeatureEnabled","useCommunity","getPath","path","isActive","pathname","startsWith","Tab","FontAwesomeIcon","faHome","iconPosition","Link","to","faCalendarAlt","faTrophy","faMapMarkedAlt","OverviewSection","_ref4","userProfile","communityStats","Grid","container","item","lg","flexDirection","fullName","gutterBottom","username","followers","following","Divider","fontWeight","region","level","points","achievementCount","faUsers","style","marginRight","xs","sm","md","faUserFriends","totalMembers","faBicycle","activeMembers","activeChallenges","faAward","yourRank","weeklyActivity","bottom","right","max","borderTopLeftRadius","borderTopRightRadius","align","Alert","severity","faChartLine","CommunityActivityFeed","Suspense","fallback","CommunityDashboard","isEnabled","useFeatureFlags","Container","Routes","Route","element","Navigate"],"sourceRoot":""}