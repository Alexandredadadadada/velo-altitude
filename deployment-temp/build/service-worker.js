const CACHE_NAME="dashboard-velo-cache-v1",RUNTIME_CACHE="dashboard-velo-runtime-v1",PRECACHE_URLS=["/","/index.html","/offline.html","/static/css/main.css","/static/js/main.js","/static/js/vendor.js","/static/media/logo.svg","/static/media/background.jpg","/manifest.json","/favicon.ico"];async function syncUserData(){const e=indexedDB.open("dashboard-velo-offline",1);e.onupgradeneeded=function(e){const t=e.target.result;t.objectStoreNames.contains("pending-requests")||t.createObjectStore("pending-requests",{keyPath:"id"})};try{const s=(await new Promise(((t,s)=>{e.onsuccess=e=>t(e.target.result),e.onerror=e=>s(e)}))).transaction("pending-requests","readwrite"),n=s.objectStore("pending-requests"),a=await new Promise(((e,t)=>{const s=n.getAll();s.onsuccess=()=>e(s.result),s.onerror=e=>t(e)}));for(const e of a)try{await fetch(e.url,{method:e.method,headers:e.headers,body:e.body,credentials:"include"}),n.delete(e.id)}catch(t){}return await new Promise((e=>{s.oncomplete=()=>e({result:"success"}),s.onerror=()=>e({result:"error"})}))}catch(t){return{result:"error"}}}self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>e.addAll(PRECACHE_URLS))).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(e=>{const t=[CACHE_NAME,RUNTIME_CACHE];e.waitUntil(caches.keys().then((e=>e.filter((e=>!t.includes(e))))).then((e=>Promise.all(e.map((e=>caches.delete(e)))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{"GET"!==e.request.method||e.request.url.startsWith(self.location.origin+"/api/")&&e.request.url.includes("/auth/")||(e.request.url.match(/\.(js|css|png|jpg|jpeg|svg|gif|woff|woff2|ttf|eot|webp|avif)$/)?e.respondWith(caches.match(e.request).then((t=>{const s=fetch(e.request).then((t=>{if(t&&200===t.status){const s=t.clone();caches.open(RUNTIME_CACHE).then((t=>{t.put(e.request,s)}))}return t})).catch((()=>"navigate"===e.request.mode?caches.match("/offline.html"):null));return t||s}))):"navigate"===e.request.mode?e.respondWith(fetch(e.request).catch((()=>caches.match(e.request).then((e=>e||caches.match("/offline.html")))))):e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>{if(t&&200===t.status){const s=t.clone();caches.open(RUNTIME_CACHE).then((t=>{t.put(e.request,s)}))}return t})).catch((()=>null))))))})),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),self.addEventListener("sync",(e=>{"sync-user-data"===e.tag&&e.waitUntil(syncUserData())})),self.addEventListener("push",(e=>{if(e.data)try{const t=e.data.json(),s={body:t.body,icon:"/static/media/logo.svg",badge:"/static/media/badge.png",vibrate:[100,50,100],data:{url:t.url||"/"}};e.waitUntil(self.registration.showNotification(t.title||"Dashboard Velo",s))}catch(t){e.waitUntil(self.registration.showNotification("Dashboard Velo",{body:e.data.text(),icon:"/static/media/logo.svg"}))}})),self.addEventListener("notificationclick",(e=>{e.notification.close();const t=e.notification.data?.url||"/";e.waitUntil(clients.matchAll({type:"window"}).then((e=>{for(const s of e)if(s.url.includes(self.location.origin)&&"focus"in s)return s.navigate(t),s.focus();if(clients.openWindow)return clients.openWindow(t)})))}));